FROM public.ecr.aws/lambda/provided:al2 AS compiler
ARG EXTENSION_VERSION
ARG AGENT_VERSION
ARG BUILD_TAGS
RUN mkdir -p /tmp/dd/datadog-agent

RUN yum install -y wget tar gzip gcc
RUN arch="$(uname -m)"; \
    if [ "${arch}" = 'aarch64' ]; then \
    arch='arm64'; \
    fi; \
    if [ "${arch}" = 'x86_64' ]; then \
    arch='amd64'; \
    fi; \
    wget -O go1.23.6.linux-${arch}.tar.gz https://go.dev/dl/go1.23.6.linux-${arch}.tar.gz; \
    tar -C /usr/local -xzf go1.23.6.linux-${arch}.tar.gz

# cache dependencies
COPY ./scripts/.cache/go.mod /tmp/dd/datadog-agent
COPY ./scripts/.cache/go.sum /tmp/dd/datadog-agent
WORKDIR /tmp/dd/datadog-agent

# copy source files (/tgz gets unzip automatically by Docker)
ADD ./scripts/.src/datadog-agent.tgz /tmp/dd

# build the extension
WORKDIR /tmp/dd/datadog-agent/cmd/serverless
# add the current version number to the tags package before compilation

RUN --mount=type=cache,target=/root/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    if [ -z "$AGENT_VERSION" ]; then \
        /usr/local/go/bin/go build -ldflags="-w \
        -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION" \
        -tags "${BUILD_TAGS}" -o datadog-agent; \
    else \
        /usr/local/go/bin/go build -ldflags="-w \
        -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION \
        -X github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault=$AGENT_VERSION" \
        -tags "${BUILD_TAGS}" -o datadog-agent; \
    fi

RUN /usr/local/go/bin/go tool nm datadog-agent | grep -w 'github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault' || \
    (echo "agentVersionDefault variable doesn't exist" && exit 1)

RUN strip datadog-agent
RUN if [ "$arch" = "x86_64" ]; then apt-get install -y upx=3.96-r0 && upx -1 /datadog-agent-go; fi

# keep the smallest possible docker imag
FROM scratch
COPY --from=compiler /tmp/dd/datadog-agent/cmd/serverless/datadog-agent /
ENTRYPOINT ["/datadog-agent"]

