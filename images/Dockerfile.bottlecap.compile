FROM public.ecr.aws/lambda/provided:al2 AS compiler
ARG PLATFORM

ARG FIPS

# Install dependencies
RUN yum install -y clang cmake3 compiler-rt curl go make perl unzip

# Install Protocol Buffers compiler by hand, since AL2 does not have a recent enough version.
COPY ./scripts/install-protoc.sh /
RUN chmod +x /install-protoc.sh && /install-protoc.sh

# Install Rust Toolchain
RUN curl https://sh.rustup.rs -sSf | \
    sh -s -- --profile minimal \
             --default-host $PLATFORM-unknown-linux-gnu \
             --default-toolchain stable-$PLATFORM-unknown-linux-gnu \
             --component rust-src \
             -y
ENV PATH=/root/.cargo/bin:$PATH

# Build the binary
ENV RUSTFLAGS="-Cpanic=abort"
ENV AWS_LC_FIPS_SYS_CC=clang
ENV AWS_LC_FIPS_SYS_CXX=clang++

WORKDIR /tmp/dd/bottlecap
RUN --mount=type=cache,target=/usr/local/cargo/git \
    --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=bind,source=.,target=/tmp/dd,rw \
    --mount=type=cache,target=/tmp/dd/bottlecap/target \
    if [ "$FIPS" = "1" ]; then \
        export FEATURES=fips; \
    else \
        export FEATURES=default; \
    fi; \
    export RUSTFLAGS="${RUSTFLAGS:-} -Clinker=clang -L$(dirname $(clang --print-file-name="libclang_rt.builtins-$(uname -m).a")) -lclang_rt.builtins-$(uname -m)"; \
    cargo +stable build --verbose --locked --no-default-features --features $FEATURES --release && \
    mkdir -p /tmp/out && cp /tmp/dd/bottlecap/target/release/bottlecap /tmp/out/bottlecap

# Use smallest image possible
FROM scratch
COPY --from=compiler /tmp/out/bottlecap /
ENTRYPOINT ["/bottlecap"]

