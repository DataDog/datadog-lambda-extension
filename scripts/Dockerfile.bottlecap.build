# syntax = docker/dockerfile:experimental

FROM public.ecr.aws/lambda/provided:al2 as bottlecap-builder
RUN yum install -y curl gcc gcc-c++ make unzip openssl openssl-devel
# Install Protocol Buffers compiler by hand, since AL2 does not have a recent enough version.
COPY ./scripts/install-protoc.sh /
RUN chmod +x /install-protoc.sh && /install-protoc.sh
RUN curl https://sh.rustup.rs -sSf | \
    sh -s -- --default-toolchain nightly-x86_64-unknown-linux-gnu -y
    ENV PATH=/root/.cargo/bin:$PATH
RUN rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
RUN mkdir -p /tmp/dd
COPY ./bottlecap /tmp/dd/bottlecap
ENV RUSTFLAGS="-C panic=abort -Zlocation-detail=none"
RUN cd /tmp/dd/bottlecap && cargo +nightly build -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --release --target x86_64-unknown-linux-gnu
RUN cp /tmp/dd/bottlecap/target/x86_64-unknown-linux-gnu/release/bottlecap /tmp/dd/bottlecap/bottlecap

# zip the extension
FROM ubuntu:latest as compresser
ARG EXTENSION_NAME_AND_ARCH
ARG DATADOG_WRAPPER=datadog_wrapper

RUN apt-get update
RUN apt-get install -y zip binutils
RUN echo $EXTENSION_NAME_AND_ARCH
COPY --from=public.ecr.aws/datadog/lambda-extension:57 /opt/extensions/datadog-agent  /datadog-agent-go
RUN mkdir /extensions
WORKDIR /extensions

COPY --from=bottlecap-builder /tmp/dd/bottlecap/bottlecap /extensions/datadog-agent

COPY ./scripts/$DATADOG_WRAPPER /$DATADOG_WRAPPER
RUN chmod +x /$DATADOG_WRAPPER
RUN  zip -r datadog_extension.zip /extensions /$DATADOG_WRAPPER /datadog-agent-go

# keep the smallest possible docker image
FROM scratch
COPY --from=compresser /extensions/datadog_extension.zip /
ENTRYPOINT ["/datadog_extension.zip"]
