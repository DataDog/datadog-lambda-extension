{"name": ">", "children": [{"children": [{"children": [{"value": 4, "name": "00000001"}, {"value": 4, "name": "358637bd"}, {"value": 4, "name": "3d4ccccd"}, {"value": 4, "name": "3f800000"}, {"value": 4, "name": "40d00000"}, {"value": 4, "name": "4b189680"}, {"value": 4, "name": "6258d727"}, {"value": 4, "name": "80000000"}, {"value": 4, "name": "80000001"}, {"value": 4, "name": "cb189680"}], "name": "$f32."}, {"children": [{"value": 8, "name": "0000000000000001"}, {"value": 8, "name": "0010000000000000"}, {"value": 8, "name": "3c81a62633145c07"}, {"value": 8, "name": "3c90000000000000"}, {"value": 8, "name": "3c91a62633145c07"}, {"value": 8, "name": "3cb0000000000000"}, {"value": 8, "name": "3ce8469898cc5170"}, {"value": 8, "name": "3d06849b86a12b9b"}, {"value": 8, "name": "3d53de6af278ece6"}, {"value": 8, "name": "3dea39ef35793c76"}, {"value": 8, "name": "3e20000000000000"}, {"value": 8, "name": "3e64442d00000000"}, {"value": 8, "name": "3e66376972bea4d0"}, {"value": 8, "name": "3eb0000000000000"}, {"value": 8, "name": "3eb0c6f7a0b5ed8d"}, {"value": 8, "name": "3efa01a01a01a01a"}, {"value": 8, "name": "3f11566aaf25de2c"}, {"value": 8, "name": "3f2a01a01a01a01a"}, {"value": 8, "name": "3f50624dd2f1a9fc"}, {"value": 8, "name": "3f56c16c16c16c17"}, {"value": 8, "name": "3f81111111111111"}, {"value": 8, "name": "3f847ae147ae147b"}, {"value": 8, "name": "3fa5555555555555"}, {"value": 8, "name": "3fb0000000000000"}, {"value": 8, "name": "3fb0842108421084"}, {"value": 8, "name": "3fb999999999999a"}, {"value": 8, "name": "3fc2f112df3e5244"}, {"value": 8, "name": "3fc3333333333333"}, {"value": 8, "name": "3fc39a09d078c69f"}, {"value": 8, "name": "3fc555555555553e"}, {"value": 8, "name": "3fc5555555555555"}, {"value": 8, "name": "3fc7466496cb03de"}, {"value": 8, "name": "3fc999999999999a"}, {"value": 8, "name": "3fcc71c51d8e78af"}, {"value": 8, "name": "3fd0000000000000"}, {"value": 8, "name": "3fd2492494229359"}, {"value": 8, "name": "3fd2972a8afc6175"}, {"value": 8, "name": "3fd34413509f79ff"}, {"value": 8, "name": "3fd6db6db6db6db7"}, {"value": 8, "name": "3fd999999997fa04"}, {"value": 8, "name": "3fda827999fcef32"}, {"value": 8, "name": "3fdbcb7b1526e50e"}, {"value": 8, "name": "3fe0000000000000"}, {"value": 8, "name": "3fe15f15f15f15f1"}, {"value": 8, "name": "3fe51eb851eb851f"}, {"value": 8, "name": "3fe5555555555555"}, {"value": 8, "name": "3fe5555555555593"}, {"value": 8, "name": "3fe62e42fee00000"}, {"value": 8, "name": "3fe62e42fefa3000"}, {"value": 8, "name": "3fe6666666666666"}, {"value": 8, "name": "3fe6a09e667f3bcd"}, {"value": 8, "name": "3fe8000000000000"}, {"value": 8, "name": "3fe921fb40000000"}, {"value": 8, "name": "3fe921fb54442d18"}, {"value": 8, "name": "3fe999999999999a"}, {"value": 8, "name": "3fedef7bdef7bdf0"}, {"value": 8, "name": "3fee666666666666"}, {"value": 8, "name": "3feffffef39085f5"}, {"value": 8, "name": "3ff0000000000000"}, {"value": 8, "name": "3ff0cccccccccccd"}, {"value": 8, "name": "3ff2e978d4fdf3b6"}, {"value": 8, "name": "3ff45f306dc9c882"}, {"value": 8, "name": "3ff6a0ea0ea0ea0f"}, {"value": 8, "name": "3ff6f5c28f5c28f6"}, {"value": 8, "name": "3ff71547652b82fe"}, {"value": 8, "name": "3ff8000000000000"}, {"value": 8, "name": "3ff921fb54442d18"}, {"value": 8, "name": "3ff9b6db6db6db6e"}, {"value": 8, "name": "4000000000000000"}, {"value": 8, "name": "4000cccccccccccd"}, {"value": 8, "name": "40026bb1bbb55516"}, {"value": 8, "name": "4002d97c7f3321d2"}, {"value": 8, "name": "4003504f333f9de6"}, {"value": 8, "name": "4008000000000000"}, {"value": 8, "name": "400921fb54442d18"}, {"value": 8, "name": "400a934f0979a371"}, {"value": 8, "name": "400b8a7c476d2be8"}, {"value": 8, "name": "4010000000000000"}, {"value": 8, "name": "4014000000000000"}, {"value": 8, "name": "401ec9d9297ebb83"}, {"value": 8, "name": "4024000000000000"}, {"value": 8, "name": "4034000000000000"}, {"value": 8, "name": "4037000000000000"}, {"value": 8, "name": "4038000000000000"}, {"value": 8, "name": "4038dbc45b14603c"}, {"value": 8, "name": "403a000000000000"}, {"value": 8, "name": "403e000000000000"}, {"value": 8, "name": "404e000000000000"}, {"value": 8, "name": "4050000000000000"}, {"value": 8, "name": "4059000000000000"}, {"value": 8, "name": "4064a0dd43b8fa25"}, {"value": 8, "name": "4066800000000000"}, {"value": 8, "name": "4068519efbbd62ec"}, {"value": 8, "name": "4075e00000000000"}, {"value": 8, "name": "407b0e18d2e2be3b"}, {"value": 8, "name": "407e563f13b049ea"}, {"value": 8, "name": "408f400000000000"}, {"value": 8, "name": "408fffffffffffff"}, {"value": 8, "name": "4090000000000000"}, {"value": 8, "name": "40b3880000000000"}, {"value": 8, "name": "40c3880000000000"}, {"value": 8, "name": "40f5180000000000"}, {"value": 8, "name": "4110000000000000"}, {"value": 8, "name": "412e848000000000"}, {"value": 8, "name": "4130000000000000"}, {"value": 8, "name": "41cdcd6500000000"}, {"value": 8, "name": "41ddcd6500000000"}, {"value": 8, "name": "41dfffffffc00000"}, {"value": 8, "name": "422bf08eb0000000"}, {"value": 8, "name": "425176592e000000"}, {"value": 8, "name": "428a3185c5000000"}, {"value": 8, "name": "430c6bf526340000"}, {"value": 8, "name": "4330000000000000"}, {"value": 8, "name": "4340000000000000"}, {"value": 8, "name": "4350000000000000"}, {"value": 8, "name": "43e0000000000000"}, {"value": 8, "name": "43f0000000000000"}, {"value": 8, "name": "444b1ae4d6e2ef50"}, {"value": 8, "name": "47efffffe0000000"}, {"value": 8, "name": "7fefffffffffffff"}, {"value": 8, "name": "8000000000000000"}, {"value": 8, "name": "8000000000000001"}, {"value": 8, "name": "bebbbd41c5d26bf1"}, {"value": 8, "name": "bf66c16c16bebd93"}, {"value": 8, "name": "bfd2bec333018867"}, {"value": 8, "name": "bfe0000000000000"}, {"value": 8, "name": "bfe62e42fefa39ef"}, {"value": 8, "name": "bfe691de2532c834"}, {"value": 8, "name": "bfec007fa1f72594"}, {"value": 8, "name": "bff0000000000000"}, {"value": 8, "name": "c00b8a7c476d2be8"}, {"value": 8, "name": "c03028545b6b807a"}, {"value": 8, "name": "c0503669fd28ec8e"}, {"value": 8, "name": "c052c08c36880273"}, {"value": 8, "name": "c05eb8bf2d05ba25"}, {"value": 8, "name": "c090c80000000000"}, {"value": 8, "name": "c12e848000000000"}, {"value": 8, "name": "c30c6bf526340000"}, {"value": 8, "name": "c3e0000000000000"}, {"value": 8, "name": "ffefffffffffffff"}], "name": "$f64."}, {"children": [{"value": 8, "name": "__gxx_personality_v0"}], "name": "DW.ref."}, {"children": [{"value": 11, "name": "cc"}], "name": "_GLOBAL__sub_I_arena."}, {"children": [{"value": 11, "name": "cc"}], "name": "_GLOBAL__sub_I_atomicops_internals_x86_gcc."}, {"children": [{"value": 15909, "name": "cc"}], "name": "_GLOBAL__sub_I_auto_roll_logger."}, {"children": [{"value": 221, "name": "cc"}], "name": "_GLOBAL__sub_I_backupable_db."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_block."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_block_based_filter_block."}, {"children": [{"value": 15861, "name": "cc"}], "name": "_GLOBAL__sub_I_block_based_table_builder."}, {"children": [{"value": 16437, "name": "cc"}], "name": "_GLOBAL__sub_I_block_based_table_factory."}, {"children": [{"value": 15749, "name": "cc"}], "name": "_GLOBAL__sub_I_block_based_table_reader."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_block_builder."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_bloom."}, {"children": [{"value": 82, "name": "cc"}], "name": "_GLOBAL__sub_I_bloom_block."}, {"children": [{"value": 18358, "name": "cc"}], "name": "_GLOBAL__sub_I_builder."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_cf_options."}, {"children": [{"value": 43555, "name": "cc"}], "name": "_GLOBAL__sub_I_column_family."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_compacted_db_impl."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_compaction."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_compaction_iterator."}, {"children": [{"value": 18358, "name": "cc"}], "name": "_GLOBAL__sub_I_compaction_job."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_compaction_picker."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_convenience."}, {"children": [{"value": 37, "name": "cc"}], "name": "_GLOBAL__sub_I_crc32c."}, {"children": [{"value": 17269, "name": "cc"}], "name": "_GLOBAL__sub_I_db."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_db_filesnapshot."}, {"children": [{"value": 44675, "name": "cc"}], "name": "_GLOBAL__sub_I_db_impl."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_db_impl_readonly."}, {"children": [{"value": 198, "name": "cc"}], "name": "_GLOBAL__sub_I_db_info_dumper."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_db_iter."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_db_options."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_db_ttl_impl."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_dbformat."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_delete_scheduler."}, {"children": [{"value": 18230, "name": "cc"}], "name": "_GLOBAL__sub_I_env_posix."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_event_helpers."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_external_sst_file_ingestion_job."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_file_indexer."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_file_reader_writer."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_file_util."}, {"children": [{"value": 16037, "name": "cc"}], "name": "_GLOBAL__sub_I_filename."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_flush_block_policy."}, {"children": [{"value": 18358, "name": "cc"}], "name": "_GLOBAL__sub_I_flush_job."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_flush_scheduler."}, {"children": [{"value": 15717, "name": "cc"}], "name": "_GLOBAL__sub_I_format."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_forward_iterator."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_full_filter_block."}, {"children": [{"value": 15749, "name": "cc"}], "name": "_GLOBAL__sub_I_get_context."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_hash_cuckoo_rep."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_hash_linklist_rep."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_hash_skiplist_rep."}, {"children": [{"value": 15733, "name": "cc"}], "name": "_GLOBAL__sub_I_histogram."}, {"children": [{"value": 18118, "name": "cc"}], "name": "_GLOBAL__sub_I_instrumented_mutex."}, {"children": [{"value": 35074, "name": "cc"}], "name": "_GLOBAL__sub_I_internal_stats."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_io_posix."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_iostats_context."}, {"children": [{"value": 19909, "name": "cc"}], "name": "_GLOBAL__sub_I_ldb_cmd."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_lru_cache."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_managed_iterator."}, {"children": [{"value": 15749, "name": "cc"}], "name": "_GLOBAL__sub_I_memtable."}, {"children": [{"value": 18310, "name": "cc"}], "name": "_GLOBAL__sub_I_memtable_list."}, {"children": [{"value": 15749, "name": "cc"}], "name": "_GLOBAL__sub_I_merge_helper."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_merger."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_meta_blocks."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_options."}, {"children": [{"value": 40968, "name": "cc"}], "name": "_GLOBAL__sub_I_options_helper."}, {"children": [{"value": 42122, "name": "cc"}], "name": "_GLOBAL__sub_I_options_parser."}, {"children": [{"value": 744, "name": "cc"}], "name": "_GLOBAL__sub_I_options_sanity_check."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_perf_context."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_persistent_cache_helper."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_plain_table_builder."}, {"children": [{"value": 16069, "name": "cc"}], "name": "_GLOBAL__sub_I_plain_table_factory."}, {"children": [{"value": 15829, "name": "cc"}], "name": "_GLOBAL__sub_I_plain_table_index."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_plain_table_key_coding."}, {"children": [{"value": 15749, "name": "cc"}], "name": "_GLOBAL__sub_I_plain_table_reader."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_range_del_aggregator."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_repair."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_sharded_cache."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_skiplistrep."}, {"children": [{"value": 15733, "name": "cc"}], "name": "_GLOBAL__sub_I_sst_dump_tool."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_sst_file_manager_impl."}, {"children": [{"value": 15957, "name": "cc"}], "name": "_GLOBAL__sub_I_sst_file_writer."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_statistics."}, {"children": [{"value": 21, "name": "cc"}], "name": "_GLOBAL__sub_I_status."}, {"children": [{"value": 11, "name": "cc"}], "name": "_GLOBAL__sub_I_structurally_valid."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_table_cache."}, {"children": [{"value": 18181, "name": "cc"}], "name": "_GLOBAL__sub_I_table_properties."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_table_properties_collector."}, {"children": [{"value": 2294, "name": "cc"}], "name": "_GLOBAL__sub_I_thread_status_updater."}, {"children": [{"value": 2294, "name": "cc"}], "name": "_GLOBAL__sub_I_thread_status_util."}, {"children": [{"value": 2294, "name": "cc"}], "name": "_GLOBAL__sub_I_threadpool_imp."}, {"children": [{"value": 15909, "name": "cc"}], "name": "_GLOBAL__sub_I_transaction_log_impl."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_two_level_iterator."}, {"children": [{"value": 15701, "name": "cc"}], "name": "_GLOBAL__sub_I_vectorrep."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_version_builder."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_version_edit."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_version_set."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_wal_manager."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_write_batch."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_write_batch_with_index."}, {"children": [{"value": 15941, "name": "cc"}], "name": "_GLOBAL__sub_I_write_batch_with_index_internal."}, {"children": [{"value": 15893, "name": "cc"}], "name": "_GLOBAL__sub_I_write_thread."}, {"children": [{"value": 498, "name": "138"}, {"value": 747, "name": "14"}, {"value": 100, "name": "141"}, {"value": 249, "name": "144"}, {"value": 747, "name": "145"}, {"value": 50, "name": "147"}, {"value": 150, "name": "148"}, {"value": 278, "name": "149"}, {"value": 146, "name": "152"}, {"value": 139, "name": "155"}, {"value": 417, "name": "156"}, {"value": 73, "name": "158"}, {"value": 219, "name": "159"}, {"value": 150, "name": "17"}, {"value": 417, "name": "25"}, {"value": 219, "name": "28"}, {"value": 73, "name": "473"}, {"value": 249, "name": "475"}, {"value": 50, "name": "478"}, {"value": 249, "name": "485"}, {"value": 139, "name": "486"}, {"value": 50, "name": "488"}, {"value": 73, "name": "489"}, {"value": 139, "name": "496"}, {"value": 73, "name": "499"}], "name": "__cxx_global_array_dtor."}, {"children": [{"value": 113, "name": "1"}, {"value": 113, "name": "2"}], "name": "__cxx_global_var_init."}, {"children": [{"value": 104, "name": "start_of_month"}], "name": "_strptime."}, {"children": [{"children": [{"value": 23, "name": "FileInfo"}, {"value": 101, "name": "ModTime"}, {"value": 387, "name": "Mode"}, {"value": 101, "name": "SetModTime"}, {"value": 236, "name": "SetMode"}], "name": "(*FileHeader)."}, {"children": [{"value": 7849, "name": "Close"}, {"value": 197, "name": "Create"}, {"value": 2010, "name": "CreateHeader"}, {"value": 142, "name": "Flush"}, {"value": 258, "name": "RegisterCompressor"}, {"value": 148, "name": "SetOffset"}, {"value": 138, "name": "compressor"}], "name": "(*Writer)."}, {"children": [{"value": 147, "name": "Write"}], "name": "(*countWriter)."}, {"children": [{"value": 39, "name": "FileInfo"}, {"value": 47, "name": "ModTime"}, {"value": 29, "name": "Mode"}, {"value": 21, "name": "SetModTime"}, {"value": 21, "name": "SetMode"}, {"value": 316, "name": "Write"}, {"value": 1376, "name": "close"}], "name": "(*fileWriter)."}, {"children": [{"value": 36, "name": "FileInfo"}, {"value": 44, "name": "ModTime"}, {"value": 26, "name": "Mode"}, {"value": 18, "name": "SetModTime"}, {"value": 18, "name": "SetMode"}], "name": "(*header)."}, {"children": [{"value": 175, "name": "IsDir"}, {"value": 194, "name": "ModTime"}, {"value": 174, "name": "Mode"}, {"value": 186, "name": "Name"}, {"value": 176, "name": "Size"}, {"value": 174, "name": "Sys"}], "name": "(*headerFileInfo)."}, {"children": [{"value": 172, "name": "Close"}, {"value": 157, "name": "Write"}], "name": "(*nopCloser)."}, {"children": [{"value": 333, "name": "Close"}, {"value": 395, "name": "Read"}], "name": "(*pooledFlateReader)."}, {"children": [{"value": 314, "name": "Close"}, {"value": 390, "name": "Write"}], "name": "(*pooledFlateWriter)."}, {"value": 16, "name": "ErrAlgorithm"}, {"value": 16, "name": "ErrChecksum"}, {"value": 16, "name": "ErrFormat"}, {"value": 201, "name": "compressor"}, {"value": 8, "name": "compressors"}, {"value": 8, "name": "decompressors"}, {"children": [{"value": 57, "name": "FileInfo"}, {"value": 122, "name": "ModTime"}, {"value": 93, "name": "Mode"}, {"value": 122, "name": "SetModTime"}, {"value": 93, "name": "SetMode"}], "name": "fileWriter."}, {"value": 24, "name": "flateReaderPool"}, {"value": 24, "name": "flateWriterPool"}, {"children": [{"value": 171, "name": "func1"}, {"value": 108, "name": "func2"}], "name": "glob."}, {"children": [{"value": 54, "name": "FileInfo"}, {"value": 110, "name": "ModTime"}, {"value": 90, "name": "Mode"}, {"value": 110, "name": "SetModTime"}, {"value": 90, "name": "SetMode"}], "name": "header."}, {"children": [{"value": 76, "name": "IsDir"}, {"value": 88, "name": "ModTime"}, {"value": 68, "name": "Mode"}, {"value": 92, "name": "Name"}, {"value": 29, "name": "Size"}, {"value": 23, "name": "Sys"}], "name": "headerFileInfo."}, {"value": 1020, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 201, "name": "msDosTimeToTime"}, {"value": 24, "name": "mu"}, {"value": 417, "name": "newFlateReader"}, {"value": 309, "name": "newFlateWriter"}, {"children": [{"value": 19, "name": "Close"}, {"value": 158, "name": "Write"}], "name": "nopCloser."}, {"value": 468, "name": "timeToMsDosTime"}, {"value": 1563, "name": "writeHeader"}, {"value": 40, "name": "go.itab.*countWriter,io.Writer"}, {"value": 40, "name": "go.itab.*fileWriter,io.Writer"}, {"value": 48, "name": "go.itab.*nopCloser,io.WriteCloser"}, {"value": 48, "name": "go.itab.*pooledFlateReader,io.ReadCloser"}, {"value": 48, "name": "go.itab.*pooledFlateWriter,io.WriteCloser"}, {"value": 80, "name": "go.itab.headerFileInfo,os.FileInfo"}], "name": "archive/zip."}, {"children": [{"value": 1600, "name": "h_steps"}], "name": "arena_decay_backlog_npages_limit."}, {"children": [{"children": [{"value": 28, "name": "Available"}, {"value": 45, "name": "Discard"}, {"value": 37, "name": "Flush"}, {"value": 63, "name": "Peek"}, {"value": 45, "name": "Read"}, {"value": 41, "name": "ReadByte"}, {"value": 63, "name": "ReadBytes"}, {"value": 46, "name": "ReadFrom"}, {"value": 68, "name": "ReadLine"}, {"value": 53, "name": "ReadRune"}, {"value": 63, "name": "ReadSlice"}, {"value": 54, "name": "ReadString"}, {"value": 36, "name": "UnreadByte"}, {"value": 36, "name": "UnreadRune"}, {"value": 46, "name": "Write"}, {"value": 37, "name": "WriteByte"}, {"value": 46, "name": "WriteRune"}, {"value": 46, "name": "WriteString"}, {"value": 45, "name": "WriteTo"}], "name": "(*ReadWriter)."}, {"children": [{"value": 22, "name": "Buffered"}, {"value": 425, "name": "Discard"}, {"value": 505, "name": "Peek"}, {"value": 1313, "name": "Read"}, {"value": 273, "name": "ReadByte"}, {"value": 1098, "name": "ReadBytes"}, {"value": 713, "name": "ReadLine"}, {"value": 574, "name": "ReadRune"}, {"value": 612, "name": "ReadSlice"}, {"value": 182, "name": "ReadString"}, {"value": 252, "name": "Reset"}, {"value": 172, "name": "UnreadByte"}, {"value": 92, "name": "UnreadRune"}, {"value": 870, "name": "WriteTo"}, {"value": 619, "name": "fill"}, {"value": 247, "name": "writeBuf"}], "name": "(*Reader)."}, {"children": [{"value": 210, "name": "Buffer"}, {"value": 33, "name": "Bytes"}, {"value": 178, "name": "Err"}, {"value": 2947, "name": "Scan"}, {"value": 183, "name": "Split"}, {"value": 111, "name": "Text"}], "name": "(*Scanner)."}, {"children": [{"value": 22, "name": "Available"}, {"value": 15, "name": "Buffered"}, {"value": 490, "name": "Flush"}, {"value": 860, "name": "ReadFrom"}, {"value": 173, "name": "Reset"}, {"value": 630, "name": "Write"}, {"value": 229, "name": "WriteByte"}, {"value": 547, "name": "WriteRune"}, {"value": 480, "name": "WriteString"}], "name": "(*Writer)."}, {"value": 16, "name": "ErrAdvanceTooFar"}, {"value": 16, "name": "ErrBufferFull"}, {"value": 16, "name": "ErrFinalToken"}, {"value": 16, "name": "ErrInvalidUnreadByte"}, {"value": 16, "name": "ErrInvalidUnreadRune"}, {"value": 16, "name": "ErrNegativeAdvance"}, {"value": 16, "name": "ErrNegativeCount"}, {"value": 16, "name": "ErrTooLong"}, {"children": [{"value": 53, "name": "Available"}, {"value": 122, "name": "Discard"}, {"value": 102, "name": "Flush"}, {"value": 148, "name": "Peek"}, {"value": 148, "name": "Read"}, {"value": 111, "name": "ReadByte"}, {"value": 147, "name": "ReadBytes"}, {"value": 135, "name": "ReadFrom"}, {"value": 148, "name": "ReadLine"}, {"value": 120, "name": "ReadRune"}, {"value": 147, "name": "ReadSlice"}, {"value": 134, "name": "ReadString"}, {"value": 183, "name": "UnreadByte"}, {"value": 109, "name": "UnreadRune"}, {"value": 148, "name": "Write"}, {"value": 111, "name": "WriteByte"}, {"value": 120, "name": "WriteRune"}, {"value": 135, "name": "WriteString"}, {"value": 135, "name": "WriteTo"}], "name": "ReadWriter."}, {"value": 518, "name": "ScanLines"}, {"value": 16, "name": "errNegativeRead"}, {"value": 16, "name": "errNegativeWrite"}, {"value": 983, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "go.itab.*Reader,compress/flate.Reader"}, {"value": 56, "name": "go.itab.*Reader,github.com/cockroachdb/cockroach/pkg/sql/pgwire.bufferedReader"}, {"value": 40, "name": "go.itab.*Reader,io.ByteReader"}, {"value": 40, "name": "go.itab.*Reader,io.Reader"}, {"value": 48, "name": "go.itab.*Writer,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.writer"}, {"value": 48, "name": "go.itab.*Writer,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.writer"}, {"value": 40, "name": "go.itab.*Writer,io.Writer"}], "name": "bufio."}, {"children": [{"children": [{"value": 92, "name": "Bytes"}, {"value": 15, "name": "Cap"}, {"value": 185, "name": "Grow"}, {"value": 22, "name": "Len"}, {"value": 141, "name": "Next"}, {"value": 335, "name": "Read"}, {"value": 189, "name": "ReadByte"}, {"value": 320, "name": "ReadBytes"}, {"value": 751, "name": "ReadFrom"}, {"value": 341, "name": "ReadRune"}, {"value": 182, "name": "ReadString"}, {"value": 69, "name": "Reset"}, {"value": 193, "name": "String"}, {"value": 205, "name": "Truncate"}, {"value": 218, "name": "UnreadByte"}, {"value": 218, "name": "UnreadRune"}, {"value": 213, "name": "Write"}, {"value": 135, "name": "WriteByte"}, {"value": 314, "name": "WriteRune"}, {"value": 213, "name": "WriteString"}, {"value": 448, "name": "WriteTo"}, {"value": 609, "name": "grow"}, {"value": 278, "name": "readSlice"}], "name": "(*Buffer)."}, {"children": [{"value": 37, "name": "Len"}, {"value": 264, "name": "Read"}, {"value": 371, "name": "ReadAt"}, {"value": 130, "name": "ReadByte"}, {"value": 327, "name": "ReadRune"}, {"value": 232, "name": "Reset"}, {"value": 401, "name": "Seek"}, {"value": 15, "name": "Size"}, {"value": 209, "name": "UnreadByte"}, {"value": 206, "name": "UnreadRune"}, {"value": 367, "name": "WriteTo"}], "name": "(*Reader)."}, {"value": 30, "name": "Compare"}, {"value": 126, "name": "Contains"}, {"value": 633, "name": "Count"}, {"value": 41, "name": "Equal"}, {"value": 673, "name": "EqualFold"}, {"value": 16, "name": "ErrTooLarge"}, {"value": 143, "name": "HasPrefix"}, {"value": 177, "name": "HasSuffix"}, {"value": 1739, "name": "Index"}, {"value": 615, "name": "IndexAny"}, {"value": 24, "name": "IndexByte"}, {"value": 105, "name": "IndexFunc"}, {"value": 984, "name": "Join"}, {"value": 97, "name": "LastIndexByte"}, {"value": 857, "name": "Map"}, {"value": 162, "name": "NewReader"}, {"value": 578, "name": "Repeat"}, {"value": 1383, "name": "Replace"}, {"value": 183, "name": "Split"}, {"value": 187, "name": "SplitN"}, {"value": 122, "name": "ToLower"}, {"value": 122, "name": "ToUpper"}, {"value": 171, "name": "TrimFunc"}, {"value": 150, "name": "TrimLeft"}, {"value": 216, "name": "TrimLeftFunc"}, {"value": 249, "name": "TrimPrefix"}, {"value": 150, "name": "TrimRight"}, {"value": 262, "name": "TrimRightFunc"}, {"value": 122, "name": "TrimSpace"}, {"value": 578, "name": "explode"}, {"value": 1228, "name": "genSplit"}, {"value": 90, "name": "hashStr"}, {"value": 277, "name": "indexFunc"}, {"value": 33, "name": "indexShortStr"}, {"value": 194, "name": "init"}, {"children": [{"value": 83, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 258, "name": "lastIndexFunc"}, {"value": 168, "name": "makeASCIISet"}, {"value": 576, "name": "makeCutsetFunc"}, {"children": [{"value": 57, "name": "func1"}, {"value": 63, "name": "func2"}, {"value": 166, "name": "func3"}], "name": "makeCutsetFunc."}, {"value": 191, "name": "makeSlice"}, {"children": [{"value": 109, "name": "func1"}], "name": "makeSlice."}, {"value": 8, "name": "shortStringLen"}, {"value": 12, "name": "supportAVX2"}, {"value": 40, "name": "go.itab.*Buffer,io.Reader"}, {"value": 40, "name": "go.itab.*Buffer,io.Writer"}, {"value": 56, "name": "go.itab.*Buffer,net/http.http2pipeBuffer"}, {"value": 40, "name": "go.itab.*Reader,io.ByteReader"}, {"value": 48, "name": "go.itab.*Reader,io.ReadSeeker"}, {"value": 40, "name": "go.itab.*Reader,io.Reader"}, {"value": 40, "name": "go.itab.*Reader,io.ReaderAt"}], "name": "bytes."}, {"children": [{"value": 56, "name": "uninitialized_hooks"}], "name": "chunk_hooks_assure_initialized_impl."}, {"children": [{"value": 1, "name": "7585"}], "name": "completed."}, {"children": [{"children": [{"children": [{"value": 186, "name": "Error"}], "name": "(*CorruptInputError)."}, {"children": [{"value": 225, "name": "Error"}], "name": "(*InternalError)."}, {"children": [{"value": 82, "name": "Close"}, {"value": 82, "name": "Flush"}, {"value": 286, "name": "Reset"}, {"value": 122, "name": "Write"}], "name": "(*Writer)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 231, "name": "Less"}, {"value": 230, "name": "Swap"}, {"value": 137, "name": "sort"}], "name": "(*byFreq)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 214, "name": "Less"}, {"value": 230, "name": "Swap"}, {"value": 137, "name": "sort"}], "name": "(*byLiteral)."}, {"children": [{"value": 281, "name": "close"}, {"value": 2966, "name": "deflate"}, {"value": 892, "name": "encSpeed"}, {"value": 598, "name": "fillDeflate"}, {"value": 200, "name": "fillStore"}, {"value": 767, "name": "fillWindow"}, {"value": 1004, "name": "findMatch"}, {"value": 3435, "name": "init"}, {"value": 589, "name": "reset"}, {"value": 226, "name": "store"}, {"value": 252, "name": "storeHuff"}, {"value": 293, "name": "syncFlush"}, {"value": 366, "name": "write"}, {"value": 304, "name": "writeBlock"}, {"value": 206, "name": "writeStoredBlock"}], "name": "(*compressor)."}, {"children": [{"value": 192, "name": "Close"}, {"value": 647, "name": "Read"}, {"value": 1357, "name": "Reset"}, {"value": 1127, "name": "copyData"}, {"value": 1129, "name": "dataBlock"}, {"value": 505, "name": "huffSym"}, {"value": 3211, "name": "huffmanBlock"}, {"value": 280, "name": "moreBits"}, {"value": 724, "name": "nextBlock"}, {"value": 2172, "name": "readHuffman"}], "name": "(*decompressor)."}, {"children": [{"value": 1845, "name": "encode"}, {"value": 620, "name": "matchLen"}, {"value": 101, "name": "reset"}, {"value": 94, "name": "resetAll"}], "name": "(*deflateFast)."}, {"children": [{"value": 520, "name": "writeCopy"}], "name": "(*dictDecoder)."}, {"children": [{"value": 128, "name": "Write"}], "name": "(*dictWriter)."}, {"children": [{"value": 475, "name": "dynamicSize"}, {"value": 205, "name": "fixedSize"}, {"value": 262, "name": "flush"}, {"value": 918, "name": "generateCodegen"}, {"value": 794, "name": "indexTokens"}, {"value": 189, "name": "write"}, {"value": 296, "name": "writeBits"}, {"value": 1325, "name": "writeBlock"}, {"value": 796, "name": "writeBlockDynamic"}, {"value": 1115, "name": "writeBlockHuff"}, {"value": 410, "name": "writeBytes"}, {"value": 300, "name": "writeCode"}, {"value": 766, "name": "writeDynamicHeader"}, {"value": 116, "name": "writeFixedHeader"}, {"value": 193, "name": "writeStoredHeader"}, {"value": 771, "name": "writeTokens"}], "name": "(*huffmanBitWriter)."}, {"children": [{"value": 1434, "name": "init"}], "name": "(*huffmanDecoder)."}, {"children": [{"value": 451, "name": "assignEncodingAndSize"}, {"value": 1324, "name": "bitCounts"}, {"value": 107, "name": "bitLength"}, {"value": 676, "name": "generate"}], "name": "(*huffmanEncoder)."}, {"children": [{"value": 146, "name": "Error"}], "name": "CorruptInputError."}, {"children": [{"value": 120, "name": "Error"}], "name": "InternalError."}, {"value": 1272, "name": "NewReader"}, {"value": 190, "name": "NewWriter"}, {"value": 629, "name": "NewWriterDict"}, {"value": 171, "name": "bulkHash4"}, {"children": [{"value": 11, "name": "Len"}, {"value": 114, "name": "Less"}, {"value": 100, "name": "Swap"}], "name": "byFreq."}, {"children": [{"value": 11, "name": "Len"}, {"value": 84, "name": "Less"}, {"value": 100, "name": "Swap"}], "name": "byLiteral."}, {"value": 152, "name": "codeOrder"}, {"value": 24, "name": "codegenOrder"}, {"value": 248, "name": "emitLiteral"}, {"value": 2088, "name": "fixedHuffmanDecoder"}, {"value": 74, "name": "fixedHuffmanDecoderInit"}, {"children": [{"value": 272, "name": "func1"}], "name": "fixedHuffmanDecoderInit."}, {"value": 8, "name": "fixedLiteralEncoding"}, {"value": 8, "name": "fixedOffsetEncoding"}, {"value": 12, "name": "fixedOnce"}, {"value": 411, "name": "generateFixedLiteralEncoding"}, {"value": 295, "name": "generateFixedOffsetEncoding"}, {"value": 85, "name": "histogram"}, {"value": 8, "name": "huffOffset"}, {"value": 235, "name": "init"}, {"children": [{"value": 1083, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "lengthBase"}, {"value": 1024, "name": "lengthCodes"}, {"value": 24, "name": "lengthExtraBits"}, {"value": 24, "name": "levels"}, {"value": 119, "name": "matchLen"}, {"value": 24, "name": "offsetBase"}, {"value": 1024, "name": "offsetCodes"}, {"value": 24, "name": "offsetExtraBits"}, {"value": 256, "name": "reverseByte"}, {"value": 8, "name": "statictmp_650"}, {"value": 4384, "name": "statictmp_927"}, {"value": 480, "name": "statictmp_992"}, {"value": 29, "name": "statictmp_993"}, {"value": 116, "name": "statictmp_994"}, {"value": 44, "name": "statictmp_995"}, {"value": 176, "name": "statictmp_996"}, {"value": 76, "name": "statictmp_997"}, {"value": 56, "name": "go.itab.*byFreq,sort.Interface"}, {"value": 56, "name": "go.itab.*byLiteral,sort.Interface"}, {"value": 48, "name": "go.itab.*decompressor,io.ReadCloser"}, {"value": 40, "name": "go.itab.*dictWriter,io.Writer"}, {"value": 40, "name": "go.itab.CorruptInputError,error"}, {"value": 40, "name": "go.itab.InternalError,error"}], "name": "flate."}, {"children": [{"children": [{"value": 89, "name": "Close"}, {"value": 17, "name": "Multistream"}, {"value": 1560, "name": "Read"}, {"value": 1145, "name": "Reset"}, {"value": 2155, "name": "readHeader"}, {"value": 823, "name": "readString"}], "name": "(*Reader)."}, {"children": [{"value": 626, "name": "Close"}, {"value": 341, "name": "Flush"}, {"value": 89, "name": "Reset"}, {"value": 1481, "name": "Write"}, {"value": 329, "name": "init"}, {"value": 354, "name": "writeBytes"}, {"value": 848, "name": "writeString"}], "name": "(*Writer)."}, {"value": 16, "name": "ErrChecksum"}, {"value": 16, "name": "ErrHeader"}, {"value": 180, "name": "NewReader"}, {"value": 89, "name": "NewWriter"}, {"value": 344, "name": "NewWriterLevel"}, {"value": 296, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 10, "name": "statictmp_120"}, {"value": 40, "name": "go.itab.*Reader,io.Reader"}, {"value": 48, "name": "go.itab.*Writer,io.WriteCloser"}], "name": "gzip."}, {"children": [{"children": [{"value": 462, "name": "Close"}, {"value": 267, "name": "Flush"}, {"value": 266, "name": "Reset"}, {"value": 517, "name": "Write"}, {"value": 890, "name": "writeHeader"}], "name": "(*Writer)."}, {"value": 16, "name": "ErrChecksum"}, {"value": 16, "name": "ErrDictionary"}, {"value": 16, "name": "ErrHeader"}, {"value": 116, "name": "NewWriter"}, {"value": 143, "name": "NewWriterLevel"}, {"value": 452, "name": "NewWriterLevelDict"}, {"value": 380, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.*Writer,io.Writer"}], "name": "zlib."}], "name": "compress/"}, {"children": [{"children": [{"value": 162, "name": "Fix"}, {"value": 170, "name": "Init"}, {"value": 203, "name": "Pop"}, {"value": 146, "name": "Push"}, {"value": 249, "name": "Remove"}, {"value": 300, "name": "down"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 176, "name": "up"}], "name": "heap."}, {"children": [{"children": [{"value": 38, "name": "Next"}, {"value": 39, "name": "Prev"}], "name": "(*Element)."}, {"children": [{"value": 34, "name": "Back"}, {"value": 33, "name": "Front"}, {"value": 142, "name": "Init"}, {"value": 456, "name": "InsertAfter"}, {"value": 465, "name": "InsertBefore"}, {"value": 15, "name": "Len"}, {"value": 730, "name": "MoveAfter"}, {"value": 739, "name": "MoveBefore"}, {"value": 704, "name": "MoveToBack"}, {"value": 688, "name": "MoveToFront"}, {"value": 526, "name": "PushBack"}, {"value": 654, "name": "PushBackList"}, {"value": 522, "name": "PushFront"}, {"value": 648, "name": "PushFrontList"}, {"value": 378, "name": "Remove"}], "name": "(*List)."}], "name": "list."}, {"children": [{"children": [{"value": 241, "name": "Do"}, {"value": 181, "name": "Len"}, {"value": 475, "name": "Link"}, {"value": 201, "name": "Move"}, {"value": 159, "name": "Next"}, {"value": 163, "name": "Prev"}, {"value": 545, "name": "Unlink"}], "name": "(*Ring)."}, {"value": 404, "name": "New"}], "name": "ring."}], "name": "container/"}, {"children": [{"children": [{"value": 127, "name": "Deadline"}, {"value": 15, "name": "Done"}, {"value": 186, "name": "Err"}, {"value": 175, "name": "String"}, {"value": 133, "name": "Value"}, {"value": 636, "name": "cancel"}], "name": "(*cancelCtx)."}, {"children": [{"value": 175, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*deadlineExceededError)."}, {"children": [{"value": 32, "name": "Deadline"}, {"value": 10, "name": "Done"}, {"value": 19, "name": "Err"}, {"value": 95, "name": "String"}, {"value": 19, "name": "Value"}], "name": "(*emptyCtx)."}, {"children": [{"value": 36, "name": "Deadline"}, {"value": 26, "name": "Done"}, {"value": 35, "name": "Err"}, {"value": 335, "name": "String"}, {"value": 133, "name": "Value"}, {"value": 260, "name": "cancel"}], "name": "(*timerCtx)."}, {"children": [{"value": 127, "name": "Deadline"}, {"value": 100, "name": "Done"}, {"value": 110, "name": "Err"}, {"value": 230, "name": "String"}, {"value": 211, "name": "Value"}], "name": "(*valueCtx)."}, {"value": 25, "name": "Background"}, {"value": 16, "name": "Canceled"}, {"value": 16, "name": "DeadlineExceeded"}, {"value": 25, "name": "TODO"}, {"value": 604, "name": "WithCancel"}, {"children": [{"value": 88, "name": "func1"}], "name": "WithCancel."}, {"value": 1505, "name": "WithDeadline"}, {"children": [{"value": 88, "name": "func1"}, {"value": 88, "name": "func2"}, {"value": 88, "name": "func3"}], "name": "WithDeadline."}, {"value": 532, "name": "WithValue"}, {"value": 8, "name": "background"}, {"children": [{"value": 134, "name": "Deadline"}, {"value": 137, "name": "Value"}], "name": "cancelCtx."}, {"children": [{"value": 22, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "deadlineExceededError."}, {"value": 328, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 270, "name": "parentCancelCtx"}, {"value": 480, "name": "propagateCancel"}, {"children": [{"value": 382, "name": "func1"}], "name": "propagateCancel."}, {"value": 211, "name": "removeChild"}, {"children": [{"value": 143, "name": "Value"}], "name": "timerCtx."}, {"value": 8, "name": "todo"}, {"children": [{"value": 128, "name": "Deadline"}, {"value": 98, "name": "Done"}, {"value": 108, "name": "Err"}], "name": "valueCtx."}, {"value": 64, "name": "go.itab.*cancelCtx,context.Context"}, {"value": 48, "name": "go.itab.*cancelCtx,context.canceler"}, {"value": 64, "name": "go.itab.*emptyCtx,context.Context"}, {"value": 64, "name": "go.itab.*timerCtx,context.Context"}, {"value": 48, "name": "go.itab.*timerCtx,context.canceler"}, {"value": 64, "name": "go.itab.*valueCtx,context.Context"}, {"value": 40, "name": "go.itab.deadlineExceededError,error"}], "name": "context."}, {"children": [{"children": [{"value": 207, "name": "Available"}, {"value": 162, "name": "HashFunc"}, {"value": 186, "name": "New"}, {"value": 176, "name": "Size"}], "name": "(*Hash)."}, {"children": [{"value": 85, "name": "New-fm"}], "name": "(Hash)."}, {"children": [{"value": 76, "name": "Available"}, {"value": 11, "name": "HashFunc"}, {"value": 288, "name": "New"}, {"value": 177, "name": "Size"}], "name": "Hash."}, {"value": 207, "name": "RegisterHash"}, {"value": 24, "name": "digestSizes"}, {"value": 24, "name": "hashes"}, {"value": 215, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "statictmp_5"}, {"value": 40, "name": "go.itab.Hash,crypto.SignerOpts"}], "name": "crypto."}, {"children": [{"children": [{"children": [{"value": 186, "name": "Error"}], "name": "(*KeySizeError)."}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 329, "name": "Decrypt"}, {"value": 328, "name": "Encrypt"}], "name": "(*aesCipher)."}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 305, "name": "Decrypt"}, {"value": 304, "name": "Encrypt"}], "name": "(*aesCipherAsm)."}, {"children": [{"value": 26, "name": "BlockSize"}, {"value": 17, "name": "Decrypt"}, {"value": 17, "name": "Encrypt"}, {"value": 228, "name": "NewGCM"}], "name": "(*aesCipherGCM)."}, {"children": [{"value": 18, "name": "NonceSize"}, {"value": 1702, "name": "Open"}, {"value": 10, "name": "Overhead"}, {"value": 1392, "name": "Seal"}], "name": "(*gcmAsm)."}, {"children": [{"value": 137, "name": "Error"}], "name": "KeySizeError."}, {"value": 232, "name": "NewCipher"}, {"value": 213, "name": "aesEncBlock"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "aesEncBlock."}, {"value": 183, "name": "decryptBlockAsm"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "decryptBlockAsm."}, {"value": 1660, "name": "decryptBlockGo"}, {"value": 183, "name": "encryptBlockAsm"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "encryptBlockAsm."}, {"value": 1637, "name": "encryptBlockGo"}, {"value": 16, "name": "errOpen"}, {"value": 464, "name": "expandKeyAsm"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "expandKeyAsm."}, {"value": 862, "name": "expandKeyGo"}, {"value": 320, "name": "gcmAesData"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "gcmAesData."}, {"value": 3096, "name": "gcmAesDec"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "gcmAesDec."}, {"value": 5194, "name": "gcmAesEnc"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "gcmAesEnc."}, {"value": 238, "name": "gcmAesFinish"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "gcmAesFinish."}, {"value": 498, "name": "gcmAesInit"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "gcmAesInit."}, {"value": 29, "name": "hasGCMAsm"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "hasGCMAsm."}, {"value": 204, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 954, "name": "newCipher"}, {"value": 543, "name": "newCipherGeneric"}, {"value": 16, "name": "powx"}, {"value": 256, "name": "sbox0"}, {"value": 256, "name": "sbox1"}, {"value": 1024, "name": "td0"}, {"value": 1024, "name": "td1"}, {"value": 1024, "name": "td2"}, {"value": 1024, "name": "td3"}, {"value": 1024, "name": "te0"}, {"value": 1024, "name": "te1"}, {"value": 1024, "name": "te2"}, {"value": 1024, "name": "te3"}, {"value": 1, "name": "useAsm"}, {"value": 56, "name": "go.itab.*aesCipher,crypto/cipher.Block"}, {"value": 56, "name": "go.itab.*aesCipherAsm,crypto/cipher.Block"}, {"value": 56, "name": "go.itab.*aesCipherGCM,crypto/cipher.Block"}, {"value": 64, "name": "go.itab.*gcmAsm,crypto/cipher.AEAD"}, {"value": 40, "name": "go.itab.KeySizeError,error"}], "name": "aes."}, {"children": [{"children": [{"value": 262, "name": "Read"}], "name": "(*StreamReader)."}, {"children": [{"value": 15, "name": "BlockSize"}, {"value": 1313, "name": "CryptBlocks"}, {"value": 173, "name": "SetIV"}], "name": "(*cbcDecrypter)."}, {"children": [{"value": 15, "name": "BlockSize"}, {"value": 788, "name": "CryptBlocks"}, {"value": 173, "name": "SetIV"}], "name": "(*cbcEncrypter)."}, {"children": [{"value": 534, "name": "XORKeyStream"}, {"value": 481, "name": "refill"}], "name": "(*ctr)."}, {"children": [{"value": 15, "name": "NonceSize"}, {"value": 1539, "name": "Open"}, {"value": 10, "name": "Overhead"}, {"value": 1156, "name": "Seal"}, {"value": 702, "name": "auth"}, {"value": 710, "name": "counterCrypt"}, {"value": 330, "name": "deriveCounter"}, {"value": 198, "name": "mul"}, {"value": 310, "name": "update"}, {"value": 555, "name": "updateBlocks"}], "name": "(*gcm)."}, {"value": 372, "name": "NewCBCDecrypter"}, {"value": 372, "name": "NewCBCEncrypter"}, {"value": 885, "name": "NewCTR"}, {"value": 119, "name": "NewGCM"}, {"value": 1267, "name": "NewGCMWithNonceSize"}, {"children": [{"value": 259, "name": "Read"}], "name": "StreamReader."}, {"value": 16, "name": "errOpen"}, {"value": 265, "name": "fastXORBytes"}, {"value": 122, "name": "fastXORWords"}, {"value": 78, "name": "gcmInc32"}, {"value": 24, "name": "gcmReductionTable"}, {"value": 189, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 542, "name": "newCBC"}, {"value": 32, "name": "statictmp_382"}, {"value": 175, "name": "xorBytes"}, {"value": 159, "name": "xorWords"}, {"value": 48, "name": "go.itab.*cbcDecrypter,crypto/cipher.BlockMode"}, {"value": 48, "name": "go.itab.*cbcEncrypter,crypto/cipher.BlockMode"}, {"value": 40, "name": "go.itab.*ctr,crypto/cipher.Stream"}, {"value": 64, "name": "go.itab.*gcm,crypto/cipher.AEAD"}, {"value": 40, "name": "go.itab.StreamReader,io.Reader"}], "name": "cipher."}, {"children": [{"children": [{"value": 186, "name": "Error"}], "name": "(*KeySizeError)."}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 149, "name": "Decrypt"}, {"value": 149, "name": "Encrypt"}, {"value": 345, "name": "generateSubkeys"}], "name": "(*desCipher)."}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 265, "name": "Decrypt"}, {"value": 264, "name": "Encrypt"}], "name": "(*tripleDESCipher)."}, {"children": [{"value": 137, "name": "Error"}], "name": "KeySizeError."}, {"value": 423, "name": "NewTripleDESCipher"}, {"value": 299, "name": "cryptBlock"}, {"value": 167, "name": "decryptBlock"}, {"value": 167, "name": "encryptBlock"}, {"value": 48, "name": "expandBlock"}, {"value": 185, "name": "feistel"}, {"value": 2048, "name": "feistelBox"}, {"value": 106, "name": "init"}, {"children": [{"value": 322, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 220, "name": "ksRotate"}, {"value": 16, "name": "ksRotations"}, {"value": 32, "name": "permutationFunction"}, {"value": 98, "name": "permuteBlock"}, {"value": 227, "name": "permuteFinalBlock"}, {"value": 228, "name": "permuteInitialBlock"}, {"value": 56, "name": "permutedChoice1"}, {"value": 48, "name": "permutedChoice2"}, {"value": 512, "name": "sBoxes"}, {"value": 56, "name": "go.itab.*tripleDESCipher,crypto/cipher.Block"}, {"value": 40, "name": "go.itab.KeySizeError,error"}], "name": "des."}, {"children": [{"value": 16, "name": "ErrInvalidPublicKey"}, {"value": 1067, "name": "Verify"}, {"value": 189, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "dsa."}, {"children": [{"children": [{"value": 157, "name": "Add"}, {"value": 133, "name": "Double"}, {"value": 119, "name": "IsOnCurve"}, {"value": 100, "name": "Params"}, {"value": 25, "name": "Public"}, {"value": 143, "name": "ScalarBaseMult"}, {"value": 173, "name": "ScalarMult"}, {"value": 350, "name": "Sign"}], "name": "(*PrivateKey)."}, {"children": [{"value": 157, "name": "Add"}, {"value": 133, "name": "Double"}, {"value": 119, "name": "IsOnCurve"}, {"value": 100, "name": "Params"}, {"value": 143, "name": "ScalarBaseMult"}, {"value": 173, "name": "ScalarMult"}], "name": "(*PublicKey)."}, {"children": [{"value": 105, "name": "Read"}], "name": "(*zr)."}, {"children": [{"value": 167, "name": "Add"}, {"value": 128, "name": "Double"}, {"value": 117, "name": "IsOnCurve"}, {"value": 98, "name": "Params"}, {"value": 147, "name": "ScalarBaseMult"}, {"value": 183, "name": "ScalarMult"}], "name": "PrivateKey."}, {"children": [{"value": 164, "name": "Add"}, {"value": 128, "name": "Double"}, {"value": 117, "name": "IsOnCurve"}, {"value": 98, "name": "Params"}, {"value": 144, "name": "ScalarBaseMult"}, {"value": 180, "name": "ScalarMult"}], "name": "PublicKey."}, {"value": 1966, "name": "Sign"}, {"value": 1551, "name": "Verify"}, {"value": 16, "name": "errZeroParam"}, {"value": 212, "name": "fermatInverse"}, {"value": 300, "name": "hashToInt"}, {"value": 303, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "one"}, {"value": 555, "name": "randFieldElement"}, {"value": 16, "name": "statictmp_71"}, {"value": 8, "name": "zeroReader"}, {"value": 40, "name": "go.itab.*zr,io.Reader"}], "name": "ecdsa."}, {"children": [{"children": [{"value": 267, "name": "Add"}, {"value": 185, "name": "Double"}, {"value": 534, "name": "IsOnCurve"}, {"value": 11, "name": "Params"}, {"value": 128, "name": "ScalarBaseMult"}, {"value": 649, "name": "ScalarMult"}, {"value": 5492, "name": "addJacobian"}, {"value": 603, "name": "affineFromJacobian"}, {"value": 2137, "name": "doubleJacobian"}], "name": "(*CurveParams)."}, {"children": [{"value": 311, "name": "Add"}, {"value": 275, "name": "Double"}, {"value": 258, "name": "IsOnCurve"}, {"value": 229, "name": "Params"}, {"value": 291, "name": "ScalarBaseMult"}, {"value": 327, "name": "ScalarMult"}], "name": "(*p224Curve)."}, {"children": [{"value": 36, "name": "Add"}, {"value": 294, "name": "CombinedMult"}, {"value": 36, "name": "Double"}, {"value": 186, "name": "Inverse"}, {"value": 23, "name": "IsOnCurve"}, {"value": 162, "name": "Params"}, {"value": 216, "name": "ScalarBaseMult"}, {"value": 242, "name": "ScalarMult"}], "name": "(*p256Curve)."}, {"children": [{"value": 996, "name": "p256BaseMult"}, {"value": 1168, "name": "p256PointToAffine"}, {"value": 4098, "name": "p256ScalarMult"}], "name": "(*p256Point)."}, {"value": 854, "name": "GenerateKey"}, {"value": 471, "name": "Marshal"}, {"value": 122, "name": "P224"}, {"value": 98, "name": "P256"}, {"value": 98, "name": "P384"}, {"value": 98, "name": "P521"}, {"value": 535, "name": "Unmarshal"}, {"value": 145, "name": "fromBig"}, {"value": 200, "name": "get28BitsFromEnd"}, {"value": 101, "name": "init"}, {"value": 63, "name": "initAll"}, {"value": 871, "name": "initP224"}, {"value": 772, "name": "initP256"}, {"value": 772, "name": "initP384"}, {"value": 772, "name": "initP521"}, {"value": 1648, "name": "initTable"}, {"value": 1, "name": "initdone."}, {"value": 12, "name": "initonce"}, {"value": 24, "name": "mask"}, {"value": 177, "name": "maybeReduceModP"}, {"value": 104, "name": "p224"}, {"value": 50, "name": "p224Add"}, {"value": 2514, "name": "p224AddJacobian"}, {"value": 632, "name": "p224Contract"}, {"value": 57, "name": "p224CopyConditional"}, {"children": [{"value": 1049, "name": "Add"}, {"value": 535, "name": "Double"}, {"value": 598, "name": "IsOnCurve"}, {"value": 11, "name": "Params"}, {"value": 433, "name": "ScalarBaseMult"}, {"value": 592, "name": "ScalarMult"}], "name": "p224Curve."}, {"value": 1250, "name": "p224DoubleJacobian"}, {"value": 506, "name": "p224FromBig"}, {"value": 1697, "name": "p224Invert"}, {"value": 275, "name": "p224IsZero"}, {"value": 194, "name": "p224Mul"}, {"value": 32, "name": "p224P"}, {"value": 154, "name": "p224Reduce"}, {"value": 391, "name": "p224ReduceLarge"}, {"value": 723, "name": "p224ScalarMult"}, {"value": 234, "name": "p224Square"}, {"value": 103, "name": "p224Sub"}, {"value": 720, "name": "p224ToAffine"}, {"value": 494, "name": "p224ToBig"}, {"value": 24, "name": "p224ZeroModP31"}, {"value": 64, "name": "p224ZeroModP63"}, {"value": 8, "name": "p256"}, {"value": 53, "name": "p256BigToLittle"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256BigToLittle."}, {"children": [{"value": 145, "name": "Add"}, {"value": 874, "name": "CombinedMult"}, {"value": 122, "name": "Double"}, {"value": 3103, "name": "Inverse"}, {"value": 111, "name": "IsOnCurve"}, {"value": 11, "name": "Params"}, {"value": 257, "name": "ScalarBaseMult"}, {"value": 636, "name": "ScalarMult"}], "name": "p256Curve."}, {"value": 235, "name": "p256FromMont"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256FromMont."}, {"value": 261, "name": "p256GetScalar"}, {"value": 3188, "name": "p256Inverse"}, {"value": 5, "name": "p256LittleToBig"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256LittleToBig."}, {"value": 218, "name": "p256MovCond"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "p256MovCond."}, {"value": 587, "name": "p256Mul"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "p256Mul."}, {"value": 96, "name": "p256NegCond"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "p256NegCond."}, {"value": 892, "name": "p256OrdMul"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "p256OrdMul."}, {"value": 741, "name": "p256OrdSqr"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256OrdSqr."}, {"value": 1861, "name": "p256PointAddAffineAsm"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "p256PointAddAffineAsm."}, {"value": 1818, "name": "p256PointAddAsm"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "p256PointAddAsm."}, {"value": 1428, "name": "p256PointDoubleAsm"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256PointDoubleAsm."}, {"value": 8, "name": "p256Precomputed"}, {"value": 222, "name": "p256Select"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256Select."}, {"value": 254, "name": "p256SelectBase"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256SelectBase."}, {"value": 459, "name": "p256Sqr"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "p256Sqr."}, {"value": 8, "name": "p384"}, {"value": 8, "name": "p521"}, {"value": 12, "name": "precomputeOnce"}, {"value": 24, "name": "rr"}, {"value": 32, "name": "statictmp_497"}, {"value": 32, "name": "statictmp_502"}, {"value": 32, "name": "statictmp_504"}, {"value": 96, "name": "statictmp_598"}, {"value": 8, "name": "statictmp_864"}, {"value": 32, "name": "statictmp_865"}, {"value": 32, "name": "statictmp_866"}, {"value": 201, "name": "zForAffine"}, {"value": 80, "name": "go.itab.*CurveParams,crypto/elliptic.Curve"}, {"value": 80, "name": "go.itab.p224Curve,crypto/elliptic.Curve"}, {"value": 80, "name": "go.itab.p256Curve,crypto/elliptic.Curve"}], "name": "elliptic."}, {"children": [{"children": [{"value": 15, "name": "BlockSize"}, {"value": 119, "name": "Reset"}, {"value": 14, "name": "Size"}, {"value": 406, "name": "Sum"}, {"value": 132, "name": "Write"}], "name": "(*hmac)."}, {"value": 126, "name": "Equal"}, {"value": 930, "name": "New"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "go.itab.*hmac,hash.Hash"}], "name": "hmac."}, {"children": [{"value": 59, "name": "AESGCMSupport"}, {"value": 20, "name": "hasAESNI"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "hasAESNI."}], "name": "internal/cipherhw."}, {"children": [{"children": [{"value": 10, "name": "BlockSize"}, {"value": 49, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 339, "name": "Sum"}, {"value": 607, "name": "Write"}, {"value": 649, "name": "checkSum"}], "name": "(*digest)."}, {"value": 127, "name": "New"}, {"value": 272, "name": "Sum"}, {"value": 2271, "name": "block"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "block."}, {"value": 111, "name": "init"}, {"children": [{"value": 71, "name": "1"}, {"value": 131, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1, "name": "littleEndian"}, {"value": 72, "name": "go.itab.*digest,hash.Hash"}], "name": "md5."}, {"children": [{"children": [{"value": 1173, "name": "Read"}], "name": "(*devReader)."}, {"children": [{"value": 238, "name": "Read"}], "name": "(*hideAgainReader)."}, {"value": 735, "name": "Int"}, {"value": 1161, "name": "Prime"}, {"value": 137, "name": "Read"}, {"value": 16, "name": "Reader"}, {"value": 8, "name": "altGetRandom"}, {"value": 187, "name": "getRandomLinux"}, {"children": [{"value": 232, "name": "Read"}], "name": "hideAgainReader."}, {"value": 257, "name": "init"}, {"children": [{"value": 100, "name": "1"}, {"value": 100, "name": "2"}, {"value": 189, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "isEAGAIN"}, {"value": 12, "name": "once"}, {"value": 127, "name": "pickStrategy"}, {"value": 24, "name": "smallPrimes"}, {"value": 8, "name": "smallPrimesProduct"}, {"value": 15, "name": "statictmp_111"}, {"value": 103, "name": "unixIsEAGAIN"}, {"value": 1, "name": "useSyscall"}, {"value": 40, "name": "go.itab.*devReader,io.Reader"}, {"value": 40, "name": "go.itab.hideAgainReader,io.Reader"}], "name": "rand."}, {"children": [{"children": [{"value": 85, "name": "Reset"}, {"value": 151, "name": "XORKeyStream"}], "name": "(*Cipher)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*KeySizeError)."}, {"children": [{"value": 137, "name": "Error"}], "name": "KeySizeError."}, {"value": 337, "name": "NewCipher"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 907, "name": "xorKeyStream"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "xorKeyStream."}, {"value": 40, "name": "go.itab.KeySizeError,error"}], "name": "rc4."}, {"children": [{"children": [{"value": 15, "name": "HashFunc"}], "name": "(*PSSOptions)."}, {"children": [{"value": 1415, "name": "Decrypt"}, {"value": 1639, "name": "Precompute"}, {"value": 25, "name": "Public"}, {"value": 464, "name": "Sign"}, {"value": 1511, "name": "Validate"}], "name": "(*PrivateKey)."}, {"value": 2182, "name": "DecryptOAEP"}, {"value": 570, "name": "DecryptPKCS1v15"}, {"value": 694, "name": "DecryptPKCS1v15SessionKey"}, {"value": 1119, "name": "EncryptPKCS1v15"}, {"value": 16, "name": "ErrDecryption"}, {"value": 16, "name": "ErrMessageTooLong"}, {"value": 16, "name": "ErrVerification"}, {"value": 119, "name": "GenerateKey"}, {"value": 2934, "name": "GenerateMultiPrimeKey"}, {"value": 1142, "name": "SignPKCS1v15"}, {"value": 693, "name": "SignPSS"}, {"value": 1423, "name": "VerifyPKCS1v15"}, {"value": 210, "name": "VerifyPSS"}, {"value": 8, "name": "bigOne"}, {"value": 8, "name": "bigZero"}, {"value": 179, "name": "copyWithLeftPad"}, {"value": 2445, "name": "decrypt"}, {"value": 440, "name": "decryptAndCheck"}, {"value": 1041, "name": "decryptPKCS1v15"}, {"value": 1441, "name": "emsaPSSEncode"}, {"value": 1560, "name": "emsaPSSVerify"}, {"value": 121, "name": "encrypt"}, {"value": 16, "name": "errPublicExponentLarge"}, {"value": 16, "name": "errPublicExponentSmall"}, {"value": 16, "name": "errPublicModulus"}, {"value": 8, "name": "hashPrefixes"}, {"value": 2166, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 507, "name": "mgf1XOR"}, {"value": 364, "name": "modInverse"}, {"value": 403, "name": "nonZeroRandomBytes"}, {"value": 577, "name": "pkcs1v15HashInfo"}, {"value": 831, "name": "signPSSWithSalt"}, {"value": 18, "name": "statictmp_580"}, {"value": 15, "name": "statictmp_583"}, {"value": 19, "name": "statictmp_586"}, {"value": 19, "name": "statictmp_589"}, {"value": 19, "name": "statictmp_592"}, {"value": 19, "name": "statictmp_595"}, {"value": 14, "name": "statictmp_600"}, {"value": 838, "name": "verifyPSS"}, {"value": 40, "name": "go.itab.*PSSOptions,crypto.SignerOpts"}], "name": "rsa."}, {"children": [{"children": [{"value": 10, "name": "BlockSize"}, {"value": 359, "name": "ConstantTimeSum"}, {"value": 56, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 359, "name": "Sum"}, {"value": 607, "name": "Write"}, {"value": 707, "name": "checkSum"}, {"value": 970, "name": "constSum"}], "name": "(*digest)."}, {"value": 137, "name": "New"}, {"value": 324, "name": "Sum"}, {"value": 329, "name": "block"}, {"value": 4979, "name": "blockAMD64"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "blockAMD64."}, {"value": 7479, "name": "blockAVX2"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "blockAVX2."}, {"value": 39, "name": "checkAVX2"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "checkAVX2."}, {"value": 1, "name": "hasAVX2"}, {"value": 120, "name": "init"}, {"children": [{"value": 71, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "go.itab.*digest,hash.Hash"}], "name": "sha1."}, {"children": [{"children": [{"value": 10, "name": "BlockSize"}, {"value": 142, "name": "Reset"}, {"value": 33, "name": "Size"}, {"value": 608, "name": "Sum"}, {"value": 607, "name": "Write"}, {"value": 745, "name": "checkSum"}], "name": "(*digest)."}, {"value": 103, "name": "New"}, {"value": 107, "name": "New224"}, {"value": 303, "name": "Sum256"}, {"value": 14647, "name": "block"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "block."}, {"value": 101, "name": "init"}, {"children": [{"value": 96, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "go.itab.*digest,hash.Hash"}], "name": "sha256."}, {"children": [{"children": [{"value": 10, "name": "BlockSize"}, {"value": 516, "name": "Reset"}, {"value": 70, "name": "Size"}, {"value": 1136, "name": "Sum"}, {"value": 640, "name": "Write"}, {"value": 896, "name": "checkSum"}], "name": "(*digest)."}, {"value": 114, "name": "New"}, {"value": 114, "name": "New384"}, {"value": 114, "name": "New512_224"}, {"value": 114, "name": "New512_256"}, {"value": 312, "name": "Sum512"}, {"value": 16152, "name": "block"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "block."}, {"value": 101, "name": "init"}, {"children": [{"value": 149, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "go.itab.*digest,hash.Hash"}], "name": "sha512."}, {"children": [{"value": 147, "name": "ConstantTimeCompare"}, {"value": 216, "name": "ConstantTimeCopy"}], "name": "subtle."}, {"children": [{"children": [{"value": 59, "name": "(crypto/tls.serverInit)-fm"}, {"value": 640, "name": "BuildNameToCertificate"}, {"value": 1502, "name": "Clone"}, {"value": 671, "name": "SetSessionTicketKeys"}, {"value": 113, "name": "cipherSuites"}, {"value": 1073, "name": "getCertificate"}, {"value": 917, "name": "serverInit"}, {"value": 166, "name": "ticketKeys"}, {"value": 104, "name": "time"}, {"value": 632, "name": "writeKeyLog"}], "name": "(*Config)."}, {"children": [{"value": 453, "name": "Close"}, {"value": 245, "name": "CloseWrite"}, {"value": 684, "name": "ConnectionState"}, {"value": 1046, "name": "Handshake"}, {"value": 88, "name": "LocalAddr"}, {"value": 204, "name": "OCSPResponse"}, {"value": 1169, "name": "Read"}, {"value": 88, "name": "RemoteAddr"}, {"value": 116, "name": "SetDeadline"}, {"value": 116, "name": "SetReadDeadline"}, {"value": 116, "name": "SetWriteDeadline"}, {"value": 631, "name": "VerifyHostname"}, {"value": 1385, "name": "Write"}, {"value": 6432, "name": "clientHandshake"}, {"value": 303, "name": "closeNotify"}, {"value": 1455, "name": "decryptTicket"}, {"value": 1376, "name": "encryptTicket"}, {"value": 321, "name": "flush"}, {"value": 786, "name": "handleRenegotiation"}, {"value": 667, "name": "maxPayloadSizeForWrite"}, {"value": 2386, "name": "readHandshake"}, {"value": 6711, "name": "readRecord"}, {"value": 209, "name": "sendAlert"}, {"value": 467, "name": "sendAlertLocked"}, {"value": 1320, "name": "serverHandshake"}, {"value": 483, "name": "write"}, {"value": 276, "name": "writeRecord"}, {"value": 1726, "name": "writeRecordLocked"}], "name": "(*Conn)."}, {"children": [{"value": 245, "name": "Error"}], "name": "(*RecordHeaderError)."}, {"children": [{"value": 185, "name": "Error"}, {"value": 185, "name": "String"}], "name": "(*alert)."}, {"children": [{"value": 196, "name": "Read"}, {"value": 312, "name": "readFromUntil"}, {"value": 274, "name": "reserve"}, {"value": 111, "name": "resize"}], "name": "(*block)."}, {"children": [{"value": 877, "name": "marshal"}, {"value": 882, "name": "unmarshal"}], "name": "(*certificateMsg)."}, {"children": [{"value": 1249, "name": "marshal"}, {"value": 1926, "name": "unmarshal"}], "name": "(*certificateRequestMsg)."}, {"children": [{"value": 631, "name": "marshal"}, {"value": 425, "name": "unmarshal"}], "name": "(*certificateStatusMsg)."}, {"children": [{"value": 645, "name": "marshal"}, {"value": 477, "name": "unmarshal"}], "name": "(*certificateVerifyMsg)."}, {"children": [{"value": 8984, "name": "doFullHandshake"}, {"value": 1613, "name": "establishKeys"}, {"value": 2277, "name": "getCertificate"}, {"value": 2097, "name": "processServerHello"}, {"value": 1293, "name": "readFinished"}, {"value": 812, "name": "readSessionTicket"}, {"value": 1670, "name": "sendFinished"}, {"value": 158, "name": "serverResumedSession"}], "name": "(*clientHandshakeState)."}, {"children": [{"value": 4506, "name": "marshal"}, {"value": 5506, "name": "unmarshal"}], "name": "(*clientHelloMsg)."}, {"children": [{"value": 428, "name": "marshal"}, {"value": 287, "name": "unmarshal"}], "name": "(*clientKeyExchangeMsg)."}, {"children": [{"value": 78, "name": "BlockSize"}, {"value": 68, "name": "Reset"}, {"value": 78, "name": "Size"}, {"value": 128, "name": "Sum"}, {"value": 128, "name": "Write"}], "name": "(*cthWrapper)."}, {"children": [{"value": 1893, "name": "generateClientKeyExchange"}, {"value": 3873, "name": "generateServerKeyExchange"}, {"value": 1560, "name": "processClientKeyExchange"}, {"value": 3340, "name": "processServerKeyExchange"}], "name": "(*ecdheKeyAgreement)."}, {"children": [{"value": 259, "name": "Sum"}, {"value": 574, "name": "Write"}], "name": "(*finishedHash)."}, {"children": [{"value": 368, "name": "marshal"}, {"value": 233, "name": "unmarshal"}], "name": "(*finishedMsg)."}, {"children": [{"value": 10, "name": "NonceSize"}, {"value": 388, "name": "Open"}, {"value": 79, "name": "Overhead"}, {"value": 356, "name": "Seal"}, {"value": 10, "name": "explicitNonceLen"}], "name": "(*fixedNonceAEAD)."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 397, "name": "changeCipherSpec"}, {"value": 3054, "name": "decrypt"}, {"value": 2539, "name": "encrypt"}, {"value": 143, "name": "freeBlock"}, {"value": 183, "name": "incSeq"}, {"value": 230, "name": "newBlock"}, {"value": 297, "name": "splitBlock"}], "name": "(*halfConn)."}, {"children": [{"value": 100, "name": "marshal"}, {"value": 17, "name": "unmarshal"}], "name": "(*helloRequestMsg)."}, {"children": [{"value": 335, "name": "Accept"}, {"value": 110, "name": "Addr"}, {"value": 110, "name": "Close"}], "name": "(*listener)."}, {"children": [{"value": 479, "name": "marshal"}, {"value": 323, "name": "unmarshal"}], "name": "(*newSessionTicketMsg)."}, {"children": [{"value": 802, "name": "marshal"}, {"value": 471, "name": "unmarshal"}], "name": "(*nextProtoMsg)."}, {"children": [{"value": 263, "name": "generateClientKeyExchange"}, {"value": 181, "name": "generateServerKeyExchange"}, {"value": 263, "name": "processClientKeyExchange"}, {"value": 256, "name": "processServerKeyExchange"}], "name": "(*rsaKeyAgreement)."}, {"children": [{"value": 770, "name": "checkForResumption"}, {"value": 1269, "name": "clientHelloInfo"}, {"value": 7937, "name": "doFullHandshake"}, {"value": 945, "name": "doResumeHandshake"}, {"value": 1610, "name": "establishKeys"}, {"value": 2755, "name": "processCertsFromClient"}, {"value": 4745, "name": "readClientHello"}, {"value": 1725, "name": "readFinished"}, {"value": 1213, "name": "sendFinished"}, {"value": 613, "name": "sendSessionTicket"}, {"value": 396, "name": "setCipherSuite"}], "name": "(*serverHandshakeState)."}, {"children": [{"value": 125, "name": "marshal"}, {"value": 17, "name": "unmarshal"}], "name": "(*serverHelloDoneMsg)."}, {"children": [{"value": 3327, "name": "marshal"}, {"value": 3702, "name": "unmarshal"}], "name": "(*serverHelloMsg)."}, {"children": [{"value": 428, "name": "marshal"}, {"value": 233, "name": "unmarshal"}], "name": "(*serverKeyExchangeMsg)."}, {"children": [{"value": 945, "name": "marshal"}, {"value": 948, "name": "unmarshal"}], "name": "(*sessionState)."}, {"children": [{"value": 479, "name": "MAC"}, {"value": 204, "name": "Size"}], "name": "(*ssl30MAC)."}, {"children": [{"value": 175, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*timeoutError)."}, {"children": [{"value": 451, "name": "MAC"}, {"value": 185, "name": "Size"}], "name": "(*tls10MAC)."}, {"children": [{"value": 10, "name": "NonceSize"}, {"value": 465, "name": "Open"}, {"value": 79, "name": "Overhead"}, {"value": 433, "name": "Seal"}, {"value": 10, "name": "explicitNonceLen"}], "name": "(*xorNonceAEAD)."}, {"children": [{"value": 13, "name": "1"}, {"value": 13, "name": "2"}, {"value": 15, "name": "3"}, {"value": 15, "name": "4"}], "name": ".gobytes."}, {"value": 231, "name": "Dial"}, {"value": 1262, "name": "DialWithDialer"}, {"children": [{"value": 140, "name": "func1"}, {"value": 116, "name": "func2"}], "name": "DialWithDialer."}, {"value": 553, "name": "LoadX509KeyPair"}, {"children": [{"value": 120, "name": "Error"}], "name": "RecordHeaderError."}, {"value": 5726, "name": "X509KeyPair"}, {"children": [{"value": 109, "name": "func1"}], "name": "X509KeyPair."}, {"value": 375, "name": "aeadAESGCM"}, {"value": 442, "name": "aeadChaCha20Poly1305"}, {"children": [{"value": 79, "name": "Error"}, {"value": 307, "name": "String"}], "name": "alert."}, {"value": 8, "name": "alertText"}, {"value": 274, "name": "cipher3DES"}, {"value": 274, "name": "cipherAES"}, {"value": 105, "name": "cipherRC4"}, {"value": 24, "name": "cipherSuites"}, {"value": 24, "name": "clientFinishedLabel"}, {"value": 127, "name": "clientSessionCacheKey"}, {"value": 216, "name": "curveForCurveID"}, {"value": 110, "name": "defaultCipherSuites"}, {"value": 24, "name": "defaultCurvePreferences"}, {"value": 96, "name": "ecdheECDSAKA"}, {"value": 96, "name": "ecdheRSAKA"}, {"value": 376, "name": "emptyConfig"}, {"value": 16, "name": "errClientKeyExchange"}, {"value": 16, "name": "errClosed"}, {"value": 16, "name": "errEarlyCloseWrite"}, {"value": 16, "name": "errServerKeyExchange"}, {"value": 16, "name": "errShutdown"}, {"value": 246, "name": "extractPadding"}, {"children": [{"value": 336, "name": "Sum"}, {"value": 597, "name": "clientSum"}, {"value": 1672, "name": "hashForClientCertificate"}, {"value": 480, "name": "selectClientCertSignatureAlgorithm"}, {"value": 597, "name": "serverSum"}], "name": "finishedHash."}, {"value": 1423, "name": "finishedSum30"}, {"value": 1066, "name": "hashForServerKeyExchange"}, {"value": 386, "name": "hostnameInSNI"}, {"value": 928, "name": "init"}, {"value": 844, "name": "initDefaultCipherSuites"}, {"value": 1, "name": "initdone."}, {"value": 69, "name": "isSupportedSignatureAndHash"}, {"value": 24, "name": "keyExpansionLabel"}, {"value": 1264, "name": "keysFromMasterSecret"}, {"children": [{"value": 108, "name": "Addr"}, {"value": 108, "name": "Close"}], "name": "listener."}, {"value": 616, "name": "macSHA1"}, {"value": 183, "name": "macSHA256"}, {"value": 778, "name": "masterFromPreMasterSecret"}, {"value": 24, "name": "masterSecretLabel"}, {"value": 555, "name": "md5SHA1Hash"}, {"value": 112, "name": "mutualCipherSuite"}, {"value": 346, "name": "mutualProtocol"}, {"value": 141, "name": "newConstantTimeHash"}, {"children": [{"value": 217, "name": "func1"}], "name": "newConstantTimeHash."}, {"value": 1087, "name": "newFinishedHash"}, {"value": 12, "name": "once"}, {"value": 760, "name": "pHash"}, {"value": 450, "name": "padToBlockSize"}, {"value": 652, "name": "parsePrivateKey"}, {"value": 412, "name": "pickTLS12HashForSignature"}, {"value": 773, "name": "prf10"}, {"value": 141, "name": "prf12"}, {"children": [{"value": 438, "name": "func1"}], "name": "prf12."}, {"value": 932, "name": "prf30"}, {"value": 322, "name": "prfAndHashForVersion"}, {"value": 80, "name": "prfForVersion"}, {"value": 92, "name": "rsaKA"}, {"children": [{"value": 1046, "name": "generateClientKeyExchange"}, {"value": 28, "name": "generateServerKeyExchange"}, {"value": 923, "name": "processClientKeyExchange"}, {"value": 148, "name": "processServerKeyExchange"}], "name": "rsaKeyAgreement."}, {"value": 24, "name": "serverFinishedLabel"}, {"value": 297, "name": "sha1Hash"}, {"children": [{"value": 876, "name": "MAC"}, {"value": 76, "name": "Size"}], "name": "ssl30MAC."}, {"value": 48, "name": "ssl30Pad1"}, {"value": 48, "name": "ssl30Pad2"}, {"value": 4, "name": "ssl3ClientFinishedMagic"}, {"value": 4, "name": "ssl3ServerFinishedMagic"}, {"value": 1, "name": "statictmp_1057"}, {"value": 5, "name": "statictmp_1622"}, {"value": 4, "name": "statictmp_1810"}, {"value": 2, "name": "statictmp_2033"}, {"value": 1, "name": "statictmp_2131"}, {"value": 8, "name": "statictmp_2176"}, {"value": 104, "name": "statictmp_2605"}, {"value": 104, "name": "statictmp_2611"}, {"value": 2, "name": "statictmp_2657"}, {"value": 12, "name": "statictmp_280"}, {"value": 96, "name": "statictmp_2821"}, {"value": 96, "name": "statictmp_2822"}, {"value": 12, "name": "statictmp_283"}, {"value": 96, "name": "statictmp_2966"}, {"value": 176, "name": "statictmp_2967"}, {"value": 72, "name": "statictmp_2968"}, {"value": 72, "name": "statictmp_2969"}, {"value": 72, "name": "statictmp_2970"}, {"value": 72, "name": "statictmp_2971"}, {"value": 72, "name": "statictmp_2972"}, {"value": 72, "name": "statictmp_2973"}, {"value": 72, "name": "statictmp_2974"}, {"value": 72, "name": "statictmp_2975"}, {"value": 72, "name": "statictmp_2976"}, {"value": 72, "name": "statictmp_2977"}, {"value": 72, "name": "statictmp_2978"}, {"value": 72, "name": "statictmp_2979"}, {"value": 72, "name": "statictmp_2980"}, {"value": 72, "name": "statictmp_2981"}, {"value": 72, "name": "statictmp_2982"}, {"value": 72, "name": "statictmp_2983"}, {"value": 72, "name": "statictmp_2984"}, {"value": 72, "name": "statictmp_2985"}, {"value": 72, "name": "statictmp_2986"}, {"value": 72, "name": "statictmp_2987"}, {"value": 72, "name": "statictmp_2988"}, {"value": 72, "name": "statictmp_2989"}, {"value": 12, "name": "statictmp_2990"}, {"value": 8, "name": "statictmp_2991"}, {"value": 14, "name": "statictmp_2992"}, {"value": 24, "name": "statictmp_2994"}, {"value": 384, "name": "statictmp_2995"}, {"value": 1, "name": "statictmp_791"}, {"value": 1, "name": "statictmp_794"}, {"value": 8, "name": "suppVersArray"}, {"value": 24, "name": "supportedSignatureAlgorithms"}, {"value": 299, "name": "ticketKeyFromBytes"}, {"children": [{"value": 22, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "timeoutError."}, {"children": [{"value": 437, "name": "MAC"}, {"value": 76, "name": "Size"}], "name": "tls10MAC."}, {"value": 24, "name": "tls11SignatureSchemes"}, {"value": 211, "name": "unexpectedMessageError"}, {"value": 24, "name": "varDefaultCipherSuites"}, {"value": 8, "name": "writerMutex"}, {"value": 96, "name": "go.itab.*Conn,net.Conn"}, {"value": 48, "name": "go.itab.*certificateMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*certificateRequestMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*certificateStatusMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*certificateVerifyMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*clientHelloMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*clientKeyExchangeMsg,crypto/tls.handshakeMessage"}, {"value": 72, "name": "go.itab.*cthWrapper,hash.Hash"}, {"value": 64, "name": "go.itab.*ecdheKeyAgreement,crypto/tls.keyAgreement"}, {"value": 48, "name": "go.itab.*finishedMsg,crypto/tls.handshakeMessage"}, {"value": 64, "name": "go.itab.*fixedNonceAEAD,crypto/cipher.AEAD"}, {"value": 48, "name": "go.itab.*helloRequestMsg,crypto/tls.handshakeMessage"}, {"value": 56, "name": "go.itab.*listener,net.Listener"}, {"value": 48, "name": "go.itab.*newSessionTicketMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*nextProtoMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*serverHelloDoneMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*serverHelloMsg,crypto/tls.handshakeMessage"}, {"value": 48, "name": "go.itab.*serverKeyExchangeMsg,crypto/tls.handshakeMessage"}, {"value": 64, "name": "go.itab.*xorNonceAEAD,crypto/cipher.AEAD"}, {"value": 40, "name": "go.itab.RecordHeaderError,error"}, {"value": 40, "name": "go.itab.alert,error"}, {"value": 64, "name": "go.itab.rsaKeyAgreement,crypto/tls.keyAgreement"}, {"value": 48, "name": "go.itab.ssl30MAC,crypto/tls.macFunction"}, {"value": 40, "name": "go.itab.timeoutError,error"}, {"value": 48, "name": "go.itab.tls10MAC,crypto/tls.macFunction"}], "name": "tls."}, {"children": [{"children": [{"value": 1211, "name": "AddCert"}, {"value": 395, "name": "AppendCertsFromPEM"}, {"value": 307, "name": "Subjects"}, {"value": 282, "name": "contains"}, {"value": 821, "name": "findVerifiedParents"}], "name": "(*CertPool)."}, {"children": [{"value": 284, "name": "CheckCRLSignature"}, {"value": 197, "name": "CheckSignature"}, {"value": 492, "name": "CheckSignatureFrom"}, {"value": 3029, "name": "CreateCRL"}, {"value": 121, "name": "Equal"}, {"value": 2488, "name": "Verify"}, {"value": 1158, "name": "VerifyHostname"}, {"value": 3309, "name": "buildChains"}, {"value": 1172, "name": "isValid"}], "name": "(*Certificate)."}, {"children": [{"value": 326, "name": "Error"}], "name": "(*CertificateInvalidError)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*ConstraintViolationError)."}, {"children": [{"value": 204, "name": "Error"}], "name": "(*HostnameError)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*InsecureAlgorithmError)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*SignatureAlgorithm)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*SystemRootsError)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*UnhandledCriticalExtension)."}, {"children": [{"value": 213, "name": "Error"}], "name": "(*UnknownAuthorityError)."}, {"children": [{"value": 202, "name": "Error"}], "name": "CertificateInvalidError."}, {"children": [{"value": 22, "name": "Error"}], "name": "ConstraintViolationError."}, {"value": 3104, "name": "CreateCertificate"}, {"value": 16, "name": "ErrUnsupportedAlgorithm"}, {"children": [{"value": 918, "name": "Error"}], "name": "HostnameError."}, {"value": 16, "name": "IncorrectPasswordError"}, {"children": [{"value": 200, "name": "Error"}], "name": "InsecureAlgorithmError."}, {"value": 905, "name": "MarshalECPrivateKey"}, {"value": 924, "name": "MarshalPKCS1PrivateKey"}, {"value": 369, "name": "ParseCertificate"}, {"value": 119, "name": "ParseECPrivateKey"}, {"value": 1759, "name": "ParsePKCS1PrivateKey"}, {"value": 1473, "name": "ParsePKCS8PrivateKey"}, {"children": [{"value": 134, "name": "String"}], "name": "SignatureAlgorithm."}, {"children": [{"value": 204, "name": "Error"}], "name": "SystemRootsError."}, {"children": [{"value": 22, "name": "Error"}], "name": "UnhandledCriticalExtension."}, {"children": [{"value": 512, "name": "Error"}], "name": "UnknownAuthorityError."}, {"value": 256, "name": "algoName"}, {"value": 162, "name": "asn1BitLength"}, {"value": 24, "name": "asn1Null"}, {"value": 10601, "name": "buildExtensions"}, {"value": 24, "name": "certDirectories"}, {"value": 24, "name": "certFiles"}, {"value": 435, "name": "checkChainForKeyUsage"}, {"value": 2713, "name": "checkSignature"}, {"value": 24, "name": "entrustBrokenSPKI"}, {"value": 16, "name": "errNotParsed"}, {"value": 256, "name": "extKeyUsageFromOID"}, {"value": 24, "name": "extKeyUsageOIDs"}, {"value": 360, "name": "getPublicKeyAlgorithmFromOID"}, {"value": 1510, "name": "getSignatureAlgorithmFromAI"}, {"value": 490, "name": "init"}, {"value": 179, "name": "initSystemRoots"}, {"value": 1, "name": "initdone."}, {"value": 1277, "name": "loadSystemRoots"}, {"value": 1479, "name": "marshalPublicKey"}, {"value": 1647, "name": "marshalSANs"}, {"value": 824, "name": "matchHostnames"}, {"value": 301, "name": "matchNameConstraint"}, {"value": 535, "name": "namedCurveFromOID"}, {"value": 24, "name": "oidAuthorityInfoAccessIssuers"}, {"value": 24, "name": "oidAuthorityInfoAccessOcsp"}, {"value": 24, "name": "oidExtensionAuthorityInfoAccess"}, {"value": 24, "name": "oidExtensionAuthorityKeyId"}, {"value": 24, "name": "oidExtensionBasicConstraints"}, {"value": 24, "name": "oidExtensionCRLDistributionPoints"}, {"value": 24, "name": "oidExtensionCertificatePolicies"}, {"value": 24, "name": "oidExtensionExtendedKeyUsage"}, {"value": 24, "name": "oidExtensionKeyUsage"}, {"value": 24, "name": "oidExtensionNameConstraints"}, {"value": 24, "name": "oidExtensionSubjectAltName"}, {"value": 24, "name": "oidExtensionSubjectKeyId"}, {"value": 112, "name": "oidFromExtKeyUsage"}, {"value": 581, "name": "oidFromNamedCurve"}, {"value": 334, "name": "oidInExtensions"}, {"value": 24, "name": "oidMGF1"}, {"value": 24, "name": "oidNamedCurveP224"}, {"value": 24, "name": "oidNamedCurveP256"}, {"value": 24, "name": "oidNamedCurveP384"}, {"value": 24, "name": "oidNamedCurveP521"}, {"value": 24, "name": "oidPublicKeyDSA"}, {"value": 24, "name": "oidPublicKeyECDSA"}, {"value": 24, "name": "oidPublicKeyRSA"}, {"value": 24, "name": "oidSHA256"}, {"value": 24, "name": "oidSHA384"}, {"value": 24, "name": "oidSHA512"}, {"value": 24, "name": "oidSignatureECDSAWithSHA256"}, {"value": 24, "name": "oidSignatureECDSAWithSHA384"}, {"value": 24, "name": "oidSignatureECDSAWithSHA512"}, {"value": 24, "name": "oidSignatureRSAPSS"}, {"value": 24, "name": "oidSignatureSHA256WithRSA"}, {"value": 12, "name": "once"}, {"value": 11191, "name": "parseCertificate"}, {"value": 2057, "name": "parseECPrivateKey"}, {"value": 3866, "name": "parsePublicKey"}, {"value": 3137, "name": "parseSANExtension"}, {"value": 893, "name": "rsaPSSParameters"}, {"value": 24, "name": "signatureAlgorithmDetails"}, {"value": 1890, "name": "signingParamsForPublicKey"}, {"value": 72, "name": "statictmp_1214"}, {"value": 568, "name": "statictmp_1261"}, {"value": 248, "name": "statictmp_1300"}, {"value": 80, "name": "statictmp_1476"}, {"value": 32, "name": "statictmp_1477"}, {"value": 56, "name": "statictmp_1478"}, {"value": 56, "name": "statictmp_1479"}, {"value": 56, "name": "statictmp_1480"}, {"value": 56, "name": "statictmp_1481"}, {"value": 56, "name": "statictmp_1482"}, {"value": 56, "name": "statictmp_1483"}, {"value": 56, "name": "statictmp_1484"}, {"value": 48, "name": "statictmp_1485"}, {"value": 72, "name": "statictmp_1486"}, {"value": 48, "name": "statictmp_1487"}, {"value": 56, "name": "statictmp_1488"}, {"value": 56, "name": "statictmp_1489"}, {"value": 56, "name": "statictmp_1490"}, {"value": 72, "name": "statictmp_1491"}, {"value": 72, "name": "statictmp_1492"}, {"value": 72, "name": "statictmp_1493"}, {"value": 56, "name": "statictmp_1494"}, {"value": 48, "name": "statictmp_1495"}, {"value": 768, "name": "statictmp_1496"}, {"value": 56, "name": "statictmp_1497"}, {"value": 48, "name": "statictmp_1498"}, {"value": 48, "name": "statictmp_1499"}, {"value": 40, "name": "statictmp_1500"}, {"value": 56, "name": "statictmp_1501"}, {"value": 40, "name": "statictmp_1502"}, {"value": 40, "name": "statictmp_1503"}, {"value": 40, "name": "statictmp_1504"}, {"value": 72, "name": "statictmp_1505"}, {"value": 72, "name": "statictmp_1506"}, {"value": 72, "name": "statictmp_1507"}, {"value": 72, "name": "statictmp_1508"}, {"value": 72, "name": "statictmp_1509"}, {"value": 72, "name": "statictmp_1510"}, {"value": 72, "name": "statictmp_1511"}, {"value": 72, "name": "statictmp_1512"}, {"value": 72, "name": "statictmp_1513"}, {"value": 80, "name": "statictmp_1514"}, {"value": 56, "name": "statictmp_1515"}, {"value": 384, "name": "statictmp_1516"}, {"value": 294, "name": "statictmp_1517"}, {"value": 2, "name": "statictmp_1518"}, {"value": 32, "name": "statictmp_1519"}, {"value": 32, "name": "statictmp_1520"}, {"value": 32, "name": "statictmp_1521"}, {"value": 32, "name": "statictmp_1522"}, {"value": 32, "name": "statictmp_1523"}, {"value": 32, "name": "statictmp_1524"}, {"value": 32, "name": "statictmp_1525"}, {"value": 32, "name": "statictmp_1526"}, {"value": 32, "name": "statictmp_1527"}, {"value": 72, "name": "statictmp_1528"}, {"value": 72, "name": "statictmp_1529"}, {"value": 72, "name": "statictmp_1530"}, {"value": 96, "name": "statictmp_225"}, {"value": 8, "name": "statictmp_452"}, {"value": 96, "name": "statictmp_641"}, {"value": 72, "name": "statictmp_643"}, {"value": 96, "name": "statictmp_648"}, {"value": 96, "name": "statictmp_653"}, {"value": 2, "name": "statictmp_690"}, {"value": 378, "name": "subjectBytes"}, {"value": 8, "name": "systemRoots"}, {"value": 16, "name": "systemRootsErr"}, {"value": 86, "name": "systemRootsPool"}, {"value": 349, "name": "toLowerCaseASCII"}, {"value": 40, "name": "go.itab.CertificateInvalidError,error"}, {"value": 40, "name": "go.itab.ConstraintViolationError,error"}, {"value": 40, "name": "go.itab.HostnameError,error"}, {"value": 40, "name": "go.itab.InsecureAlgorithmError,error"}, {"value": 40, "name": "go.itab.SystemRootsError,error"}, {"value": 40, "name": "go.itab.UnhandledCriticalExtension,error"}, {"value": 40, "name": "go.itab.UnknownAuthorityError,error"}], "name": "x509."}, {"children": [{"children": [{"value": 58, "name": "HasExpired"}], "name": "(*CertificateList)."}, {"children": [{"value": 3502, "name": "FillFromRDNSequence"}, {"value": 271, "name": "ToRDNSequence"}], "name": "(*Name)."}, {"children": [{"value": 2643, "name": "ToRDNSequence"}, {"value": 939, "name": "appendRDNs"}], "name": "Name."}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "oidCommonName"}, {"value": 24, "name": "oidCountry"}, {"value": 322, "name": "oidInAttributeTypeAndValue"}, {"value": 24, "name": "oidLocality"}, {"value": 24, "name": "oidOrganization"}, {"value": 24, "name": "oidOrganizationalUnit"}, {"value": 24, "name": "oidPostalCode"}, {"value": 24, "name": "oidProvince"}, {"value": 24, "name": "oidSerialNumber"}, {"value": 24, "name": "oidStreetAddress"}, {"value": 32, "name": "statictmp_72"}, {"value": 32, "name": "statictmp_73"}, {"value": 32, "name": "statictmp_74"}, {"value": 32, "name": "statictmp_75"}, {"value": 32, "name": "statictmp_76"}, {"value": 32, "name": "statictmp_77"}, {"value": 32, "name": "statictmp_78"}, {"value": 32, "name": "statictmp_79"}, {"value": 32, "name": "statictmp_80"}], "name": "x509/pkix."}], "name": "crypto/"}, {"children": [{"value": 8, "name": "0"}, {"value": 8, "name": "1"}, {"value": 8, "name": "2"}, {"value": 8, "name": "3"}, {"value": 8, "name": "4"}, {"value": 8, "name": "5"}, {"value": 4, "name": "6"}, {"value": 8, "name": "7"}], "name": "ctl_stats."}, {"children": [{"children": [{"value": 16, "name": "ErrNoRows"}, {"value": 16, "name": "ErrTxDone"}, {"value": 545, "name": "Register"}, {"value": 8, "name": "drivers"}, {"value": 24, "name": "driversMu"}, {"value": 16, "name": "errDBClosed"}, {"value": 16, "name": "errLevelNotSupported"}, {"value": 16, "name": "errNilPtr"}, {"value": 787, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "valuerReflectType"}], "name": "sql."}, {"children": [{"children": [{"value": 262, "name": "LastInsertId"}, {"value": 180, "name": "RowsAffected"}], "name": "(*RowsAffected)."}, {"value": 16, "name": "ErrBadConn"}, {"value": 16, "name": "ErrSkip"}, {"value": 186, "name": "IsValue"}, {"children": [{"value": 161, "name": "LastInsertId"}, {"value": 29, "name": "RowsAffected"}], "name": "RowsAffected."}, {"value": 392, "name": "callValuerValue"}, {"children": [{"value": 2723, "name": "ConvertValue"}], "name": "defaultConverter."}, {"value": 398, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "valuerReflectType"}, {"value": 48, "name": "go.itab.RowsAffected,database/sql/driver.Result"}], "name": "sql/driver."}], "name": "database/"}, {"children": [{"children": [{"children": [{"value": 264, "name": "At"}, {"value": 223, "name": "RightAlign"}], "name": "(*BitString)."}, {"children": [{"value": 223, "name": "Equal"}, {"value": 204, "name": "String"}], "name": "(*ObjectIdentifier)."}, {"children": [{"value": 225, "name": "Error"}], "name": "(*StructuralError)."}, {"children": [{"value": 225, "name": "Error"}], "name": "(*SyntaxError)."}, {"children": [{"value": 223, "name": "Encode"}, {"value": 166, "name": "Len"}], "name": "(*bitStringEncoder)."}, {"children": [{"value": 181, "name": "Encode"}, {"value": 163, "name": "Len"}], "name": "(*byteEncoder)."}, {"children": [{"value": 214, "name": "Encode"}, {"value": 163, "name": "Len"}], "name": "(*bytesEncoder)."}, {"children": [{"value": 196, "name": "Encode"}, {"value": 176, "name": "Len"}], "name": "(*int64Encoder)."}, {"children": [{"value": 214, "name": "Encode"}, {"value": 194, "name": "Len"}], "name": "(*multiEncoder)."}, {"children": [{"value": 214, "name": "Encode"}, {"value": 194, "name": "Len"}], "name": "(*oidEncoder)."}, {"children": [{"value": 205, "name": "Encode"}, {"value": 163, "name": "Len"}], "name": "(*stringEncoder)."}, {"children": [{"value": 223, "name": "Encode"}, {"value": 120, "name": "Len"}], "name": "(*taggedEncoder)."}, {"children": [{"value": 149, "name": "At"}, {"value": 364, "name": "RightAlign"}], "name": "BitString."}, {"value": 452, "name": "Marshal"}, {"children": [{"value": 119, "name": "Equal"}, {"value": 301, "name": "String"}], "name": "ObjectIdentifier."}, {"children": [{"value": 120, "name": "Error"}], "name": "StructuralError."}, {"children": [{"value": 120, "name": "Error"}], "name": "SyntaxError."}, {"value": 199, "name": "Unmarshal"}, {"value": 557, "name": "UnmarshalWithParams"}, {"value": 307, "name": "appendBase128Int"}, {"value": 355, "name": "appendFourDigits"}, {"value": 421, "name": "appendGeneralizedTime"}, {"value": 283, "name": "appendLength"}, {"value": 687, "name": "appendTagAndLength"}, {"value": 2514, "name": "appendTimeCommon"}, {"value": 840, "name": "appendUTCTime"}, {"value": 45, "name": "base128IntLength"}, {"value": 16, "name": "bigIntType"}, {"value": 8, "name": "bigOne"}, {"children": [{"value": 309, "name": "Encode"}, {"value": 14, "name": "Len"}], "name": "bitStringEncoder."}, {"value": 16, "name": "bitStringType"}, {"value": 16, "name": "byte00Encoder"}, {"children": [{"value": 50, "name": "Encode"}, {"value": 10, "name": "Len"}], "name": "byteEncoder."}, {"value": 16, "name": "byteFFEncoder"}, {"children": [{"value": 210, "name": "Encode"}, {"value": 11, "name": "Len"}], "name": "bytesEncoder."}, {"value": 16, "name": "enumeratedType"}, {"value": 16, "name": "flagType"}, {"value": 1080, "name": "getUniversalType"}, {"value": 1316, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 160, "name": "Encode"}, {"value": 56, "name": "Len"}], "name": "int64Encoder."}, {"value": 41, "name": "lengthLength"}, {"value": 1761, "name": "makeBigInt"}, {"value": 6690, "name": "makeBody"}, {"value": 5571, "name": "makeField"}, {"value": 329, "name": "makeGeneralizedTime"}, {"value": 274, "name": "makeIA5String"}, {"value": 438, "name": "makePrintableString"}, {"value": 329, "name": "makeUTCTime"}, {"children": [{"value": 244, "name": "Encode"}, {"value": 138, "name": "Len"}], "name": "multiEncoder."}, {"value": 16, "name": "objectIdentifierType"}, {"children": [{"value": 254, "name": "Encode"}, {"value": 187, "name": "Len"}], "name": "oidEncoder."}, {"value": 100, "name": "outsideUTCRange"}, {"value": 456, "name": "parseBase128Int"}, {"value": 700, "name": "parseBigInt"}, {"value": 14302, "name": "parseField"}, {"value": 1761, "name": "parseFieldParameters"}, {"value": 761, "name": "parseGeneralizedTime"}, {"value": 283, "name": "parseIA5String"}, {"value": 588, "name": "parseInt32"}, {"value": 555, "name": "parseInt64"}, {"value": 883, "name": "parseObjectIdentifier"}, {"value": 453, "name": "parsePrintableString"}, {"value": 1548, "name": "parseSequenceOf"}, {"value": 2119, "name": "parseTagAndLength"}, {"value": 1051, "name": "parseUTCTime"}, {"value": 304, "name": "parseUTF8String"}, {"value": 16, "name": "rawContentsType"}, {"value": 16, "name": "rawValueType"}, {"value": 168, "name": "setDefaultValue"}, {"value": 72, "name": "statictmp_290"}, {"value": 48, "name": "statictmp_813"}, {"value": 1, "name": "statictmp_814"}, {"value": 1, "name": "statictmp_815"}, {"children": [{"value": 210, "name": "Encode"}, {"value": 11, "name": "Len"}], "name": "stringEncoder."}, {"value": 235, "name": "stripTagAndLength"}, {"value": 16, "name": "timeType"}, {"value": 48, "name": "go.itab.*taggedEncoder,encoding/asn1.encoder"}, {"value": 40, "name": "go.itab.StructuralError,error"}, {"value": 40, "name": "go.itab.SyntaxError,error"}, {"value": 48, "name": "go.itab.bitStringEncoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.byteEncoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.bytesEncoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.int64Encoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.multiEncoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.oidEncoder,encoding/asn1.encoder"}, {"value": 48, "name": "go.itab.stringEncoder,encoding/asn1.encoder"}], "name": "asn1."}, {"children": [{"children": [{"value": 186, "name": "Error"}], "name": "(*CorruptInputError)."}, {"children": [{"value": 178, "name": "Decode"}, {"value": 427, "name": "DecodeString"}, {"value": 85, "name": "DecodedLen"}, {"value": 653, "name": "Encode"}, {"value": 334, "name": "EncodeToString"}, {"value": 94, "name": "EncodedLen"}, {"value": 225, "name": "Strict"}, {"value": 228, "name": "WithPadding"}, {"value": 1737, "name": "decode"}], "name": "(*Encoding)."}, {"children": [{"value": 413, "name": "Close"}, {"value": 1214, "name": "Write"}], "name": "(*encoder)."}, {"children": [{"value": 146, "name": "Error"}], "name": "CorruptInputError."}, {"children": [{"value": 118, "name": "Strict"}, {"value": 124, "name": "WithPadding"}], "name": "Encoding."}, {"value": 278, "name": "NewEncoding"}, {"value": 8, "name": "RawStdEncoding"}, {"value": 8, "name": "RawURLEncoding"}, {"value": 8, "name": "StdEncoding"}, {"value": 8, "name": "URLEncoding"}, {"value": 520, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "go.itab.*encoder,io.WriteCloser"}, {"value": 40, "name": "go.itab.CorruptInputError,error"}], "name": "base64."}, {"children": [{"children": [{"value": 175, "name": "GoString"}, {"value": 193, "name": "PutUint16"}, {"value": 185, "name": "PutUint32"}, {"value": 188, "name": "PutUint64"}, {"value": 175, "name": "String"}, {"value": 194, "name": "Uint16"}, {"value": 185, "name": "Uint32"}, {"value": 188, "name": "Uint64"}], "name": "(*bigEndian)."}, {"children": [{"value": 70, "name": "int16"}, {"value": 68, "name": "int32"}, {"value": 70, "name": "int64"}, {"value": 186, "name": "skip"}, {"value": 238, "name": "uint16"}, {"value": 234, "name": "uint32"}, {"value": 238, "name": "uint64"}, {"value": 2632, "name": "value"}], "name": "(*decoder)."}, {"children": [{"value": 70, "name": "int16"}, {"value": 68, "name": "int32"}, {"value": 70, "name": "int64"}, {"value": 245, "name": "skip"}, {"value": 228, "name": "uint16"}, {"value": 226, "name": "uint32"}, {"value": 228, "name": "uint64"}, {"value": 2993, "name": "value"}], "name": "(*encoder)."}, {"children": [{"value": 175, "name": "GoString"}, {"value": 191, "name": "PutUint16"}, {"value": 205, "name": "PutUint32"}, {"value": 185, "name": "PutUint64"}, {"value": 175, "name": "String"}, {"value": 185, "name": "Uint16"}, {"value": 183, "name": "Uint32"}, {"value": 185, "name": "Uint64"}], "name": "(*littleEndian)."}, {"value": 111, "name": "PutUvarint"}, {"value": 114, "name": "PutVarint"}, {"value": 4419, "name": "Read"}, {"value": 311, "name": "ReadUvarint"}, {"value": 167, "name": "Uvarint"}, {"value": 118, "name": "Varint"}, {"value": 5086, "name": "Write"}, {"children": [{"value": 22, "name": "GoString"}, {"value": 60, "name": "PutUint16"}, {"value": 52, "name": "PutUint32"}, {"value": 55, "name": "PutUint64"}, {"value": 22, "name": "String"}, {"value": 61, "name": "Uint16"}, {"value": 52, "name": "Uint32"}, {"value": 55, "name": "Uint64"}], "name": "bigEndian."}, {"value": 308, "name": "dataSize"}, {"value": 194, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1139, "name": "intDataSize"}, {"children": [{"value": 22, "name": "GoString"}, {"value": 58, "name": "PutUint16"}, {"value": 72, "name": "PutUint32"}, {"value": 52, "name": "PutUint64"}, {"value": 22, "name": "String"}, {"value": 52, "name": "Uint16"}, {"value": 50, "name": "Uint32"}, {"value": 52, "name": "Uint64"}], "name": "littleEndian."}, {"value": 16, "name": "overflow"}, {"value": 670, "name": "sizeof"}, {"value": 88, "name": "go.itab.bigEndian,encoding/binary.ByteOrder"}, {"value": 88, "name": "go.itab.littleEndian,encoding/binary.ByteOrder"}], "name": "binary."}, {"children": [{"children": [{"value": 318, "name": "Error"}], "name": "(*ParseError)."}, {"children": [{"value": 466, "name": "Read"}, {"value": 608, "name": "ReadAll"}, {"value": 2066, "name": "parseField"}, {"value": 1793, "name": "parseRecord"}, {"value": 241, "name": "readRune"}, {"value": 127, "name": "skip"}], "name": "(*Reader)."}, {"children": [{"value": 111, "name": "Error"}, {"value": 64, "name": "Flush"}, {"value": 1059, "name": "Write"}, {"value": 213, "name": "WriteAll"}, {"value": 276, "name": "fieldNeedsQuotes"}], "name": "(*Writer)."}, {"value": 16, "name": "ErrBareQuote"}, {"value": 16, "name": "ErrFieldCount"}, {"value": 16, "name": "ErrQuote"}, {"value": 16, "name": "ErrTrailingComma"}, {"value": 469, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.*ParseError,error"}], "name": "csv."}, {"children": [{"children": [{"value": 13, "name": "id"}, {"value": 23, "name": "name"}, {"value": 23, "name": "safeString"}, {"value": 13, "name": "setId"}, {"value": 23, "name": "string"}], "name": "(*CommonType)."}, {"children": [{"value": 491, "name": "Decode"}, {"value": 561, "name": "DecodeValue"}, {"value": 1894, "name": "compatibleType"}, {"value": 2923, "name": "compileDec"}, {"value": 866, "name": "compileIgnoreSingle"}, {"value": 1852, "name": "compileSingle"}, {"value": 2232, "name": "decIgnoreOpFor"}, {"children": [{"value": 68, "name": "func1"}, {"value": 96, "name": "func2"}, {"value": 92, "name": "func3"}, {"value": 80, "name": "func4"}, {"value": 75, "name": "func5"}, {"value": 68, "name": "func6"}], "name": "decIgnoreOpFor."}, {"value": 4719, "name": "decOpFor"}, {"children": [{"value": 290, "name": "func1"}, {"value": 171, "name": "func2"}, {"value": 140, "name": "func3"}, {"value": 110, "name": "func4"}, {"value": 116, "name": "func5"}], "name": "decOpFor."}, {"value": 274, "name": "decodeArray"}, {"value": 962, "name": "decodeArrayHelper"}, {"value": 996, "name": "decodeGobDecoder"}, {"value": 285, "name": "decodeIgnoredValue"}, {"value": 1854, "name": "decodeInterface"}, {"value": 906, "name": "decodeMap"}, {"value": 510, "name": "decodeSingle"}, {"value": 991, "name": "decodeSlice"}, {"value": 888, "name": "decodeStruct"}, {"value": 392, "name": "decodeTypeSequence"}, {"value": 1071, "name": "decodeValue"}, {"value": 143, "name": "freeDecoderState"}, {"value": 763, "name": "getDecEnginePtr"}, {"value": 660, "name": "getIgnoreEnginePtr"}, {"value": 415, "name": "gobDecodeOpFor"}, {"children": [{"value": 235, "name": "func1"}], "name": "gobDecodeOpFor."}, {"value": 180, "name": "ignoreArray"}, {"value": 665, "name": "ignoreArrayHelper"}, {"value": 401, "name": "ignoreGobDecoder"}, {"value": 579, "name": "ignoreInterface"}, {"value": 929, "name": "ignoreMap"}, {"value": 511, "name": "ignoreSingle"}, {"value": 104, "name": "ignoreSlice"}, {"value": 663, "name": "ignoreStruct"}, {"value": 206, "name": "nextInt"}, {"value": 188, "name": "nextUint"}, {"value": 612, "name": "readMessage"}, {"value": 306, "name": "recvMessage"}, {"value": 474, "name": "recvType"}, {"value": 221, "name": "typeString"}], "name": "(*Decoder)."}, {"children": [{"value": 137, "name": "Encode"}, {"value": 2157, "name": "EncodeValue"}, {"value": 498, "name": "encode"}, {"value": 933, "name": "encodeArray"}, {"value": 1312, "name": "encodeGobEncoder"}, {"value": 2942, "name": "encodeInterface"}, {"value": 930, "name": "encodeMap"}, {"value": 718, "name": "encodeSingle"}, {"value": 1082, "name": "encodeStruct"}, {"value": 143, "name": "freeEncoderState"}, {"value": 1548, "name": "sendActualType"}, {"value": 487, "name": "sendType"}, {"value": 481, "name": "sendTypeDescriptor"}, {"value": 119, "name": "sendTypeId"}, {"value": 1190, "name": "writeMessage"}], "name": "(*Encoder)."}, {"children": [{"value": 25, "name": "id"}, {"value": 113, "name": "init"}, {"value": 35, "name": "name"}, {"value": 523, "name": "safeString"}, {"value": 17, "name": "setId"}, {"value": 136, "name": "string"}], "name": "(*arrayType)."}, {"children": [{"value": 92, "name": "Bytes"}, {"value": 159, "name": "Drop"}, {"value": 22, "name": "Len"}, {"value": 265, "name": "Read"}, {"value": 122, "name": "ReadByte"}, {"value": 22, "name": "Reset"}, {"value": 189, "name": "Size"}], "name": "(*decBuffer)."}, {"children": [{"value": 102, "name": "decodeInt"}, {"value": 677, "name": "decodeUint"}, {"value": 142, "name": "getLength"}], "name": "(*decoderState)."}, {"children": [{"value": 32, "name": "Bytes"}, {"value": 15, "name": "Len"}, {"value": 125, "name": "Reset"}, {"value": 320, "name": "Write"}, {"value": 212, "name": "WriteByte"}, {"value": 275, "name": "WriteString"}], "name": "(*encBuffer)."}, {"children": [{"value": 90, "name": "encodeInt"}, {"value": 614, "name": "encodeUint"}, {"value": 106, "name": "update"}], "name": "(*encoderState)."}, {"children": [{"value": 25, "name": "id"}, {"value": 35, "name": "name"}, {"value": 23, "name": "safeString"}, {"value": 17, "name": "setId"}, {"value": 23, "name": "string"}], "name": "(*gobEncoderType)."}, {"children": [{"value": 25, "name": "id"}, {"value": 139, "name": "init"}, {"value": 35, "name": "name"}, {"value": 707, "name": "safeString"}, {"value": 17, "name": "setId"}, {"value": 136, "name": "string"}], "name": "(*mapType)."}, {"children": [{"value": 25, "name": "id"}, {"value": 165, "name": "init"}, {"value": 35, "name": "name"}, {"value": 434, "name": "safeString"}, {"value": 17, "name": "setId"}, {"value": 136, "name": "string"}], "name": "(*sliceType)."}, {"children": [{"value": 25, "name": "id"}, {"value": 35, "name": "name"}, {"value": 907, "name": "safeString"}, {"value": 17, "name": "setId"}, {"value": 136, "name": "string"}], "name": "(*structType)."}, {"children": [{"value": 184, "name": "name"}, {"value": 184, "name": "string"}], "name": "(*typeId)."}, {"children": [{"value": 258, "name": "string"}], "name": "(*wireType)."}, {"value": 725, "name": "NewEncoder"}, {"value": 712, "name": "Register"}, {"value": 1697, "name": "RegisterName"}, {"value": 137, "name": "allocValue"}, {"value": 16, "name": "binaryMarshalerInterfaceType"}, {"value": 16, "name": "binaryUnmarshalerInterfaceType"}, {"value": 765, "name": "bootstrapType"}, {"value": 699, "name": "buildEncEngine"}, {"value": 2843, "name": "buildTypeInfo"}, {"value": 8, "name": "builtinIdToType"}, {"value": 173, "name": "catchError"}, {"value": 664, "name": "checkId"}, {"value": 2043, "name": "compileEnc"}, {"value": 8, "name": "concreteTypeToName"}, {"value": 344, "name": "decAlloc"}, {"value": 8, "name": "decArrayHelper"}, {"value": 109, "name": "decBool"}, {"value": 259, "name": "decBoolArray"}, {"value": 462, "name": "decBoolSlice"}, {"value": 179, "name": "decComplex128"}, {"value": 259, "name": "decComplex128Array"}, {"value": 544, "name": "decComplex128Slice"}, {"value": 225, "name": "decComplex64"}, {"value": 259, "name": "decComplex64Array"}, {"value": 607, "name": "decComplex64Slice"}, {"value": 146, "name": "decFloat32"}, {"value": 259, "name": "decFloat32Array"}, {"value": 515, "name": "decFloat32Slice"}, {"value": 120, "name": "decFloat64"}, {"value": 259, "name": "decFloat64Array"}, {"value": 470, "name": "decFloat64Slice"}, {"value": 8, "name": "decIgnoreOpMap"}, {"value": 166, "name": "decInt16"}, {"value": 259, "name": "decInt16Array"}, {"value": 525, "name": "decInt16Slice"}, {"value": 168, "name": "decInt32"}, {"value": 259, "name": "decInt32Array"}, {"value": 531, "name": "decInt32Slice"}, {"value": 104, "name": "decInt64"}, {"value": 259, "name": "decInt64Array"}, {"value": 460, "name": "decInt64Slice"}, {"value": 166, "name": "decInt8"}, {"value": 259, "name": "decInt8Array"}, {"value": 524, "name": "decInt8Slice"}, {"value": 259, "name": "decIntArray"}, {"value": 530, "name": "decIntSlice"}, {"value": 200, "name": "decOpTable"}, {"value": 8, "name": "decSliceHelper"}, {"value": 842, "name": "decString"}, {"value": 259, "name": "decStringArray"}, {"value": 1399, "name": "decStringSlice"}, {"value": 158, "name": "decUint16"}, {"value": 259, "name": "decUint16Array"}, {"value": 517, "name": "decUint16Slice"}, {"value": 160, "name": "decUint32"}, {"value": 259, "name": "decUint32Array"}, {"value": 519, "name": "decUint32Slice"}, {"value": 104, "name": "decUint64"}, {"value": 259, "name": "decUint64Array"}, {"value": 460, "name": "decUint64Slice"}, {"value": 158, "name": "decUint8"}, {"value": 1040, "name": "decUint8Slice"}, {"value": 259, "name": "decUintArray"}, {"value": 460, "name": "decUintSlice"}, {"value": 259, "name": "decUintptrArray"}, {"value": 515, "name": "decUintptrSlice"}, {"value": 455, "name": "decodeIntoValue"}, {"value": 718, "name": "decodeUintReader"}, {"value": 16, "name": "emptyStructType"}, {"value": 8, "name": "encArrayHelper"}, {"value": 196, "name": "encBool"}, {"value": 220, "name": "encBoolArray"}, {"value": 300, "name": "encBoolSlice"}, {"value": 24, "name": "encBufferPool"}, {"value": 283, "name": "encComplex"}, {"value": 220, "name": "encComplex128Array"}, {"value": 413, "name": "encComplex128Slice"}, {"value": 220, "name": "encComplex64Array"}, {"value": 422, "name": "encComplex64Slice"}, {"value": 187, "name": "encFloat"}, {"value": 220, "name": "encFloat32Array"}, {"value": 307, "name": "encFloat32Slice"}, {"value": 220, "name": "encFloat64Array"}, {"value": 304, "name": "encFloat64Slice"}, {"value": 215, "name": "encIndirect"}, {"value": 165, "name": "encInt"}, {"value": 220, "name": "encInt16Array"}, {"value": 274, "name": "encInt16Slice"}, {"value": 220, "name": "encInt32Array"}, {"value": 271, "name": "encInt32Slice"}, {"value": 220, "name": "encInt64Array"}, {"value": 270, "name": "encInt64Slice"}, {"value": 220, "name": "encInt8Array"}, {"value": 272, "name": "encInt8Slice"}, {"value": 220, "name": "encIntArray"}, {"value": 270, "name": "encIntSlice"}, {"value": 2612, "name": "encOpFor"}, {"children": [{"value": 356, "name": "func1"}, {"value": 255, "name": "func2"}, {"value": 338, "name": "func3"}, {"value": 217, "name": "func4"}, {"value": 209, "name": "func5"}], "name": "encOpFor."}, {"value": 200, "name": "encOpTable"}, {"value": 8, "name": "encSliceHelper"}, {"value": 437, "name": "encString"}, {"value": 220, "name": "encStringArray"}, {"value": 604, "name": "encStringSlice"}, {"value": 69, "name": "encStructTerminator"}, {"value": 165, "name": "encUint"}, {"value": 220, "name": "encUint16Array"}, {"value": 273, "name": "encUint16Slice"}, {"value": 220, "name": "encUint32Array"}, {"value": 270, "name": "encUint32Slice"}, {"value": 220, "name": "encUint64Array"}, {"value": 270, "name": "encUint64Slice"}, {"value": 437, "name": "encUint8Array"}, {"value": 220, "name": "encUintArray"}, {"value": 270, "name": "encUintSlice"}, {"value": 220, "name": "encUintptrArray"}, {"value": 270, "name": "encUintptrSlice"}, {"value": 272, "name": "encodeReflectValue"}, {"value": 16, "name": "errBadCount"}, {"value": 16, "name": "errBadType"}, {"value": 16, "name": "errBadUint"}, {"value": 16, "name": "errRange"}, {"value": 126, "name": "error_"}, {"value": 192, "name": "errorf"}, {"value": 171, "name": "float32FromBits"}, {"value": 77, "name": "float64FromBits"}, {"value": 77, "name": "floatBits"}, {"value": 178, "name": "getBaseType"}, {"value": 207, "name": "getEncEngine"}, {"value": 519, "name": "getType"}, {"value": 213, "name": "getTypeInfo"}, {"children": [{"value": 146, "name": "func1"}], "name": "glob."}, {"value": 16, "name": "gobDecoderInterfaceType"}, {"value": 446, "name": "gobEncodeOpFor"}, {"children": [{"value": 447, "name": "func1"}], "name": "gobEncodeOpFor."}, {"value": 16, "name": "gobEncoderInterfaceType"}, {"value": 8, "name": "idToType"}, {"value": 74, "name": "ignoreTwoUints"}, {"value": 60, "name": "ignoreUint"}, {"value": 401, "name": "ignoreUint8Array"}, {"value": 437, "name": "implementsInterface"}, {"value": 10745, "name": "init"}, {"children": [{"value": 626, "name": "1"}, {"value": 1865, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 91, "name": "isExported"}, {"value": 276, "name": "isSent"}, {"value": 1187, "name": "isZero"}, {"value": 148, "name": "lookupTypeInfo"}, {"value": 252, "name": "mustGetTypeInfo"}, {"value": 8, "name": "nameToConcreteType"}, {"value": 163, "name": "newGobEncoderType"}, {"value": 229, "name": "newStructType"}, {"value": 5311, "name": "newTypeObject"}, {"children": [{"value": 119, "name": "func1"}], "name": "newTypeObject."}, {"value": 4, "name": "nextId"}, {"value": 24, "name": "noValue"}, {"value": 2693, "name": "registerBasics"}, {"value": 24, "name": "registerLock"}, {"value": 230, "name": "setTypeId"}, {"value": 24, "name": "spaceForLength"}, {"value": 24, "name": "statictmp_1209"}, {"value": 96, "name": "statictmp_1749"}, {"value": 24, "name": "statictmp_900"}, {"value": 4, "name": "tBool"}, {"value": 4, "name": "tBytes"}, {"value": 4, "name": "tComplex"}, {"value": 4, "name": "tFloat"}, {"value": 4, "name": "tInt"}, {"value": 4, "name": "tInterface"}, {"value": 4, "name": "tReserved1"}, {"value": 4, "name": "tReserved2"}, {"value": 4, "name": "tReserved3"}, {"value": 4, "name": "tReserved4"}, {"value": 4, "name": "tReserved5"}, {"value": 4, "name": "tReserved6"}, {"value": 4, "name": "tReserved7"}, {"value": 4, "name": "tString"}, {"value": 4, "name": "tUint"}, {"value": 4, "name": "tWireType"}, {"value": 16, "name": "textMarshalerInterfaceType"}, {"value": 16, "name": "textUnmarshalerInterfaceType"}, {"children": [{"value": 236, "name": "name"}, {"value": 236, "name": "string"}], "name": "typeId."}, {"value": 16, "name": "typeInfoMap"}, {"value": 8, "name": "typeLock"}, {"value": 8, "name": "types"}, {"value": 121, "name": "userType"}, {"value": 8, "name": "userTypeCache"}, {"value": 24, "name": "userTypeLock"}, {"value": 147, "name": "valid"}, {"value": 1778, "name": "validUserType"}, {"value": 8, "name": "wireTypeUserInfo"}, {"value": 72, "name": "go.itab.*CommonType,encoding/gob.gobType"}, {"value": 72, "name": "go.itab.*arrayType,encoding/gob.gobType"}, {"value": 40, "name": "go.itab.*decBuffer,io.Reader"}, {"value": 40, "name": "go.itab.*encBuffer,io.Writer"}, {"value": 72, "name": "go.itab.*gobEncoderType,encoding/gob.gobType"}, {"value": 72, "name": "go.itab.*mapType,encoding/gob.gobType"}, {"value": 72, "name": "go.itab.*sliceType,encoding/gob.gobType"}, {"value": 72, "name": "go.itab.*structType,encoding/gob.gobType"}], "name": "gob."}, {"children": [{"children": [{"value": 185, "name": "Error"}], "name": "(*InvalidByteError)."}, {"value": 594, "name": "Decode"}, {"value": 146, "name": "Encode"}, {"value": 232, "name": "EncodeToString"}, {"value": 16, "name": "ErrLength"}, {"children": [{"value": 202, "name": "Error"}], "name": "InvalidByteError."}, {"value": 16, "name": "hextable"}, {"value": 194, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.InvalidByteError,error"}], "name": "hex."}, {"children": [{"children": [{"value": 257, "name": "Buffered"}, {"value": 907, "name": "Decode"}, {"value": 98, "name": "More"}, {"value": 3028, "name": "Token"}, {"value": 13, "name": "UseNumber"}, {"value": 255, "name": "peek"}, {"value": 1217, "name": "readValue"}, {"value": 559, "name": "refill"}, {"value": 546, "name": "tokenError"}, {"value": 520, "name": "tokenPrepareForDecode"}], "name": "(*Decoder)."}, {"children": [{"value": 195, "name": "String"}], "name": "(*Delim)."}, {"children": [{"value": 907, "name": "Encode"}, {"value": 14, "name": "SetEscapeHTML"}, {"value": 169, "name": "SetIndent"}], "name": "(*Encoder)."}, {"children": [{"value": 383, "name": "Error"}], "name": "(*InvalidUnmarshalError)."}, {"children": [{"value": 242, "name": "Error"}], "name": "(*MarshalerError)."}, {"children": [{"value": 207, "name": "Float64"}, {"value": 205, "name": "Int64"}, {"value": 171, "name": "String"}], "name": "(*Number)."}, {"children": [{"value": 254, "name": "MarshalJSON"}, {"value": 400, "name": "UnmarshalJSON"}], "name": "(*RawMessage)."}, {"children": [{"value": 23, "name": "Error"}], "name": "(*SyntaxError)."}, {"children": [{"value": 489, "name": "Error"}], "name": "(*UnmarshalTypeError)."}, {"children": [{"value": 148, "name": "Error"}], "name": "(*UnsupportedTypeError)."}, {"children": [{"value": 123, "name": "Error"}], "name": "(*UnsupportedValueError)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 346, "name": "encode"}], "name": "(*arrayEncoder)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 486, "name": "Swap"}], "name": "(*byIndex)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 199, "name": "encode"}], "name": "(*condAddrEncoder)."}, {"children": [{"value": 345, "name": "addErrorContext"}, {"value": 3107, "name": "array"}, {"value": 590, "name": "arrayInterface"}, {"value": 733, "name": "convertNumber"}, {"value": 105, "name": "error"}, {"value": 1549, "name": "indirect"}, {"value": 250, "name": "literal"}, {"value": 840, "name": "literalInterface"}, {"value": 10273, "name": "literalStore"}, {"value": 413, "name": "next"}, {"value": 7374, "name": "object"}, {"value": 824, "name": "objectInterface"}, {"value": 163, "name": "saveError"}, {"value": 173, "name": "scanWhile"}, {"value": 671, "name": "unmarshal"}, {"children": [{"value": 246, "name": "func1"}], "name": "unmarshal."}, {"value": 829, "name": "value"}, {"value": 398, "name": "valueInterface"}, {"value": 378, "name": "valueQuoted"}], "name": "(*decodeState)."}, {"children": [{"value": 44, "name": "Bytes"}, {"value": 26, "name": "Cap"}, {"value": 17, "name": "Grow"}, {"value": 26, "name": "Len"}, {"value": 44, "name": "Next"}, {"value": 44, "name": "Read"}, {"value": 40, "name": "ReadByte"}, {"value": 62, "name": "ReadBytes"}, {"value": 44, "name": "ReadFrom"}, {"value": 52, "name": "ReadRune"}, {"value": 53, "name": "ReadString"}, {"value": 17, "name": "Reset"}, {"value": 35, "name": "String"}, {"value": 17, "name": "Truncate"}, {"value": 35, "name": "UnreadByte"}, {"value": 35, "name": "UnreadRune"}, {"value": 44, "name": "Write"}, {"value": 35, "name": "WriteByte"}, {"value": 44, "name": "WriteRune"}, {"value": 44, "name": "WriteString"}, {"value": 44, "name": "WriteTo"}, {"value": 71, "name": "error"}, {"value": 244, "name": "marshal"}, {"children": [{"value": 357, "name": "func1"}], "name": "marshal."}, {"value": 150, "name": "reflectValue"}, {"value": 1373, "name": "string"}, {"value": 1550, "name": "stringBytes"}], "name": "(*encodeState)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 1591, "name": "encode"}, {"children": [{"value": 151, "name": "func1"}], "name": "encode."}], "name": "(*mapEncoder)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 247, "name": "encode"}], "name": "(*ptrEncoder)."}, {"children": [{"value": 790, "name": "resolve"}], "name": "(*reflectWithString)."}, {"children": [{"value": 337, "name": "eof"}, {"value": 410, "name": "error"}, {"value": 242, "name": "undo"}], "name": "(*scanner)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 213, "name": "encode"}], "name": "(*sliceEncoder)."}, {"children": [{"value": 117, "name": "(encoding/json.encode)-fm"}, {"value": 760, "name": "encode"}], "name": "(*structEncoder)."}, {"children": [{"value": 204, "name": "Contains"}], "name": "(*tagOptions)."}, {"children": [{"value": 123, "name": "(encoding/json.encode)-fm"}], "name": "(floatEncoder)."}, {"children": [{"value": 4, "name": "1"}], "name": ".gobytes."}, {"children": [{"value": 91, "name": "String"}], "name": "Delim."}, {"value": 1226, "name": "Indent"}, {"value": 281, "name": "Marshal"}, {"value": 492, "name": "MarshalIndent"}, {"children": [{"value": 111, "name": "Float64"}, {"value": 118, "name": "Int64"}, {"value": 21, "name": "String"}], "name": "Number."}, {"children": [{"value": 198, "name": "MarshalJSON"}], "name": "RawMessage."}, {"value": 498, "name": "Unmarshal"}, {"value": 653, "name": "addrMarshalerEncoder"}, {"value": 690, "name": "addrTextMarshalerEncoder"}, {"value": 176, "name": "asciiEqualFold"}, {"value": 255, "name": "boolEncoder"}, {"children": [{"value": 11, "name": "Len"}, {"value": 209, "name": "Less"}, {"value": 382, "name": "Swap"}], "name": "byIndex."}, {"value": 997, "name": "cachedTypeFields"}, {"value": 394, "name": "checkValid"}, {"value": 1451, "name": "compact"}, {"value": 635, "name": "dominantField"}, {"value": 794, "name": "encodeByteSlice"}, {"value": 24, "name": "encodeStatePool"}, {"value": 32, "name": "encoderCache"}, {"value": 501, "name": "equalFoldRight"}, {"value": 16, "name": "errPhase"}, {"value": 389, "name": "fieldByIndex"}, {"value": 24, "name": "fieldCache"}, {"value": 236, "name": "fillField"}, {"value": 8, "name": "float32Encoder"}, {"value": 8, "name": "float64Encoder"}, {"children": [{"value": 1160, "name": "encode"}], "name": "floatEncoder."}, {"value": 141, "name": "foldFunc"}, {"value": 245, "name": "getu4"}, {"value": 16, "name": "hex"}, {"value": 128, "name": "htmlSafeSet"}, {"value": 914, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 310, "name": "intEncoder"}, {"value": 239, "name": "interfaceEncoder"}, {"value": 83, "name": "invalidValueEncoder"}, {"value": 509, "name": "isEmptyValue"}, {"value": 555, "name": "isValidNumber"}, {"value": 284, "name": "isValidTag"}, {"value": 671, "name": "marshalerEncoder"}, {"value": 16, "name": "marshalerType"}, {"value": 269, "name": "newArrayEncoder"}, {"value": 273, "name": "newCondAddrEncoder"}, {"value": 186, "name": "newEncodeState"}, {"value": 451, "name": "newMapEncoder"}, {"value": 269, "name": "newPtrEncoder"}, {"value": 505, "name": "newSliceEncoder"}, {"value": 822, "name": "newStructEncoder"}, {"value": 1182, "name": "newTypeEncoder"}, {"value": 180, "name": "newline"}, {"value": 878, "name": "nextValue"}, {"value": 89, "name": "nonSpace"}, {"value": 24, "name": "nullLiteral"}, {"value": 16, "name": "numberType"}, {"value": 230, "name": "parseTag"}, {"value": 322, "name": "quoteChar"}, {"value": 128, "name": "safeSet"}, {"value": 129, "name": "simpleLetterEqualFold"}, {"value": 238, "name": "state0"}, {"value": 163, "name": "state1"}, {"value": 260, "name": "stateBeginString"}, {"value": 237, "name": "stateBeginStringOrEmpty"}, {"value": 1250, "name": "stateBeginValue"}, {"value": 194, "name": "stateBeginValueOrEmpty"}, {"value": 184, "name": "stateDot"}, {"value": 192, "name": "stateDot0"}, {"value": 165, "name": "stateE"}, {"value": 106, "name": "stateE0"}, {"value": 184, "name": "stateESign"}, {"value": 117, "name": "stateEndTop"}, {"value": 1094, "name": "stateEndValue"}, {"value": 10, "name": "stateError"}, {"value": 180, "name": "stateF"}, {"value": 180, "name": "stateFa"}, {"value": 180, "name": "stateFal"}, {"value": 180, "name": "stateFals"}, {"value": 276, "name": "stateInString"}, {"value": 327, "name": "stateInStringEsc"}, {"value": 202, "name": "stateInStringEscU"}, {"value": 202, "name": "stateInStringEscU1"}, {"value": 202, "name": "stateInStringEscU12"}, {"value": 202, "name": "stateInStringEscU123"}, {"value": 180, "name": "stateN"}, {"value": 257, "name": "stateNeg"}, {"value": 180, "name": "stateNu"}, {"value": 180, "name": "stateNul"}, {"value": 102, "name": "stateRedo"}, {"value": 180, "name": "stateT"}, {"value": 180, "name": "stateTr"}, {"value": 180, "name": "stateTru"}, {"value": 24, "name": "statictmp_103"}, {"value": 24, "name": "statictmp_104"}, {"value": 128, "name": "statictmp_13"}, {"value": 24, "name": "statictmp_142"}, {"value": 2, "name": "statictmp_531"}, {"value": 24, "name": "statictmp_70"}, {"value": 24, "name": "statictmp_71"}, {"value": 24, "name": "statictmp_798"}, {"value": 104, "name": "statictmp_931"}, {"value": 104, "name": "statictmp_954"}, {"value": 104, "name": "statictmp_955"}, {"value": 962, "name": "stringEncoder"}, {"children": [{"value": 356, "name": "Contains"}], "name": "tagOptions."}, {"value": 636, "name": "textMarshalerEncoder"}, {"value": 16, "name": "textMarshalerType"}, {"value": 16, "name": "textUnmarshalerType"}, {"value": 363, "name": "typeByIndex"}, {"value": 1024, "name": "typeEncoder"}, {"children": [{"value": 141, "name": "func1"}], "name": "typeEncoder."}, {"value": 5415, "name": "typeFields"}, {"children": [{"value": 416, "name": "func1"}], "name": "typeFields."}, {"value": 310, "name": "uintEncoder"}, {"value": 168, "name": "unquote"}, {"value": 2461, "name": "unquoteBytes"}, {"value": 221, "name": "unsupportedTypeEncoder"}, {"value": 144, "name": "valueEncoder"}, {"value": 40, "name": "go.itab.*InvalidUnmarshalError,error"}, {"value": 40, "name": "go.itab.*MarshalerError,error"}, {"value": 40, "name": "go.itab.*SyntaxError,error"}, {"value": 40, "name": "go.itab.*UnmarshalTypeError,error"}, {"value": 40, "name": "go.itab.*UnsupportedTypeError,error"}, {"value": 40, "name": "go.itab.*UnsupportedValueError,error"}, {"value": 40, "name": "go.itab.*encodeState,io.Writer"}, {"value": 56, "name": "go.itab.byIndex,sort.Interface"}], "name": "json."}, {"children": [{"children": [{"value": 248, "name": "Close"}, {"value": 697, "name": "Write"}], "name": "(*lineBreaker)."}, {"children": [{"value": 12, "name": "1"}, {"value": 10, "name": "2"}, {"value": 5, "name": "3"}], "name": ".gobytes."}, {"value": 3685, "name": "Decode"}, {"value": 2641, "name": "Encode"}, {"value": 158, "name": "decodeError"}, {"value": 399, "name": "getLine"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "nl"}, {"value": 24, "name": "pemEnd"}, {"value": 24, "name": "pemEndOfLine"}, {"value": 24, "name": "pemStart"}, {"value": 206, "name": "removeWhitespace"}, {"value": 1, "name": "statictmp_134"}, {"value": 1, "name": "statictmp_65"}, {"value": 1, "name": "statictmp_8"}, {"value": 282, "name": "writeHeader"}, {"value": 40, "name": "go.itab.*lineBreaker,io.Writer"}], "name": "pem."}, {"children": [{"children": [{"value": 303, "name": "Copy"}], "name": "(*CharData)."}, {"children": [{"value": 303, "name": "Copy"}], "name": "(*Comment)."}, {"children": [{"value": 109, "name": "Decode"}, {"value": 307, "name": "DecodeElement"}, {"value": 18, "name": "InputOffset"}, {"value": 171, "name": "RawToken"}, {"value": 403, "name": "Skip"}, {"value": 5993, "name": "Token"}, {"value": 744, "name": "attrval"}, {"value": 658, "name": "autoClose"}, {"value": 346, "name": "getc"}, {"value": 361, "name": "mustgetc"}, {"value": 619, "name": "name"}, {"value": 295, "name": "nsname"}, {"value": 2245, "name": "popElement"}, {"value": 316, "name": "pushEOF"}, {"value": 11324, "name": "rawToken"}, {"value": 557, "name": "readName"}, {"value": 169, "name": "space"}, {"value": 4919, "name": "text"}, {"value": 12474, "name": "unmarshal"}, {"value": 3241, "name": "unmarshalAttr"}, {"value": 1022, "name": "unmarshalInterface"}, {"value": 1894, "name": "unmarshalPath"}, {"value": 968, "name": "unmarshalTextInterface"}], "name": "(*Decoder)."}, {"children": [{"value": 303, "name": "Copy"}], "name": "(*Directive)."}, {"children": [{"value": 213, "name": "Encode"}, {"value": 226, "name": "EncodeElement"}, {"value": 2644, "name": "EncodeToken"}, {"value": 83, "name": "Flush"}, {"value": 169, "name": "Indent"}], "name": "(*Encoder)."}, {"children": [{"value": 588, "name": "Copy"}], "name": "(*ProcInst)."}, {"children": [{"value": 575, "name": "Copy"}, {"value": 242, "name": "End"}], "name": "(*StartElement)."}, {"children": [{"value": 188, "name": "Error"}], "name": "(*SyntaxError)."}, {"children": [{"value": 424, "name": "Error"}], "name": "(*TagPathError)."}, {"children": [{"value": 171, "name": "Error"}], "name": "(*UnmarshalError)."}, {"children": [{"value": 148, "name": "Error"}], "name": "(*UnsupportedTypeError)."}, {"children": [{"value": 697, "name": "value"}], "name": "(*fieldInfo)."}, {"children": [{"value": 645, "name": "push"}, {"value": 413, "name": "trim"}], "name": "(*parentStack)."}, {"children": [{"value": 27, "name": "Available"}, {"value": 27, "name": "Buffered"}, {"value": 830, "name": "EscapeString"}, {"value": 36, "name": "Flush"}, {"value": 45, "name": "ReadFrom"}, {"value": 18, "name": "Reset"}, {"value": 45, "name": "Write"}, {"value": 36, "name": "WriteByte"}, {"value": 45, "name": "WriteRune"}, {"value": 45, "name": "WriteString"}, {"value": 110, "name": "cachedWriteError"}, {"value": 2252, "name": "createAttrPrefix"}, {"value": 5212, "name": "marshalAttr"}, {"value": 988, "name": "marshalInterface"}, {"value": 2025, "name": "marshalSimple"}, {"value": 5665, "name": "marshalStruct"}, {"value": 319, "name": "marshalTextInterface"}, {"value": 5674, "name": "marshalValue"}, {"value": 314, "name": "popPrefix"}, {"value": 1515, "name": "writeEnd"}, {"value": 352, "name": "writeIndent"}, {"value": 1614, "name": "writeStart"}], "name": "(*printer)."}, {"children": [{"value": 4, "name": "1"}, {"value": 5, "name": "10"}, {"value": 5, "name": "11"}, {"value": 5, "name": "12"}, {"value": 3, "name": "13"}, {"value": 9, "name": "14"}, {"value": 3, "name": "15"}, {"value": 15, "name": "16"}, {"value": 3, "name": "2"}, {"value": 2, "name": "3"}, {"value": 2, "name": "4"}, {"value": 5, "name": "5"}, {"value": 5, "name": "6"}, {"value": 5, "name": "7"}, {"value": 4, "name": "8"}, {"value": 4, "name": "9"}], "name": ".gobytes."}, {"children": [{"value": 186, "name": "Copy"}], "name": "CharData."}, {"children": [{"value": 186, "name": "Copy"}], "name": "Comment."}, {"children": [{"value": 186, "name": "Copy"}], "name": "Directive."}, {"value": 128, "name": "EscapeText"}, {"value": 8, "name": "HTMLEntity"}, {"value": 737, "name": "Marshal"}, {"children": [{"value": 312, "name": "Copy"}], "name": "ProcInst."}, {"children": [{"value": 317, "name": "Copy"}, {"value": 41, "name": "End"}], "name": "StartElement."}, {"value": 949, "name": "Unmarshal"}, {"children": [{"value": 21, "name": "Error"}], "name": "UnmarshalError."}, {"value": 3503, "name": "addFieldInfo"}, {"value": 16, "name": "attrType"}, {"value": 24, "name": "begComment"}, {"value": 24, "name": "cdataEnd"}, {"value": 24, "name": "cdataEscape"}, {"value": 24, "name": "cdataStart"}, {"value": 3002, "name": "copyValue"}, {"value": 24, "name": "ddBytes"}, {"value": 803, "name": "defaultStart"}, {"value": 809, "name": "emitCDATA"}, {"value": 24, "name": "endComment"}, {"value": 24, "name": "endProcInst"}, {"value": 8, "name": "entity"}, {"value": 16, "name": "errRawToken"}, {"value": 24, "name": "esc_amp"}, {"value": 24, "name": "esc_apos"}, {"value": 24, "name": "esc_cr"}, {"value": 24, "name": "esc_fffd"}, {"value": 24, "name": "esc_gt"}, {"value": 24, "name": "esc_lt"}, {"value": 24, "name": "esc_nl"}, {"value": 24, "name": "esc_quot"}, {"value": 24, "name": "esc_tab"}, {"value": 1147, "name": "escapeText"}, {"value": 8, "name": "first"}, {"value": 2348, "name": "getTypeInfo"}, {"value": 8, "name": "htmlEntity"}, {"value": 247, "name": "indirect"}, {"value": 1800, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 509, "name": "isEmptyValue"}, {"value": 464, "name": "isName"}, {"value": 431, "name": "isNameString"}, {"value": 668, "name": "isValidDirective"}, {"value": 734, "name": "lookupXMLName"}, {"value": 16, "name": "marshalerAttrType"}, {"value": 16, "name": "marshalerType"}, {"value": 16, "name": "nameType"}, {"children": [{"value": 56, "name": "Available"}, {"value": 49, "name": "Buffered"}, {"value": 108, "name": "Flush"}, {"value": 150, "name": "ReadFrom"}, {"value": 209, "name": "Reset"}, {"value": 167, "name": "Write"}, {"value": 120, "name": "WriteByte"}, {"value": 135, "name": "WriteRune"}, {"value": 150, "name": "WriteString"}], "name": "printer."}, {"value": 541, "name": "procInst"}, {"value": 323, "name": "receiverType"}, {"value": 8, "name": "second"}, {"value": 128, "name": "statictmp_1178"}, {"value": 56, "name": "statictmp_1478"}, {"value": 1140, "name": "statictmp_1479"}, {"value": 56, "name": "statictmp_1480"}, {"value": 672, "name": "statictmp_1481"}, {"value": 80, "name": "statictmp_1498"}, {"value": 40, "name": "statictmp_1499"}, {"value": 4032, "name": "statictmp_1503"}, {"value": 4032, "name": "statictmp_1504"}, {"value": 32, "name": "statictmp_265"}, {"value": 5768, "name": "structFieldInfo"}, {"value": 16, "name": "textMarshalerType"}, {"value": 16, "name": "textUnmarshalerType"}, {"value": 24, "name": "tinfoLock"}, {"value": 8, "name": "tinfoMap"}, {"value": 16, "name": "unmarshalerAttrType"}, {"value": 16, "name": "unmarshalerType"}, {"value": 40, "name": "go.itab.*SyntaxError,error"}, {"value": 40, "name": "go.itab.*TagPathError,error"}, {"value": 40, "name": "go.itab.*UnsupportedTypeError,error"}, {"value": 40, "name": "go.itab.*printer,io.Writer"}, {"value": 40, "name": "go.itab.UnmarshalError,error"}], "name": "xml."}], "name": "encoding/"}, {"children": [{"children": [{"value": 23, "name": "Error"}], "name": "(*errorString)."}, {"value": 145, "name": "New"}, {"value": 40, "name": "go.itab.*errorString,error"}], "name": "errors."}, {"children": [{"children": [{"value": 79, "name": "Add"}, {"value": 47, "name": "Set"}, {"value": 118, "name": "String"}, {"value": 47, "name": "Value"}], "name": "(*Float)."}, {"children": [{"value": 186, "name": "String"}, {"value": 186, "name": "Value"}], "name": "(*Func)."}, {"children": [{"value": 16, "name": "Add"}, {"value": 14, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 14, "name": "Value"}], "name": "(*Int)."}, {"value": 323, "name": "Do"}, {"children": [{"value": 145, "name": "String"}, {"value": 75, "name": "Value"}], "name": "Func."}, {"value": 219, "name": "Get"}, {"value": 867, "name": "Publish"}, {"value": 94, "name": "cmdline"}, {"value": 454, "name": "expvarHandler"}, {"children": [{"value": 499, "name": "func1"}], "name": "expvarHandler."}, {"value": 245, "name": "init"}, {"children": [{"value": 188, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 177, "name": "memstats"}, {"value": 24, "name": "mutex"}, {"value": 24, "name": "varKeys"}, {"value": 8, "name": "vars"}, {"value": 40, "name": "go.itab.*Float,expvar.Var"}, {"value": 40, "name": "go.itab.*Int,expvar.Var"}, {"value": 40, "name": "go.itab.Func,expvar.Var"}], "name": "expvar."}, {"children": [{"children": [{"value": 59, "name": "(flag.defaultUsage)-fm"}, {"value": 73, "name": "Arg"}, {"value": 33, "name": "Args"}, {"value": 160, "name": "Bool"}, {"value": 132, "name": "BoolVar"}, {"value": 161, "name": "Duration"}, {"value": 133, "name": "DurationVar"}, {"value": 163, "name": "Float64"}, {"value": 135, "name": "Float64Var"}, {"value": 118, "name": "Init"}, {"value": 161, "name": "Int"}, {"value": 161, "name": "Int64"}, {"value": 133, "name": "Int64Var"}, {"value": 133, "name": "IntVar"}, {"value": 109, "name": "Lookup"}, {"value": 15, "name": "NArg"}, {"value": 27, "name": "NFlag"}, {"value": 292, "name": "Parse"}, {"value": 14, "name": "Parsed"}, {"value": 96, "name": "PrintDefaults"}, {"children": [{"value": 1389, "name": "func1"}], "name": "PrintDefaults."}, {"value": 664, "name": "Set"}, {"value": 104, "name": "SetOutput"}, {"value": 177, "name": "String"}, {"value": 185, "name": "StringVar"}, {"value": 161, "name": "Uint"}, {"value": 161, "name": "Uint64"}, {"value": 133, "name": "Uint64Var"}, {"value": 133, "name": "UintVar"}, {"value": 1533, "name": "Var"}, {"value": 161, "name": "Visit"}, {"value": 161, "name": "VisitAll"}, {"value": 365, "name": "defaultUsage"}, {"value": 304, "name": "failf"}, {"value": 3397, "name": "parseOne"}, {"value": 75, "name": "usage"}], "name": "(*FlagSet)."}, {"children": [{"value": 104, "name": "Get"}, {"value": 6, "name": "IsBoolFlag"}, {"value": 1223, "name": "Set"}, {"value": 53, "name": "String"}], "name": "(*boolValue)."}, {"children": [{"value": 105, "name": "Get"}, {"value": 103, "name": "Set"}, {"value": 83, "name": "String"}], "name": "(*durationValue)."}, {"children": [{"value": 107, "name": "Get"}, {"value": 114, "name": "Set"}, {"value": 108, "name": "String"}], "name": "(*float64Value)."}, {"children": [{"value": 105, "name": "Get"}, {"value": 121, "name": "Set"}, {"value": 92, "name": "String"}], "name": "(*int64Value)."}, {"children": [{"value": 105, "name": "Get"}, {"value": 121, "name": "Set"}, {"value": 83, "name": "String"}], "name": "(*intValue)."}, {"children": [{"value": 114, "name": "Get"}, {"value": 117, "name": "Set"}, {"value": 23, "name": "String"}], "name": "(*stringValue)."}, {"children": [{"value": 105, "name": "Get"}, {"value": 121, "name": "Set"}, {"value": 92, "name": "String"}], "name": "(*uint64Value)."}, {"children": [{"value": 105, "name": "Get"}, {"value": 121, "name": "Set"}, {"value": 92, "name": "String"}], "name": "(*uintValue)."}, {"value": 134, "name": "BoolVar"}, {"value": 8, "name": "CommandLine"}, {"value": 16, "name": "ErrHelp"}, {"value": 284, "name": "NewFlagSet"}, {"value": 62, "name": "PrintDefaults"}, {"value": 966, "name": "UnquoteUsage"}, {"value": 8, "name": "Usage"}, {"value": 122, "name": "Var"}, {"value": 72, "name": "VisitAll"}, {"value": 55, "name": "commandLineUsage"}, {"children": [{"value": 224, "name": "func1"}], "name": "glob."}, {"value": 327, "name": "init"}, {"children": [{"value": 98, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 549, "name": "isZeroValue"}, {"value": 706, "name": "sortFlags"}, {"value": 48, "name": "go.itab.*boolValue,flag.Value"}, {"value": 48, "name": "go.itab.*durationValue,flag.Value"}, {"value": 48, "name": "go.itab.*float64Value,flag.Value"}, {"value": 48, "name": "go.itab.*int64Value,flag.Value"}, {"value": 48, "name": "go.itab.*intValue,flag.Value"}, {"value": 48, "name": "go.itab.*stringValue,flag.Value"}, {"value": 48, "name": "go.itab.*uint64Value,flag.Value"}, {"value": 48, "name": "go.itab.*uintValue,flag.Value"}], "name": "flag."}, {"children": [{"children": [{"value": 275, "name": "Write"}, {"value": 212, "name": "WriteByte"}, {"value": 535, "name": "WriteRune"}, {"value": 275, "name": "WriteString"}], "name": "(*buffer)."}, {"children": [{"value": 127, "name": "fmt_boolean"}, {"value": 128, "name": "fmt_bx"}, {"value": 176, "name": "fmt_c"}, {"value": 1231, "name": "fmt_float"}, {"value": 1294, "name": "fmt_integer"}, {"value": 490, "name": "fmt_q"}, {"value": 242, "name": "fmt_qc"}, {"value": 114, "name": "fmt_s"}, {"value": 1397, "name": "fmt_sbx"}, {"value": 127, "name": "fmt_sx"}, {"value": 961, "name": "fmt_unicode"}, {"value": 961, "name": "pad"}, {"value": 948, "name": "padString"}, {"value": 228, "name": "truncate"}, {"value": 376, "name": "writePadding"}], "name": "(*fmt)."}, {"children": [{"value": 149, "name": "Flag"}, {"value": 23, "name": "Precision"}, {"value": 23, "name": "Width"}, {"value": 320, "name": "Write"}, {"value": 283, "name": "argNumber"}, {"value": 526, "name": "badArgNum"}, {"value": 2036, "name": "badVerb"}, {"value": 1272, "name": "catchPanic"}, {"value": 502, "name": "doPrint"}, {"value": 5141, "name": "doPrintf"}, {"value": 512, "name": "doPrintln"}, {"value": 143, "name": "fmt0x64"}, {"value": 111, "name": "fmtBool"}, {"value": 2613, "name": "fmtBytes"}, {"value": 661, "name": "fmtComplex"}, {"value": 384, "name": "fmtFloat"}, {"value": 783, "name": "fmtInteger"}, {"value": 1632, "name": "fmtPointer"}, {"value": 423, "name": "fmtString"}, {"value": 267, "name": "free"}, {"value": 1259, "name": "handleMethods"}, {"value": 526, "name": "missingArg"}, {"value": 2620, "name": "printArg"}, {"value": 11720, "name": "printValue"}, {"value": 934, "name": "unknownType"}], "name": "(*pp)."}, {"children": [{"value": 988, "name": "ReadRune"}, {"value": 197, "name": "UnreadRune"}, {"value": 292, "name": "readByte"}], "name": "(*readRune)."}, {"children": [{"value": 161, "name": "Read"}, {"value": 372, "name": "ReadRune"}, {"value": 65, "name": "SkipSpace"}, {"value": 270, "name": "Token"}, {"children": [{"value": 173, "name": "func1"}], "name": "Token."}, {"value": 106, "name": "UnreadRune"}, {"value": 43, "name": "Width"}, {"value": 94, "name": "accept"}, {"value": 1162, "name": "advance"}, {"value": 689, "name": "complexTokens"}, {"value": 230, "name": "consume"}, {"value": 790, "name": "convertFloat"}, {"value": 361, "name": "convertString"}, {"value": 346, "name": "doScan"}, {"value": 979, "name": "doScanf"}, {"value": 126, "name": "error"}, {"value": 209, "name": "errorString"}, {"value": 864, "name": "floatToken"}, {"value": 234, "name": "free"}, {"value": 246, "name": "getBase"}, {"value": 225, "name": "getRune"}, {"value": 420, "name": "hexByte"}, {"value": 413, "name": "hexString"}, {"value": 121, "name": "mustReadRune"}, {"value": 122, "name": "notEOF"}, {"value": 356, "name": "okVerb"}, {"value": 139, "name": "peek"}, {"value": 760, "name": "quotedString"}, {"value": 325, "name": "scanBasePrefix"}, {"value": 733, "name": "scanBool"}, {"value": 376, "name": "scanComplex"}, {"value": 809, "name": "scanInt"}, {"value": 274, "name": "scanNumber"}, {"value": 4926, "name": "scanOne"}, {"value": 262, "name": "scanRune"}, {"value": 724, "name": "scanUint"}, {"value": 284, "name": "skipSpace"}, {"value": 215, "name": "token"}], "name": "(*ss)."}, {"children": [{"value": 244, "name": "Read"}], "name": "(*stringReader)."}, {"value": 232, "name": "Errorf"}, {"value": 246, "name": "Fprint"}, {"value": 272, "name": "Fprintf"}, {"value": 246, "name": "Fprintln"}, {"value": 309, "name": "Fscan"}, {"value": 341, "name": "Fscanf"}, {"value": 137, "name": "Print"}, {"value": 173, "name": "Printf"}, {"value": 137, "name": "Println"}, {"value": 204, "name": "Sprint"}, {"value": 230, "name": "Sprintf"}, {"value": 204, "name": "Sprintln"}, {"value": 222, "name": "Sscan"}, {"value": 261, "name": "Sscanf"}, {"value": 16, "name": "boolError"}, {"value": 16, "name": "byteType"}, {"value": 16, "name": "complexError"}, {"value": 379, "name": "errorHandler"}, {"value": 263, "name": "getField"}, {"children": [{"value": 84, "name": "func1"}, {"value": 84, "name": "func2"}], "name": "glob."}, {"value": 186, "name": "indexRune"}, {"value": 410, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 372, "name": "intFromArg"}, {"value": 150, "name": "isSpace"}, {"value": 206, "name": "newPrinter"}, {"value": 485, "name": "newScanState"}, {"value": 70, "name": "notSpace"}, {"value": 297, "name": "parseArgNumber"}, {"value": 207, "name": "parsenum"}, {"value": 24, "name": "ppFree"}, {"value": 24, "name": "space"}, {"value": 24, "name": "ssFree"}, {"value": 24, "name": "statictmp_150"}, {"value": 24, "name": "statictmp_337"}, {"value": 40, "name": "statictmp_908"}, {"value": 64, "name": "go.itab.*pp,fmt.State"}, {"value": 48, "name": "go.itab.*readRune,io.RuneScanner"}, {"value": 80, "name": "go.itab.*ss,fmt.ScanState"}, {"value": 40, "name": "go.itab.*stringReader,io.Reader"}], "name": "fmt."}, {"children": [{"children": [{"children": [{"children": [{"value": 323, "name": "AdminURL"}, {"value": 98, "name": "ClientHasValidCerts"}, {"value": 174, "name": "GetCACertPath"}, {"value": 143, "name": "GetCertificateManager"}, {"children": [{"value": 212, "name": "func1"}], "name": "GetCertificateManager."}, {"value": 256, "name": "GetClientCertPaths"}, {"value": 320, "name": "GetClientTLSConfig"}, {"value": 205, "name": "GetHTTPClient"}, {"children": [{"value": 311, "name": "func1"}], "name": "GetHTTPClient."}, {"value": 293, "name": "GetServerTLSConfig"}, {"value": 56, "name": "HTTPRequestScheme"}, {"value": 520, "name": "InitDefaults"}, {"value": 285, "name": "InitializeNodeTLSConfigs"}, {"value": 2654, "name": "PGURL"}], "name": "(*Config)."}, {"children": [{"value": 283, "name": "Set"}, {"value": 204, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*JoinListType)."}, {"children": [{"value": 12, "name": "Get"}, {"value": 12, "name": "Reset"}, {"value": 682, "name": "Set"}, {"value": 134, "name": "String"}], "name": "(*NodeIDContainer)."}, {"children": [{"value": 201, "name": "String"}], "name": "(*StoreSpec)."}, {"children": [{"value": 665, "name": "Set"}, {"value": 212, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*StoreSpecList)."}, {"children": [{"value": 474, "name": "String"}], "name": "JoinListType."}, {"value": 6163, "name": "NewStoreSpec"}, {"children": [{"value": 1685, "name": "String"}], "name": "StoreSpec."}, {"children": [{"value": 553, "name": "String"}], "name": "StoreSpecList."}, {"value": 111, "name": "didYouMeanInsecureError"}, {"value": 8, "name": "fractionRegex"}, {"value": 282, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 64, "name": "statictmp_184"}, {"value": 64, "name": "statictmp_194"}, {"value": 64, "name": "statictmp_199"}, {"value": 64, "name": "statictmp_204"}, {"value": 64, "name": "statictmp_208"}, {"value": 64, "name": "statictmp_214"}, {"value": 64, "name": "statictmp_218"}, {"value": 64, "name": "statictmp_224"}, {"value": 64, "name": "statictmp_229"}, {"value": 64, "name": "statictmp_239"}, {"value": 64, "name": "statictmp_244"}, {"value": 64, "name": "statictmp_248"}, {"value": 64, "name": "statictmp_249"}, {"value": 64, "name": "statictmp_250"}, {"value": 64, "name": "statictmp_251"}, {"value": 56, "name": "go.itab.*JoinListType,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*StoreSpecList,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}], "name": "base."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 2093, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 252, "name": "Short"}, {"value": 580, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 268, "name": "Timestamp"}, {"value": 7074, "name": "Unmarshal"}], "name": "(*Info)."}, {"value": 16, "name": "Distribution"}, {"value": 16, "name": "ErrIntOverflowInfo"}, {"value": 16, "name": "ErrInvalidLengthInfo"}, {"value": 389, "name": "GetInfo"}, {"children": [{"value": 431, "name": "Short"}, {"value": 204, "name": "Timestamp"}], "name": "Info."}, {"value": 80, "name": "_Cfunc_GoString"}, {"value": 91, "name": "_Cfunc_compilerVersion"}, {"value": 8, "name": "_cgo_97337b0b91ab_Cfunc_compilerVersion"}, {"value": 16, "name": "cgoCompiler"}, {"value": 122, "name": "encodeVarintInfo"}, {"value": 24, "name": "fileDescriptorInfo"}, {"value": 810, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "platform"}, {"value": 16, "name": "rev"}, {"children": [{"value": 41, "name": "str"}], "name": "rev."}, {"value": 1621, "name": "skipInfo"}, {"value": 34, "name": "sovInfo"}, {"value": 136, "name": "statictmp_297"}, {"value": 282, "name": "statictmp_298"}, {"value": 8, "name": "statictmp_5"}, {"value": 16, "name": "tag"}, {"children": [{"value": 7, "name": "str"}], "name": "tag."}, {"value": 16, "name": "typ"}, {"children": [{"value": 12, "name": "str"}], "name": "typ."}, {"value": 16, "name": "utcTime"}, {"children": [{"value": 20, "name": "str"}], "name": "utcTime."}, {"value": 56, "name": "go.itab.*Info,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "build."}, {"children": [{"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "ccl."}, {"children": [{"children": [{"value": 96, "name": "init"}, {"children": [{"value": 111, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}], "name": "buildccl."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 3392, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 1214, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 8663, "name": "Unmarshal"}], "name": "(*BackupDescriptor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 791, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 224, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3270, "name": "Unmarshal"}], "name": "(*BackupDescriptor_File)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 486, "name": "Swap"}], "name": "(*backupFileDescriptors)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 71, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 62, "name": "Marshal"}, {"value": 44, "name": "MarshalTo"}, {"value": 149, "name": "Overlaps"}, {"value": 17, "name": "ProtoMessage"}, {"value": 17, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 26, "name": "Size"}, {"value": 122, "name": "String"}, {"value": 35, "name": "Unmarshal"}], "name": "(*importEntry)."}, {"children": [{"value": 187, "name": "ID"}, {"value": 452, "name": "Range"}], "name": "(*intervalSpan)."}, {"children": [{"value": 567, "name": "chunkFinished"}], "name": "(*jobProgressLogger)."}, {"value": 8163, "name": "Backup"}, {"children": [{"value": 408, "name": "func1"}, {"value": 199, "name": "func2"}, {"value": 2031, "name": "func3"}, {"children": [{"value": 81, "name": "1"}], "name": "func3."}], "name": "Backup."}, {"value": 16, "name": "ErrIntOverflowBackup"}, {"value": 16, "name": "ErrInvalidLengthBackup"}, {"value": 2211, "name": "Import"}, {"value": 9167, "name": "Restore"}, {"children": [{"value": 203, "name": "func1"}, {"value": 1022, "name": "func2"}, {"value": 1021, "name": "func3"}, {"children": [{"value": 81, "name": "1"}], "name": "func3."}], "name": "Restore."}, {"value": 815, "name": "ValidatePreviousBackups"}, {"value": 976, "name": "allRangeDescriptors"}, {"value": 1093, "name": "allSQLDescriptors"}, {"children": [{"value": 11, "name": "Len"}, {"value": 305, "name": "Less"}, {"value": 382, "name": "Swap"}], "name": "backupFileDescriptors."}, {"value": 1236, "name": "backupJobDescription"}, {"value": 1595, "name": "backupPlanHook"}, {"children": [{"value": 3357, "name": "func1"}], "name": "backupPlanHook."}, {"value": 294, "name": "clusterNodeCount"}, {"value": 5693, "name": "descriptorsMatchingTargets"}, {"value": 122, "name": "encodeVarintBackup"}, {"value": 319, "name": "exportStorageFromURI"}, {"value": 24, "name": "fileDescriptorBackup"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}, {"value": 126, "name": "String"}], "name": "importEntry."}, {"value": 527, "name": "init"}, {"children": [{"value": 262, "name": "1"}, {"value": 141, "name": "2"}, {"value": 210, "name": "3"}, {"value": 262, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"children": [{"value": 10, "name": "ID"}, {"value": 169, "name": "Range"}], "name": "intervalSpan."}, {"value": 846, "name": "loadBackupDescs"}, {"value": 6575, "name": "makeImportRequests"}, {"value": 1423, "name": "presplitRanges"}, {"children": [{"value": 1180, "name": "func1"}, {"children": [{"value": 107, "name": "1"}], "name": "func1."}, {"value": 107, "name": "func2"}], "name": "presplitRanges."}, {"value": 1063, "name": "readBackupDescriptor"}, {"value": 2093, "name": "reassignParentIDs"}, {"value": 1828, "name": "reassignReferencedTables"}, {"children": [{"value": 2764, "name": "func1"}], "name": "reassignReferencedTables."}, {"value": 1179, "name": "reassignTableIDs"}, {"children": [{"value": 1052, "name": "func1"}], "name": "reassignTableIDs."}, {"value": 827, "name": "restoreJobDescription"}, {"value": 1387, "name": "restorePlanHook"}, {"children": [{"value": 2741, "name": "func1"}], "name": "restorePlanHook."}, {"value": 606, "name": "restoreTableDescs"}, {"children": [{"value": 1125, "name": "func1"}], "name": "restoreTableDescs."}, {"value": 1621, "name": "skipBackup"}, {"value": 34, "name": "sovBackup"}, {"value": 779, "name": "spansForAllTableIndexes"}, {"children": [{"value": 556, "name": "func1"}], "name": "spansForAllTableIndexes."}, {"value": 2050, "name": "splitSpansByRanges"}, {"value": 16, "name": "statictmp_1199"}, {"value": 16, "name": "statictmp_1207"}, {"value": 160, "name": "statictmp_1353"}, {"value": 32, "name": "statictmp_1603"}, {"value": 617, "name": "statictmp_1736"}, {"value": 336, "name": "statictmp_223"}, {"value": 336, "name": "statictmp_228"}, {"value": 336, "name": "statictmp_230"}, {"value": 336, "name": "statictmp_232"}, {"value": 336, "name": "statictmp_237"}, {"value": 336, "name": "statictmp_249"}, {"value": 336, "name": "statictmp_251"}, {"value": 336, "name": "statictmp_257"}, {"value": 336, "name": "statictmp_258"}, {"value": 336, "name": "statictmp_262"}, {"value": 336, "name": "statictmp_269"}, {"value": 136, "name": "statictmp_272"}, {"value": 336, "name": "statictmp_273"}, {"value": 336, "name": "statictmp_274"}, {"value": 336, "name": "statictmp_277"}, {"value": 160, "name": "statictmp_290"}, {"value": 8, "name": "statictmp_302"}, {"value": 16, "name": "statictmp_308"}, {"value": 336, "name": "statictmp_45"}, {"value": 336, "name": "statictmp_46"}, {"value": 336, "name": "statictmp_47"}, {"value": 336, "name": "statictmp_48"}, {"value": 16, "name": "statictmp_54"}, {"value": 48, "name": "statictmp_580"}, {"value": 88, "name": "statictmp_584"}, {"value": 16, "name": "statictmp_588"}, {"value": 16, "name": "statictmp_59"}, {"value": 56, "name": "go.itab.*BackupDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BackupDescriptor_File,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.backupFileDescriptors,sort.Interface"}, {"value": 48, "name": "go.itab.intervalSpan,github.com/cockroachdb/cockroach/pkg/util/interval.Interface"}], "name": "sqlccl."}, {"children": [{"children": [{"value": 186, "name": "RewriteKey"}, {"value": 2253, "name": "rewriteKey"}], "name": "(*KeyRewriter)."}, {"children": [{"value": 265, "name": "RewriteKey"}], "name": "(*PrefixRewriter)."}, {"children": [{"value": 19, "name": "Close"}, {"value": 122, "name": "Conf"}, {"value": 467, "name": "Delete"}, {"value": 519, "name": "ReadFile"}, {"value": 900, "name": "WriteFile"}, {"children": [{"value": 1553, "name": "func1"}, {"children": [{"value": 251, "name": "1"}, {"value": 1399, "name": "2"}, {"children": [{"value": 311, "name": "1"}], "name": "2."}, {"value": 290, "name": "3"}], "name": "func1."}, {"value": 207, "name": "func2"}], "name": "WriteFile."}], "name": "(*azureStorage)."}, {"children": [{"value": 664, "name": "beginLimitedRequest"}, {"value": 84, "name": "endLimitedRequest"}], "name": "(*concurrentRequestLimiter)."}, {"children": [{"value": 112, "name": "Close"}, {"value": 122, "name": "Conf"}, {"value": 408, "name": "Delete"}, {"value": 439, "name": "ReadFile"}, {"value": 428, "name": "WriteFile"}, {"children": [{"value": 1395, "name": "func1"}], "name": "WriteFile."}], "name": "(*gcsStorage)."}, {"children": [{"value": 19, "name": "Close"}, {"value": 132, "name": "Conf"}, {"value": 179, "name": "Delete"}, {"value": 205, "name": "ReadFile"}, {"value": 276, "name": "WriteFile"}], "name": "(*httpStorage)."}, {"children": [{"value": 19, "name": "Close"}, {"value": 131, "name": "Conf"}, {"value": 213, "name": "Delete"}, {"value": 241, "name": "ReadFile"}, {"value": 1055, "name": "WriteFile"}], "name": "(*localFileStorage)."}, {"children": [{"value": 17, "name": "Close"}, {"value": 233, "name": "Finish"}, {"value": 35, "name": "LocalFile"}], "name": "(*localTmpWriter)."}, {"children": [{"value": 19, "name": "Close"}, {"value": 122, "name": "Conf"}, {"value": 228, "name": "Delete"}, {"value": 346, "name": "ReadFile"}, {"value": 681, "name": "WriteFile"}], "name": "(*s3Storage)."}, {"children": [{"value": 499, "name": "Close"}, {"value": 150, "name": "Finish"}, {"value": 31, "name": "LocalFile"}], "name": "(*tmpWriter)."}, {"value": 3742, "name": "ExportStorageConfFromURI"}, {"value": 988, "name": "FetchFile"}, {"children": [{"value": 1, "name": "func1"}, {"value": 1560, "name": "func2"}, {"children": [{"value": 454, "name": "1"}, {"value": 1, "name": "2"}], "name": "func2."}], "name": "FetchFile."}, {"value": 1298, "name": "MakeExportFileTmpWriter"}, {"value": 744, "name": "MakeExportStorage"}, {"value": 3134, "name": "MakeKeyRewriter"}, {"children": [{"value": 1002, "name": "RewriteKey"}], "name": "PrefixRewriter."}, {"value": 242, "name": "SanitizeExportStorageURI"}, {"value": 617, "name": "chunkReader"}, {"value": 363, "name": "declareKeysExport"}, {"value": 5521, "name": "evalExport"}, {"children": [{"value": 351, "name": "func1"}], "name": "evalExport."}, {"value": 9385, "name": "evalImport"}, {"children": [{"value": 1194, "name": "func1"}, {"children": [{"value": 1662, "name": "1"}], "name": "func1."}, {"value": 195, "name": "func2"}, {"value": 178, "name": "func3"}], "name": "evalImport."}, {"value": 3243, "name": "evalWriteBatch"}, {"value": 8, "name": "exportRequestLimiter"}, {"value": 8, "name": "importRequestLimiter"}, {"value": 378, "name": "init"}, {"children": [{"value": 196, "name": "1"}, {"value": 100, "name": "2"}, {"value": 196, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 865, "name": "makeAzureStorage"}, {"value": 82, "name": "makeConcurrentRequestLimiter"}, {"value": 1108, "name": "makeGCSStorage"}, {"value": 608, "name": "makeHTTPStorage"}, {"value": 170, "name": "makeKeyRewriterPrefixIgnoringInterleaved"}, {"value": 277, "name": "makeLocalStorage"}, {"value": 1127, "name": "makeS3Storage"}, {"value": 1535, "name": "runHTTPRequest"}, {"value": 568, "name": "sha512ChecksumFile"}, {"value": 48, "name": "statictmp_264"}, {"value": 48, "name": "statictmp_297"}, {"value": 48, "name": "statictmp_322"}, {"value": 488, "name": "statictmp_33"}, {"value": 488, "name": "statictmp_39"}, {"value": 488, "name": "statictmp_40"}, {"value": 488, "name": "statictmp_45"}, {"value": 488, "name": "statictmp_50"}, {"value": 488, "name": "statictmp_51"}, {"value": 488, "name": "statictmp_62"}, {"value": 488, "name": "statictmp_63"}, {"value": 488, "name": "statictmp_632"}, {"value": 488, "name": "statictmp_633"}, {"value": 488, "name": "statictmp_634"}, {"value": 488, "name": "statictmp_635"}, {"value": 488, "name": "statictmp_636"}, {"value": 488, "name": "statictmp_637"}, {"value": 488, "name": "statictmp_638"}, {"value": 488, "name": "statictmp_66"}, {"value": 488, "name": "statictmp_67"}, {"value": 488, "name": "statictmp_68"}, {"value": 48, "name": "statictmp_688"}, {"value": 488, "name": "statictmp_69"}, {"value": 48, "name": "statictmp_699"}, {"value": 48, "name": "statictmp_703"}, {"value": 488, "name": "statictmp_72"}, {"value": 72, "name": "go.itab.*azureStorage,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportStorage"}, {"value": 72, "name": "go.itab.*gcsStorage,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportStorage"}, {"value": 72, "name": "go.itab.*httpStorage,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportStorage"}, {"value": 72, "name": "go.itab.*localFileStorage,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportStorage"}, {"value": 56, "name": "go.itab.*localTmpWriter,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportFileWriter"}, {"value": 72, "name": "go.itab.*s3Storage,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportStorage"}, {"value": 56, "name": "go.itab.*tmpWriter,github.com/cockroachdb/cockroach/pkg/ccl/storageccl.ExportFileWriter"}], "name": "storageccl."}, {"children": [{"children": [{"value": 68, "name": "Close"}, {"value": 24, "name": "Error"}, {"value": 207, "name": "Key"}, {"value": 1934, "name": "Next"}, {"value": 811, "name": "Reset"}, {"value": 207, "name": "UnsafeKey"}, {"value": 98, "name": "UnsafeValue"}, {"value": 14, "name": "Valid"}, {"value": 101, "name": "Value"}], "name": "(*MVCCIncrementalIterator)."}, {"children": [{"value": 24, "name": "Error"}, {"value": 111, "name": "Next"}, {"value": 185, "name": "NextKey"}, {"value": 196, "name": "Seek"}, {"value": 236, "name": "UnsafeKey"}, {"value": 127, "name": "UnsafeValue"}, {"value": 37, "name": "Valid"}, {"value": 1818, "name": "advance"}], "name": "(*MultiIterator)."}, {"value": 186, "name": "NewMVCCIncrementalIterator"}, {"value": 2508, "name": "VerifyBatchRepr"}, {"children": [{"value": 406, "name": "func1"}], "name": "VerifyBatchRepr."}, {"value": 471, "name": "_Cfunc_DBBatchReprVerify"}, {"value": 92, "name": "_Cfunc_GoStringN"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 8, "name": "_cgo_764d4ea2d8e7_Cfunc_DBBatchReprVerify"}, {"value": 8, "name": "_cgo_764d4ea2d8e7_Cfunc_free"}, {"value": 467, "name": "cStatsToGoStats"}, {"value": 162, "name": "cStringToGoString"}, {"children": [{"value": 113, "name": "func1"}], "name": "cStringToGoString."}, {"value": 126, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 112, "name": "statictmp_109"}, {"value": 112, "name": "statictmp_111"}, {"value": 112, "name": "statictmp_112"}, {"value": 112, "name": "statictmp_116"}, {"value": 112, "name": "statictmp_117"}, {"value": 16, "name": "statictmp_118"}, {"value": 16, "name": "statictmp_121"}, {"value": 16, "name": "statictmp_125"}, {"value": 112, "name": "statictmp_128"}, {"value": 136, "name": "statictmp_71"}, {"value": 145, "name": "statusToError"}], "name": "storageccl/engineccl."}, {"children": [{"value": 375, "name": "CheckEnterpriseEnabled"}, {"value": 8, "name": "EnterpriseEnabled"}, {"children": [{"value": 145, "name": "func1"}], "name": "glob."}, {"value": 156, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "utilccl."}, {"children": [{"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 426, "name": "Swap"}], "name": "(*Covering)."}, {"children": [{"value": 11, "name": "Len"}, {"value": 305, "name": "Less"}, {"value": 301, "name": "Swap"}], "name": "Covering."}, {"value": 2722, "name": "OverlapCoveringMerge"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "go.itab.Covering,sort.Interface"}], "name": "utilccl/intervalccl."}], "name": "ccl/"}, {"children": [{"children": [{"value": 36, "name": "AdminURL"}, {"value": 23, "name": "ClientHasValidCerts"}, {"value": 54, "name": "GetCACertPath"}, {"value": 45, "name": "GetCertificateManager"}, {"value": 72, "name": "GetClientCertPaths"}, {"value": 45, "name": "GetClientTLSConfig"}, {"value": 67, "name": "GetHTTPClient"}, {"value": 45, "name": "GetServerTLSConfig"}, {"value": 36, "name": "HTTPRequestScheme"}, {"value": 18, "name": "InitDefaults"}, {"value": 36, "name": "InitializeNodeTLSConfigs"}, {"value": 45, "name": "PGURL"}], "name": "(*cliContext)."}, {"children": [{"value": 883, "name": "addHistory"}, {"value": 2319, "name": "doCheckStatement"}, {"value": 109, "name": "doContinueLine"}, {"value": 2524, "name": "doHandleCliCmd"}, {"value": 1212, "name": "doPrepareStatementLine"}, {"value": 357, "name": "doProcessFirstLine"}, {"value": 1230, "name": "doReadLine"}, {"value": 111, "name": "doRefreshPrompts"}, {"value": 401, "name": "doRunStatement"}, {"value": 1631, "name": "doStart"}, {"value": 128, "name": "doStartLine"}, {"value": 2834, "name": "handleSet"}, {"value": 1100, "name": "handleUnset"}, {"value": 236, "name": "invalidOptionChange"}, {"value": 427, "name": "invalidSyntax"}, {"value": 668, "name": "pipeSyscmd"}, {"value": 1347, "name": "refreshDatabaseName"}, {"children": [{"value": 60, "name": "func1"}], "name": "refreshDatabaseName."}, {"value": 456, "name": "refreshPrompts"}, {"value": 1642, "name": "refreshTransactionStatus"}, {"children": [{"value": 60, "name": "func1"}], "name": "refreshTransactionStatus."}, {"value": 775, "name": "runSyscmd"}], "name": "(*cliState)."}, {"children": [{"value": 39, "name": "AdminURL"}, {"value": 26, "name": "ClientHasValidCerts"}, {"value": 57, "name": "GetCACertPath"}, {"value": 48, "name": "GetCertificateManager"}, {"value": 75, "name": "GetClientCertPaths"}, {"value": 48, "name": "GetClientTLSConfig"}, {"value": 70, "name": "GetHTTPClient"}, {"value": 48, "name": "GetServerTLSConfig"}, {"value": 39, "name": "HTTPRequestScheme"}, {"value": 21, "name": "InitDefaults"}, {"value": 39, "name": "InitializeNodeTLSConfigs"}, {"value": 48, "name": "PGURL"}], "name": "(*dumpContext)."}, {"children": [{"value": 487, "name": "Set"}, {"value": 110, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*dumpMode)."}, {"children": [{"value": 110, "name": "Error"}], "name": "(*errTryHardShutdown)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*keyType)."}, {"children": [{"value": 1834, "name": "Set"}, {"value": 111, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*mvccKey)."}, {"children": [{"value": 254, "name": "Next"}, {"value": 121, "name": "ToSlice"}], "name": "(*rowIter)."}, {"children": [{"value": 169, "name": "Next"}, {"value": 50, "name": "ToSlice"}], "name": "(*rowSliceIter)."}, {"children": [{"value": 390, "name": "Close"}, {"value": 213, "name": "Exec"}, {"value": 908, "name": "ExecTxn"}, {"children": [{"value": 192, "name": "func1"}], "name": "ExecTxn."}, {"value": 698, "name": "Query"}, {"value": 517, "name": "QueryRow"}, {"children": [{"value": 60, "name": "func1"}], "name": "QueryRow."}, {"value": 356, "name": "ensureConn"}], "name": "(*sqlConn)."}, {"children": [{"value": 39, "name": "AdminURL"}, {"value": 26, "name": "ClientHasValidCerts"}, {"value": 57, "name": "GetCACertPath"}, {"value": 48, "name": "GetCertificateManager"}, {"value": 75, "name": "GetClientCertPaths"}, {"value": 48, "name": "GetClientTLSConfig"}, {"value": 70, "name": "GetHTTPClient"}, {"value": 48, "name": "GetServerTLSConfig"}, {"value": 39, "name": "HTTPRequestScheme"}, {"value": 21, "name": "InitDefaults"}, {"value": 39, "name": "InitializeNodeTLSConfigs"}, {"value": 48, "name": "PGURL"}], "name": "(*sqlContext)."}, {"children": [{"value": 206, "name": "Close"}, {"value": 98, "name": "Columns"}, {"value": 742, "name": "Next"}, {"value": 164, "name": "NextResultSet"}, {"value": 88, "name": "Result"}, {"value": 88, "name": "Tag"}], "name": "(*sqlRows)."}, {"children": [{"value": 283, "name": "Set"}, {"value": 122, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*statementsValue)."}, {"children": [{"value": 781, "name": "Set"}, {"value": 202, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*tableDisplayFormat)."}, {"children": [{"value": 81, "name": "close"}, {"value": 286, "name": "create"}, {"value": 557, "name": "createError"}, {"value": 253, "name": "createJSON"}, {"value": 198, "name": "createRaw"}], "name": "(*zipper)."}, {"value": 8, "name": "ErrorCode"}, {"value": 786, "name": "Main"}, {"value": 604, "name": "MakeDBClient"}, {"value": 141, "name": "MaybeDecorateGRPCError"}, {"children": [{"value": 468, "name": "func1"}], "name": "MaybeDecorateGRPCError."}, {"value": 141, "name": "MaybeShoutError"}, {"children": [{"value": 309, "name": "func1"}], "name": "MaybeShoutError."}, {"value": 170, "name": "Run"}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 132, "name": "_Cfunc_dump_heap_profile"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 87, "name": "_Cfunc_is_profiling_enabled"}, {"value": 8, "name": "_cgo_4f1fa8077389_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_4f1fa8077389_Cfunc_dump_heap_profile"}, {"value": 8, "name": "_cgo_4f1fa8077389_Cfunc_free"}, {"value": 8, "name": "_cgo_4f1fa8077389_Cfunc_is_profiling_enabled"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 4, "name": "_keyType_index"}, {"value": 24, "name": "_keyTypes"}, {"value": 236, "name": "addrWithDefaultHost"}, {"value": 1, "name": "allowCAKeyReuse"}, {"value": 16, "name": "autoCompletePath"}, {"value": 8, "name": "baseCfg"}, {"value": 230, "name": "boolFlag"}, {"value": 8, "name": "certCmd"}, {"value": 24, "name": "certCmds"}, {"value": 8, "name": "certificateLifetime"}, {"value": 651, "name": "checkNodeRunning"}, {"value": 507, "name": "checkRangeDescriptorKey"}, {"children": [{"value": 102, "name": "AdminURL"}, {"value": 111, "name": "ClientHasValidCerts"}, {"value": 122, "name": "GetCACertPath"}, {"value": 112, "name": "GetCertificateManager"}, {"value": 184, "name": "GetClientCertPaths"}, {"value": 112, "name": "GetClientTLSConfig"}, {"value": 222, "name": "GetHTTPClient"}, {"value": 112, "name": "GetServerTLSConfig"}, {"value": 84, "name": "HTTPRequestScheme"}, {"value": 547, "name": "InitDefaults"}, {"value": 112, "name": "InitializeNodeTLSConfigs"}, {"value": 122, "name": "PGURL"}], "name": "cliContext."}, {"value": 16, "name": "cliCtx"}, {"value": 16, "name": "clientConnHost"}, {"value": 16, "name": "clientConnPort"}, {"value": 16, "name": "cmdHistFile"}, {"value": 8, "name": "cockroachCmd"}, {"value": 230, "name": "consumeAllRows"}, {"value": 8, "name": "createCACertCmd"}, {"value": 8, "name": "createClientCertCmd"}, {"value": 8, "name": "createNodeCertCmd"}, {"value": 8, "name": "debugCmd"}, {"value": 24, "name": "debugCmds"}, {"value": 88, "name": "debugCtx"}, {"value": 8, "name": "debugKeysCmd"}, {"value": 8, "name": "debugRangeDataCmd"}, {"value": 8, "name": "debugZipCmd"}, {"value": 406, "name": "descStr"}, {"value": 801, "name": "doShutdown"}, {"value": 8, "name": "dumpCmd"}, {"children": [{"value": 105, "name": "AdminURL"}, {"value": 114, "name": "ClientHasValidCerts"}, {"value": 125, "name": "GetCACertPath"}, {"value": 115, "name": "GetCertificateManager"}, {"value": 193, "name": "GetClientCertPaths"}, {"value": 115, "name": "GetClientTLSConfig"}, {"value": 225, "name": "GetHTTPClient"}, {"value": 115, "name": "GetServerTLSConfig"}, {"value": 87, "name": "HTTPRequestScheme"}, {"value": 550, "name": "InitDefaults"}, {"value": 115, "name": "InitializeNodeTLSConfigs"}, {"value": 125, "name": "PGURL"}], "name": "dumpContext."}, {"value": 336, "name": "dumpCreateTable"}, {"value": 32, "name": "dumpCtx"}, {"value": 9931, "name": "dumpTableData"}, {"value": 231, "name": "durationFlag"}, {"value": 242, "name": "endsWithIncompleteTxn"}, {"value": 16, "name": "errInvalidSyntax"}, {"children": [{"value": 108, "name": "Error"}], "name": "errTryHardShutdown."}, {"value": 8, "name": "examples"}, {"value": 671, "name": "execSyscmd"}, {"value": 521, "name": "expandTabsAndNewLines"}, {"value": 410, "name": "extraClientFlagInit"}, {"value": 544, "name": "extraServerFlagInit"}, {"value": 1595, "name": "formatVal"}, {"value": 1057, "name": "gcProfiles"}, {"value": 8, "name": "genAutocompleteCmd"}, {"value": 8, "name": "genCmd"}, {"value": 24, "name": "genCmds"}, {"value": 8, "name": "genHAProxyCmd"}, {"value": 8, "name": "genManCmd"}, {"value": 254, "name": "getAdminClient"}, {"value": 498, "name": "getAllRowStrings"}, {"value": 556, "name": "getClientGRPCConn"}, {"value": 414, "name": "getColumnStrings"}, {"value": 1491, "name": "getDumpMetadata"}, {"value": 951, "name": "getFormattedTag"}, {"value": 6458, "name": "getMetadataForTable"}, {"value": 772, "name": "getNextRowStrings"}, {"value": 832, "name": "getPasswordAndMakeSQLClient"}, {"value": 232, "name": "getProtoValue"}, {"value": 254, "name": "getStatusClient"}, {"value": 1579, "name": "getTableNames"}, {"children": [{"value": 80, "name": "func1"}, {"value": 48, "name": "func10"}, {"value": 28, "name": "func11"}, {"value": 28, "name": "func12"}, {"value": 28, "name": "func13"}, {"value": 28, "name": "func14"}, {"value": 28, "name": "func15"}, {"value": 28, "name": "func16"}, {"value": 80, "name": "func17"}, {"value": 80, "name": "func18"}, {"value": 1842, "name": "func2"}, {"value": 80, "name": "func3"}, {"value": 173, "name": "func4"}, {"value": 80, "name": "func5"}, {"value": 80, "name": "func6"}, {"value": 80, "name": "func7"}, {"value": 80, "name": "func8"}, {"value": 121, "name": "func9"}], "name": "glob."}, {"value": 16, "name": "haProxyPath"}, {"value": 5148, "name": "init"}, {"children": [{"value": 98, "name": "1"}, {"value": 98, "name": "10"}, {"value": 98, "name": "11"}, {"value": 205, "name": "12"}, {"value": 352, "name": "2"}, {"children": [{"value": 187, "name": "func1"}], "name": "2."}, {"value": 98, "name": "3"}, {"value": 7757, "name": "4"}, {"children": [{"value": 93, "name": "func1"}, {"value": 93, "name": "func2"}, {"value": 344, "name": "func3"}], "name": "4."}, {"value": 420, "name": "5"}, {"value": 94, "name": "6"}, {"value": 98, "name": "7"}, {"value": 98, "name": "8"}, {"value": 124, "name": "9"}], "name": "init."}, {"value": 90, "name": "initBacktrace"}, {"value": 94, "name": "initBlockProfile"}, {"value": 490, "name": "initCPUProfile"}, {"children": [{"value": 418, "name": "func1"}, {"children": [{"value": 83, "name": "1"}, {"value": 1007, "name": "2"}], "name": "func1."}], "name": "initCPUProfile."}, {"value": 1229, "name": "initMemProfile"}, {"children": [{"value": 260, "name": "func1"}, {"children": [{"value": 1615, "name": "1"}], "name": "func1."}], "name": "initMemProfile."}, {"value": 1, "name": "initdone."}, {"value": 231, "name": "int64Flag"}, {"value": 231, "name": "intFlag"}, {"value": 402, "name": "isEndOfStatement"}, {"children": [{"value": 20, "name": "func1"}], "name": "isEndOfStatement."}, {"value": 1, "name": "isInteractive"}, {"value": 70, "name": "isNotGraphicUnicode"}, {"value": 88, "name": "isNotGraphicUnicodeOrTabOrNewline"}, {"value": 42, "name": "isNotPrintableASCII"}, {"value": 8, "name": "jemallocHeapDump"}, {"value": 8, "name": "keySize"}, {"children": [{"value": 305, "name": "String"}], "name": "keyType."}, {"value": 515, "name": "keyTypes"}, {"value": 1347, "name": "loadRangeDescriptor"}, {"children": [{"value": 398, "name": "func1"}], "name": "loadRangeDescriptor."}, {"value": 24, "name": "lsNodesColumnHeaders"}, {"value": 8, "name": "lsRangesCmd"}, {"value": 219, "name": "makeQuery"}, {"children": [{"value": 502, "name": "func1"}], "name": "makeQuery."}, {"value": 348, "name": "makeSQLClient"}, {"value": 1183, "name": "makeUsageString"}, {"value": 16, "name": "manPath"}, {"value": 8, "name": "maxResults"}, {"value": 8, "name": "maxSizePerProfile"}, {"value": 1221, "name": "maybeRerunBackground"}, {"value": 383, "name": "maybeUnmarshalInline"}, {"value": 8, "name": "nodeCmd"}, {"value": 24, "name": "nodeCmds"}, {"value": 3871, "name": "nodeStatusesToRows"}, {"value": 24, "name": "nodesColumnHeaders"}, {"value": 473, "name": "openStore"}, {"value": 8, "name": "options"}, {"value": 1, "name": "overwriteFiles"}, {"value": 415, "name": "parseKeyType"}, {"value": 351, "name": "parseRangeID"}, {"value": 1722, "name": "parseZoneName"}, {"value": 1, "name": "password"}, {"value": 681, "name": "preparePrompts"}, {"value": 170, "name": "printCliHelp"}, {"value": 500, "name": "printKey"}, {"value": 1319, "name": "printKeyValue"}, {"value": 7387, "name": "printQueryOutput"}, {"value": 596, "name": "printRaftLogEntry"}, {"value": 415, "name": "printRangeDescriptor"}, {"value": 1479, "name": "queryDescriptorIDPath"}, {"value": 944, "name": "queryDescriptors"}, {"children": [{"value": 60, "name": "func1"}], "name": "queryDescriptors."}, {"value": 1253, "name": "queryNamespace"}, {"children": [{"value": 60, "name": "func1"}], "name": "queryNamespace."}, {"value": 1383, "name": "queryZone"}, {"children": [{"value": 60, "name": "func1"}], "name": "queryZone."}, {"value": 481, "name": "queryZonePath"}, {"value": 1436, "name": "queryZones"}, {"children": [{"value": 60, "name": "func1"}], "name": "queryZones."}, {"value": 8, "name": "quitCmd"}, {"value": 8, "name": "rangeCmd"}, {"value": 24, "name": "rangeCmds"}, {"value": 481, "name": "readZoneConfig"}, {"value": 214, "name": "runCreateCACert"}, {"value": 403, "name": "runCreateClientCert"}, {"value": 242, "name": "runCreateNodeCert"}, {"value": 1967, "name": "runDebugCheckStoreCmd"}, {"children": [{"value": 322, "name": "func1"}, {"value": 1446, "name": "func2"}], "name": "runDebugCheckStoreCmd."}, {"value": 464, "name": "runDebugCompact"}, {"value": 2380, "name": "runDebugGCCmd"}, {"children": [{"value": 903, "name": "func1"}, {"value": 1, "name": "func2"}, {"value": 19, "name": "func3"}], "name": "runDebugGCCmd."}, {"value": 652, "name": "runDebugKeys"}, {"value": 1330, "name": "runDebugRaftLog"}, {"value": 1424, "name": "runDebugRangeData"}, {"value": 1162, "name": "runDebugRangeDescriptors"}, {"value": 645, "name": "runDebugSSTables"}, {"value": 9349, "name": "runDebugZip"}, {"children": [{"value": 112, "name": "func1"}], "name": "runDebugZip."}, {"value": 1469, "name": "runDump"}, {"value": 420, "name": "runGenAutocompleteCmd"}, {"value": 722, "name": "runGenExamplesCmd"}, {"value": 2166, "name": "runGenHAProxyCmd"}, {"value": 1772, "name": "runGenManCmd"}, {"value": 510, "name": "runGetUser"}, {"value": 1834, "name": "runGetZone"}, {"value": 1924, "name": "runInteractive"}, {"children": [{"value": 64, "name": "func1"}], "name": "runInteractive."}, {"value": 3686, "name": "runListCerts"}, {"value": 1387, "name": "runLsNodes"}, {"value": 3197, "name": "runLsRanges"}, {"value": 385, "name": "runLsUsers"}, {"value": 2202, "name": "runLsZones"}, {"value": 567, "name": "runQuery"}, {"children": [{"value": 60, "name": "func1"}], "name": "runQuery."}, {"value": 918, "name": "runQueryAndFormatResults"}, {"children": [{"value": 60, "name": "func1"}], "name": "runQueryAndFormatResults."}, {"value": 1439, "name": "runQuit"}, {"children": [{"value": 188, "name": "func1"}, {"value": 198, "name": "func2"}], "name": "runQuit."}, {"value": 510, "name": "runRmUser"}, {"value": 609, "name": "runRmZone"}, {"children": [{"value": 984, "name": "func1"}], "name": "runRmZone."}, {"value": 958, "name": "runSetUser"}, {"value": 543, "name": "runSetZone"}, {"children": [{"value": 2607, "name": "func1"}], "name": "runSetZone."}, {"value": 672, "name": "runSplitRange"}, {"value": 3950, "name": "runStart"}, {"children": [{"value": 363, "name": "func1"}, {"children": [{"value": 5361, "name": "1"}], "name": "func1."}, {"value": 310, "name": "func2"}, {"value": 550, "name": "func3"}], "name": "runStart."}, {"value": 278, "name": "runStatements"}, {"value": 1538, "name": "runStatusNode"}, {"value": 693, "name": "runTerm"}, {"value": 16, "name": "serverAdvertiseHost"}, {"value": 504, "name": "serverCfg"}, {"value": 16, "name": "serverConnHost"}, {"value": 16, "name": "serverConnPort"}, {"value": 16, "name": "serverHTTPHost"}, {"value": 16, "name": "serverHTTPPort"}, {"value": 1, "name": "serverInsecure"}, {"value": 16, "name": "serverSSLCertsDir"}, {"value": 171, "name": "setDefaultSizeParameters"}, {"value": 382, "name": "setDefaultStderrVerbosity"}, {"value": 195, "name": "setFlagFromEnv"}, {"value": 8, "name": "setUserCmd"}, {"value": 8, "name": "setZoneCmd"}, {"value": 2788, "name": "setupAndInitializeLoggingAndProfiling"}, {"value": 8, "name": "specialZonesByID"}, {"value": 16, "name": "sqlConnDBName"}, {"value": 16, "name": "sqlConnURL"}, {"value": 16, "name": "sqlConnUser"}, {"children": [{"value": 105, "name": "AdminURL"}, {"value": 114, "name": "ClientHasValidCerts"}, {"value": 125, "name": "GetCACertPath"}, {"value": 115, "name": "GetCertificateManager"}, {"value": 193, "name": "GetClientCertPaths"}, {"value": 115, "name": "GetClientTLSConfig"}, {"value": 225, "name": "GetHTTPClient"}, {"value": 115, "name": "GetServerTLSConfig"}, {"value": 87, "name": "HTTPRequestScheme"}, {"value": 550, "name": "InitDefaults"}, {"value": 115, "name": "InitializeNodeTLSConfigs"}, {"value": 125, "name": "PGURL"}], "name": "sqlContext."}, {"value": 32, "name": "sqlCtx"}, {"value": 532, "name": "sqlRowsToStrings"}, {"value": 8, "name": "sqlShellCmd"}, {"value": 1, "name": "startBackground"}, {"value": 8, "name": "startCmd"}, {"value": 80, "name": "statictmp_126"}, {"value": 136, "name": "statictmp_1287"}, {"value": 80, "name": "statictmp_131"}, {"value": 80, "name": "statictmp_135"}, {"value": 8, "name": "statictmp_1475"}, {"value": 32, "name": "statictmp_1612"}, {"value": 32, "name": "statictmp_1615"}, {"value": 32, "name": "statictmp_1618"}, {"value": 32, "name": "statictmp_1621"}, {"value": 32, "name": "statictmp_1626"}, {"value": 32, "name": "statictmp_2230"}, {"value": 136, "name": "statictmp_2243"}, {"value": 48, "name": "statictmp_2253"}, {"value": 24, "name": "statictmp_239"}, {"value": 72, "name": "statictmp_2543"}, {"value": 72, "name": "statictmp_2547"}, {"value": 72, "name": "statictmp_2548"}, {"value": 72, "name": "statictmp_2549"}, {"value": 72, "name": "statictmp_2553"}, {"value": 4, "name": "statictmp_2599"}, {"value": 136, "name": "statictmp_2735"}, {"value": 136, "name": "statictmp_2961"}, {"value": 552, "name": "statictmp_3100"}, {"value": 552, "name": "statictmp_3101"}, {"value": 552, "name": "statictmp_3102"}, {"value": 552, "name": "statictmp_3103"}, {"value": 32, "name": "statictmp_3104"}, {"value": 552, "name": "statictmp_3105"}, {"value": 552, "name": "statictmp_3106"}, {"value": 552, "name": "statictmp_3107"}, {"value": 552, "name": "statictmp_3108"}, {"value": 552, "name": "statictmp_3109"}, {"value": 552, "name": "statictmp_3110"}, {"value": 552, "name": "statictmp_3111"}, {"value": 552, "name": "statictmp_3112"}, {"value": 552, "name": "statictmp_3113"}, {"value": 552, "name": "statictmp_3114"}, {"value": 552, "name": "statictmp_3115"}, {"value": 552, "name": "statictmp_3116"}, {"value": 552, "name": "statictmp_3117"}, {"value": 552, "name": "statictmp_3118"}, {"value": 552, "name": "statictmp_3119"}, {"value": 96, "name": "statictmp_3120"}, {"value": 552, "name": "statictmp_3121"}, {"value": 552, "name": "statictmp_3122"}, {"value": 552, "name": "statictmp_3123"}, {"value": 552, "name": "statictmp_3124"}, {"value": 552, "name": "statictmp_3125"}, {"value": 552, "name": "statictmp_3126"}, {"value": 552, "name": "statictmp_3127"}, {"value": 32, "name": "statictmp_3128"}, {"value": 16, "name": "statictmp_3129"}, {"value": 552, "name": "statictmp_3130"}, {"value": 240, "name": "statictmp_3131"}, {"value": 552, "name": "statictmp_3132"}, {"value": 16, "name": "statictmp_3133"}, {"value": 552, "name": "statictmp_3134"}, {"value": 552, "name": "statictmp_3135"}, {"value": 552, "name": "statictmp_3136"}, {"value": 16, "name": "statictmp_3137"}, {"value": 552, "name": "statictmp_3138"}, {"value": 552, "name": "statictmp_3139"}, {"value": 552, "name": "statictmp_3140"}, {"value": 552, "name": "statictmp_3141"}, {"value": 552, "name": "statictmp_3142"}, {"value": 552, "name": "statictmp_3143"}, {"value": 552, "name": "statictmp_3144"}, {"value": 32, "name": "statictmp_3145"}, {"value": 552, "name": "statictmp_3146"}, {"value": 552, "name": "statictmp_3147"}, {"value": 552, "name": "statictmp_3148"}, {"value": 552, "name": "statictmp_3149"}, {"value": 552, "name": "statictmp_3150"}, {"value": 32, "name": "statictmp_3151"}, {"value": 552, "name": "statictmp_3152"}, {"value": 32, "name": "statictmp_3160"}, {"value": 32, "name": "statictmp_3161"}, {"value": 16, "name": "statictmp_3172"}, {"value": 64, "name": "statictmp_3173"}, {"value": 88, "name": "statictmp_393"}, {"value": 88, "name": "statictmp_397"}, {"value": 4, "name": "statictmp_481"}, {"value": 88, "name": "statictmp_642"}, {"value": 88, "name": "statictmp_643"}, {"value": 88, "name": "statictmp_647"}, {"value": 88, "name": "statictmp_650"}, {"value": 88, "name": "statictmp_653"}, {"value": 88, "name": "statictmp_659"}, {"value": 88, "name": "statictmp_665"}, {"value": 88, "name": "statictmp_666"}, {"value": 88, "name": "statictmp_668"}, {"value": 88, "name": "statictmp_679"}, {"value": 88, "name": "statictmp_680"}, {"value": 88, "name": "statictmp_684"}, {"value": 8, "name": "stderr"}, {"value": 193, "name": "stopperContext"}, {"value": 244, "name": "stringFlag"}, {"value": 790, "name": "tryMeta"}, {"value": 1925, "name": "tryRaftLogEntry"}, {"value": 417, "name": "tryRangeDescriptor"}, {"value": 3319, "name": "tryRangeIDKey"}, {"value": 378, "name": "tryTxn"}, {"value": 295, "name": "unmarshalProto"}, {"value": 469, "name": "unquoteArg"}, {"value": 143, "name": "usageAndError"}, {"value": 8, "name": "userCmd"}, {"value": 24, "name": "userCmds"}, {"value": 231, "name": "varFlag"}, {"value": 8, "name": "versionCmd"}, {"value": 485, "name": "wrapDescription"}, {"children": [{"value": 271, "name": "func1"}], "name": "wrapDescription."}, {"value": 1558, "name": "writeInserts"}, {"value": 374, "name": "writeJemallocProfile"}, {"children": [{"value": 113, "name": "func1"}], "name": "writeJemallocProfile."}, {"value": 8, "name": "zoneCmd"}, {"value": 24, "name": "zoneCmds"}, {"value": 16, "name": "zoneConfig"}, {"value": 1, "name": "zoneDisableReplication"}, {"value": 56, "name": "go.itab.*dumpMode,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*mvccKey,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 48, "name": "go.itab.*rowIter,github.com/cockroachdb/cockroach/pkg/cli.rowStrIter"}, {"value": 48, "name": "go.itab.*rowSliceIter,github.com/cockroachdb/cockroach/pkg/cli.rowStrIter"}, {"value": 56, "name": "go.itab.*statementsValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*tableDisplayFormat,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 40, "name": "go.itab.errTryHardShutdown,error"}], "name": "cli."}, {"children": [{"value": 64, "name": "AdvertiseHost"}, {"value": 64, "name": "AllowCAKeyReuse"}, {"value": 64, "name": "Attrs"}, {"value": 64, "name": "Background"}, {"value": 64, "name": "CAKey"}, {"value": 64, "name": "Cache"}, {"value": 64, "name": "CertificateLifetime"}, {"value": 64, "name": "CertsDir"}, {"value": 64, "name": "ClientHost"}, {"value": 64, "name": "ClientInsecure"}, {"value": 64, "name": "ClientPort"}, {"value": 64, "name": "Database"}, {"value": 64, "name": "DumpMode"}, {"value": 64, "name": "DumpTime"}, {"value": 64, "name": "Execute"}, {"value": 64, "name": "From"}, {"value": 64, "name": "Join"}, {"value": 64, "name": "KeySize"}, {"value": 64, "name": "ListeningURLFile"}, {"value": 64, "name": "Locality"}, {"value": 64, "name": "MaxOffset"}, {"value": 64, "name": "MaxResults"}, {"value": 64, "name": "OverwriteFiles"}, {"value": 64, "name": "PIDFile"}, {"value": 64, "name": "Password"}, {"value": 64, "name": "Replicated"}, {"value": 64, "name": "SQLMem"}, {"value": 64, "name": "ServerCertsDir"}, {"value": 64, "name": "ServerHTTPHost"}, {"value": 64, "name": "ServerHTTPPort"}, {"value": 64, "name": "ServerHost"}, {"value": 64, "name": "ServerInsecure"}, {"value": 64, "name": "ServerPort"}, {"value": 64, "name": "Sizes"}, {"value": 64, "name": "Socket"}, {"value": 64, "name": "Store"}, {"value": 64, "name": "TableDisplayFormat"}, {"value": 64, "name": "To"}, {"value": 64, "name": "URL"}, {"value": 64, "name": "User"}, {"value": 64, "name": "Values"}, {"value": 64, "name": "ZoneConfig"}, {"value": 64, "name": "ZoneDisableReplication"}, {"value": 158, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "cli/cliflags."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 622, "name": "FromString"}, {"value": 280, "name": "Marshal"}, {"value": 575, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 184, "name": "Size"}, {"value": 518, "name": "String"}, {"value": 2766, "name": "Unmarshal"}], "name": "(*Constraint)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*Constraint_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 573, "name": "MarshalTo"}, {"value": 224, "name": "MarshalYAML"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 301, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2029, "name": "Unmarshal"}, {"value": 489, "name": "UnmarshalYAML"}], "name": "(*Constraints)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}], "name": "(*GCPolicy)."}, {"children": [{"value": 302, "name": "ComputeSplitKey"}, {"value": 141, "name": "Descriptor"}, {"value": 223, "name": "Equal"}, {"value": 233, "name": "GetIndex"}, {"value": 220, "name": "GetLargestObjectID"}, {"value": 224, "name": "GetValue"}, {"value": 420, "name": "GetZoneConfigForKey"}, {"value": 280, "name": "Marshal"}, {"value": 550, "name": "MarshalTo"}, {"value": 265, "name": "NeedsSplit"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 284, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2013, "name": "Unmarshal"}], "name": "(*SystemConfig)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1434, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 486, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4495, "name": "Unmarshal"}, {"value": 214, "name": "Validate"}], "name": "(*ZoneConfig)."}, {"children": [{"value": 371, "name": "String"}], "name": "Constraint."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "Constraint_Type."}, {"value": 8, "name": "Constraint_Type_name"}, {"value": 8, "name": "Constraint_Type_value"}, {"children": [{"value": 968, "name": "MarshalYAML"}], "name": "Constraints."}, {"value": 210, "name": "DefaultZoneConfig"}, {"value": 16, "name": "ErrIntOverflowConfig"}, {"value": 16, "name": "ErrInvalidLengthConfig"}, {"value": 907, "name": "MigrateZoneConfig"}, {"value": 288, "name": "ObjectIDForKey"}, {"value": 24, "name": "StaticSplits"}, {"children": [{"value": 1611, "name": "ComputeSplitKey"}, {"children": [{"value": 394, "name": "func1"}], "name": "ComputeSplitKey."}, {"value": 684, "name": "Equal"}, {"value": 399, "name": "GetIndex"}, {"children": [{"value": 157, "name": "func1"}], "name": "GetIndex."}, {"value": 1862, "name": "GetLargestObjectID"}, {"children": [{"value": 157, "name": "func1"}, {"value": 157, "name": "func2"}, {"value": 243, "name": "func3"}], "name": "GetLargestObjectID."}, {"value": 151, "name": "GetValue"}, {"value": 853, "name": "GetZoneConfigForKey"}, {"value": 186, "name": "NeedsSplit"}, {"value": 190, "name": "get"}, {"value": 505, "name": "getZoneConfigForID"}], "name": "SystemConfig."}, {"children": [{"value": 810, "name": "Validate"}], "name": "ZoneConfig."}, {"value": 8, "name": "ZoneConfigHook"}, {"value": 583, "name": "decodeDescMetadataID"}, {"value": 72, "name": "defaultZoneConfig"}, {"value": 122, "name": "encodeVarintConfig"}, {"value": 24, "name": "fileDescriptorConfig"}, {"value": 1585, "name": "init"}, {"children": [{"value": 332, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipConfig"}, {"value": 34, "name": "sovConfig"}, {"value": 16, "name": "statictmp_141"}, {"value": 8, "name": "statictmp_146"}, {"value": 8, "name": "statictmp_150"}, {"value": 24, "name": "statictmp_152"}, {"value": 8, "name": "statictmp_156"}, {"value": 8, "name": "statictmp_162"}, {"value": 24, "name": "statictmp_164"}, {"value": 8, "name": "statictmp_168"}, {"value": 40, "name": "statictmp_433"}, {"value": 24, "name": "statictmp_493"}, {"value": 64, "name": "statictmp_536"}, {"value": 72, "name": "statictmp_581"}, {"value": 72, "name": "statictmp_584"}, {"value": 192, "name": "statictmp_618"}, {"value": 585, "name": "statictmp_619"}, {"value": 12, "name": "statictmp_623"}, {"value": 48, "name": "statictmp_624"}, {"value": 48, "name": "statictmp_628"}, {"value": 12, "name": "statictmp_629"}, {"value": 16, "name": "statictmp_637"}, {"value": 8, "name": "testingLargestIDHook"}, {"value": 12, "name": "testingLock"}, {"value": 56, "name": "go.itab.*Constraint,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Constraints,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GCPolicy,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SystemConfig,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ZoneConfig,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "config."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 846, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 310, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2715, "name": "Unmarshal"}], "name": "(*BootstrapInfo)."}, {"children": [{"value": 76, "name": "(github.com/cockroachdb/cockroach/pkg/gossip.hasOutgoingLocked)-fm"}, {"value": 118, "name": "(github.com/cockroachdb/cockroach/pkg/gossip.updateNodeAddress)-fm"}, {"value": 118, "name": "(github.com/cockroachdb/cockroach/pkg/gossip.updateSystemConfig)-fm"}, {"value": 275, "name": "AddInfo"}, {"value": 221, "name": "AddInfoProto"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 404, "name": "EnableSimulationCycler"}, {"value": 20, "name": "FinishEventLog"}, {"value": 36, "name": "GetClusterID"}, {"value": 750, "name": "GetInfo"}, {"value": 202, "name": "GetInfoProto"}, {"value": 634, "name": "GetInfoStatus"}, {"value": 27, "name": "GetNodeAddr"}, {"value": 224, "name": "GetNodeDescriptor"}, {"value": 224, "name": "GetNodeIDAddress"}, {"value": 22, "name": "GetNodeMetrics"}, {"value": 414, "name": "GetResolvers"}, {"value": 232, "name": "GetSystemConfig"}, {"value": 36, "name": "Gossip"}, {"value": 250, "name": "Incoming"}, {"value": 901, "name": "LogStatus"}, {"value": 194, "name": "MaxHops"}, {"children": [{"value": 6, "name": "func1"}], "name": "MaxHops."}, {"value": 247, "name": "Outgoing"}, {"value": 690, "name": "RegisterCallback"}, {"children": [{"value": 115, "name": "func1"}], "name": "RegisterCallback."}, {"value": 496, "name": "RegisterSystemConfigChannel"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 162, "name": "SetBootstrapInterval"}, {"value": 18, "name": "SetClusterID"}, {"value": 162, "name": "SetCullInterval"}, {"value": 20, "name": "SetEventLog"}, {"value": 625, "name": "SetNodeDescriptor"}, {"value": 162, "name": "SetStallInterval"}, {"value": 1888, "name": "SetStorage"}, {"children": [{"value": 318, "name": "func1"}], "name": "SetStorage."}, {"value": 176, "name": "SimulationCycle"}, {"value": 162, "name": "Start"}, {"value": 235, "name": "addInfoLocked"}, {"value": 285, "name": "bootstrap"}, {"children": [{"value": 1244, "name": "func1"}, {"children": [{"value": 1302, "name": "1"}], "name": "func1."}], "name": "bootstrap."}, {"value": 1311, "name": "clientStatus"}, {"value": 230, "name": "doDisconnected"}, {"value": 309, "name": "findClient"}, {"value": 1007, "name": "getNextBootstrapAddressLocked"}, {"children": [{"value": 106, "name": "func1"}], "name": "getNextBootstrapAddressLocked."}, {"value": 1025, "name": "getNodeDescriptorLocked"}, {"value": 149, "name": "getNodeIDAddressLocked"}, {"value": 603, "name": "hasOutgoingLocked"}, {"children": [{"value": 146, "name": "func1"}], "name": "hasOutgoingLocked."}, {"value": 107, "name": "jitteredInterval"}, {"value": 285, "name": "manage"}, {"children": [{"value": 890, "name": "func1"}, {"children": [{"value": 886, "name": "1"}, {"children": [{"value": 21, "name": "1"}, {"value": 122, "name": "2"}], "name": "1."}], "name": "func1."}], "name": "manage."}, {"value": 1133, "name": "maybeAddBootstrapAddressLocked"}, {"value": 1354, "name": "maybeAddResolverLocked"}, {"value": 1003, "name": "maybeCleanupBootstrapAddressesLocked"}, {"children": [{"value": 13, "name": "func1"}, {"value": 792, "name": "func2"}], "name": "maybeCleanupBootstrapAddressesLocked."}, {"value": 1058, "name": "maybeSignalStatusChangeLocked"}, {"value": 112, "name": "recomputeMaxPeersLocked"}, {"value": 1052, "name": "removeClientLocked"}, {"value": 111, "name": "removeNodeDescriptorLocked"}, {"value": 388, "name": "setResolvers"}, {"value": 135, "name": "signalConnectedLocked"}, {"value": 98, "name": "signalStalledLocked"}, {"value": 1221, "name": "startClientLocked"}, {"value": 1374, "name": "tightenNetwork"}, {"value": 3589, "name": "updateNodeAddress"}, {"value": 1092, "name": "updateSystemConfig"}], "name": "(*Gossip)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 789, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 352, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3605, "name": "Unmarshal"}], "name": "(*Info)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1551, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 512, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3320, "name": "Unmarshal"}], "name": "(*InfoStatus)."}, {"children": [{"value": 214, "name": "String"}], "name": "(*Metrics)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "GetUser"}, {"value": 280, "name": "Marshal"}, {"value": 3206, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 880, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6440, "name": "Unmarshal"}], "name": "(*Request)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 3387, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 968, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 7009, "name": "Unmarshal"}], "name": "(*Response)."}, {"children": [{"value": 159, "name": "MatchString"}], "name": "(*allMatcher)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 114, "name": "close"}, {"value": 1458, "name": "gossip"}, {"children": [{"value": 90, "name": "func1"}, {"value": 296, "name": "func2"}, {"children": [{"value": 195, "name": "1"}], "name": "func2."}], "name": "gossip."}, {"value": 3167, "name": "handleResponse"}, {"value": 545, "name": "requestGossip"}, {"value": 1668, "name": "sendGossip"}, {"value": 664, "name": "startLocked"}, {"children": [{"value": 1996, "name": "func1"}, {"children": [{"value": 116, "name": "1"}, {"value": 629, "name": "2"}], "name": "func1."}], "name": "startLocked."}], "name": "(*client)."}, {"children": [{"value": 439, "name": "Gossip"}], "name": "(*gossipClient)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*gossipGossipClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*gossipGossipServer)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 744, "name": "String"}, {"children": [{"value": 487, "name": "func1"}], "name": "String."}, {"value": 1180, "name": "addInfo"}, {"value": 804, "name": "combine"}, {"value": 213, "name": "delta"}, {"children": [{"value": 246, "name": "func1"}], "name": "delta."}, {"value": 342, "name": "getHighWaterStamps"}, {"value": 234, "name": "getInfo"}, {"value": 876, "name": "leastUseful"}, {"children": [{"value": 352, "name": "func1"}], "name": "leastUseful."}, {"value": 197, "name": "mostDistant"}, {"children": [{"value": 255, "name": "func1"}], "name": "mostDistant."}, {"value": 930, "name": "newInfo"}, {"value": 580, "name": "processCallbacks"}, {"value": 988, "name": "registerCallback"}, {"children": [{"value": 335, "name": "func1"}, {"value": 201, "name": "func2"}], "name": "registerCallback."}, {"value": 1179, "name": "runCallbacks"}, {"children": [{"value": 220, "name": "func1"}, {"value": 359, "name": "func2"}], "name": "runCallbacks."}, {"value": 394, "name": "visitInfos"}], "name": "(*infoStore)."}, {"children": [{"value": 185, "name": "addNode"}, {"value": 71, "name": "addPlaceholder"}, {"value": 178, "name": "removeNode"}, {"value": 79, "name": "resolvePlaceholder"}, {"value": 271, "name": "updateGauge"}], "name": "(*nodeSet)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 180, "name": "GetClusterID"}, {"value": 174, "name": "GetNodeAddr"}, {"value": 19, "name": "GetNodeMetrics"}, {"value": 2952, "name": "Gossip"}, {"children": [{"value": 754, "name": "func1"}, {"children": [{"value": 81, "name": "1"}], "name": "func1."}, {"value": 82, "name": "func2"}, {"value": 481, "name": "func3"}, {"children": [{"value": 235, "name": "1"}], "name": "func3."}], "name": "Gossip."}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 162, "name": "SetClusterID"}, {"value": 17, "name": "SetEventLog"}, {"value": 4655, "name": "gossipReceiver"}, {"children": [{"value": 338, "name": "func1"}], "name": "gossipReceiver."}, {"value": 98, "name": "maybeTightenLocked"}, {"value": 976, "name": "start"}, {"children": [{"value": 260, "name": "func1"}, {"value": 52, "name": "func2"}, {"value": 183, "name": "func3"}], "name": "start."}, {"value": 1356, "name": "status"}], "name": "(*server)."}, {"children": [{"value": 94, "name": "Recv-fm"}], "name": "(Gossip_GossipServer)."}, {"value": 16, "name": "ErrIntOverflowGossip"}, {"value": 16, "name": "ErrInvalidLengthGossip"}, {"children": [{"value": 139, "name": "AddLogTag"}, {"value": 123, "name": "AddLogTagInt"}, {"value": 123, "name": "AddLogTagInt64"}, {"value": 139, "name": "AddLogTagStr"}, {"value": 139, "name": "AnnotateCtx"}, {"value": 195, "name": "AnnotateCtxWithSpan"}, {"value": 84, "name": "FinishEventLog"}, {"value": 132, "name": "GetClusterID"}, {"value": 95, "name": "GetNodeAddr"}, {"value": 137, "name": "Gossip"}, {"value": 139, "name": "ResetAndAnnotateCtx"}, {"value": 95, "name": "SetClusterID"}, {"value": 139, "name": "SetEventLog"}], "name": "Gossip."}, {"value": 8, "name": "GossipStoresInterval"}, {"value": 168, "name": "MakeDeadReplicasKey"}, {"value": 121, "name": "MakeKey"}, {"value": 168, "name": "MakeNodeIDKey"}, {"value": 168, "name": "MakeNodeLivenessKey"}, {"value": 209, "name": "MakePrefixPattern"}, {"value": 168, "name": "MakeStoreKey"}, {"value": 56, "name": "MetaBytesReceived"}, {"value": 56, "name": "MetaBytesSent"}, {"value": 56, "name": "MetaConnectionsIncomingGauge"}, {"value": 56, "name": "MetaConnectionsOutgoingGauge"}, {"value": 56, "name": "MetaConnectionsRefused"}, {"value": 56, "name": "MetaInfosReceived"}, {"value": 56, "name": "MetaInfosSent"}, {"children": [{"value": 516, "name": "String"}], "name": "Metrics."}, {"value": 2506, "name": "New"}, {"value": 855, "name": "NodeIDFromKey"}, {"value": 101, "name": "RegisterGossipServer"}, {"value": 249, "name": "_Gossip_Gossip_Handler"}, {"value": 96, "name": "_Gossip_serviceDesc"}, {"children": [{"value": 6, "name": "MatchString"}], "name": "allMatcher."}, {"value": 122, "name": "encodeVarintGossip"}, {"value": 16, "name": "errNotFresh"}, {"value": 677, "name": "extractKeys"}, {"value": 24, "name": "fileDescriptorGossip"}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "gossipGossipClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "gossipGossipServer."}, {"value": 639, "name": "init"}, {"children": [{"value": 283, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 161, "name": "maxPeers"}, {"value": 24, "name": "monoTime"}, {"value": 208, "name": "monotonicUnixNano"}, {"value": 3221, "name": "newClient"}, {"value": 7133, "name": "newServer"}, {"children": [{"value": 430, "name": "asSlice"}], "name": "nodeSet."}, {"value": 1621, "name": "skipGossip"}, {"value": 34, "name": "sovGossip"}, {"value": 72, "name": "statictmp_107"}, {"value": 32, "name": "statictmp_1180"}, {"value": 32, "name": "statictmp_1705"}, {"value": 32, "name": "statictmp_1735"}, {"value": 32, "name": "statictmp_1741"}, {"value": 32, "name": "statictmp_1747"}, {"value": 40, "name": "statictmp_1845"}, {"value": 40, "name": "statictmp_1877"}, {"value": 32, "name": "statictmp_1882"}, {"value": 32, "name": "statictmp_2295"}, {"value": 16, "name": "statictmp_2296"}, {"value": 800, "name": "statictmp_2297"}, {"value": 24, "name": "statictmp_566"}, {"value": 40, "name": "statictmp_67"}, {"value": 8, "name": "statictmp_778"}, {"value": 8, "name": "statictmp_784"}, {"value": 8, "name": "statictmp_790"}, {"value": 8, "name": "statictmp_792"}, {"value": 8, "name": "statictmp_796"}, {"value": 8, "name": "statictmp_802"}, {"value": 56, "name": "go.itab.*BootstrapInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Info,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InfoStatus,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InfoStatus,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Request,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Response,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*gossipClient,github.com/cockroachdb/cockroach/pkg/gossip.GossipClient"}, {"value": 96, "name": "go.itab.*gossipGossipClient,github.com/cockroachdb/cockroach/pkg/gossip.Gossip_GossipClient"}, {"value": 96, "name": "go.itab.*gossipGossipServer,github.com/cockroachdb/cockroach/pkg/gossip.Gossip_GossipServer"}, {"value": 40, "name": "go.itab.*server,github.com/cockroachdb/cockroach/pkg/gossip.GossipServer"}, {"value": 40, "name": "go.itab.allMatcher,github.com/cockroachdb/cockroach/pkg/gossip.stringMatcher"}], "name": "gossip."}, {"children": [{"children": [{"value": 24, "name": "Addr"}, {"value": 589, "name": "GetAddress"}, {"value": 23, "name": "Type"}], "name": "(*socketResolver)."}, {"value": 509, "name": "NewResolver"}, {"value": 729, "name": "NewResolverFromAddress"}, {"value": 250, "name": "NewResolverFromUnresolvedAddr"}, {"value": 354, "name": "ensureHostPort"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "go.itab.*socketResolver,github.com/cockroachdb/cockroach/pkg/gossip/resolver.Resolver"}], "name": "gossip/resolver."}, {"children": [{"children": [{"value": 88, "name": "Error"}], "name": "(*AutoCommitError)."}, {"children": [{"value": 644, "name": "AddRawRequest"}, {"value": 837, "name": "CPut"}, {"value": 681, "name": "CheckConsistency"}, {"value": 751, "name": "Del"}, {"value": 681, "name": "DelRange"}, {"value": 416, "name": "Get"}, {"value": 428, "name": "Inc"}, {"value": 588, "name": "InitPut"}, {"value": 198, "name": "MustPErr"}, {"value": 105, "name": "Put"}, {"value": 105, "name": "PutInline"}, {"value": 18, "name": "RawResponse"}, {"value": 105, "name": "ReverseScan"}, {"value": 105, "name": "Scan"}, {"value": 512, "name": "adminChangeReplicas"}, {"value": 416, "name": "adminMerge"}, {"value": 485, "name": "adminSplit"}, {"value": 426, "name": "adminTransferLease"}, {"value": 214, "name": "appendReqs"}, {"value": 7920, "name": "fillResults"}, {"value": 374, "name": "growReqs"}, {"value": 1165, "name": "initResult"}, {"value": 248, "name": "prepare"}, {"value": 787, "name": "put"}, {"value": 954, "name": "scan"}, {"value": 926, "name": "writeBatch"}], "name": "(*Batch)."}, {"children": [{"value": 176, "name": "(github.com/cockroachdb/cockroach/pkg/internal/client.send)-fm"}, {"value": 256, "name": "AdminChangeReplicas"}, {"value": 203, "name": "AdminMerge"}, {"value": 203, "name": "AdminSplit"}, {"value": 214, "name": "AdminTransferLease"}, {"value": 258, "name": "CPut"}, {"value": 241, "name": "CheckConsistency"}, {"value": 216, "name": "Del"}, {"value": 234, "name": "DelRange"}, {"value": 267, "name": "Get"}, {"value": 278, "name": "GetProto"}, {"value": 23, "name": "GetSender"}, {"value": 280, "name": "Inc"}, {"value": 229, "name": "InitPut"}, {"value": 229, "name": "Put"}, {"value": 229, "name": "PutInline"}, {"value": 239, "name": "ReverseScan"}, {"value": 197, "name": "Run"}, {"value": 239, "name": "Scan"}, {"value": 643, "name": "Txn"}, {"children": [{"value": 104, "name": "func1"}], "name": "Txn."}, {"value": 274, "name": "WriteBatch"}, {"value": 480, "name": "scan"}, {"value": 1076, "name": "send"}], "name": "(*DB)."}, {"children": [{"value": 20, "name": "Exists"}, {"value": 1911, "name": "PrettyValue"}, {"value": 216, "name": "String"}, {"value": 216, "name": "ValueBytes"}, {"value": 178, "name": "ValueInt"}, {"value": 195, "name": "ValueProto"}], "name": "(*KeyValue)."}, {"children": [{"value": 558, "name": "AcquireLease"}, {"children": [{"value": 974, "name": "func1"}], "name": "AcquireLease."}, {"value": 985, "name": "ExtendLease"}, {"value": 227, "name": "ReleaseLease"}, {"value": 84, "name": "TimeRemaining"}, {"value": 166, "name": "leaseAvailable"}, {"value": 372, "name": "timeRemaining"}], "name": "(*LeaseManager)."}, {"children": [{"value": 262, "name": "Error"}], "name": "(*LeaseNotAvailableError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 575, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 118, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*LeaseVal)."}, {"children": [{"value": 239, "name": "String"}], "name": "(*Result)."}, {"children": [{"value": 282, "name": "Send"}], "name": "(*SenderFunc)."}, {"children": [{"value": 176, "name": "(github.com/cockroachdb/cockroach/pkg/internal/client.send)-fm"}, {"value": 13, "name": "AcceptUnhandledRetryableErrors"}, {"value": 268, "name": "AddCommitTrigger"}, {"value": 204, "name": "AnchorKey"}, {"value": 314, "name": "CPut"}, {"value": 793, "name": "CleanupOnError"}, {"value": 171, "name": "CommandCount"}, {"value": 100, "name": "Commit"}, {"value": 633, "name": "CommitInBatch"}, {"value": 366, "name": "CommitOrCleanup"}, {"value": 417, "name": "DebugName"}, {"value": 272, "name": "Del"}, {"value": 290, "name": "DelRange"}, {"value": 106, "name": "EnsureProto"}, {"value": 2393, "name": "Exec"}, {"value": 323, "name": "Get"}, {"value": 15, "name": "GetDeadline"}, {"value": 278, "name": "GetProto"}, {"value": 336, "name": "Inc"}, {"value": 285, "name": "InitPut"}, {"value": 113, "name": "InternalSetPriority"}, {"value": 166, "name": "IsFinalized"}, {"value": 302, "name": "IsRetryableErrMeantForTxn"}, {"value": 165, "name": "Isolation"}, {"value": 121, "name": "NewBatch"}, {"value": 189, "name": "OrigTimestamp"}, {"value": 17, "name": "Proto"}, {"value": 285, "name": "Put"}, {"value": 95, "name": "ResetDeadline"}, {"value": 231, "name": "ReverseScan"}, {"value": 114, "name": "Rollback"}, {"value": 280, "name": "Run"}, {"value": 231, "name": "Scan"}, {"value": 406, "name": "SetDebugName"}, {"value": 345, "name": "SetIsolation"}, {"value": 163, "name": "SetSystemConfigTrigger"}, {"value": 374, "name": "SetTxnAnchorKey"}, {"value": 783, "name": "SetUserPriority"}, {"value": 193, "name": "UpdateDeadlineMaybe"}, {"value": 1619, "name": "UpdateStateOnRemoteRetryableErr"}, {"value": 173, "name": "UserPriority"}, {"value": 237, "name": "commit"}, {"value": 354, "name": "ensureProtoLocked"}, {"value": 191, "name": "rollback"}, {"value": 538, "name": "scan"}, {"value": 3923, "name": "send"}, {"children": [{"value": 2645, "name": "func1"}], "name": "send."}, {"value": 643, "name": "sendEndTxnReq"}, {"value": 168, "name": "status"}, {"value": 748, "name": "updateStateOnRetryableErrLocked"}], "name": "(*Txn)."}, {"children": [{"value": 205, "name": "Batch"}, {"value": 291, "name": "Send"}], "name": "(*sender)."}, {"value": 16, "name": "ErrIntOverflowLease"}, {"value": 16, "name": "ErrInvalidLengthLease"}, {"value": 350, "name": "NewLeaseManager"}, {"value": 133, "name": "NewTxn"}, {"value": 542, "name": "NewTxnWithProto"}, {"children": [{"value": 853, "name": "String"}], "name": "Result."}, {"value": 249, "name": "SendWrapped"}, {"value": 688, "name": "SendWrappedWith"}, {"children": [{"value": 175, "name": "Send"}], "name": "SenderFunc."}, {"value": 122, "name": "encodeVarintLease"}, {"value": 24, "name": "fileDescriptorLease"}, {"value": 694, "name": "firstWriteIndex"}, {"value": 552, "name": "getOneResult"}, {"value": 363, "name": "getOneRow"}, {"value": 432, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 819, "name": "marshalKey"}, {"value": 4987, "name": "marshalValue"}, {"value": 714, "name": "sendAndFill"}, {"children": [{"value": 206, "name": "Batch"}, {"value": 535, "name": "Send"}], "name": "sender."}, {"value": 1621, "name": "skipLease"}, {"value": 34, "name": "sovLease"}, {"value": 216, "name": "statictmp_1071"}, {"value": 32, "name": "statictmp_396"}, {"value": 32, "name": "statictmp_450"}, {"value": 8, "name": "statictmp_454"}, {"value": 88, "name": "statictmp_584"}, {"value": 208, "name": "statictmp_589"}, {"value": 40, "name": "go.itab.*AutoCommitError,error"}, {"value": 48, "name": "go.itab.*Batch,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.puter"}, {"value": 56, "name": "go.itab.*DB,github.com/cockroachdb/cockroach/pkg/migrations.db"}, {"value": 64, "name": "go.itab.*LeaseManager,github.com/cockroachdb/cockroach/pkg/migrations.leaseManager"}, {"value": 40, "name": "go.itab.*LeaseNotAvailableError,error"}, {"value": 56, "name": "go.itab.*LeaseVal,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.sender,github.com/cockroachdb/cockroach/pkg/internal/client.Sender"}], "name": "internal/client."}, {"children": [{"children": [{"value": 327, "name": "Error"}], "name": "(*InvalidRangeMetaKeyError)."}, {"children": [{"value": 224, "name": "AbortCacheKey"}, {"value": 524, "name": "LeaseAppliedIndexKey"}, {"value": 524, "name": "RaftAppliedIndexKey"}, {"value": 524, "name": "RaftHardStateKey"}, {"value": 524, "name": "RaftLastIndexKey"}, {"value": 744, "name": "RaftLogKey"}, {"value": 524, "name": "RaftLogPrefix"}, {"value": 524, "name": "RaftTombstoneKey"}, {"value": 524, "name": "RaftTruncatedStateKey"}, {"value": 524, "name": "RangeFrozenStatusKey"}, {"value": 524, "name": "RangeLastGCKey"}, {"value": 524, "name": "RangeLastReplicaGCTimestampKey"}, {"value": 524, "name": "RangeLastVerificationTimestampKeyDeprecated"}, {"value": 524, "name": "RangeLeaseKey"}, {"value": 524, "name": "RangeReplicaDestroyedErrorKey"}, {"value": 524, "name": "RangeStatsKey"}, {"value": 524, "name": "RangeTxnSpanGCThresholdKey"}], "name": "(*RangeIDPrefixBuf)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*errUglifyUnsupported)."}, {"children": [{"value": 4, "name": "1"}, {"value": 4, "name": "10"}, {"value": 4, "name": "11"}, {"value": 4, "name": "12"}, {"value": 4, "name": "13"}, {"value": 4, "name": "14"}, {"value": 1, "name": "15"}, {"value": 4, "name": "16"}, {"value": 4, "name": "17"}, {"value": 4, "name": "18"}, {"value": 4, "name": "19"}, {"value": 4, "name": "2"}, {"value": 4, "name": "20"}, {"value": 4, "name": "21"}, {"value": 4, "name": "22"}, {"value": 4, "name": "23"}, {"value": 4, "name": "24"}, {"value": 4, "name": "3"}, {"value": 1, "name": "4"}, {"value": 4, "name": "5"}, {"value": 4, "name": "6"}, {"value": 4, "name": "7"}, {"value": 4, "name": "8"}, {"value": 4, "name": "9"}], "name": ".gobytes."}, {"value": 137, "name": "AbortCacheKey"}, {"value": 1735, "name": "Addr"}, {"value": 534, "name": "AddrUpperBound"}, {"value": 1247, "name": "DecodeAbortCacheKey"}, {"value": 1288, "name": "DecodeRangeIDKey"}, {"value": 1444, "name": "DecodeRangeKey"}, {"value": 484, "name": "DecodeTablePrefix"}, {"value": 24, "name": "DescIDGenerator"}, {"value": 1046, "name": "EnsureSafeSplitKey"}, {"value": 125, "name": "IsLocal"}, {"value": 24, "name": "LocalAbortCacheSuffix"}, {"value": 24, "name": "LocalLeaseAppliedIndexSuffix"}, {"value": 24, "name": "LocalMax"}, {"value": 24, "name": "LocalQueueLastProcessedSuffix"}, {"value": 24, "name": "LocalRaftAppliedIndexSuffix"}, {"value": 24, "name": "LocalRaftHardStateSuffix"}, {"value": 24, "name": "LocalRaftLastIndexSuffix"}, {"value": 24, "name": "LocalRaftLogSuffix"}, {"value": 24, "name": "LocalRaftTombstoneSuffix"}, {"value": 24, "name": "LocalRaftTruncatedStateSuffix"}, {"value": 24, "name": "LocalRangeDescriptorSuffix"}, {"value": 24, "name": "LocalRangeFrozenStatusSuffix"}, {"value": 24, "name": "LocalRangeIDPrefix"}, {"value": 24, "name": "LocalRangeLastGCSuffix"}, {"value": 24, "name": "LocalRangeLastReplicaGCTimestampSuffix"}, {"value": 24, "name": "LocalRangeLastVerificationTimestampSuffixDeprecated"}, {"value": 24, "name": "LocalRangeLeaseSuffix"}, {"value": 24, "name": "LocalRangeMax"}, {"value": 24, "name": "LocalRangePrefix"}, {"value": 24, "name": "LocalRangeReplicaDestroyedErrorSuffix"}, {"value": 24, "name": "LocalRangeStatsSuffix"}, {"value": 24, "name": "LocalTransactionSuffix"}, {"value": 24, "name": "LocalTxnSpanGCThresholdSuffix"}, {"value": 262, "name": "MakeFamilyKey"}, {"value": 160, "name": "MakeRangeIDPrefix"}, {"value": 90, "name": "MakeRangeIDPrefixBuf"}, {"value": 169, "name": "MakeRangeIDReplicatedPrefix"}, {"value": 169, "name": "MakeRangeIDUnreplicatedPrefix"}, {"value": 829, "name": "MakeRangeKey"}, {"value": 402, "name": "MakeRangeKeyPrefix"}, {"value": 118, "name": "MakeRowSentinelKey"}, {"value": 118, "name": "MakeTablePrefix"}, {"value": 24, "name": "MaxKey"}, {"value": 24, "name": "Meta1KeyMax"}, {"value": 24, "name": "Meta1Prefix"}, {"value": 48, "name": "Meta1Span"}, {"value": 24, "name": "Meta2KeyMax"}, {"value": 24, "name": "Meta2Prefix"}, {"value": 24, "name": "MetaMax"}, {"value": 1474, "name": "MetaReverseScanBounds"}, {"value": 1494, "name": "MetaScanBounds"}, {"value": 24, "name": "MigrationKeyMax"}, {"value": 24, "name": "MigrationLease"}, {"value": 24, "name": "MigrationPrefix"}, {"value": 24, "name": "MinKey"}, {"value": 391, "name": "MustAddr"}, {"value": 24, "name": "NoSplitSpans"}, {"value": 24, "name": "NodeIDGenerator"}, {"value": 359, "name": "NodeLivenessKey"}, {"value": 24, "name": "NodeLivenessKeyMax"}, {"value": 24, "name": "NodeLivenessPrefix"}, {"value": 48, "name": "NodeLivenessSpan"}, {"value": 359, "name": "NodeStatusKey"}, {"value": 105, "name": "PrettyPrint"}, {"value": 1010, "name": "PrettyPrintRange"}, {"children": [{"value": 165, "name": "func1"}], "name": "PrettyPrintRange."}, {"value": 8, "name": "PrettyPrintTimeseriesKey"}, {"value": 261, "name": "QueueLastProcessedKey"}, {"value": 654, "name": "RaftLogKey"}, {"value": 434, "name": "RaftLogPrefix"}, {"value": 434, "name": "RaftTombstoneKey"}, {"value": 434, "name": "RaftTruncatedStateKey"}, {"value": 2864, "name": "Range"}, {"value": 192, "name": "RangeDescriptorKey"}, {"value": 24, "name": "RangeIDGenerator"}, {"children": [{"value": 554, "name": "AbortCacheKey"}, {"value": 426, "name": "LeaseAppliedIndexKey"}, {"value": 426, "name": "RaftAppliedIndexKey"}, {"value": 426, "name": "RaftHardStateKey"}, {"value": 426, "name": "RaftLastIndexKey"}, {"value": 638, "name": "RaftLogKey"}, {"value": 426, "name": "RaftLogPrefix"}, {"value": 426, "name": "RaftTombstoneKey"}, {"value": 426, "name": "RaftTruncatedStateKey"}, {"value": 426, "name": "RangeFrozenStatusKey"}, {"value": 426, "name": "RangeLastGCKey"}, {"value": 426, "name": "RangeLastReplicaGCTimestampKey"}, {"value": 426, "name": "RangeLastVerificationTimestampKeyDeprecated"}, {"value": 426, "name": "RangeLeaseKey"}, {"value": 426, "name": "RangeReplicaDestroyedErrorKey"}, {"value": 426, "name": "RangeStatsKey"}, {"value": 426, "name": "RangeTxnSpanGCThresholdKey"}], "name": "RangeIDPrefixBuf."}, {"value": 434, "name": "RangeLastGCKey"}, {"value": 434, "name": "RangeLastReplicaGCTimestampKey"}, {"value": 434, "name": "RangeLeaseKey"}, {"value": 434, "name": "RangeStatsKey"}, {"value": 434, "name": "RangeTxnSpanGCThresholdKey"}, {"value": 24, "name": "StatusNodePrefix"}, {"value": 24, "name": "StatusPrefix"}, {"value": 24, "name": "StoreIDGenerator"}, {"value": 48, "name": "SystemConfigSpan"}, {"value": 24, "name": "SystemConfigSplitKey"}, {"value": 24, "name": "SystemConfigTableDataMax"}, {"value": 24, "name": "SystemPrefix"}, {"value": 24, "name": "TableDataMax"}, {"value": 24, "name": "TableDataMin"}, {"value": 24, "name": "TimeseriesPrefix"}, {"value": 317, "name": "TransactionKey"}, {"value": 3657, "name": "UglyPrint"}, {"children": [{"value": 340, "name": "func1"}, {"value": 483, "name": "func2"}], "name": "UglyPrint."}, {"value": 24, "name": "UserTableDataMin"}, {"value": 592, "name": "abortCacheKeyParse"}, {"value": 1020, "name": "abortCacheKeyPrint"}, {"value": 24, "name": "constKeyDict"}, {"value": 24, "name": "constSubKeyDict"}, {"value": 121, "name": "decodeKeyPrint"}, {"value": 107, "name": "decodeTimeseriesKey"}, {"value": 16, "name": "errIllegalInput"}, {"children": [{"value": 1555, "name": "func1"}, {"value": 1037, "name": "func2"}], "name": "glob."}, {"value": 10098, "name": "init"}, {"children": [{"value": 161, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "keyDict"}, {"value": 24, "name": "keyOfKeyDict"}, {"value": 24, "name": "localPrefix"}, {"value": 2125, "name": "localRangeIDKeyParse"}, {"value": 2694, "name": "localRangeIDKeyPrint"}, {"value": 24, "name": "localRangeIDReplicatedInfix"}, {"value": 24, "name": "localRangeIDUnreplicatedInfix"}, {"value": 2879, "name": "localRangeKeyPrint"}, {"value": 24, "name": "localStoreGossipSuffix"}, {"value": 24, "name": "localStoreIdentSuffix"}, {"value": 1326, "name": "localStoreKeyParse"}, {"value": 567, "name": "localStoreKeyPrint"}, {"value": 24, "name": "localStoreLastUpSuffix"}, {"value": 24, "name": "localStorePrefix"}, {"value": 8, "name": "localSuffixLength"}, {"value": 143, "name": "makeKey"}, {"value": 498, "name": "makePrefixWithRangeID"}, {"value": 803, "name": "makeRangeIDReplicatedKey"}, {"value": 803, "name": "makeRangeIDUnreplicatedKey"}, {"value": 187, "name": "mustShift"}, {"value": 246, "name": "mustShiftSlash"}, {"value": 95, "name": "parseUnsupported"}, {"value": 1091, "name": "prettyPrintInternal"}, {"children": [{"value": 2652, "name": "func1"}], "name": "prettyPrintInternal."}, {"value": 229, "name": "print"}, {"value": 410, "name": "raftLogKeyParse"}, {"value": 653, "name": "raftLogKeyPrint"}, {"value": 24, "name": "rangeIDSuffixDict"}, {"value": 24, "name": "rangeSuffixDict"}, {"value": 16, "name": "statictmp_1181"}, {"value": 1, "name": "statictmp_1468"}, {"value": 1, "name": "statictmp_1469"}, {"value": 1, "name": "statictmp_1470"}, {"value": 1, "name": "statictmp_1471"}, {"value": 1, "name": "statictmp_1472"}, {"value": 1, "name": "statictmp_1473"}, {"value": 1, "name": "statictmp_1474"}, {"value": 160, "name": "statictmp_1475"}, {"value": 80, "name": "statictmp_1476"}, {"value": 840, "name": "statictmp_1477"}, {"value": 144, "name": "statictmp_1478"}, {"value": 440, "name": "statictmp_1479"}, {"value": 168, "name": "statictmp_1480"}, {"value": 56, "name": "statictmp_1481"}, {"value": 56, "name": "statictmp_1482"}, {"value": 224, "name": "statictmp_1483"}, {"value": 56, "name": "statictmp_1484"}, {"value": 80, "name": "statictmp_1485"}, {"value": 144, "name": "statictmp_1486"}, {"value": 16, "name": "statictmp_149"}, {"value": 16, "name": "statictmp_154"}, {"value": 16, "name": "statictmp_156"}, {"value": 16, "name": "statictmp_161"}, {"value": 48, "name": "statictmp_633"}, {"value": 48, "name": "statictmp_634"}, {"value": 48, "name": "statictmp_638"}, {"value": 48, "name": "statictmp_647"}, {"value": 48, "name": "statictmp_651"}, {"value": 1175, "name": "validateRangeMetaKey"}, {"value": 40, "name": "go.itab.*InvalidRangeMetaKeyError,error"}, {"value": 40, "name": "go.itab.*errUglifyUnsupported,error"}], "name": "keys."}, {"children": [{"children": [{"value": 1151, "name": "Batch"}, {"children": [{"value": 517, "name": "func1"}, {"value": 539, "name": "func2"}], "name": "Batch."}], "name": "(*DBServer)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 452, "name": "CountRanges"}, {"value": 17, "name": "FinishEventLog"}, {"value": 329, "name": "FirstRange"}, {"value": 16, "name": "GetParallelSendCount"}, {"value": 18, "name": "LeaseHolderCache"}, {"value": 83, "name": "Metrics"}, {"value": 18, "name": "RangeDescriptorCache"}, {"value": 1093, "name": "RangeLookup"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 2909, "name": "Send"}, {"value": 17, "name": "SetEventLog"}, {"value": 489, "name": "deduceRetryEarlyExitError"}, {"value": 4846, "name": "divideAndSendBatchToRanges"}, {"children": [{"value": 544, "name": "func1"}], "name": "divideAndSendBatchToRanges."}, {"value": 272, "name": "getDescriptor"}, {"value": 471, "name": "getNodeDescriptor"}, {"value": 2286, "name": "initAndVerifyBatch"}, {"value": 4069, "name": "sendPartialBatch"}, {"children": [{"value": 640, "name": "func1"}], "name": "sendPartialBatch."}, {"value": 777, "name": "sendPartialBatchAsync"}, {"children": [{"value": 358, "name": "func1"}], "name": "sendPartialBatchAsync."}, {"value": 972, "name": "sendRPC"}, {"value": 904, "name": "sendSingleRange"}, {"value": 8062, "name": "sendToReplicas"}, {"value": 1252, "name": "updateLeaseHolderCache"}], "name": "(*DistSender)."}, {"children": [{"value": 127, "name": "Evict"}, {"value": 243, "name": "EvictAndReplace"}, {"children": [{"value": 665, "name": "func1"}], "name": "EvictAndReplace."}], "name": "(*EvictionToken)."}, {"children": [{"value": 899, "name": "Lookup"}, {"value": 1050, "name": "Update"}], "name": "(*LeaseHolderCache)."}, {"children": [{"value": 135, "name": "(github.com/cockroachdb/cockroach/pkg/kv.insertRangeDescriptorsLocked)-fm"}, {"value": 297, "name": "EvictCachedRangeDescriptor"}, {"value": 282, "name": "GetCachedRangeDescriptor"}, {"value": 262, "name": "InsertRangeDescriptors"}, {"value": 218, "name": "LookupRangeDescriptor"}, {"value": 197, "name": "String"}, {"value": 2336, "name": "clearOverlappingCachedRangeDescriptors"}, {"children": [{"value": 655, "name": "func1"}], "name": "clearOverlappingCachedRangeDescriptors."}, {"value": 1559, "name": "evictCachedRangeDescriptorLocked"}, {"value": 1178, "name": "getCachedRangeDescriptorLocked"}, {"value": 836, "name": "insertRangeDescriptorsLocked"}, {"value": 3044, "name": "lookupRangeDescriptorInternal"}, {"children": [{"value": 116, "name": "func1"}, {"value": 146, "name": "func2"}, {"value": 2319, "name": "func3"}, {"children": [{"value": 146, "name": "1"}, {"value": 261, "name": "2"}], "name": "func3."}], "name": "lookupRangeDescriptorInternal."}, {"value": 398, "name": "makeEvictionToken"}, {"value": 1615, "name": "performRangeLookup"}, {"value": 258, "name": "stringLocked"}, {"children": [{"value": 363, "name": "func1"}], "name": "stringLocked."}], "name": "(*RangeDescriptorCache)."}, {"children": [{"value": 125, "name": "Desc"}, {"value": 143, "name": "Error"}, {"value": 146, "name": "Key"}, {"value": 222, "name": "LeaseHolder"}, {"value": 392, "name": "NeedAnother"}, {"value": 265, "name": "Next"}, {"value": 3310, "name": "Seek"}, {"value": 125, "name": "Token"}, {"value": 78, "name": "Valid"}], "name": "(*RangeIterator)."}, {"children": [{"value": 71, "name": "Descriptor"}, {"value": 22, "name": "Equal"}, {"value": 62, "name": "Marshal"}, {"value": 44, "name": "MarshalTo"}, {"value": 17, "name": "ProtoMessage"}, {"value": 17, "name": "Reset"}, {"value": 26, "name": "Size"}, {"value": 117, "name": "String"}, {"value": 35, "name": "Unmarshal"}, {"value": 117, "name": "Validate"}], "name": "(*ReplicaInfo)."}, {"children": [{"value": 202, "name": "FindReplica"}, {"value": 202, "name": "FindReplicaByNodeID"}, {"value": 163, "name": "Len"}, {"value": 194, "name": "MoveToFront"}, {"value": 194, "name": "OptimizeReplicaOrder"}, {"value": 224, "name": "SortByCommonAttributePrefix"}, {"value": 444, "name": "Swap"}], "name": "(*ReplicaSlice)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 344, "name": "GetTxnState"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 4031, "name": "Send"}, {"children": [{"value": 1603, "name": "func1"}, {"children": [{"value": 439, "name": "1"}], "name": "func1."}, {"value": 438, "name": "func2"}], "name": "Send."}, {"value": 17, "name": "SetEventLog"}, {"value": 409, "name": "cleanupTxnLocked"}, {"value": 2406, "name": "heartbeat"}, {"value": 1166, "name": "heartbeatLoop"}, {"children": [{"value": 198, "name": "func1"}], "name": "heartbeatLoop."}, {"value": 2792, "name": "maybeRejectClientLocked"}, {"value": 2931, "name": "printStatsLoop"}, {"value": 928, "name": "resendWithTxn"}, {"children": [{"value": 879, "name": "func1"}], "name": "resendWithTxn."}, {"value": 2365, "name": "tryAsyncAbort"}, {"children": [{"value": 464, "name": "func1"}], "name": "tryAsyncAbort."}, {"value": 624, "name": "unregisterTxnLocked"}, {"value": 4292, "name": "updateState"}, {"children": [{"value": 419, "name": "func1"}, {"value": 91, "name": "func2"}], "name": "updateState."}, {"value": 273, "name": "updateStats"}, {"value": 1033, "name": "validateTxnForBatch"}], "name": "(*TxnCoordSender)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 233, "name": "Less"}, {"value": 495, "name": "Swap"}], "name": "(*byHealth)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*firstRangeMissingError)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 210, "name": "IsExhausted"}, {"value": 183, "name": "MoveToFront"}, {"value": 176, "name": "NextReplica"}, {"value": 402, "name": "SendNext"}, {"children": [{"value": 433, "name": "func1"}, {"children": [{"value": 2164, "name": "1"}], "name": "func1."}], "name": "SendNext."}, {"value": 681, "name": "SendNextTimeout"}, {"value": 812, "name": "maybeResurrectRetryables"}, {"value": 708, "name": "moveToFrontLocked"}, {"value": 527, "name": "setState"}], "name": "(*grpcTransport)."}, {"children": [{"value": 214, "name": "Compare"}, {"value": 204, "name": "String"}], "name": "(*rangeCacheKey)."}, {"children": [{"value": 18, "name": "getLastUpdate"}, {"value": 100, "name": "hasClientAbandonedCoord"}, {"value": 18, "name": "setLastUpdate"}], "name": "(*txnMetadata)."}, {"value": 2397, "name": "MakeTxnMetrics"}, {"value": 5494, "name": "NewDistSender"}, {"children": [{"value": 733, "name": "func1"}], "name": "NewDistSender."}, {"value": 234, "name": "NewLeaseHolderCache"}, {"children": [{"value": 20, "name": "func1"}], "name": "NewLeaseHolderCache."}, {"value": 266, "name": "NewRangeDescriptorCache"}, {"children": [{"value": 20, "name": "func1"}], "name": "NewRangeDescriptorCache."}, {"value": 1028, "name": "NewReplicaSlice"}, {"value": 900, "name": "NewTxnCoordSender"}, {"children": [{"value": 79, "name": "func1"}], "name": "NewTxnCoordSender."}, {"children": [{"value": 116, "name": "String"}, {"value": 116, "name": "Validate"}], "name": "ReplicaInfo."}, {"children": [{"value": 61, "name": "FindReplica"}, {"value": 60, "name": "FindReplicaByNodeID"}, {"value": 11, "name": "Len"}, {"value": 390, "name": "MoveToFront"}, {"value": 314, "name": "OptimizeReplicaOrder"}, {"value": 1019, "name": "SortByCommonAttributePrefix"}, {"value": 331, "name": "Swap"}], "name": "ReplicaSlice."}, {"value": 528, "name": "allExternalMethods"}, {"children": [{"value": 11, "name": "Len"}, {"value": 103, "name": "Less"}, {"value": 388, "name": "Swap"}], "name": "byHealth."}, {"value": 48, "name": "emptySpan"}, {"value": 8, "name": "errNo1PCTxn"}, {"value": 16, "name": "errNoState"}, {"value": 3146, "name": "fillSkippedResponses"}, {"children": [{"value": 22, "name": "Error"}], "name": "firstRangeMissingError."}, {"value": 264, "name": "grpcTransportFactory"}, {"value": 1460, "name": "grpcTransportFactoryImpl"}, {"value": 282, "name": "includesFrontOfCurSpan"}, {"value": 573, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "maxIntents"}, {"value": 701, "name": "meta"}, {"value": 56, "name": "metaAbandonsRates"}, {"value": 56, "name": "metaAbortsRates"}, {"value": 56, "name": "metaCommits1PCRates"}, {"value": 56, "name": "metaCommitsRates"}, {"value": 56, "name": "metaDistSenderBatchCount"}, {"value": 56, "name": "metaDistSenderNextReplicaErrCount"}, {"value": 56, "name": "metaDistSenderNotLeaseHolderErrCount"}, {"value": 56, "name": "metaDistSenderPartialBatchCount"}, {"value": 56, "name": "metaDistSenderSendNextTimeoutCount"}, {"value": 56, "name": "metaDurationsHistograms"}, {"value": 56, "name": "metaRestartsDeleteRange"}, {"value": 56, "name": "metaRestartsHistogram"}, {"value": 56, "name": "metaRestartsPossibleReplay"}, {"value": 56, "name": "metaRestartsSerializable"}, {"value": 56, "name": "metaRestartsWriteTooOld"}, {"value": 56, "name": "metaSlowDistSenderRequests"}, {"value": 56, "name": "metaTransportLocalSentCount"}, {"value": 56, "name": "metaTransportSentCount"}, {"value": 1297, "name": "next"}, {"value": 1362, "name": "prev"}, {"children": [{"value": 182, "name": "Compare"}, {"value": 100, "name": "String"}], "name": "rangeCacheKey."}, {"value": 318, "name": "splitHealthy"}, {"value": 184, "name": "statictmp_1136"}, {"value": 12, "name": "statictmp_1173"}, {"value": 24, "name": "statictmp_1179"}, {"value": 80, "name": "statictmp_1265"}, {"value": 208, "name": "statictmp_1603"}, {"value": 48, "name": "statictmp_1860"}, {"value": 96, "name": "statictmp_1861"}, {"value": 104, "name": "statictmp_1862"}, {"value": 56, "name": "statictmp_1863"}, {"value": 48, "name": "statictmp_1864"}, {"value": 56, "name": "statictmp_1865"}, {"value": 48, "name": "statictmp_1866"}, {"value": 48, "name": "statictmp_1867"}, {"value": 48, "name": "statictmp_1868"}, {"value": 104, "name": "statictmp_1869"}, {"value": 72, "name": "statictmp_1870"}, {"value": 48, "name": "statictmp_1871"}, {"value": 56, "name": "statictmp_1872"}, {"value": 56, "name": "statictmp_1873"}, {"value": 56, "name": "statictmp_1874"}, {"value": 120, "name": "statictmp_1875"}, {"value": 128, "name": "statictmp_1876"}, {"value": 64, "name": "statictmp_238"}, {"value": 48, "name": "statictmp_241"}, {"value": 112, "name": "statictmp_41"}, {"value": 12, "name": "statictmp_754"}, {"value": 2064, "name": "truncate"}, {"children": [{"value": 2337, "name": "func1"}], "name": "truncate."}, {"value": 207, "name": "verifyEndTransaction"}, {"value": 786, "name": "verifyRequest"}, {"value": 40, "name": "go.itab.*DBServer,github.com/cockroachdb/cockroach/pkg/roachpb.ExternalServer"}, {"value": 40, "name": "go.itab.*DistSender,github.com/cockroachdb/cockroach/pkg/internal/client.Sender"}, {"value": 48, "name": "go.itab.*DistSender,github.com/cockroachdb/cockroach/pkg/kv.RangeDescriptorDB"}, {"value": 40, "name": "go.itab.*TxnCoordSender,github.com/cockroachdb/cockroach/pkg/internal/client.Sender"}, {"value": 80, "name": "go.itab.*grpcTransport,github.com/cockroachdb/cockroach/pkg/kv.Transport"}, {"value": 48, "name": "go.itab.ReplicaSlice,github.com/cockroachdb/cockroach/pkg/util/shuffle.Interface"}, {"value": 56, "name": "go.itab.byHealth,sort.Interface"}, {"value": 40, "name": "go.itab.firstRangeMissingError,error"}], "name": "kv."}, {"children": [{"children": [{"value": 4466, "name": "EnsureMigrations"}, {"children": [{"value": 482, "name": "func1"}, {"value": 781, "name": "func2"}], "name": "EnsureMigrations."}], "name": "(*Manager)."}, {"children": [{"value": 266, "name": "newRootSession"}], "name": "(*runner)."}, {"value": 435, "name": "NewManager"}, {"value": 24, "name": "backwardCompatibleMigrations"}, {"value": 500, "name": "checkQueryResults"}, {"value": 181, "name": "createJobsTable"}, {"children": [{"value": 890, "name": "func1"}], "name": "createJobsTable."}, {"value": 181, "name": "createSettingsTable"}, {"children": [{"value": 890, "name": "func1"}], "name": "createSettingsTable."}, {"value": 687, "name": "eventlogUniqueIDDefault"}, {"value": 900, "name": "getCompletedMigrations"}, {"value": 258, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "leaseDuration"}, {"value": 8, "name": "leaseRefreshInterval"}, {"value": 748, "name": "optIntToDiagnosticsStatReporting"}, {"value": 1, "name": "reportingOptOut"}, {"value": 48, "name": "statictmp_152"}, {"value": 48, "name": "statictmp_159"}, {"value": 160, "name": "statictmp_214"}, {"value": 48, "name": "statictmp_67"}], "name": "migrations."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 675, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 214, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3003, "name": "Unmarshal"}], "name": "(*AbortCacheEntry)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 822, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 285, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2969, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*AdminChangeReplicasRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*AdminChangeReplicasResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*AdminMergeRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*AdminMergeResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*AdminScatterRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 865, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 349, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2701, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}, {"value": 702, "name": "combine"}], "name": "(*AdminScatterResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 638, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 180, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2417, "name": "Unmarshal"}], "name": "(*AdminScatterResponse_Range)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 562, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 170, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2606, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*AdminSplitRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*AdminSplitResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 411, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2014, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*AdminTransferLeaseRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*AdminTransferLeaseResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 586, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 168, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2447, "name": "Unmarshal"}, {"value": 192, "name": "message"}], "name": "(*AmbiguousResultError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 223, "name": "IsSubset"}, {"value": 280, "name": "Marshal"}, {"value": 408, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 174, "name": "Size"}, {"value": 204, "name": "SortedString"}, {"value": 204, "name": "String"}, {"value": 1859, "name": "Unmarshal"}], "name": "(*Attributes)."}, {"children": [{"value": 542, "name": "Add"}, {"value": 20056, "name": "CreateReply"}, {"value": 141, "name": "Descriptor"}, {"value": 755, "name": "GetArg"}, {"value": 223, "name": "GetPrevLeaseForLeaseRequest"}, {"value": 117, "name": "GetTxnID"}, {"value": 22, "name": "GetUser"}, {"value": 1109, "name": "IntentSpanIterate"}, {"value": 78, "name": "IsAdmin"}, {"value": 103, "name": "IsLeaseRequest"}, {"value": 78, "name": "IsPossibleTransaction"}, {"value": 94, "name": "IsReadOnly"}, {"value": 78, "name": "IsReverse"}, {"value": 199, "name": "IsSinglePushTxnRequest"}, {"value": 21, "name": "IsSingleRequest"}, {"value": 92, "name": "IsSingleSkipLeaseCheckRequest"}, {"value": 78, "name": "IsTransactionWrite"}, {"value": 78, "name": "IsWrite"}, {"value": 280, "name": "Marshal"}, {"value": 871, "name": "MarshalTo"}, {"value": 533, "name": "Methods"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 219, "name": "SetActiveTimestamp"}, {"value": 225, "name": "SetNewRequest"}, {"value": 367, "name": "Size"}, {"value": 264, "name": "Split"}, {"value": 233, "name": "String"}, {"value": 802, "name": "Summary"}, {"value": 2714, "name": "Unmarshal"}, {"value": 942, "name": "UpdateTxn"}, {"value": 1703, "name": "getReqCounts"}, {"value": 408, "name": "hasFlag"}], "name": "(*BatchRequest)."}, {"children": [{"value": 377, "name": "Add"}, {"value": 1433, "name": "Combine"}, {"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 848, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 344, "name": "Size"}, {"value": 1070, "name": "String"}, {"value": 2698, "name": "Unmarshal"}], "name": "(*BatchResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1713, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 445, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4900, "name": "Unmarshal"}], "name": "(*BatchResponse_Header)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*BeginTransactionRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*BeginTransactionResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 955, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 344, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3460, "name": "Unmarshal"}], "name": "(*ChangeReplicasTrigger)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 423, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2020, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*CheckConsistencyRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}, {"value": 354, "name": "combine"}], "name": "(*CheckConsistencyResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 833, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 192, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3074, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ComputeChecksumRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*ComputeChecksumResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 351, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1767, "name": "Unmarshal"}, {"value": 169, "name": "message"}], "name": "(*ConditionFailedError)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1043, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 251, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3471, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ConditionalPutRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*ConditionalPutResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 507, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2424, "name": "Unmarshal"}, {"value": 33, "name": "flags"}], "name": "(*DeleteRangeRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 703, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 219, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2657, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}, {"value": 716, "name": "combine"}], "name": "(*DeleteRangeResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*DeleteRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*DeleteResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*DeprecatedVerifyChecksumRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*DeprecatedVerifyChecksumResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1718, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 507, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5143, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*EndTransactionRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 423, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2020, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*EndTransactionResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}], "name": "(*ErrPosition)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 237, "name": "GetDetail"}, {"value": 30, "name": "GetTxn"}, {"value": 310, "name": "GoError"}, {"value": 280, "name": "Marshal"}, {"value": 1610, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 114, "name": "SetErrorIndex"}, {"value": 1055, "name": "SetTxn"}, {"value": 470, "name": "Size"}, {"value": 50, "name": "String"}, {"value": 5532, "name": "Unmarshal"}, {"value": 143, "name": "UpdateTxn"}, {"value": 871, "name": "setGoError"}], "name": "(*Error)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 707, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 5744, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 2299, "name": "SetValue"}, {"value": 1676, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 18755, "name": "Unmarshal"}], "name": "(*ErrorDetail)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 962, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 177, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 242, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2931, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ExportRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 845, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 338, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2697, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}, {"value": 707, "name": "combine"}], "name": "(*ExportResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 854, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 259, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3666, "name": "Unmarshal"}], "name": "(*ExportResponse_File)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1697, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 442, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5256, "name": "Unmarshal"}], "name": "(*ExportStorage)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ExportStorageProvider)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 926, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 249, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3630, "name": "Unmarshal"}], "name": "(*ExportStorage_Azure)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 494, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 143, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*ExportStorage_GCS)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 278, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 89, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*ExportStorage_Http)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 278, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 89, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*ExportStorage_LocalFilePath)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 150, "name": "Keys"}, {"value": 280, "name": "Marshal"}, {"value": 1142, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 300, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4294, "name": "Unmarshal"}], "name": "(*ExportStorage_S3)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1518, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 506, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4031, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*GCRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 591, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 173, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2604, "name": "Unmarshal"}], "name": "(*GCRequest_GCKey)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*GCResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*GetRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 638, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 180, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2417, "name": "Unmarshal"}, {"value": 297, "name": "Verify"}], "name": "(*GetResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 952, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 203, "name": "Reset"}, {"value": 225, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3217, "name": "Unmarshal"}, {"value": 192, "name": "message"}], "name": "(*HandledRetryableTxnError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 241, "name": "GetTxnID"}, {"value": 280, "name": "Marshal"}, {"value": 1989, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 488, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6808, "name": "Unmarshal"}], "name": "(*Header)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*HeartbeatTxnRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*HeartbeatTxnResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1646, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 640, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4434, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ImportRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 778, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 221, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3270, "name": "Unmarshal"}], "name": "(*ImportRequest_File)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 371, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 122, "name": "Reset"}, {"value": 143, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2398, "name": "Unmarshal"}], "name": "(*ImportRequest_TableRekey)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 411, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2015, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*ImportResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 411, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2015, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*IncrementRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 411, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2015, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*IncrementResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 722, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 177, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2676, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*InitPutRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*InitPutResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 717, "name": "MarshalTo"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 216, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2679, "name": "Unmarshal"}], "name": "(*Intent)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetChangeReplicasTrigger"}, {"value": 30, "name": "GetMergeTrigger"}, {"value": 30, "name": "GetModifiedSpanTrigger"}, {"value": 29, "name": "GetSplitTrigger"}, {"value": 280, "name": "Marshal"}, {"value": 1209, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 243, "name": "Reset"}, {"value": 351, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4160, "name": "Unmarshal"}], "name": "(*InternalCommitTrigger)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 756, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 362, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2896, "name": "Unmarshal"}], "name": "(*InternalTimeSeriesData)."}, {"children": [{"value": 229, "name": "Average"}, {"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 990, "name": "MarshalTo"}, {"value": 232, "name": "Maximum"}, {"value": 232, "name": "Minimum"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 150, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 202, "name": "Summation"}, {"value": 3398, "name": "Unmarshal"}], "name": "(*InternalTimeSeriesSample)."}, {"children": [{"value": 224, "name": "Compare"}, {"value": 223, "name": "Equal"}, {"value": 212, "name": "Format"}, {"value": 223, "name": "IsPrev"}, {"value": 383, "name": "Next"}, {"value": 214, "name": "PrefixEnd"}, {"value": 204, "name": "String"}], "name": "(*Key)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 591, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 173, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2604, "name": "Unmarshal"}], "name": "(*KeyValue)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 426, "name": "Swap"}], "name": "(*KeyValueByKey)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 271, "name": "Equivalent"}, {"value": 280, "name": "Marshal"}, {"value": 1757, "name": "MarshalTo"}, {"value": 227, "name": "OwnedBy"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 429, "name": "Size"}, {"value": 204, "name": "String"}, {"value": 238, "name": "Type"}, {"value": 4924, "name": "Unmarshal"}], "name": "(*Lease)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*LeaseInfoRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 638, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 180, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2417, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*LeaseInfoResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 880, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 230, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2969, "name": "Unmarshal"}, {"value": 315, "name": "message"}], "name": "(*LeaseRejectedError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 226, "name": "DiversityScore"}, {"value": 280, "name": "Marshal"}, {"value": 504, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 549, "name": "Set"}, {"value": 231, "name": "Size"}, {"value": 204, "name": "String"}, {"value": 175, "name": "Type"}, {"value": 2062, "name": "Unmarshal"}], "name": "(*Locality)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*MergeRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*MergeResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}], "name": "(*MergeTrigger)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Method)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 434, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 101, "name": "Reset"}, {"value": 117, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2217, "name": "Unmarshal"}], "name": "(*ModifiedSpanTrigger)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1095, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 283, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3431, "name": "Unmarshal"}], "name": "(*NodeDescriptor)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*NodeID)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Error"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 22, "name": "message"}], "name": "(*NodeUnavailableError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 143, "name": "Header"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 109, "name": "SetHeader"}, {"value": 91, "name": "ShallowCopy"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*NoopRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 83, "name": "Header"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 1, "name": "SetHeader"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 19, "name": "Verify"}], "name": "(*NoopResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 1226, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 348, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4277, "name": "Unmarshal"}, {"value": 1227, "name": "message"}], "name": "(*NotLeaseHolderError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 46, "name": "GetVariance"}, {"value": 269, "name": "Marshal"}, {"value": 428, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 77, "name": "Record"}, {"value": 18, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1892, "name": "Unmarshal"}], "name": "(*NumericStat)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 434, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 27, "name": "Reset"}, {"value": 145, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2063, "name": "Unmarshal"}], "name": "(*ObservedTimestamp)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Error"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 22, "name": "message"}], "name": "(*OpRequiresTxnError)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1942, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 426, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5461, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*PushTxnRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 180, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*PushTxnResponse)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*PushTxnType)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 806, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 177, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3080, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*PutRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*PutResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 177, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*QueryTxnRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1117, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 310, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3279, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*QueryTxnResponse)."}, {"children": [{"value": 180, "name": "AsRawKey"}, {"value": 223, "name": "Equal"}, {"value": 223, "name": "Less"}, {"value": 383, "name": "Next"}, {"value": 214, "name": "PrefixEnd"}, {"value": 204, "name": "String"}], "name": "(*RKey)."}, {"children": [{"value": 223, "name": "ContainsExclusiveEndKey"}, {"value": 223, "name": "ContainsKey"}, {"value": 271, "name": "ContainsKeyRange"}, {"value": 225, "name": "Equal"}, {"value": 345, "name": "Intersect"}, {"value": 225, "name": "Overlaps"}, {"value": 201, "name": "String"}], "name": "(*RSpan)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Error"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 22, "name": "message"}], "name": "(*RaftGroupDeletedError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1205, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 475, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3716, "name": "Unmarshal"}], "name": "(*RaftSnapshotData)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 817, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 242, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3576, "name": "Unmarshal"}], "name": "(*RaftSnapshotData_KeyValue)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}], "name": "(*RaftTombstone)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 233, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 21, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1779, "name": "Unmarshal"}], "name": "(*RaftTruncatedState)."}, {"children": [{"value": 257, "name": "ContainsExclusiveEndKey"}, {"value": 257, "name": "ContainsKey"}, {"value": 320, "name": "ContainsKeyRange"}, {"value": 141, "name": "Descriptor"}, {"value": 1142, "name": "Equal"}, {"value": 256, "name": "GetReplicaDescriptor"}, {"value": 256, "name": "GetReplicaDescriptorByID"}, {"value": 234, "name": "IsInitialized"}, {"value": 280, "name": "Marshal"}, {"value": 1143, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 464, "name": "RSpan"}, {"value": 182, "name": "Reset"}, {"value": 419, "name": "Size"}, {"value": 220, "name": "String"}, {"value": 4787, "name": "Unmarshal"}, {"value": 220, "name": "Validate"}], "name": "(*RangeDescriptor)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*RangeID)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Swap"}], "name": "(*RangeIDSlice)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}], "name": "(*RangeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 1111, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 331, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4527, "name": "Unmarshal"}, {"value": 646, "name": "message"}], "name": "(*RangeKeyMismatchError)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 503, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2418, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*RangeLookupRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1383, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 634, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3767, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*RangeLookupResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1383, "name": "Unmarshal"}, {"value": 192, "name": "message"}], "name": "(*RangeNotFoundError)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ReadConsistencyType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 35, "name": "Reset"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 9, "name": "canRestartTransaction"}, {"value": 265, "name": "message"}], "name": "(*ReadWithinUncertaintyIntervalError)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ReplicaChangeType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 376, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 108, "name": "Reset"}, {"value": 89, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2045, "name": "Unmarshal"}, {"value": 282, "name": "message"}], "name": "(*ReplicaCorruptionError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 346, "name": "Equal"}, {"value": 280, "name": "Marshal"}, {"value": 314, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 152, "name": "Size"}, {"value": 198, "name": "String"}, {"value": 2172, "name": "Unmarshal"}, {"value": 198, "name": "Validate"}], "name": "(*ReplicaDescriptor)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*ReplicaID)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 434, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 28, "name": "Reset"}, {"value": 145, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2064, "name": "Unmarshal"}], "name": "(*ReplicaIdent)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}, {"value": 22, "name": "message"}], "name": "(*ReplicaTooOldError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 233, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 191, "name": "String"}, {"value": 1777, "name": "Unmarshal"}], "name": "(*ReplicationTarget)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 961, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 250, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3082, "name": "Unmarshal"}, {"value": 10, "name": "flags"}, {"value": 18, "name": "prevLease"}], "name": "(*RequestLeaseRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*RequestLeaseResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 255, "name": "GetInner"}, {"value": 1149, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 10564, "name": "MarshalTo"}, {"value": 506, "name": "MustSetInner"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 3773, "name": "SetValue"}, {"value": 2834, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 29030, "name": "Unmarshal"}], "name": "(*RequestUnion)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 808, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 216, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3086, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ResolveIntentRangeRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}, {"value": 355, "name": "combine"}], "name": "(*ResolveIntentRangeResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 808, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 216, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3086, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ResolveIntentRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*ResolveIntentResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 334, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 1318, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 152, "name": "SetHeader"}, {"value": 507, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4075, "name": "Unmarshal"}, {"value": 19, "name": "Verify"}, {"value": 836, "name": "combine"}], "name": "(*ResponseHeader)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 242, "name": "GetInner"}, {"value": 1115, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 10244, "name": "MarshalTo"}, {"value": 485, "name": "MustSetInner"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 3675, "name": "SetValue"}, {"value": 2752, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 28223, "name": "Unmarshal"}], "name": "(*ResponseUnion)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ReverseScanRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 842, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 332, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2685, "name": "Unmarshal"}, {"value": 371, "name": "Verify"}, {"value": 711, "name": "combine"}], "name": "(*ReverseScanResponse)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*ScanRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 842, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 332, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2685, "name": "Unmarshal"}, {"value": 371, "name": "Verify"}, {"value": 711, "name": "combine"}], "name": "(*ScanResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 235, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 278, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 89, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}, {"value": 122, "name": "message"}], "name": "(*SendError)."}, {"children": [{"value": 302, "name": "AsRange"}, {"value": 225, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 225, "name": "Equal"}, {"value": 334, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 523, "name": "MarshalTo"}, {"value": 225, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 152, "name": "SetHeader"}, {"value": 170, "name": "Size"}, {"value": 201, "name": "String"}, {"value": 2912, "name": "Unmarshal"}], "name": "(*Span)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 414, "name": "Swap"}], "name": "(*Spans)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}], "name": "(*SplitTrigger)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1967, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 412, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6962, "name": "Unmarshal"}], "name": "(*StatementStatistics)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "FractionUsed"}, {"value": 280, "name": "Marshal"}, {"value": 395, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 29, "name": "Reset"}, {"value": 194, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2572, "name": "Unmarshal"}], "name": "(*StoreCapacity)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 577, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 122, "name": "Reset"}, {"value": 247, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2401, "name": "Unmarshal"}], "name": "(*StoreDeadReplicas)."}, {"children": [{"value": 764, "name": "CombinedAttrs"}, {"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1095, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 283, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3431, "name": "Unmarshal"}], "name": "(*StoreDescriptor)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*StoreID)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*StoreIDSlice)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 526, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 29, "name": "Reset"}, {"value": 165, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2412, "name": "Unmarshal"}], "name": "(*StoreIdent)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}, {"value": 192, "name": "message"}], "name": "(*StoreNotFoundError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 449, "name": "FromString"}, {"value": 280, "name": "Marshal"}, {"value": 494, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 143, "name": "Size"}, {"value": 213, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*Tier)."}, {"children": [{"value": 736, "name": "Clone"}, {"value": 141, "name": "Descriptor"}, {"value": 225, "name": "Equal"}, {"value": 266, "name": "GetObservedTimestamp"}, {"value": 19, "name": "IsInitialized"}, {"value": 288, "name": "LastActive"}, {"value": 280, "name": "Marshal"}, {"value": 2879, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 121, "name": "ResetObservedTimestamps"}, {"value": 217, "name": "Restart"}, {"value": 125, "name": "Short"}, {"value": 838, "name": "Size"}, {"value": 239, "name": "String"}, {"value": 7998, "name": "Unmarshal"}, {"value": 1460, "name": "Update"}, {"value": 198, "name": "UpdateObservedTimestamp"}, {"value": 24, "name": "UpgradePriority"}], "name": "(*Transaction)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Error"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 9, "name": "canRestartTransaction"}, {"value": 179, "name": "message"}], "name": "(*TransactionAbortedError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 9, "name": "canRestartTransaction"}, {"value": 445, "name": "message"}], "name": "(*TransactionPushError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 118, "name": "Error"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 179, "name": "message"}], "name": "(*TransactionReplayError)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TransactionRestart)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 118, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 148, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1382, "name": "Unmarshal"}, {"value": 9, "name": "canRestartTransaction"}, {"value": 179, "name": "message"}], "name": "(*TransactionRetryError)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TransactionRetryReason)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TransactionStatus)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 23, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 278, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 89, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}, {"value": 255, "name": "message"}], "name": "(*TransactionStatusError)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 961, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 250, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3082, "name": "Unmarshal"}, {"value": 10, "name": "flags"}, {"value": 18, "name": "prevLease"}], "name": "(*TransferLeaseRequest)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 496, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 165, "name": "ShallowCopy"}, {"value": 184, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2414, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*TruncateLogRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*TruncateLogResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 23, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}], "name": "(*UnhandledRetryableError)."}, {"children": [{"value": 188, "name": "String"}], "name": "(*UserPriority)."}, {"children": [{"value": 134, "name": "ClearChecksum"}, {"value": 141, "name": "Descriptor"}, {"value": 223, "name": "GetBool"}, {"value": 250, "name": "GetBytes"}, {"value": 224, "name": "GetDecimal"}, {"value": 250, "name": "GetDuration"}, {"value": 226, "name": "GetFloat"}, {"value": 224, "name": "GetInt"}, {"value": 234, "name": "GetProto"}, {"value": 218, "name": "GetTag"}, {"value": 248, "name": "GetTime"}, {"value": 394, "name": "GetTimeseries"}, {"value": 250, "name": "GetTuple"}, {"value": 599, "name": "InitChecksum"}, {"value": 280, "name": "Marshal"}, {"value": 591, "name": "MarshalTo"}, {"value": 214, "name": "PrettyPrint"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 264, "name": "SetBool"}, {"value": 312, "name": "SetBytes"}, {"value": 319, "name": "SetDecimal"}, {"value": 396, "name": "SetDuration"}, {"value": 322, "name": "SetFloat"}, {"value": 290, "name": "SetInt"}, {"value": 981, "name": "SetProto"}, {"value": 312, "name": "SetString"}, {"value": 300, "name": "SetTime"}, {"value": 312, "name": "SetTuple"}, {"value": 199, "name": "ShallowClone"}, {"value": 173, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2604, "name": "Unmarshal"}, {"value": 250, "name": "Verify"}], "name": "(*Value)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ValueType)."}, {"children": [{"value": 230, "name": "AsRange"}, {"value": 149, "name": "Contains"}, {"value": 141, "name": "Descriptor"}, {"value": 149, "name": "Equal"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 873, "name": "MarshalTo"}, {"value": 10, "name": "Method"}, {"value": 149, "name": "Overlaps"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 179, "name": "ShallowCopy"}, {"value": 237, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3262, "name": "Unmarshal"}, {"value": 10, "name": "flags"}], "name": "(*WriteBatchRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 203, "name": "Header"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 17, "name": "SetHeader"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}, {"value": 35, "name": "Verify"}], "name": "(*WriteBatchResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 579, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 319, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2046, "name": "Unmarshal"}, {"value": 685, "name": "message"}], "name": "(*WriteIntentError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 89, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 630, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 35, "name": "Reset"}, {"value": 175, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2275, "name": "Unmarshal"}, {"value": 9, "name": "canRestartTransaction"}, {"value": 265, "name": "message"}], "name": "(*WriteTooOldError)."}, {"children": [{"value": 326, "name": "Batch"}], "name": "(*externalClient)."}, {"children": [{"value": 326, "name": "Batch"}], "name": "(*internalClient)."}, {"children": [{"value": 44, "name": "Error"}, {"value": 13, "name": "canRestartTransaction"}, {"value": 44, "name": "message"}], "name": "(*internalError)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 414, "name": "Swap"}], "name": "(*sortedSpans)."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "AdminChangeReplicasRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "AdminChangeReplicasResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "AdminMergeRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "AdminMergeResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "AdminScatterRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "AdminScatterResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "AdminSplitRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "AdminSplitResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "AdminTransferLeaseRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "AdminTransferLeaseResponse."}, {"value": 510, "name": "AsIntents"}, {"children": [{"value": 344, "name": "IsSubset"}, {"value": 214, "name": "SortedString"}, {"value": 162, "name": "String"}, {"value": 592, "name": "uniqueAttrs"}], "name": "Attributes."}, {"children": [{"value": 118, "name": "GetTxnID"}, {"value": 1113, "name": "Split"}, {"children": [{"value": 75, "name": "func1"}], "name": "Split."}, {"value": 2313, "name": "String"}], "name": "BatchRequest."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "BeginTransactionRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "BeginTransactionResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "CheckConsistencyRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "CheckConsistencyResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ComputeChecksumRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ComputeChecksumResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ConditionalPutRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ConditionalPutResponse."}, {"value": 84, "name": "ConsultsTimestampCache"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "DeleteRangeRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "DeleteRangeResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "DeleteRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "DeleteResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "DeprecatedVerifyChecksumRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "DeprecatedVerifyChecksumResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "EndTransactionRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "EndTransactionResponse."}, {"value": 16, "name": "ErrIntOverflowApi"}, {"value": 16, "name": "ErrIntOverflowAppStats"}, {"value": 16, "name": "ErrIntOverflowData"}, {"value": 16, "name": "ErrIntOverflowErrors"}, {"value": 16, "name": "ErrIntOverflowInternal"}, {"value": 16, "name": "ErrIntOverflowInternalRaft"}, {"value": 16, "name": "ErrIntOverflowMetadata"}, {"value": 16, "name": "ErrInvalidLengthApi"}, {"value": 16, "name": "ErrInvalidLengthAppStats"}, {"value": 16, "name": "ErrInvalidLengthData"}, {"value": 16, "name": "ErrInvalidLengthErrors"}, {"value": 16, "name": "ErrInvalidLengthInternal"}, {"value": 16, "name": "ErrInvalidLengthInternalRaft"}, {"value": 16, "name": "ErrInvalidLengthMetadata"}, {"value": 211, "name": "ErrorUnexpectedlySet"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ExportRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ExportResponse."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ExportStorageProvider."}, {"value": 8, "name": "ExportStorageProvider_name"}, {"value": 8, "name": "ExportStorageProvider_value"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "GCRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "GCResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "GetRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "GetResponse."}, {"children": [{"value": 29, "name": "GetTxnID"}], "name": "Header."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "HeartbeatTxnRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "HeartbeatTxnResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ImportRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ImportResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "IncrementRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "IncrementResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "InitPutRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "InitPutResponse."}, {"value": 579, "name": "InsertRangeInfo"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "Intent."}, {"children": [{"value": 45, "name": "Average"}, {"value": 53, "name": "Maximum"}, {"value": 53, "name": "Minimum"}, {"value": 13, "name": "Summation"}], "name": "InternalTimeSeriesSample."}, {"value": 84, "name": "IsRange"}, {"value": 96, "name": "IsReadOnly"}, {"value": 84, "name": "IsTransactionWrite"}, {"children": [{"value": 120, "name": "Compare"}, {"value": 119, "name": "Equal"}, {"value": 549, "name": "Format"}, {"value": 176, "name": "IsPrev"}, {"value": 286, "name": "Next"}, {"value": 168, "name": "PrefixEnd"}, {"value": 314, "name": "String"}], "name": "Key."}, {"value": 24, "name": "KeyMax"}, {"value": 24, "name": "KeyMin"}, {"children": [{"value": 11, "name": "Len"}, {"value": 175, "name": "Less"}, {"value": 301, "name": "Swap"}], "name": "KeyValueByKey."}, {"children": [{"value": 1004, "name": "Equivalent"}, {"value": 18, "name": "OwnedBy"}, {"value": 970, "name": "String"}, {"value": 30, "name": "Type"}], "name": "Lease."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "LeaseInfoRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "LeaseInfoResponse."}, {"children": [{"value": 354, "name": "DiversityScore"}, {"value": 385, "name": "String"}, {"value": 22, "name": "Type"}], "name": "Locality."}, {"value": 537, "name": "MakePriority"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "MergeRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "MergeResponse."}, {"value": 2327, "name": "MergeSpans"}, {"children": [{"value": 307, "name": "String"}], "name": "Method."}, {"value": 689, "name": "NewConditionalPut"}, {"value": 287, "name": "NewError"}, {"value": 109, "name": "NewErrorWithTxn"}, {"value": 469, "name": "NewErrorf"}, {"value": 348, "name": "NewInitPut"}, {"value": 348, "name": "NewPut"}, {"value": 352, "name": "NewPutInline"}, {"value": 548, "name": "NewRangeKeyMismatchError"}, {"value": 462, "name": "NewTransaction"}, {"children": [{"value": 91, "name": "String"}], "name": "NodeID."}, {"value": 2746, "name": "PrepareTransactionForRetry"}, {"value": 8, "name": "PrettyPrintKey"}, {"value": 8, "name": "PrettyPrintRange"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "PushTxnRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "PushTxnResponse."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "PushTxnType."}, {"value": 8, "name": "PushTxnType_name"}, {"value": 8, "name": "PushTxnType_value"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "PutRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "PutResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "QueryTxnRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "QueryTxnResponse."}, {"children": [{"value": 31, "name": "AsRawKey"}, {"value": 119, "name": "Equal"}, {"value": 125, "name": "Less"}, {"value": 286, "name": "Next"}, {"value": 168, "name": "PrefixEnd"}, {"value": 100, "name": "String"}], "name": "RKey."}, {"value": 24, "name": "RKeyMax"}, {"value": 24, "name": "RKeyMin"}, {"children": [{"value": 225, "name": "ContainsExclusiveEndKey"}, {"value": 225, "name": "ContainsKey"}, {"value": 552, "name": "ContainsKeyRange"}, {"value": 221, "name": "Equal"}, {"value": 1221, "name": "Intersect"}, {"value": 608, "name": "Overlaps"}, {"value": 162, "name": "String"}], "name": "RSpan."}, {"children": [{"value": 400, "name": "ContainsExclusiveEndKey"}, {"value": 400, "name": "ContainsKey"}, {"value": 439, "name": "ContainsKeyRange"}, {"value": 101, "name": "GetReplicaDescriptor"}, {"value": 101, "name": "GetReplicaDescriptorByID"}, {"value": 16, "name": "IsInitialized"}, {"value": 175, "name": "RSpan"}, {"value": 1277, "name": "String"}, {"value": 1197, "name": "Validate"}], "name": "RangeDescriptor."}, {"children": [{"value": 89, "name": "String"}], "name": "RangeID."}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 74, "name": "Swap"}], "name": "RangeIDSlice."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "RangeLookupRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "RangeLookupResponse."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ReadConsistencyType."}, {"value": 8, "name": "ReadConsistencyType_name"}, {"value": 8, "name": "ReadConsistencyType_value"}, {"value": 101, "name": "RegisterExternalServer"}, {"value": 101, "name": "RegisterInternalServer"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ReplicaChangeType."}, {"value": 8, "name": "ReplicaChangeType_name"}, {"value": 8, "name": "ReplicaChangeType_value"}, {"children": [{"value": 642, "name": "String"}, {"value": 345, "name": "Validate"}], "name": "ReplicaDescriptor."}, {"children": [{"value": 91, "name": "String"}], "name": "ReplicaID."}, {"children": [{"value": 254, "name": "String"}], "name": "ReplicationTarget."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "RequestLeaseRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "RequestLeaseResponse."}, {"children": [{"value": 122, "name": "GetInner"}], "name": "RequestUnion."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ResolveIntentRangeRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ResolveIntentRangeResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ResolveIntentRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ResolveIntentResponse."}, {"children": [{"value": 81, "name": "Header"}], "name": "ResponseHeader."}, {"children": [{"value": 122, "name": "GetInner"}], "name": "ResponseUnion."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ReverseScanRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ReverseScanResponse."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "ScanRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "ScanResponse."}, {"children": [{"value": 120, "name": "Error"}], "name": "SendError."}, {"children": [{"value": 517, "name": "AsRange"}, {"value": 573, "name": "Contains"}, {"value": 221, "name": "Equal"}, {"value": 81, "name": "Header"}, {"value": 735, "name": "Overlaps"}, {"value": 162, "name": "String"}], "name": "Span."}, {"children": [{"value": 11, "name": "Len"}, {"value": 183, "name": "Less"}, {"value": 306, "name": "Swap"}], "name": "Spans."}, {"children": [{"value": 58, "name": "FractionUsed"}], "name": "StoreCapacity."}, {"children": [{"value": 630, "name": "CombinedAttrs"}], "name": "StoreDescriptor."}, {"children": [{"value": 91, "name": "String"}], "name": "StoreID."}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "StoreIDSlice."}, {"children": [{"value": 260, "name": "String"}], "name": "Tier."}, {"children": [{"value": 515, "name": "Clone"}, {"value": 139, "name": "GetObservedTimestamp"}, {"value": 79, "name": "LastActive"}, {"value": 126, "name": "Short"}, {"value": 1604, "name": "String"}], "name": "Transaction."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TransactionRestart."}, {"value": 8, "name": "TransactionRestart_name"}, {"value": 8, "name": "TransactionRestart_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TransactionRetryReason."}, {"value": 8, "name": "TransactionRetryReason_name"}, {"value": 8, "name": "TransactionRetryReason_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TransactionStatus."}, {"value": 8, "name": "TransactionStatus_name"}, {"value": 8, "name": "TransactionStatus_value"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "TransferLeaseRequest."}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "TruncateLogRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "TruncateLogResponse."}, {"value": 84, "name": "UpdatesTimestampCache"}, {"children": [{"value": 387, "name": "String"}], "name": "UserPriority."}, {"children": [{"value": 973, "name": "GetBool"}, {"value": 592, "name": "GetBytes"}, {"value": 609, "name": "GetDecimal"}, {"value": 649, "name": "GetDuration"}, {"value": 861, "name": "GetFloat"}, {"value": 776, "name": "GetInt"}, {"value": 623, "name": "GetProto"}, {"value": 34, "name": "GetTag"}, {"value": 645, "name": "GetTime"}, {"value": 420, "name": "GetTimeseries"}, {"value": 592, "name": "GetTuple"}, {"value": 2848, "name": "PrettyPrint"}, {"value": 924, "name": "Verify"}, {"value": 179, "name": "checksum"}, {"value": 507, "name": "computeChecksum"}], "name": "Value."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ValueType."}, {"value": 8, "name": "ValueType_name"}, {"value": 8, "name": "ValueType_value"}, {"children": [{"value": 228, "name": "AsRange"}, {"value": 147, "name": "Contains"}, {"value": 147, "name": "Equal"}, {"value": 207, "name": "Header"}, {"value": 147, "name": "Overlaps"}], "name": "WriteBatchRequest."}, {"children": [{"value": 207, "name": "Header"}], "name": "WriteBatchResponse."}, {"value": 777, "name": "_External_Batch_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_External_Batch_Handler."}, {"value": 96, "name": "_External_serviceDesc"}, {"value": 777, "name": "_Internal_Batch_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Internal_Batch_Handler."}, {"value": 96, "name": "_Internal_serviceDesc"}, {"value": 72, "name": "_Method_index"}, {"value": 287, "name": "bytesPrefixEnd"}, {"value": 24, "name": "crc32Pool"}, {"value": 122, "name": "encodeVarintApi"}, {"value": 122, "name": "encodeVarintAppStats"}, {"value": 122, "name": "encodeVarintData"}, {"value": 122, "name": "encodeVarintErrors"}, {"value": 122, "name": "encodeVarintInternal"}, {"value": 122, "name": "encodeVarintInternalRaft"}, {"value": 122, "name": "encodeVarintMetadata"}, {"value": 24, "name": "fileDescriptorApi"}, {"value": 24, "name": "fileDescriptorAppStats"}, {"value": 24, "name": "fileDescriptorData"}, {"value": 24, "name": "fileDescriptorErrors"}, {"value": 24, "name": "fileDescriptorInternal"}, {"value": 24, "name": "fileDescriptorInternalRaft"}, {"value": 24, "name": "fileDescriptorMetadata"}, {"children": [{"value": 79, "name": "func1"}], "name": "glob."}, {"value": 5692, "name": "init"}, {"children": [{"value": 4248, "name": "1"}, {"value": 210, "name": "10"}, {"value": 237, "name": "11"}, {"value": 210, "name": "12"}, {"value": 559, "name": "13"}, {"value": 210, "name": "14"}, {"value": 210, "name": "2"}, {"value": 141, "name": "3"}, {"value": 210, "name": "4"}, {"value": 844, "name": "5"}, {"value": 210, "name": "6"}, {"value": 1347, "name": "7"}, {"value": 210, "name": "8"}, {"value": 141, "name": "9"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"children": [{"value": 206, "name": "get"}, {"value": 177, "name": "index"}, {"children": [{"value": 69, "name": "func1"}], "name": "index."}, {"value": 716, "name": "update"}], "name": "observedTimestampSlice."}, {"value": 24, "name": "requestNames"}, {"value": 1621, "name": "skipApi"}, {"value": 1621, "name": "skipAppStats"}, {"value": 1621, "name": "skipData"}, {"value": 1621, "name": "skipErrors"}, {"value": 1621, "name": "skipInternal"}, {"value": 1621, "name": "skipInternalRaft"}, {"value": 1621, "name": "skipMetadata"}, {"children": [{"value": 11, "name": "Len"}, {"value": 313, "name": "Less"}, {"value": 306, "name": "Swap"}], "name": "sortedSpans."}, {"value": 34, "name": "sovApi"}, {"value": 34, "name": "sovAppStats"}, {"value": 34, "name": "sovData"}, {"value": 34, "name": "sovErrors"}, {"value": 34, "name": "sovInternal"}, {"value": 34, "name": "sovInternalRaft"}, {"value": 34, "name": "sovMetadata"}, {"value": 24, "name": "statictmp_10193"}, {"value": 48, "name": "statictmp_10200"}, {"value": 8, "name": "statictmp_10676"}, {"value": 8, "name": "statictmp_10680"}, {"value": 8, "name": "statictmp_10686"}, {"value": 8, "name": "statictmp_10691"}, {"value": 8, "name": "statictmp_10696"}, {"value": 8, "name": "statictmp_10702"}, {"value": 8, "name": "statictmp_10707"}, {"value": 8, "name": "statictmp_10712"}, {"value": 8, "name": "statictmp_10718"}, {"value": 8, "name": "statictmp_10723"}, {"value": 8, "name": "statictmp_10728"}, {"value": 16, "name": "statictmp_10730"}, {"value": 8, "name": "statictmp_10734"}, {"value": 24, "name": "statictmp_10736"}, {"value": 8, "name": "statictmp_10740"}, {"value": 8, "name": "statictmp_10745"}, {"value": 8, "name": "statictmp_10750"}, {"value": 8, "name": "statictmp_10752"}, {"value": 8, "name": "statictmp_10756"}, {"value": 8, "name": "statictmp_10762"}, {"value": 16, "name": "statictmp_10764"}, {"value": 8, "name": "statictmp_10768"}, {"value": 24, "name": "statictmp_10770"}, {"value": 8, "name": "statictmp_10776"}, {"value": 8, "name": "statictmp_10781"}, {"value": 24, "name": "statictmp_10783"}, {"value": 8, "name": "statictmp_10787"}, {"value": 8, "name": "statictmp_10792"}, {"value": 8, "name": "statictmp_10797"}, {"value": 8, "name": "statictmp_10803"}, {"value": 8, "name": "statictmp_10808"}, {"value": 8, "name": "statictmp_10812"}, {"value": 8, "name": "statictmp_10818"}, {"value": 32, "name": "statictmp_10820"}, {"value": 8, "name": "statictmp_10828"}, {"value": 136, "name": "statictmp_11758"}, {"value": 8, "name": "statictmp_12516"}, {"value": 8, "name": "statictmp_12522"}, {"value": 40, "name": "statictmp_12668"}, {"value": 8, "name": "statictmp_12789"}, {"value": 8, "name": "statictmp_12794"}, {"value": 8, "name": "statictmp_12800"}, {"value": 16, "name": "statictmp_12806"}, {"value": 64, "name": "statictmp_13092"}, {"value": 12, "name": "statictmp_13295"}, {"value": 12, "name": "statictmp_13301"}, {"value": 24, "name": "statictmp_13435"}, {"value": 8, "name": "statictmp_13437"}, {"value": 8, "name": "statictmp_13440"}, {"value": 8, "name": "statictmp_13443"}, {"value": 8, "name": "statictmp_13448"}, {"value": 8, "name": "statictmp_13452"}, {"value": 8, "name": "statictmp_13457"}, {"value": 8, "name": "statictmp_13463"}, {"value": 8, "name": "statictmp_13469"}, {"value": 32, "name": "statictmp_13471"}, {"value": 8, "name": "statictmp_13475"}, {"value": 24, "name": "statictmp_13477"}, {"value": 8, "name": "statictmp_13479"}, {"value": 32, "name": "statictmp_13481"}, {"value": 8, "name": "statictmp_13485"}, {"value": 48, "name": "statictmp_137"}, {"value": 12, "name": "statictmp_14101"}, {"value": 24, "name": "statictmp_14304"}, {"value": 32, "name": "statictmp_14333"}, {"value": 24, "name": "statictmp_14425"}, {"value": 16, "name": "statictmp_14427"}, {"value": 24, "name": "statictmp_14428"}, {"value": 16, "name": "statictmp_14430"}, {"value": 4443, "name": "statictmp_14431"}, {"value": 402, "name": "statictmp_14432"}, {"value": 560, "name": "statictmp_14433"}, {"value": 2, "name": "statictmp_14434"}, {"value": 1508, "name": "statictmp_14435"}, {"value": 1933, "name": "statictmp_14436"}, {"value": 309, "name": "statictmp_14437"}, {"value": 448, "name": "statictmp_14438"}, {"value": 789, "name": "statictmp_14439"}, {"value": 12, "name": "statictmp_14441"}, {"value": 48, "name": "statictmp_14442"}, {"value": 48, "name": "statictmp_14446"}, {"value": 12, "name": "statictmp_14447"}, {"value": 16, "name": "statictmp_14451"}, {"value": 64, "name": "statictmp_14452"}, {"value": 64, "name": "statictmp_14456"}, {"value": 16, "name": "statictmp_14457"}, {"value": 24, "name": "statictmp_14461"}, {"value": 96, "name": "statictmp_14462"}, {"value": 96, "name": "statictmp_14466"}, {"value": 24, "name": "statictmp_14467"}, {"value": 48, "name": "statictmp_14471"}, {"value": 192, "name": "statictmp_14472"}, {"value": 192, "name": "statictmp_14476"}, {"value": 48, "name": "statictmp_14477"}, {"value": 8, "name": "statictmp_14481"}, {"value": 32, "name": "statictmp_14482"}, {"value": 32, "name": "statictmp_14486"}, {"value": 8, "name": "statictmp_14487"}, {"value": 12, "name": "statictmp_14491"}, {"value": 48, "name": "statictmp_14492"}, {"value": 48, "name": "statictmp_14496"}, {"value": 12, "name": "statictmp_14497"}, {"value": 20, "name": "statictmp_14501"}, {"value": 80, "name": "statictmp_14502"}, {"value": 80, "name": "statictmp_14506"}, {"value": 20, "name": "statictmp_14507"}, {"value": 12, "name": "statictmp_14511"}, {"value": 48, "name": "statictmp_14512"}, {"value": 48, "name": "statictmp_14516"}, {"value": 12, "name": "statictmp_14517"}, {"value": 8, "name": "statictmp_14549"}, {"value": 8, "name": "statictmp_14599"}, {"value": 8, "name": "statictmp_14703"}, {"value": 8, "name": "statictmp_14709"}, {"value": 8, "name": "statictmp_14717"}, {"value": 8, "name": "statictmp_14811"}, {"value": 8, "name": "statictmp_14872"}, {"value": 8, "name": "statictmp_14980"}, {"value": 8, "name": "statictmp_265"}, {"value": 8, "name": "statictmp_269"}, {"value": 8, "name": "statictmp_273"}, {"value": 8, "name": "statictmp_279"}, {"value": 8, "name": "statictmp_285"}, {"value": 8, "name": "statictmp_291"}, {"value": 8, "name": "statictmp_297"}, {"value": 8, "name": "statictmp_303"}, {"value": 8, "name": "statictmp_309"}, {"value": 8, "name": "statictmp_315"}, {"value": 8, "name": "statictmp_321"}, {"value": 8, "name": "statictmp_327"}, {"value": 8, "name": "statictmp_333"}, {"value": 8, "name": "statictmp_339"}, {"value": 168, "name": "statictmp_3399"}, {"value": 8, "name": "statictmp_345"}, {"value": 8, "name": "statictmp_351"}, {"value": 8, "name": "statictmp_357"}, {"value": 8, "name": "statictmp_363"}, {"value": 8, "name": "statictmp_369"}, {"value": 8, "name": "statictmp_375"}, {"value": 8, "name": "statictmp_381"}, {"value": 8, "name": "statictmp_387"}, {"value": 8, "name": "statictmp_393"}, {"value": 64, "name": "statictmp_3960"}, {"value": 8, "name": "statictmp_399"}, {"value": 64, "name": "statictmp_4024"}, {"value": 8, "name": "statictmp_405"}, {"value": 8, "name": "statictmp_411"}, {"value": 8, "name": "statictmp_417"}, {"value": 48, "name": "statictmp_4209"}, {"value": 8, "name": "statictmp_423"}, {"value": 8, "name": "statictmp_429"}, {"value": 8, "name": "statictmp_435"}, {"value": 8, "name": "statictmp_441"}, {"value": 8, "name": "statictmp_447"}, {"value": 8, "name": "statictmp_4474"}, {"value": 8, "name": "statictmp_453"}, {"value": 88, "name": "statictmp_4589"}, {"value": 8, "name": "statictmp_459"}, {"value": 88, "name": "statictmp_4593"}, {"value": 8, "name": "statictmp_465"}, {"value": 40, "name": "statictmp_4706"}, {"value": 8, "name": "statictmp_471"}, {"value": 8, "name": "statictmp_477"}, {"value": 8, "name": "statictmp_483"}, {"value": 8, "name": "statictmp_489"}, {"value": 8, "name": "statictmp_495"}, {"value": 8, "name": "statictmp_501"}, {"value": 8, "name": "statictmp_507"}, {"value": 16, "name": "statictmp_513"}, {"value": 8, "name": "statictmp_519"}, {"value": 8, "name": "statictmp_525"}, {"value": 8, "name": "statictmp_531"}, {"value": 8, "name": "statictmp_537"}, {"value": 8, "name": "statictmp_543"}, {"value": 8, "name": "statictmp_549"}, {"value": 8, "name": "statictmp_555"}, {"value": 8, "name": "statictmp_561"}, {"value": 8, "name": "statictmp_566"}, {"value": 8, "name": "statictmp_571"}, {"value": 8, "name": "statictmp_577"}, {"value": 8, "name": "statictmp_583"}, {"value": 8, "name": "statictmp_589"}, {"value": 8, "name": "statictmp_595"}, {"value": 8, "name": "statictmp_601"}, {"value": 96, "name": "statictmp_6059"}, {"value": 8, "name": "statictmp_607"}, {"value": 8, "name": "statictmp_613"}, {"value": 104, "name": "statictmp_6178"}, {"value": 32, "name": "statictmp_6185"}, {"value": 8, "name": "statictmp_619"}, {"value": 8, "name": "statictmp_625"}, {"value": 8, "name": "statictmp_631"}, {"value": 8, "name": "statictmp_637"}, {"value": 56, "name": "statictmp_6385"}, {"value": 8, "name": "statictmp_643"}, {"value": 8, "name": "statictmp_649"}, {"value": 8, "name": "statictmp_655"}, {"value": 8, "name": "statictmp_661"}, {"value": 16, "name": "statictmp_663"}, {"value": 16, "name": "statictmp_667"}, {"value": 16, "name": "statictmp_669"}, {"value": 16, "name": "statictmp_673"}, {"value": 16, "name": "statictmp_679"}, {"value": 32, "name": "statictmp_681"}, {"value": 16, "name": "statictmp_687"}, {"value": 16, "name": "statictmp_693"}, {"value": 8, "name": "statictmp_699"}, {"value": 8, "name": "statictmp_705"}, {"value": 8, "name": "statictmp_711"}, {"value": 8, "name": "statictmp_717"}, {"value": 16, "name": "statictmp_723"}, {"value": 8, "name": "statictmp_729"}, {"value": 16, "name": "statictmp_735"}, {"value": 32, "name": "statictmp_737"}, {"value": 280, "name": "statictmp_7375"}, {"value": 16, "name": "statictmp_741"}, {"value": 272, "name": "statictmp_7414"}, {"value": 8, "name": "statictmp_747"}, {"value": 8, "name": "statictmp_753"}, {"value": 8, "name": "statictmp_7537"}, {"value": 8, "name": "statictmp_7542"}, {"value": 8, "name": "statictmp_759"}, {"value": 16, "name": "statictmp_765"}, {"value": 8, "name": "statictmp_771"}, {"value": 8, "name": "statictmp_777"}, {"value": 8, "name": "statictmp_783"}, {"value": 8, "name": "statictmp_787"}, {"value": 8, "name": "statictmp_791"}, {"value": 16, "name": "statictmp_797"}, {"value": 280, "name": "statictmp_7994"}, {"value": 272, "name": "statictmp_8000"}, {"value": 24, "name": "statictmp_8607"}, {"value": 24, "name": "statictmp_8619"}, {"value": 16, "name": "statictmp_8985"}, {"value": 24, "name": "statictmp_8991"}, {"value": 8, "name": "statictmp_9001"}, {"value": 8, "name": "statictmp_9005"}, {"value": 8, "name": "statictmp_9009"}, {"value": 8, "name": "statictmp_9013"}, {"value": 8, "name": "statictmp_9019"}, {"value": 8, "name": "statictmp_9025"}, {"value": 8, "name": "statictmp_9030"}, {"value": 8, "name": "statictmp_9036"}, {"value": 8, "name": "statictmp_9042"}, {"value": 8, "name": "statictmp_9048"}, {"value": 16, "name": "statictmp_9050"}, {"value": 8, "name": "statictmp_9054"}, {"value": 32, "name": "statictmp_9056"}, {"value": 8, "name": "statictmp_9066"}, {"value": 8, "name": "statictmp_9071"}, {"value": 8, "name": "statictmp_9075"}, {"value": 8, "name": "statictmp_9081"}, {"value": 8, "name": "statictmp_9085"}, {"value": 8, "name": "statictmp_9091"}, {"value": 12, "name": "statictmp_9948"}, {"value": 56, "name": "go.itab.*AbortCacheEntry,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*AdminChangeReplicasRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*AdminChangeReplicasRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*AdminChangeReplicasResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*AdminChangeReplicasResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*AdminMergeRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*AdminMergeRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*AdminMergeResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*AdminMergeResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*AdminScatterRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*AdminScatterRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*AdminScatterResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*AdminScatterResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*AdminScatterResponse_Range,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*AdminSplitRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*AdminSplitRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*AdminSplitResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*AdminSplitResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*AdminTransferLeaseRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*AdminTransferLeaseRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*AdminTransferLeaseResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*AdminTransferLeaseResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*AmbiguousResultError,error"}, {"value": 56, "name": "go.itab.*AmbiguousResultError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Attributes,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BatchRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BatchResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BatchResponse_Header,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*BeginTransactionRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*BeginTransactionRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BeginTransactionResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ChangeReplicasTrigger,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*CheckConsistencyRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*CheckConsistencyRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*CheckConsistencyResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*CheckConsistencyResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ComputeChecksumRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ComputeChecksumRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ComputeChecksumResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*ConditionFailedError,error"}, {"value": 56, "name": "go.itab.*ConditionFailedError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ConditionalPutRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ConditionalPutRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ConditionalPutResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*DeleteRangeRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*DeleteRangeRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*DeleteRangeResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*DeleteRangeResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*DeleteRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*DeleteRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DeleteResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*DeprecatedVerifyChecksumRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*DeprecatedVerifyChecksumRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DeprecatedVerifyChecksumResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*EndTransactionRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*EndTransactionRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EndTransactionResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ErrPosition,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Error,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ErrorDetail,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ExportRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ExportRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportResponse_File,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage_Azure,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage_GCS,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage_Http,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage_LocalFilePath,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ExportStorage_S3,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*GCRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*GCRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GCRequest_GCKey,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GCResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*GetRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*GetRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*HandledRetryableTxnError,error"}, {"value": 56, "name": "go.itab.*HandledRetryableTxnError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Header,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*HeartbeatTxnRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*HeartbeatTxnRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HeartbeatTxnResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ImportRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ImportRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ImportRequest_File,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ImportRequest_TableRekey,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*ImportResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*ImportResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*IncrementRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*IncrementRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*IncrementResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*InitPutRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*InitPutRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InitPutResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Intent,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InternalCommitTrigger,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InternalTimeSeriesData,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InternalTimeSeriesSample,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*KeyValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Lease,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*LeaseInfoRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*LeaseInfoRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LeaseInfoResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*LeaseRejectedError,error"}, {"value": 56, "name": "go.itab.*LeaseRejectedError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Locality,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Locality,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 96, "name": "go.itab.*MergeRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*MergeRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MergeResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MergeTrigger,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ModifiedSpanTrigger,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodeDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*NodeUnavailableError,error"}, {"value": 56, "name": "go.itab.*NodeUnavailableError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*NoopRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*NoopRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NoopResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*NotLeaseHolderError,error"}, {"value": 56, "name": "go.itab.*NotLeaseHolderError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NumericStat,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ObservedTimestamp,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*OpRequiresTxnError,error"}, {"value": 56, "name": "go.itab.*OpRequiresTxnError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*PushTxnRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*PushTxnRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*PushTxnResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*PushTxnResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*PutRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*PutRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PutResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*QueryTxnRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*QueryTxnRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*QueryTxnResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*RaftGroupDeletedError,error"}, {"value": 56, "name": "go.itab.*RaftGroupDeletedError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftSnapshotData,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftSnapshotData_KeyValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftTombstone,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftTruncatedState,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*RangeKeyMismatchError,error"}, {"value": 56, "name": "go.itab.*RangeKeyMismatchError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*RangeLookupRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*RangeLookupRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeLookupResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*RangeNotFoundError,error"}, {"value": 56, "name": "go.itab.*RangeNotFoundError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*ReadWithinUncertaintyIntervalError,error"}, {"value": 56, "name": "go.itab.*ReadWithinUncertaintyIntervalError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*ReplicaCorruptionError,error"}, {"value": 56, "name": "go.itab.*ReplicaCorruptionError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReplicaDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReplicaIdent,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*ReplicaTooOldError,error"}, {"value": 56, "name": "go.itab.*ReplicaTooOldError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReplicationTarget,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*RequestLeaseRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*RequestLeaseRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RequestLeaseResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RequestUnion,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ResolveIntentRangeRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ResolveIntentRangeRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ResolveIntentRangeResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ResolveIntentRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ResolveIntentRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ResolveIntentResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ResponseHeader,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ResponseUnion,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ReverseScanRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ReverseScanRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*ReverseScanResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*ReverseScanResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*ScanRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*ScanRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.*ScanResponse,github.com/cockroachdb/cockroach/pkg/roachpb.Response"}, {"value": 56, "name": "go.itab.*ScanResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*SendError,error"}, {"value": 56, "name": "go.itab.*SendError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Span,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SplitTrigger,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StatementStatistics,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StoreCapacity,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StoreDeadReplicas,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StoreDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StoreIdent,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*StoreNotFoundError,error"}, {"value": 56, "name": "go.itab.*StoreNotFoundError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Tier,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Transaction,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*TransactionAbortedError,error"}, {"value": 56, "name": "go.itab.*TransactionAbortedError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*TransactionPushError,error"}, {"value": 56, "name": "go.itab.*TransactionPushError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*TransactionReplayError,error"}, {"value": 56, "name": "go.itab.*TransactionReplayError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*TransactionRetryError,error"}, {"value": 56, "name": "go.itab.*TransactionRetryError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*TransactionStatusError,error"}, {"value": 56, "name": "go.itab.*TransactionStatusError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*TransferLeaseRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*TransferLeaseRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*TruncateLogRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*TruncateLogRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TruncateLogResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*UnhandledRetryableError,error"}, {"value": 56, "name": "go.itab.*UnhandledRetryableError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 96, "name": "go.itab.*WriteBatchRequest,github.com/cockroachdb/cockroach/pkg/roachpb.Request"}, {"value": 56, "name": "go.itab.*WriteBatchRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*WriteBatchResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*WriteIntentError,error"}, {"value": 56, "name": "go.itab.*WriteIntentError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*WriteTooOldError,error"}, {"value": 56, "name": "go.itab.*WriteTooOldError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*externalClient,github.com/cockroachdb/cockroach/pkg/roachpb.ExternalClient"}, {"value": 40, "name": "go.itab.*internalClient,github.com/cockroachdb/cockroach/pkg/roachpb.InternalClient"}, {"value": 48, "name": "go.itab.*internalError,github.com/cockroachdb/cockroach/pkg/roachpb.ErrorDetailInterface"}, {"value": 56, "name": "go.itab.KeyValueByKey,sort.Interface"}, {"value": 56, "name": "go.itab.RangeIDSlice,sort.Interface"}, {"value": 48, "name": "go.itab.StoreIDSlice,github.com/cockroachdb/cockroach/pkg/util/shuffle.Interface"}, {"value": 56, "name": "go.itab.StoreIDSlice,sort.Interface"}, {"value": 56, "name": "go.itab.sortedSpans,sort.Interface"}], "name": "roachpb."}, {"children": [{"children": [{"value": 36, "name": "AdminURL"}, {"value": 23, "name": "ClientHasValidCerts"}, {"value": 292, "name": "ConnHealth"}, {"value": 613, "name": "GRPCDial"}, {"children": [{"value": 2806, "name": "func1"}, {"children": [{"value": 263, "name": "1"}, {"value": 346, "name": "2"}, {"children": [{"value": 477, "name": "1"}], "name": "2."}], "name": "func1."}], "name": "GRPCDial."}, {"value": 54, "name": "GetCACertPath"}, {"value": 45, "name": "GetCertificateManager"}, {"value": 72, "name": "GetClientCertPaths"}, {"value": 45, "name": "GetClientTLSConfig"}, {"value": 67, "name": "GetHTTPClient"}, {"value": 170, "name": "GetLocalInternalServerForAddr"}, {"value": 45, "name": "GetServerTLSConfig"}, {"value": 36, "name": "HTTPRequestScheme"}, {"value": 18, "name": "InitDefaults"}, {"value": 36, "name": "InitializeNodeTLSConfigs"}, {"value": 122, "name": "NewBreaker"}, {"value": 45, "name": "PGURL"}, {"value": 104, "name": "SetLocalInternalServer"}, {"value": 139, "name": "removeConn"}, {"value": 584, "name": "removeConnLocked"}, {"value": 2219, "name": "runHeartbeat"}], "name": "(*Context)."}, {"children": [{"value": 691, "name": "Ping"}], "name": "(*HeartbeatService)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "GetUser"}, {"value": 280, "name": "Marshal"}, {"value": 875, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 252, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3369, "name": "Unmarshal"}], "name": "(*PingRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 371, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 127, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2041, "name": "Unmarshal"}], "name": "(*PingResponse)."}, {"children": [{"value": 344, "name": "Latency"}, {"value": 98, "name": "Latency-fm"}, {"value": 17, "name": "Metrics"}, {"value": 1997, "name": "UpdateOffset"}, {"value": 2755, "name": "VerifyClockOffset"}], "name": "(*RemoteClockMonitor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 314, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 29, "name": "Reset"}, {"value": 152, "name": "Size"}, {"value": 204, "name": "String"}, {"value": 2175, "name": "Unmarshal"}], "name": "(*RemoteOffset)."}, {"children": [{"value": 70, "name": "After"}, {"value": 109, "name": "AfterFunc"}, {"value": 91, "name": "Now"}, {"value": 109, "name": "Sleep"}, {"value": 109, "name": "Tick"}, {"value": 109, "name": "Ticker"}, {"value": 109, "name": "Timer"}], "name": "(*breakerClock)."}, {"children": [{"value": 17, "name": "Do"}], "name": "(*connMeta)."}, {"children": [{"value": 326, "name": "Ping"}], "name": "(*heartbeatClient)."}, {"children": [{"value": 231, "name": "Do"}, {"value": 175, "name": "Type"}], "name": "(*snappyCompressor)."}, {"children": [{"value": 231, "name": "Do"}, {"value": 175, "name": "Type"}], "name": "(*snappyDecompressor)."}, {"children": [{"value": 108, "name": "AdminURL"}, {"value": 120, "name": "ClientHasValidCerts"}, {"value": 137, "name": "GetCACertPath"}, {"value": 121, "name": "GetCertificateManager"}, {"value": 193, "name": "GetClientCertPaths"}, {"value": 121, "name": "GetClientTLSConfig"}, {"value": 222, "name": "GetHTTPClient"}, {"value": 121, "name": "GetServerTLSConfig"}, {"value": 90, "name": "HTTPRequestScheme"}, {"value": 547, "name": "InitDefaults"}, {"value": 121, "name": "InitializeNodeTLSConfigs"}, {"value": 137, "name": "PGURL"}], "name": "Context."}, {"value": 16, "name": "ErrIntOverflowHeartbeat"}, {"value": 16, "name": "ErrInvalidLengthHeartbeat"}, {"value": 16, "name": "ErrNotConnected"}, {"value": 16, "name": "ErrNotHeartbeated"}, {"value": 1132, "name": "NewContext"}, {"children": [{"value": 444, "name": "func1"}, {"children": [{"value": 146, "name": "1"}], "name": "func1."}], "name": "NewContext."}, {"value": 1045, "name": "NewServer"}, {"value": 101, "name": "RegisterHeartbeatServer"}, {"children": [{"value": 523, "name": "String"}, {"value": 518, "name": "isHealthy"}], "name": "RemoteOffset."}, {"value": 16, "name": "SourceAddr"}, {"value": 777, "name": "_Heartbeat_Ping_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Heartbeat_Ping_Handler."}, {"value": 96, "name": "_Heartbeat_serviceDesc"}, {"value": 1, "name": "enableRPCCompression"}, {"value": 122, "name": "encodeVarintHeartbeat"}, {"value": 24, "name": "fileDescriptorHeartbeat"}, {"children": [{"value": 673, "name": "func1"}], "name": "glob."}, {"value": 774, "name": "init"}, {"children": [{"value": 8, "name": "1"}, {"value": 191, "name": "2"}, {"value": 210, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "metaClockOffsetMeanNanos"}, {"value": 56, "name": "metaClockOffsetStdDevNanos"}, {"value": 56, "name": "metaLatencyHistogramNanos"}, {"value": 217, "name": "newBackOff"}, {"value": 275, "name": "newBreaker"}, {"value": 1444, "name": "newRemoteClockMonitor"}, {"value": 1621, "name": "skipHeartbeat"}, {"children": [{"value": 449, "name": "Do"}, {"value": 22, "name": "Type"}], "name": "snappyCompressor."}, {"children": [{"value": 507, "name": "Do"}, {"value": 22, "name": "Type"}], "name": "snappyDecompressor."}, {"value": 34, "name": "sovHeartbeat"}, {"value": 8, "name": "statictmp_300"}, {"value": 8, "name": "statictmp_306"}, {"value": 24, "name": "statictmp_308"}, {"value": 8, "name": "statictmp_312"}, {"value": 24, "name": "statictmp_656"}, {"value": 24, "name": "statictmp_677"}, {"value": 16, "name": "statictmp_679"}, {"value": 356, "name": "statictmp_680"}, {"value": 8, "name": "statictmp_77"}, {"value": 40, "name": "go.itab.*HeartbeatService,github.com/cockroachdb/cockroach/pkg/rpc.HeartbeatServer"}, {"value": 56, "name": "go.itab.*PingRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PingResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RemoteOffset,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 88, "name": "go.itab.*breakerClock,github.com/cockroachdb/cockroach/vendor/github.com/facebookgo/clock.Clock"}, {"value": 40, "name": "go.itab.*heartbeatClient,github.com/cockroachdb/cockroach/pkg/rpc.HeartbeatClient"}, {"value": 48, "name": "go.itab.snappyCompressor,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.Compressor"}, {"value": 48, "name": "go.itab.snappyDecompressor,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.Decompressor"}], "name": "rpc."}, {"children": [{"children": [{"value": 33, "name": "Certificates"}, {"value": 3267, "name": "Load"}, {"value": 864, "name": "MaybeCreateCertsDir"}, {"value": 10, "name": "TestDisablePermissionChecks"}, {"value": 2115, "name": "certInfoFromFilename"}, {"value": 2001, "name": "findKey"}], "name": "(*CertificateLoader)."}, {"children": [{"value": 168, "name": "CACert"}, {"value": 158, "name": "CACertPath"}, {"value": 270, "name": "ClientCertPath"}, {"value": 168, "name": "ClientCerts"}, {"value": 270, "name": "ClientKeyPath"}, {"value": 475, "name": "GetCACertPath"}, {"value": 841, "name": "GetClientCertPaths"}, {"value": 1100, "name": "GetClientTLSConfig"}, {"value": 759, "name": "GetEmbeddedServerTLSConfig"}, {"value": 99, "name": "GetEmbeddedServerTLSConfig-fm"}, {"value": 306, "name": "GetServerTLSConfig"}, {"value": 1636, "name": "LoadCertificates"}, {"value": 168, "name": "NodeCert"}, {"value": 158, "name": "NodeCertPath"}, {"value": 158, "name": "NodeKeyPath"}, {"value": 228, "name": "RegisterSignalHandler"}, {"children": [{"value": 994, "name": "func1"}], "name": "RegisterSignalHandler."}, {"value": 437, "name": "getClientCertsLocked"}, {"value": 192, "name": "getNodeClientCertsLocked"}], "name": "(*CertificateManager)."}, {"children": [{"value": 243, "name": "String"}], "name": "(*pemUsage)."}, {"value": 5796, "name": "CreateCAPair"}, {"value": 2454, "name": "CreateClientPair"}, {"value": 2535, "name": "CreateNodePair"}, {"value": 16, "name": "ErrEmptyPassword"}, {"value": 500, "name": "GenerateCA"}, {"value": 670, "name": "GenerateClientCert"}, {"value": 1318, "name": "GenerateServerCert"}, {"value": 325, "name": "GetCertificateUser"}, {"value": 265, "name": "HashPassword"}, {"value": 215, "name": "NewCertificateManager"}, {"value": 481, "name": "NewCertificateManagerFirstRun"}, {"value": 849, "name": "PEMToCertificates"}, {"value": 745, "name": "PEMToPrivateKey"}, {"value": 981, "name": "PrivateKeyToPEM"}, {"value": 550, "name": "PromptForPassword"}, {"value": 257, "name": "PromptForPasswordAndHash"}, {"value": 1110, "name": "PromptForPasswordTwice"}, {"value": 289, "name": "UserAuthCertHook"}, {"children": [{"value": 921, "name": "func1"}], "name": "UserAuthCertHook."}, {"value": 227, "name": "UserAuthPasswordHook"}, {"children": [{"value": 626, "name": "func1"}], "name": "UserAuthPasswordHook."}, {"value": 447, "name": "WritePEMToFile"}, {"value": 24, "name": "assetLoaderImpl"}, {"value": 132, "name": "checkCertIsValid"}, {"value": 253, "name": "compareHashAndPassword"}, {"value": 339, "name": "init"}, {"children": [{"value": 87, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1070, "name": "loadCACertAndKey"}, {"value": 1177, "name": "newClientTLSConfig"}, {"value": 1258, "name": "newServerTLSConfig"}, {"value": 1068, "name": "newTemplate"}, {"value": 527, "name": "parsePrivateKey"}, {"children": [{"value": 107, "name": "String"}], "name": "pemUsage."}, {"value": 1, "name": "skipPermissionChecks"}, {"value": 32, "name": "statictmp_225"}, {"value": 32, "name": "statictmp_230"}, {"value": 32, "name": "statictmp_235"}, {"value": 28, "name": "statictmp_689"}, {"value": 28, "name": "statictmp_707"}, {"value": 16, "name": "statictmp_735"}, {"value": 16, "name": "statictmp_745"}, {"value": 8, "name": "statictmp_759"}, {"value": 331, "name": "writeCertificateToFile"}, {"value": 232, "name": "writeKeyToFile"}], "name": "security."}, {"children": [{"children": [{"value": 36, "name": "AdminURL"}, {"value": 23, "name": "ClientHasValidCerts"}, {"value": 5837, "name": "CreateEngines"}, {"value": 1693, "name": "FilterGossipBootstrapResolvers"}, {"value": 54, "name": "GetCACertPath"}, {"value": 45, "name": "GetCertificateManager"}, {"value": 72, "name": "GetClientCertPaths"}, {"value": 45, "name": "GetClientTLSConfig"}, {"value": 67, "name": "GetHTTPClient"}, {"value": 45, "name": "GetServerTLSConfig"}, {"value": 36, "name": "HTTPRequestScheme"}, {"value": 252, "name": "HistogramWindowInterval"}, {"value": 18, "name": "InitDefaults"}, {"value": 455, "name": "InitNode"}, {"value": 36, "name": "InitializeNodeTLSConfigs"}, {"value": 45, "name": "PGURL"}, {"value": 633, "name": "Report"}, {"value": 3650, "name": "String"}, {"value": 726, "name": "parseGossipBootstrapResolvers"}, {"value": 432, "name": "readEnvironmentVariables"}], "name": "(*Config)."}, {"children": [{"value": 200, "name": "Close"}], "name": "(*Engines)."}, {"children": [{"value": 106, "name": "AnnotateCtx"}, {"value": 165, "name": "AnnotateCtxWithSpan"}, {"value": 540, "name": "Batch"}, {"value": 166, "name": "IsDraining"}, {"children": [{"value": 113, "name": "func1"}], "name": "IsDraining."}, {"value": 127, "name": "SetDraining"}, {"children": [{"value": 86, "name": "func1"}], "name": "SetDraining."}, {"value": 196, "name": "String"}, {"value": 120, "name": "addStore"}, {"value": 1044, "name": "batchInternal"}, {"children": [{"value": 1231, "name": "func1"}, {"children": [{"value": 68, "name": "1"}], "name": "func1."}], "name": "batchInternal."}, {"value": 1461, "name": "bootstrapStores"}, {"value": 164, "name": "computePeriodicMetrics"}, {"children": [{"value": 294, "name": "func1"}], "name": "computePeriodicMetrics."}, {"value": 1628, "name": "connectGossip"}, {"value": 235, "name": "gossipStores"}, {"children": [{"value": 217, "name": "func1"}], "name": "gossipStores."}, {"value": 374, "name": "initDescriptor"}, {"value": 1778, "name": "initNodeID"}, {"value": 3538, "name": "initStores"}, {"children": [{"value": 200, "name": "func1"}, {"value": 115, "name": "func2"}], "name": "initStores."}, {"value": 428, "name": "recordJoinEvent"}, {"children": [{"value": 1142, "name": "func1"}, {"children": [{"value": 393, "name": "1"}], "name": "func1."}], "name": "recordJoinEvent."}, {"value": 982, "name": "setupSpanForIncomingRPC"}, {"children": [{"value": 946, "name": "func1"}], "name": "setupSpanForIncomingRPC."}, {"value": 1664, "name": "start"}, {"value": 331, "name": "startComputePeriodicMetrics"}, {"children": [{"value": 588, "name": "func1"}], "name": "startComputePeriodicMetrics."}, {"value": 322, "name": "startGossip"}, {"children": [{"value": 1399, "name": "func1"}], "name": "startGossip."}, {"value": 348, "name": "startWriteSummaries"}, {"children": [{"value": 747, "name": "func1"}], "name": "startWriteSummaries."}, {"value": 123, "name": "validateStores"}, {"children": [{"value": 741, "name": "func1"}], "name": "validateStores."}, {"value": 205, "name": "writeSummaries"}, {"children": [{"value": 166, "name": "func1"}], "name": "writeSummaries."}], "name": "(*Node)."}, {"children": [{"value": 108, "name": "AnnotateCtx"}, {"value": 167, "name": "AnnotateCtxWithSpan"}, {"value": 40, "name": "ClusterID"}, {"value": 97, "name": "ClusterID-fm"}, {"value": 97, "name": "ClusterStores"}, {"value": 167, "name": "Drain"}, {"value": 24, "name": "InitialBoot"}, {"value": 20, "name": "NodeID"}, {"value": 246, "name": "PeriodicallyCheckForUpdates"}, {"children": [{"value": 1247, "name": "func1"}], "name": "PeriodicallyCheckForUpdates."}, {"value": 503, "name": "ServeHTTP"}, {"value": 166, "name": "SetDistSQLSpanResolver"}, {"value": 14507, "name": "Start"}, {"children": [{"value": 203, "name": "func1"}, {"value": 117, "name": "func10"}, {"children": [{"value": 88, "name": "1"}], "name": "func10."}, {"value": 252, "name": "func11"}, {"value": 630, "name": "func12"}, {"children": [{"value": 446, "name": "1"}], "name": "func12."}, {"value": 231, "name": "func13"}, {"children": [{"value": 114, "name": "1"}], "name": "func13."}, {"value": 245, "name": "func2"}, {"value": 88, "name": "func3"}, {"value": 101, "name": "func4"}, {"value": 107, "name": "func5"}, {"value": 365, "name": "func6"}, {"children": [{"value": 88, "name": "1"}], "name": "func6."}, {"value": 108, "name": "func7"}, {"value": 839, "name": "func8"}, {"value": 717, "name": "func9"}, {"children": [{"value": 522, "name": "1"}], "name": "func9."}], "name": "Start."}, {"value": 127, "name": "Stop"}, {"value": 327, "name": "Undrain"}, {"value": 4135, "name": "checkForUpdates"}, {"value": 1690, "name": "collectSchemaInfo"}, {"value": 1029, "name": "doDrain"}, {"children": [{"value": 197, "name": "func1"}], "name": "doDrain."}, {"value": 1619, "name": "getReportingInfo"}, {"value": 600, "name": "maybeCheckForUpdates"}, {"value": 425, "name": "maybeReportDiagnostics"}, {"value": 858, "name": "refreshSettings"}, {"children": [{"value": 2393, "name": "func1"}, {"value": 919, "name": "func2"}], "name": "refreshSettings."}, {"value": 3052, "name": "reportDiagnostics"}, {"value": 289, "name": "startSampleEnvironment"}, {"children": [{"value": 430, "name": "func1"}], "name": "startSampleEnvironment."}], "name": "(*Server)."}, {"children": [{"value": 442, "name": "Cluster"}, {"value": 4594, "name": "DatabaseDetails"}, {"value": 1989, "name": "Databases"}, {"value": 1293, "name": "Drain"}, {"value": 3851, "name": "Events"}, {"value": 736, "name": "GetUIData"}, {"value": 379, "name": "Health"}, {"value": 221, "name": "Liveness"}, {"value": 328, "name": "NewContextAndSessionForRPC"}, {"value": 110, "name": "RegisterGateway"}, {"value": 82, "name": "RegisterService"}, {"value": 2207, "name": "SetUIData"}, {"value": 952, "name": "Settings"}, {"value": 9099, "name": "TableDetails"}, {"children": [{"value": 382, "name": "func1"}], "name": "TableDetails."}, {"value": 5853, "name": "TableStats"}, {"children": [{"value": 382, "name": "func1"}, {"value": 791, "name": "func2"}], "name": "TableStats."}, {"value": 1324, "name": "Users"}, {"value": 690, "name": "assertNotVirtualSchema"}, {"value": 601, "name": "checkQueryResults"}, {"value": 413, "name": "firstNotFoundError"}, {"value": 3272, "name": "getUIData"}, {"value": 545, "name": "queryDescriptorIDPath"}, {"value": 1649, "name": "queryNamespaceID"}, {"value": 1595, "name": "queryZone"}, {"value": 557, "name": "queryZonePath"}, {"value": 249, "name": "serverError"}, {"value": 206, "name": "serverErrorf"}, {"value": 334, "name": "serverErrors"}], "name": "(*adminServer)."}, {"children": [{"value": 31995, "name": "postProcessing"}, {"children": [{"value": 818, "name": "func1"}, {"value": 395, "name": "func2"}, {"value": 198, "name": "func3"}, {"value": 54, "name": "func4"}], "name": "postProcessing."}], "name": "(*debugRangeData)."}, {"children": [{"value": 183, "name": "Close"}, {"value": 1, "name": "Flush"}, {"value": 101, "name": "Header"}, {"value": 128, "name": "Write"}, {"value": 101, "name": "WriteHeader"}], "name": "(*gzipResponseWriter)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 248, "name": "Less"}, {"value": 435, "name": "Swap"}], "name": "(*rangeInfoSlice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*replicaIDSlice)."}, {"children": [{"value": 257, "name": "IsNull"}, {"value": 278, "name": "Scan"}, {"value": 258, "name": "ScanIndex"}], "name": "(*resultScanner)."}, {"children": [{"value": 1231, "name": "Append"}, {"value": 42, "name": "Errors"}, {"value": 17, "name": "QueryArguments"}, {"value": 225, "name": "String"}], "name": "(*sqlQuery)."}, {"children": [{"value": 89, "name": "(github.com/cockroachdb/cockroach/pkg/server.handleDebugRange)-fm"}, {"value": 89, "name": "(github.com/cockroachdb/cockroach/pkg/server.handleProblemRanges)-fm"}, {"value": 89, "name": "(github.com/cockroachdb/cockroach/pkg/server.handleVars)-fm"}, {"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 1379, "name": "Details"}, {"value": 17, "name": "FinishEventLog"}, {"value": 626, "name": "Gossip"}, {"value": 1686, "name": "LogFile"}, {"value": 800, "name": "LogFilesList"}, {"value": 2473, "name": "Logs"}, {"value": 566, "name": "Metrics"}, {"value": 1520, "name": "Node"}, {"value": 1534, "name": "Nodes"}, {"value": 3392, "name": "RaftDebug"}, {"children": [{"value": 1882, "name": "func1"}], "name": "RaftDebug."}, {"value": 1409, "name": "Ranges"}, {"children": [{"value": 930, "name": "func1"}, {"value": 779, "name": "func2"}, {"value": 1900, "name": "func3"}, {"children": [{"value": 981, "name": "1"}], "name": "func3."}], "name": "Ranges."}, {"value": 149, "name": "RegisterGateway"}, {"value": 82, "name": "RegisterService"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 714, "name": "SpanStats"}, {"children": [{"value": 576, "name": "func1"}], "name": "SpanStats."}, {"value": 805, "name": "Stacks"}, {"value": 399, "name": "dialNode"}, {"value": 5356, "name": "handleDebugRange"}, {"children": [{"value": 630, "name": "func1"}], "name": "handleDebugRange."}, {"value": 5522, "name": "handleProblemRanges"}, {"children": [{"value": 513, "name": "func1"}], "name": "handleProblemRanges."}, {"value": 510, "name": "handleVars"}, {"value": 381, "name": "parseNodeID"}], "name": "(*statusServer)."}, {"children": [{"value": 208, "name": "Primitive"}], "name": "(*stringRedactor)."}, {"children": [{"value": 108, "name": "AdminURL"}, {"value": 120, "name": "ClientHasValidCerts"}, {"value": 137, "name": "GetCACertPath"}, {"value": 121, "name": "GetCertificateManager"}, {"value": 193, "name": "GetClientCertPaths"}, {"value": 121, "name": "GetClientTLSConfig"}, {"value": 222, "name": "GetHTTPClient"}, {"value": 121, "name": "GetServerTLSConfig"}, {"value": 90, "name": "HTTPRequestScheme"}, {"value": 38, "name": "HistogramWindowInterval"}, {"value": 547, "name": "InitDefaults"}, {"value": 121, "name": "InitializeNodeTLSConfigs"}, {"value": 137, "name": "PGURL"}], "name": "Config."}, {"value": 187, "name": "GetBootstrapSchema"}, {"value": 1895, "name": "GetTotalMemory"}, {"children": [{"value": 533, "name": "func1"}, {"value": 251, "name": "func2"}], "name": "GetTotalMemory."}, {"value": 24, "name": "GracefulDrainModes"}, {"value": 1031, "name": "MakeConfig"}, {"value": 1320, "name": "NewNode"}, {"value": 11898, "name": "NewServer"}, {"children": [{"value": 206, "name": "func1"}], "name": "NewServer."}, {"value": 89, "name": "SetOpenFileLimitForOneStore"}, {"value": 96, "name": "addJitter"}, {"value": 259, "name": "allocateNodeID"}, {"value": 535, "name": "allocateStoreIDs"}, {"value": 3366, "name": "bootstrapCluster"}, {"value": 8, "name": "debugRemote"}, {"value": 8, "name": "debugServeMux"}, {"value": 8, "name": "diagnosticReportFrequency"}, {"value": 8, "name": "diagnosticsMetricsEnabled"}, {"value": 16, "name": "errAdminAPIError"}, {"value": 16, "name": "errCannotJoinSelf"}, {"value": 16, "name": "errNeedsBootstrap"}, {"value": 89, "name": "getRlimitNoFile"}, {"value": 141, "name": "growStack"}, {"value": 1, "name": "growStackGlobal"}, {"children": [{"value": 98, "name": "Header"}, {"value": 98, "name": "WriteHeader"}], "name": "gzipResponseWriter."}, {"value": 24, "name": "gzipWriterPool"}, {"value": 122, "name": "handleDebug"}, {"value": 739, "name": "incVal"}, {"value": 1462, "name": "init"}, {"children": [{"value": 276, "name": "1"}, {"children": [{"value": 421, "name": "func1"}, {"value": 552, "name": "func2"}], "name": "1."}, {"value": 418, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "localRE"}, {"value": 1073, "name": "makeNodeMetrics"}, {"value": 312, "name": "makeResultScanner"}, {"value": 274, "name": "marshalJSONResponse"}, {"value": 599, "name": "marshalToJSON"}, {"value": 56, "name": "metaExecError"}, {"value": 56, "name": "metaExecLatency"}, {"value": 56, "name": "metaExecSuccess"}, {"value": 481, "name": "newAdminServer"}, {"value": 435, "name": "newGzipResponseWriter"}, {"value": 685, "name": "newStatusServer"}, {"children": [{"value": 160, "name": "callComplete"}], "name": "nodeMetrics."}, {"value": 8, "name": "noteworthyAdminMemoryUsageBytes"}, {"value": 821, "name": "officialAddr"}, {"value": 432, "name": "parseAttributes"}, {"value": 211, "name": "parseInt64WithDefault"}, {"children": [{"value": 11, "name": "Len"}, {"value": 129, "name": "Less"}, {"value": 333, "name": "Swap"}], "name": "rangeInfoSlice."}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "replicaIDSlice."}, {"value": 8, "name": "reportingURL"}, {"children": [{"value": 438, "name": "IsNull"}, {"value": 411, "name": "Scan"}, {"value": 1994, "name": "ScanIndex"}], "name": "resultScanner."}, {"value": 90, "name": "setOpenFileLimit"}, {"value": 2869, "name": "setOpenFileLimitInner"}, {"value": 89, "name": "setRlimitNoFile"}, {"value": 16, "name": "statictmp_128"}, {"value": 40, "name": "statictmp_141"}, {"value": 48, "name": "statictmp_1648"}, {"value": 8, "name": "statictmp_1676"}, {"value": 16, "name": "statictmp_1691"}, {"value": 16, "name": "statictmp_1692"}, {"value": 16, "name": "statictmp_1693"}, {"value": 16, "name": "statictmp_1695"}, {"value": 16, "name": "statictmp_1703"}, {"value": 16, "name": "statictmp_1710"}, {"value": 48, "name": "statictmp_2145"}, {"value": 136, "name": "statictmp_2147"}, {"value": 8, "name": "statictmp_2156"}, {"value": 112, "name": "statictmp_2189"}, {"value": 8, "name": "statictmp_2194"}, {"value": 128, "name": "statictmp_2199"}, {"value": 160, "name": "statictmp_2202"}, {"value": 456, "name": "statictmp_2217"}, {"value": 136, "name": "statictmp_2575"}, {"value": 136, "name": "statictmp_3011"}, {"value": 24, "name": "statictmp_3037"}, {"value": 136, "name": "statictmp_3127"}, {"value": 48, "name": "statictmp_3365"}, {"value": 48, "name": "statictmp_3585"}, {"value": 400, "name": "statictmp_3593"}, {"value": 8, "name": "statictmp_3760"}, {"value": 72, "name": "statictmp_632"}, {"value": 72, "name": "statictmp_633"}, {"value": 72, "name": "statictmp_634"}, {"value": 72, "name": "statictmp_635"}, {"value": 72, "name": "statictmp_639"}, {"value": 4, "name": "statictmp_662"}, {"value": 40, "name": "statictmp_675"}, {"value": 504, "name": "statictmp_731"}, {"children": [{"value": 270, "name": "Primitive"}], "name": "stringRedactor."}, {"value": 8, "name": "timeUntilStoreDead"}, {"value": 8, "name": "updatesURL"}, {"value": 40, "name": "go.itab.*Engines,github.com/cockroachdb/cockroach/pkg/util/stop.Closer"}, {"value": 40, "name": "go.itab.*Node,github.com/cockroachdb/cockroach/pkg/roachpb.InternalServer"}, {"value": 40, "name": "go.itab.*Server,net/http.Handler"}, {"value": 48, "name": "go.itab.*adminServer,github.com/cockroachdb/cockroach/pkg/server.grpcGatewayServer"}, {"value": 136, "name": "go.itab.*adminServer,github.com/cockroachdb/cockroach/pkg/server/serverpb.AdminServer"}, {"value": 56, "name": "go.itab.*gzipResponseWriter,net/http.ResponseWriter"}, {"value": 48, "name": "go.itab.*statusServer,github.com/cockroachdb/cockroach/pkg/server.grpcGatewayServer"}, {"value": 128, "name": "go.itab.*statusServer,github.com/cockroachdb/cockroach/pkg/server/serverpb.StatusServer"}, {"value": 56, "name": "go.itab.rangeInfoSlice,sort.Interface"}, {"value": 56, "name": "go.itab.replicaIDSlice,sort.Interface"}], "name": "server."}, {"children": [{"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*ClusterRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*ClusterResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*DatabaseDetailsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1493, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 616, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4380, "name": "Unmarshal"}], "name": "(*DatabaseDetailsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 639, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 219, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2541, "name": "Unmarshal"}], "name": "(*DatabaseDetailsResponse_Grant)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*DatabasesRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 408, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 174, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1859, "name": "Unmarshal"}], "name": "(*DatabasesResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*DetailsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 759, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 231, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2747, "name": "Unmarshal"}], "name": "(*DetailsResponse)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}], "name": "(*DrainMode)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1089, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 357, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4117, "name": "Unmarshal"}], "name": "(*DrainRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 501, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 182, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2340, "name": "Unmarshal"}], "name": "(*DrainResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 397, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 146, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2041, "name": "Unmarshal"}], "name": "(*EventsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 553, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 290, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2021, "name": "Unmarshal"}], "name": "(*EventsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1269, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 406, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4723, "name": "Unmarshal"}], "name": "(*EventsResponse_Event)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 408, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 174, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1859, "name": "Unmarshal"}], "name": "(*GetUIDataRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1529, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 480, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3251, "name": "Unmarshal"}], "name": "(*GetUIDataResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 637, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 186, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2604, "name": "Unmarshal"}], "name": "(*GetUIDataResponse_Value)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*GossipRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*HealthRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*HealthResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1940, "name": "Unmarshal"}], "name": "(*JSONResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*LivenessRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 573, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 307, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1932, "name": "Unmarshal"}], "name": "(*LivenessResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 550, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 284, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2013, "name": "Unmarshal"}], "name": "(*LogEntriesResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*LogFileRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*LogFilesListRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 576, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 316, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2029, "name": "Unmarshal"}], "name": "(*LogFilesListResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1428, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 419, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4955, "name": "Unmarshal"}], "name": "(*LogsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*MetricsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*NodeRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*NodesRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 556, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 296, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2024, "name": "Unmarshal"}], "name": "(*NodesResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*PrettySpan)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 501, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 182, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2346, "name": "Unmarshal"}], "name": "(*RaftDebugRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1718, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 684, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4104, "name": "Unmarshal"}], "name": "(*RaftDebugResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*RaftRangeError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 451, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 159, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2063, "name": "Unmarshal"}], "name": "(*RaftRangeNode)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1090, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 517, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3550, "name": "Unmarshal"}], "name": "(*RaftRangeStatus)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 2182, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 765, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5604, "name": "Unmarshal"}], "name": "(*RaftState)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 687, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 263, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3274, "name": "Unmarshal"}], "name": "(*RaftState_Progress)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 2393, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 804, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6212, "name": "Unmarshal"}], "name": "(*RangeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 329, "name": "Marshal"}, {"value": 245, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 11, "name": "Reset"}, {"value": 46, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1791, "name": "Unmarshal"}], "name": "(*RangeProblems)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 746, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 257, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3050, "name": "Unmarshal"}], "name": "(*RangesRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 556, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 296, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2022, "name": "Unmarshal"}], "name": "(*RangesResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1423, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 397, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3166, "name": "Unmarshal"}], "name": "(*SetUIDataRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*SetUIDataResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 408, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 174, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1859, "name": "Unmarshal"}], "name": "(*SettingsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1529, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 480, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3251, "name": "Unmarshal"}], "name": "(*SettingsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 750, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 228, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2969, "name": "Unmarshal"}], "name": "(*SettingsResponse_Value)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 750, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 228, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3606, "name": "Unmarshal"}], "name": "(*SpanStatsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 409, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 63, "name": "Reset"}, {"value": 125, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2015, "name": "Unmarshal"}], "name": "(*SpanStatsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*StacksRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*TableDetailsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 2541, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 1167, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6716, "name": "Unmarshal"}], "name": "(*TableDetailsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 861, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 240, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3373, "name": "Unmarshal"}], "name": "(*TableDetailsResponse_Column)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 639, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 219, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2541, "name": "Unmarshal"}], "name": "(*TableDetailsResponse_Grant)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1160, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 329, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4584, "name": "Unmarshal"}], "name": "(*TableDetailsResponse_Index)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*TableStatsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1083, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 416, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4029, "name": "Unmarshal"}], "name": "(*TableStatsResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*TableStatsResponse_MissingNode)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*UsersRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 477, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 210, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1987, "name": "Unmarshal"}], "name": "(*UsersResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1641, "name": "Unmarshal"}], "name": "(*UsersResponse_User)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}], "name": "(*ZoneConfigurationLevel)."}, {"children": [{"value": 326, "name": "Cluster"}, {"value": 326, "name": "DatabaseDetails"}, {"value": 326, "name": "Databases"}, {"value": 661, "name": "Drain"}, {"value": 326, "name": "Events"}, {"value": 326, "name": "GetUIData"}, {"value": 326, "name": "Health"}, {"value": 326, "name": "Liveness"}, {"value": 326, "name": "SetUIData"}, {"value": 326, "name": "Settings"}, {"value": 326, "name": "TableDetails"}, {"value": 326, "name": "TableStats"}, {"value": 326, "name": "Users"}], "name": "(*adminClient)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*adminDrainClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*adminDrainServer)."}, {"children": [{"value": 326, "name": "Details"}, {"value": 326, "name": "Gossip"}, {"value": 326, "name": "LogFile"}, {"value": 326, "name": "LogFilesList"}, {"value": 326, "name": "Logs"}, {"value": 326, "name": "Metrics"}, {"value": 326, "name": "Node"}, {"value": 326, "name": "Nodes"}, {"value": 326, "name": "RaftDebug"}, {"value": 326, "name": "Ranges"}, {"value": 326, "name": "SpanStats"}, {"value": 326, "name": "Stacks"}], "name": "(*statusClient)."}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "DrainMode."}, {"value": 8, "name": "DrainMode_name"}, {"value": 8, "name": "DrainMode_value"}, {"value": 16, "name": "ErrIntOverflowAdmin"}, {"value": 16, "name": "ErrIntOverflowStatus"}, {"value": 16, "name": "ErrInvalidLengthAdmin"}, {"value": 16, "name": "ErrInvalidLengthStatus"}, {"value": 10763, "name": "RegisterAdminHandler"}, {"children": [{"value": 1306, "name": "func1"}, {"children": [{"value": 252, "name": "1"}], "name": "func1."}, {"value": 1306, "name": "func10"}, {"children": [{"value": 252, "name": "1"}], "name": "func10."}, {"value": 1306, "name": "func11"}, {"children": [{"value": 252, "name": "1"}], "name": "func11."}, {"value": 1306, "name": "func12"}, {"children": [{"value": 252, "name": "1"}], "name": "func12."}, {"value": 1481, "name": "func13"}, {"children": [{"value": 252, "name": "1"}, {"value": 106, "name": "2"}], "name": "func13."}, {"value": 1306, "name": "func2"}, {"children": [{"value": 252, "name": "1"}], "name": "func2."}, {"value": 1306, "name": "func3"}, {"children": [{"value": 252, "name": "1"}], "name": "func3."}, {"value": 1306, "name": "func4"}, {"children": [{"value": 252, "name": "1"}], "name": "func4."}, {"value": 1306, "name": "func5"}, {"children": [{"value": 252, "name": "1"}], "name": "func5."}, {"value": 1306, "name": "func6"}, {"children": [{"value": 252, "name": "1"}], "name": "func6."}, {"value": 1306, "name": "func7"}, {"children": [{"value": 252, "name": "1"}], "name": "func7."}, {"value": 1306, "name": "func8"}, {"children": [{"value": 252, "name": "1"}], "name": "func8."}, {"value": 1306, "name": "func9"}, {"children": [{"value": 252, "name": "1"}], "name": "func9."}], "name": "RegisterAdminHandler."}, {"value": 101, "name": "RegisterAdminServer"}, {"value": 10763, "name": "RegisterStatusHandler"}, {"children": [{"value": 1306, "name": "func1"}, {"children": [{"value": 252, "name": "1"}], "name": "func1."}, {"value": 1306, "name": "func10"}, {"children": [{"value": 252, "name": "1"}], "name": "func10."}, {"value": 1306, "name": "func11"}, {"children": [{"value": 252, "name": "1"}], "name": "func11."}, {"value": 1306, "name": "func12"}, {"children": [{"value": 252, "name": "1"}], "name": "func12."}, {"value": 1306, "name": "func13"}, {"children": [{"value": 252, "name": "1"}], "name": "func13."}, {"value": 1306, "name": "func2"}, {"children": [{"value": 252, "name": "1"}], "name": "func2."}, {"value": 1306, "name": "func3"}, {"children": [{"value": 252, "name": "1"}], "name": "func3."}, {"value": 1306, "name": "func4"}, {"children": [{"value": 252, "name": "1"}], "name": "func4."}, {"value": 1306, "name": "func5"}, {"children": [{"value": 252, "name": "1"}], "name": "func5."}, {"value": 1306, "name": "func6"}, {"children": [{"value": 252, "name": "1"}], "name": "func6."}, {"value": 1306, "name": "func7"}, {"children": [{"value": 252, "name": "1"}], "name": "func7."}, {"value": 1306, "name": "func8"}, {"children": [{"value": 252, "name": "1"}], "name": "func8."}, {"value": 1306, "name": "func9"}, {"children": [{"value": 252, "name": "1"}], "name": "func9."}], "name": "RegisterStatusHandler."}, {"value": 101, "name": "RegisterStatusServer"}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ZoneConfigurationLevel."}, {"value": 8, "name": "ZoneConfigurationLevel_name"}, {"value": 8, "name": "ZoneConfigurationLevel_value"}, {"value": 777, "name": "_Admin_Cluster_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Cluster_Handler."}, {"value": 777, "name": "_Admin_DatabaseDetails_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_DatabaseDetails_Handler."}, {"value": 777, "name": "_Admin_Databases_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Databases_Handler."}, {"value": 373, "name": "_Admin_Drain_Handler"}, {"value": 777, "name": "_Admin_Events_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Events_Handler."}, {"value": 777, "name": "_Admin_GetUIData_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_GetUIData_Handler."}, {"value": 777, "name": "_Admin_Health_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Health_Handler."}, {"value": 777, "name": "_Admin_Liveness_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Liveness_Handler."}, {"value": 777, "name": "_Admin_SetUIData_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_SetUIData_Handler."}, {"value": 777, "name": "_Admin_Settings_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_Settings_Handler."}, {"value": 777, "name": "_Admin_TableDetails_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_TableDetails_Handler."}, {"value": 777, "name": "_Admin_TableStats_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Admin_TableStats_Handler."}, {"value": 780, "name": "_Admin_Users_Handler"}, {"children": [{"value": 230, "name": "func1"}], "name": "_Admin_Users_Handler."}, {"value": 96, "name": "_Admin_serviceDesc"}, {"value": 777, "name": "_Status_Details_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Details_Handler."}, {"value": 777, "name": "_Status_Gossip_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Gossip_Handler."}, {"value": 777, "name": "_Status_LogFile_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_LogFile_Handler."}, {"value": 777, "name": "_Status_LogFilesList_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_LogFilesList_Handler."}, {"value": 777, "name": "_Status_Logs_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Logs_Handler."}, {"value": 777, "name": "_Status_Metrics_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Metrics_Handler."}, {"value": 777, "name": "_Status_Node_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Node_Handler."}, {"value": 777, "name": "_Status_Nodes_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Nodes_Handler."}, {"value": 777, "name": "_Status_RaftDebug_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_RaftDebug_Handler."}, {"value": 777, "name": "_Status_Ranges_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Ranges_Handler."}, {"value": 777, "name": "_Status_SpanStats_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_SpanStats_Handler."}, {"value": 777, "name": "_Status_Stacks_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Status_Stacks_Handler."}, {"value": 96, "name": "_Status_serviceDesc"}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "adminDrainClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "adminDrainServer."}, {"value": 122, "name": "encodeVarintAdmin"}, {"value": 122, "name": "encodeVarintStatus"}, {"value": 24, "name": "fileDescriptorAdmin"}, {"value": 24, "name": "fileDescriptorStatus"}, {"value": 8, "name": "filter_Admin_Events_0"}, {"value": 8, "name": "filter_Admin_GetUIData_0"}, {"value": 8, "name": "filter_Admin_Settings_0"}, {"value": 8, "name": "filter_Status_Details_1"}, {"value": 8, "name": "filter_Status_Logs_0"}, {"value": 8, "name": "filter_Status_RaftDebug_0"}, {"value": 8, "name": "filter_Status_Ranges_0"}, {"value": 8, "name": "forward_Admin_Cluster_0"}, {"value": 8, "name": "forward_Admin_DatabaseDetails_0"}, {"value": 8, "name": "forward_Admin_Databases_0"}, {"value": 8, "name": "forward_Admin_Drain_0"}, {"value": 8, "name": "forward_Admin_Events_0"}, {"value": 8, "name": "forward_Admin_GetUIData_0"}, {"value": 8, "name": "forward_Admin_Health_0"}, {"value": 8, "name": "forward_Admin_Liveness_0"}, {"value": 8, "name": "forward_Admin_SetUIData_0"}, {"value": 8, "name": "forward_Admin_Settings_0"}, {"value": 8, "name": "forward_Admin_TableDetails_0"}, {"value": 8, "name": "forward_Admin_TableStats_0"}, {"value": 8, "name": "forward_Admin_Users_0"}, {"value": 8, "name": "forward_Status_Details_0"}, {"value": 8, "name": "forward_Status_Details_1"}, {"value": 8, "name": "forward_Status_Gossip_0"}, {"value": 8, "name": "forward_Status_LogFile_0"}, {"value": 8, "name": "forward_Status_LogFilesList_0"}, {"value": 8, "name": "forward_Status_Logs_0"}, {"value": 8, "name": "forward_Status_Metrics_0"}, {"value": 8, "name": "forward_Status_Node_0"}, {"value": 8, "name": "forward_Status_Nodes_0"}, {"value": 8, "name": "forward_Status_RaftDebug_0"}, {"value": 8, "name": "forward_Status_Ranges_0"}, {"value": 8, "name": "forward_Status_SpanStats_0"}, {"value": 8, "name": "forward_Status_Stacks_0"}, {"value": 16880, "name": "init"}, {"children": [{"value": 1761, "name": "1"}, {"value": 210, "name": "2"}, {"value": 1341, "name": "3"}, {"value": 210, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 104, "name": "pattern_Admin_Cluster_0"}, {"value": 104, "name": "pattern_Admin_DatabaseDetails_0"}, {"value": 104, "name": "pattern_Admin_Databases_0"}, {"value": 104, "name": "pattern_Admin_Drain_0"}, {"value": 104, "name": "pattern_Admin_Events_0"}, {"value": 104, "name": "pattern_Admin_GetUIData_0"}, {"value": 104, "name": "pattern_Admin_Health_0"}, {"value": 104, "name": "pattern_Admin_Liveness_0"}, {"value": 104, "name": "pattern_Admin_SetUIData_0"}, {"value": 104, "name": "pattern_Admin_Settings_0"}, {"value": 104, "name": "pattern_Admin_TableDetails_0"}, {"value": 104, "name": "pattern_Admin_TableStats_0"}, {"value": 104, "name": "pattern_Admin_Users_0"}, {"value": 104, "name": "pattern_Status_Details_0"}, {"value": 104, "name": "pattern_Status_Details_1"}, {"value": 104, "name": "pattern_Status_Gossip_0"}, {"value": 104, "name": "pattern_Status_LogFile_0"}, {"value": 104, "name": "pattern_Status_LogFilesList_0"}, {"value": 104, "name": "pattern_Status_Logs_0"}, {"value": 104, "name": "pattern_Status_Metrics_0"}, {"value": 104, "name": "pattern_Status_Node_0"}, {"value": 104, "name": "pattern_Status_Nodes_0"}, {"value": 104, "name": "pattern_Status_RaftDebug_0"}, {"value": 104, "name": "pattern_Status_Ranges_0"}, {"value": 104, "name": "pattern_Status_SpanStats_0"}, {"value": 104, "name": "pattern_Status_Stacks_0"}, {"value": 538, "name": "request_Admin_Cluster_0"}, {"value": 980, "name": "request_Admin_DatabaseDetails_0"}, {"value": 538, "name": "request_Admin_Databases_0"}, {"value": 837, "name": "request_Admin_Drain_0"}, {"value": 887, "name": "request_Admin_Events_0"}, {"value": 887, "name": "request_Admin_GetUIData_0"}, {"value": 538, "name": "request_Admin_Health_0"}, {"value": 538, "name": "request_Admin_Liveness_0"}, {"value": 948, "name": "request_Admin_SetUIData_0"}, {"value": 887, "name": "request_Admin_Settings_0"}, {"value": 1432, "name": "request_Admin_TableDetails_0"}, {"value": 1432, "name": "request_Admin_TableStats_0"}, {"value": 541, "name": "request_Admin_Users_0"}, {"value": 980, "name": "request_Status_Details_0"}, {"value": 879, "name": "request_Status_Details_1"}, {"value": 980, "name": "request_Status_Gossip_0"}, {"value": 1432, "name": "request_Status_LogFile_0"}, {"value": 980, "name": "request_Status_LogFilesList_0"}, {"value": 1271, "name": "request_Status_Logs_0"}, {"value": 980, "name": "request_Status_Metrics_0"}, {"value": 980, "name": "request_Status_Node_0"}, {"value": 538, "name": "request_Status_Nodes_0"}, {"value": 887, "name": "request_Status_RaftDebug_0"}, {"value": 1271, "name": "request_Status_Ranges_0"}, {"value": 941, "name": "request_Status_SpanStats_0"}, {"value": 980, "name": "request_Status_Stacks_0"}, {"value": 1621, "name": "skipAdmin"}, {"value": 1621, "name": "skipStatus"}, {"value": 34, "name": "sovAdmin"}, {"value": 34, "name": "sovStatus"}, {"value": 8, "name": "statictmp_100"}, {"value": 16, "name": "statictmp_106"}, {"value": 16, "name": "statictmp_112"}, {"value": 16, "name": "statictmp_118"}, {"value": 32, "name": "statictmp_120"}, {"value": 8, "name": "statictmp_126"}, {"value": 8, "name": "statictmp_132"}, {"value": 32, "name": "statictmp_134"}, {"value": 16, "name": "statictmp_140"}, {"value": 8, "name": "statictmp_145"}, {"value": 24, "name": "statictmp_147"}, {"value": 8, "name": "statictmp_151"}, {"value": 16, "name": "statictmp_153"}, {"value": 16, "name": "statictmp_157"}, {"value": 24, "name": "statictmp_159"}, {"value": 8, "name": "statictmp_163"}, {"value": 24, "name": "statictmp_165"}, {"value": 8, "name": "statictmp_169"}, {"value": 16, "name": "statictmp_175"}, {"value": 8, "name": "statictmp_177"}, {"value": 40, "name": "statictmp_1785"}, {"value": 8, "name": "statictmp_181"}, {"value": 8, "name": "statictmp_186"}, {"value": 24, "name": "statictmp_188"}, {"value": 8, "name": "statictmp_192"}, {"value": 8, "name": "statictmp_194"}, {"value": 40, "name": "statictmp_1952"}, {"value": 56, "name": "statictmp_1956"}, {"value": 72, "name": "statictmp_1960"}, {"value": 8, "name": "statictmp_198"}, {"value": 16, "name": "statictmp_204"}, {"value": 8, "name": "statictmp_209"}, {"value": 16, "name": "statictmp_211"}, {"value": 8, "name": "statictmp_215"}, {"value": 8, "name": "statictmp_221"}, {"value": 24, "name": "statictmp_223"}, {"value": 32, "name": "statictmp_2252"}, {"value": 8, "name": "statictmp_227"}, {"value": 24, "name": "statictmp_229"}, {"value": 8, "name": "statictmp_233"}, {"value": 16, "name": "statictmp_2333"}, {"value": 8, "name": "statictmp_235"}, {"value": 8, "name": "statictmp_239"}, {"value": 96, "name": "statictmp_2420"}, {"value": 16, "name": "statictmp_245"}, {"value": 8, "name": "statictmp_250"}, {"value": 8, "name": "statictmp_255"}, {"value": 8, "name": "statictmp_260"}, {"value": 24, "name": "statictmp_262"}, {"value": 8, "name": "statictmp_266"}, {"value": 40, "name": "statictmp_3007"}, {"value": 16, "name": "statictmp_3385"}, {"value": 8, "name": "statictmp_3389"}, {"value": 8, "name": "statictmp_3395"}, {"value": 8, "name": "statictmp_3400"}, {"value": 24, "name": "statictmp_3402"}, {"value": 8, "name": "statictmp_3406"}, {"value": 16, "name": "statictmp_3408"}, {"value": 8, "name": "statictmp_3412"}, {"value": 8, "name": "statictmp_3418"}, {"value": 16, "name": "statictmp_3424"}, {"value": 8, "name": "statictmp_3429"}, {"value": 8, "name": "statictmp_3435"}, {"value": 8, "name": "statictmp_3441"}, {"value": 24, "name": "statictmp_3443"}, {"value": 8, "name": "statictmp_3447"}, {"value": 16, "name": "statictmp_3449"}, {"value": 8, "name": "statictmp_3453"}, {"value": 24, "name": "statictmp_3455"}, {"value": 8, "name": "statictmp_3459"}, {"value": 8, "name": "statictmp_3465"}, {"value": 24, "name": "statictmp_3467"}, {"value": 8, "name": "statictmp_3471"}, {"value": 16, "name": "statictmp_3473"}, {"value": 8, "name": "statictmp_3477"}, {"value": 24, "name": "statictmp_3479"}, {"value": 8, "name": "statictmp_3483"}, {"value": 32, "name": "statictmp_3485"}, {"value": 8, "name": "statictmp_3491"}, {"value": 16, "name": "statictmp_3493"}, {"value": 8, "name": "statictmp_3497"}, {"value": 16, "name": "statictmp_3499"}, {"value": 8, "name": "statictmp_3503"}, {"value": 8, "name": "statictmp_3509"}, {"value": 16, "name": "statictmp_3511"}, {"value": 8, "name": "statictmp_3515"}, {"value": 8, "name": "statictmp_3521"}, {"value": 24, "name": "statictmp_3523"}, {"value": 8, "name": "statictmp_3527"}, {"value": 32, "name": "statictmp_3529"}, {"value": 8, "name": "statictmp_3535"}, {"value": 8, "name": "statictmp_3541"}, {"value": 8, "name": "statictmp_3546"}, {"value": 32, "name": "statictmp_3548"}, {"value": 8, "name": "statictmp_3554"}, {"value": 320, "name": "statictmp_4751"}, {"value": 80, "name": "statictmp_5055"}, {"value": 400, "name": "statictmp_5129"}, {"value": 64, "name": "statictmp_5292"}, {"value": 8, "name": "statictmp_53"}, {"value": 104, "name": "statictmp_5345"}, {"value": 16, "name": "statictmp_5534"}, {"value": 408, "name": "statictmp_5538"}, {"value": 16, "name": "statictmp_5629"}, {"value": 8, "name": "statictmp_57"}, {"value": 8, "name": "statictmp_62"}, {"value": 24, "name": "statictmp_64"}, {"value": 288, "name": "statictmp_6490"}, {"value": 32, "name": "statictmp_6491"}, {"value": 16, "name": "statictmp_6492"}, {"value": 1982, "name": "statictmp_6493"}, {"value": 56, "name": "statictmp_6494"}, {"value": 56, "name": "statictmp_6495"}, {"value": 56, "name": "statictmp_6496"}, {"value": 288, "name": "statictmp_6497"}, {"value": 16, "name": "statictmp_6499"}, {"value": 1957, "name": "statictmp_6500"}, {"value": 56, "name": "statictmp_6501"}, {"value": 56, "name": "statictmp_6502"}, {"value": 56, "name": "statictmp_6503"}, {"value": 24, "name": "statictmp_6504"}, {"value": 24, "name": "statictmp_6505"}, {"value": 56, "name": "statictmp_6506"}, {"value": 24, "name": "statictmp_6507"}, {"value": 24, "name": "statictmp_6508"}, {"value": 16, "name": "statictmp_6588"}, {"value": 64, "name": "statictmp_6589"}, {"value": 64, "name": "statictmp_6593"}, {"value": 16, "name": "statictmp_6594"}, {"value": 8, "name": "statictmp_6598"}, {"value": 32, "name": "statictmp_6599"}, {"value": 32, "name": "statictmp_6603"}, {"value": 8, "name": "statictmp_6604"}, {"value": 48, "name": "statictmp_6611"}, {"value": 48, "name": "statictmp_6614"}, {"value": 48, "name": "statictmp_6617"}, {"value": 48, "name": "statictmp_6620"}, {"value": 96, "name": "statictmp_6623"}, {"value": 64, "name": "statictmp_6626"}, {"value": 160, "name": "statictmp_6629"}, {"value": 96, "name": "statictmp_6632"}, {"value": 176, "name": "statictmp_6635"}, {"value": 112, "name": "statictmp_6638"}, {"value": 48, "name": "statictmp_6641"}, {"value": 48, "name": "statictmp_6644"}, {"value": 48, "name": "statictmp_6647"}, {"value": 48, "name": "statictmp_6650"}, {"value": 48, "name": "statictmp_6653"}, {"value": 48, "name": "statictmp_6656"}, {"value": 48, "name": "statictmp_6659"}, {"value": 48, "name": "statictmp_6662"}, {"value": 48, "name": "statictmp_6665"}, {"value": 48, "name": "statictmp_6668"}, {"value": 48, "name": "statictmp_6671"}, {"value": 48, "name": "statictmp_6674"}, {"value": 48, "name": "statictmp_6677"}, {"value": 48, "name": "statictmp_6680"}, {"value": 48, "name": "statictmp_6683"}, {"value": 48, "name": "statictmp_6686"}, {"value": 16, "name": "statictmp_6691"}, {"value": 8, "name": "statictmp_6692"}, {"value": 16, "name": "statictmp_6696"}, {"value": 8, "name": "statictmp_6697"}, {"value": 80, "name": "statictmp_6701"}, {"value": 48, "name": "statictmp_6704"}, {"value": 16, "name": "statictmp_6707"}, {"value": 16, "name": "statictmp_6710"}, {"value": 32, "name": "statictmp_6713"}, {"value": 32, "name": "statictmp_6716"}, {"value": 80, "name": "statictmp_6719"}, {"value": 48, "name": "statictmp_6722"}, {"value": 32, "name": "statictmp_6725"}, {"value": 32, "name": "statictmp_6728"}, {"value": 80, "name": "statictmp_6731"}, {"value": 48, "name": "statictmp_6734"}, {"value": 80, "name": "statictmp_6737"}, {"value": 48, "name": "statictmp_6740"}, {"value": 32, "name": "statictmp_6743"}, {"value": 32, "name": "statictmp_6746"}, {"value": 80, "name": "statictmp_6749"}, {"value": 48, "name": "statictmp_6752"}, {"value": 80, "name": "statictmp_6755"}, {"value": 48, "name": "statictmp_6758"}, {"value": 80, "name": "statictmp_6761"}, {"value": 48, "name": "statictmp_6764"}, {"value": 128, "name": "statictmp_6767"}, {"value": 64, "name": "statictmp_6770"}, {"value": 80, "name": "statictmp_6773"}, {"value": 48, "name": "statictmp_6776"}, {"value": 8, "name": "statictmp_68"}, {"value": 8, "name": "statictmp_6842"}, {"value": 8, "name": "statictmp_6846"}, {"value": 16, "name": "statictmp_70"}, {"value": 8, "name": "statictmp_74"}, {"value": 8, "name": "statictmp_80"}, {"value": 16, "name": "statictmp_86"}, {"value": 32, "name": "statictmp_88"}, {"value": 8, "name": "statictmp_94"}, {"value": 56, "name": "go.itab.*ClusterRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ClusterResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ClusterResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabaseDetailsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabaseDetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabaseDetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabaseDetailsResponse_Grant,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabasesRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabasesResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatabasesResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DetailsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DetailsRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DrainRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DrainResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DrainResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EventsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EventsRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EventsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EventsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EventsResponse_Event,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetUIDataRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetUIDataRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetUIDataResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetUIDataResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetUIDataResponse_Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GossipRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HealthRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HealthResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HealthResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*JSONResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*JSONResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LivenessRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LivenessResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LivenessResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogEntriesResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogEntriesResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogFileRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogFilesListRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogFilesListResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogFilesListResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LogsRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MetricsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodeRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodesRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodesResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodesResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PrettySpan,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftDebugRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftDebugRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftDebugResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftDebugResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftRangeError,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftRangeNode,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftRangeStatus,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftState,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftState_Progress,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeProblems,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangesRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangesRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangesResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangesResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SetUIDataRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SetUIDataResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SetUIDataResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SettingsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SettingsRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SettingsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SettingsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SettingsResponse_Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SpanStatsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SpanStatsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SpanStatsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StacksRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsResponse_Column,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsResponse_Grant,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDetailsResponse_Index,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableStatsRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableStatsResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableStatsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableStatsResponse_MissingNode,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UsersRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UsersResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UsersResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UsersResponse_User,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 136, "name": "go.itab.*adminClient,github.com/cockroachdb/cockroach/pkg/server/serverpb.AdminClient"}, {"value": 88, "name": "go.itab.*adminDrainClient,github.com/cockroachdb/cockroach/pkg/server/serverpb.Admin_DrainClient"}, {"value": 88, "name": "go.itab.*adminDrainServer,github.com/cockroachdb/cockroach/pkg/server/serverpb.Admin_DrainServer"}, {"value": 128, "name": "go.itab.*statusClient,github.com/cockroachdb/cockroach/pkg/server/serverpb.StatusClient"}], "name": "serverpb."}, {"children": [{"children": [{"value": 1042, "name": "AddNode"}, {"value": 506, "name": "AddStore"}, {"value": 3280, "name": "GetStatusSummary"}, {"children": [{"value": 123, "name": "func1"}, {"value": 116, "name": "func2"}], "name": "GetStatusSummary."}, {"value": 1265, "name": "GetTimeSeriesData"}, {"value": 1537, "name": "MarshalJSON"}, {"value": 221, "name": "PrintAsText"}, {"value": 975, "name": "WriteStatusSummary"}, {"value": 495, "name": "scrapePrometheusLocked"}], "name": "(*MetricsRecorder)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 3521, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 180, "name": "Reset"}, {"value": 1068, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 7857, "name": "Unmarshal"}], "name": "(*NodeStatus)."}, {"children": [{"value": 3755, "name": "SampleEnvironment"}], "name": "(*RuntimeStatSampler)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1688, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 380, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3429, "name": "Unmarshal"}], "name": "(*StoreStatus)."}, {"value": 16, "name": "ErrIntOverflowStatus"}, {"value": 16, "name": "ErrInvalidLengthStatus"}, {"value": 8577, "name": "MakeRuntimeStatSampler"}, {"value": 227, "name": "_C2func_jemalloc_get_stats"}, {"value": 180, "name": "_Cfunc_je_malloc_stats_print"}, {"value": 8, "name": "_cgo_8b17200c223a_C2func_jemalloc_get_stats"}, {"value": 8, "name": "_cgo_8b17200c223a_Cfunc_je_malloc_stats_print"}, {"value": 159, "name": "eachRecordableValue"}, {"children": [{"value": 674, "name": "func1"}], "name": "eachRecordableValue."}, {"value": 122, "name": "encodeVarintStatus"}, {"value": 747, "name": "extractValue"}, {"value": 24, "name": "fileDescriptorStatus"}, {"value": 8, "name": "getCgoMemStats"}, {"value": 1375, "name": "getJemallocStats"}, {"value": 477, "name": "init"}, {"children": [{"value": 141, "name": "1"}, {"value": 210, "name": "2"}, {"value": 192, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "metaCPUSysNS"}, {"value": 56, "name": "metaCPUSysPercent"}, {"value": 56, "name": "metaCPUUserNS"}, {"value": 56, "name": "metaCPUUserPercent"}, {"value": 56, "name": "metaCgoAllocBytes"}, {"value": 56, "name": "metaCgoCalls"}, {"value": 56, "name": "metaCgoTotalBytes"}, {"value": 56, "name": "metaFDOpen"}, {"value": 56, "name": "metaFDSoftLimit"}, {"value": 56, "name": "metaGCCount"}, {"value": 56, "name": "metaGCPauseNS"}, {"value": 56, "name": "metaGCPausePercent"}, {"value": 56, "name": "metaGoAllocBytes"}, {"value": 56, "name": "metaGoTotalBytes"}, {"value": 56, "name": "metaGoroutines"}, {"value": 56, "name": "metaRSS"}, {"value": 56, "name": "metaUptime"}, {"value": 24, "name": "recordHistogramQuantiles"}, {"children": [{"value": 277, "name": "record"}, {"children": [{"value": 654, "name": "func1"}], "name": "record."}], "name": "registryRecorder."}, {"value": 1621, "name": "skipStatus"}, {"value": 34, "name": "sovStatus"}, {"value": 136, "name": "statictmp_179"}, {"value": 208, "name": "statictmp_249"}, {"value": 8, "name": "statictmp_323"}, {"value": 8, "name": "statictmp_329"}, {"value": 152, "name": "statictmp_727"}, {"value": 192, "name": "statictmp_837"}, {"value": 432, "name": "statictmp_838"}, {"value": 136, "name": "statictmp_99"}, {"value": 48, "name": "go.itab.*MetricsRecorder,github.com/cockroachdb/cockroach/pkg/server.metricMarshaler"}, {"value": 40, "name": "go.itab.*MetricsRecorder,github.com/cockroachdb/cockroach/pkg/ts.DataSource"}, {"value": 56, "name": "go.itab.*NodeStatus,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*NodeStatus,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StoreStatus,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "status."}], "name": "server/"}, {"children": [{"children": [{"value": 18, "name": "Get"}, {"value": 109, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 35, "name": "set"}, {"value": 67, "name": "setToDefault"}], "name": "(*BoolSetting)."}, {"children": [{"value": 26, "name": "Get"}, {"value": 96, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 35, "name": "Validate"}, {"value": 35, "name": "set"}, {"value": 17, "name": "setToDefault"}], "name": "(*ByteSizeSetting)."}, {"children": [{"value": 15, "name": "Get"}, {"value": 94, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 132, "name": "Validate"}, {"value": 140, "name": "set"}, {"value": 105, "name": "setToDefault"}], "name": "(*DurationSetting)."}, {"children": [{"value": 26, "name": "Get"}, {"value": 517, "name": "ParseEnum"}, {"value": 35, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 35, "name": "Validate"}, {"value": 303, "name": "set"}, {"value": 17, "name": "setToDefault"}], "name": "(*EnumSetting)."}, {"children": [{"value": 48, "name": "Get"}, {"value": 96, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 134, "name": "Validate"}, {"value": 158, "name": "set"}, {"value": 107, "name": "setToDefault"}], "name": "(*FloatSetting)."}, {"children": [{"value": 15, "name": "Get"}, {"value": 94, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 132, "name": "Validate"}, {"value": 140, "name": "set"}, {"value": 105, "name": "setToDefault"}], "name": "(*IntSetting)."}, {"children": [{"value": 136, "name": "Get"}, {"value": 80, "name": "String"}, {"value": 22, "name": "Typ"}, {"value": 142, "name": "Validate"}, {"value": 231, "name": "set"}, {"value": 114, "name": "setToDefault"}], "name": "(*StringSetting)."}, {"children": [{"value": 166, "name": "Done"}, {"value": 258, "name": "Set"}], "name": "(*Updater)."}, {"value": 80, "name": "EncodeDuration"}, {"value": 105, "name": "EncodeFloat"}, {"value": 89, "name": "EncodeInt"}, {"value": 15, "name": "Freeze"}, {"value": 644, "name": "Hide"}, {"value": 652, "name": "Keys"}, {"value": 167, "name": "RegisterBoolSetting"}, {"value": 119, "name": "RegisterByteSizeSetting"}, {"value": 119, "name": "RegisterDurationSetting"}, {"value": 1408, "name": "RegisterEnumSetting"}, {"value": 121, "name": "RegisterFloatSetting"}, {"value": 119, "name": "RegisterIntSetting"}, {"value": 216, "name": "RegisterPositiveDurationSetting"}, {"children": [{"value": 334, "name": "func1"}], "name": "RegisterPositiveDurationSetting."}, {"value": 135, "name": "RegisterStringSetting"}, {"value": 332, "name": "RegisterValidatedByteSizeSetting"}, {"value": 355, "name": "RegisterValidatedDurationSetting"}, {"value": 359, "name": "RegisterValidatedFloatSetting"}, {"value": 355, "name": "RegisterValidatedIntSetting"}, {"value": 397, "name": "RegisterValidatedStringSetting"}, {"children": [{"value": 367, "name": "Done"}, {"value": 3545, "name": "Set"}], "name": "Updater."}, {"value": 275, "name": "assertNotFrozen"}, {"value": 805, "name": "enumValuesToDesc"}, {"value": 4, "name": "frozen"}, {"value": 230, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 682, "name": "register"}, {"value": 8, "name": "registry"}, {"value": 56, "name": "go.itab.*BoolSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*ByteSizeSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*DurationSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*EnumSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*FloatSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*IntSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}, {"value": 56, "name": "go.itab.*StringSetting,github.com/cockroachdb/cockroach/pkg/settings.Setting"}], "name": "settings."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*BackupJobDetails)."}, {"children": [{"value": 150, "name": "Format"}, {"value": 172, "name": "StatementTag"}, {"value": 163, "name": "StatementType"}, {"value": 172, "name": "String"}], "name": "(*CopyDataBlock)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*DistSQLExecMode)."}, {"children": [{"value": 267, "name": "ExecuteStatementInTransaction"}, {"value": 368, "name": "GetTableSpan"}, {"value": 303, "name": "InsertEventRecord"}, {"value": 313, "name": "QueryRowInTransaction"}], "name": "(*EventLogger)."}, {"children": [{"value": 102, "name": "AnnotateCtx"}, {"value": 166, "name": "CopyData"}, {"value": 158, "name": "CopyDone"}, {"value": 400, "name": "ExecuteStatements"}, {"children": [{"value": 317, "name": "func1"}], "name": "ExecuteStatements."}, {"value": 1243, "name": "GetScrubbedStmtStats"}, {"value": 383, "name": "IsVirtualDatabase"}, {"value": 3222, "name": "Prepare"}, {"value": 88, "name": "ResetStatementStats"}, {"value": 111, "name": "SetDistSQLSpanResolver"}, {"value": 1692, "name": "Start"}, {"children": [{"value": 369, "name": "func1"}], "name": "Start."}, {"value": 174, "name": "blockConfigUpdates"}, {"children": [{"value": 74, "name": "func1"}], "name": "blockConfigUpdates."}, {"value": 103, "name": "blockConfigUpdatesMaybe"}, {"children": [{"value": 1, "name": "func1"}], "name": "blockConfigUpdatesMaybe."}, {"value": 1026, "name": "execClassic"}, {"value": 907, "name": "execDistSQL"}, {"children": [{"value": 81, "name": "func1"}], "name": "execDistSQL."}, {"value": 8259, "name": "execRequest"}, {"children": [{"value": 1872, "name": "func1"}, {"children": [{"value": 15, "name": "1"}], "name": "func1."}], "name": "execRequest."}, {"value": 2232, "name": "execStmt"}, {"value": 2016, "name": "execStmtInAbortedTxn"}, {"value": 591, "name": "execStmtInCommitWaitTxn"}, {"value": 9122, "name": "execStmtInOpenTxn"}, {"children": [{"value": 302, "name": "func1"}], "name": "execStmtInOpenTxn."}, {"value": 1035, "name": "execStmtInParallel"}, {"children": [{"value": 952, "name": "func1"}], "name": "execStmtInParallel."}, {"value": 3884, "name": "execStmtsInCurrentTxn"}, {"value": 174, "name": "getDatabaseCache"}, {"value": 2772, "name": "recordStatementSummary"}, {"value": 835, "name": "shouldUseDistSQL"}, {"value": 890, "name": "updateStmtCounts"}, {"value": 518, "name": "updateSystemConfig"}, {"value": 67, "name": "waitForConfigUpdate"}], "name": "(*Executor)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*ExecutorTestingKnobs)."}, {"children": [{"value": 345, "name": "ExecuteStatementInTransaction"}, {"value": 446, "name": "GetTableSpan"}, {"value": 391, "name": "QueryRowInTransaction"}], "name": "(*InternalExecutor)."}, {"children": [{"value": 959, "name": "Created"}, {"value": 496, "name": "Failed"}, {"children": [{"value": 351, "name": "func1"}], "name": "Failed."}, {"value": 15, "name": "JobID"}, {"value": 503, "name": "Progressed"}, {"children": [{"value": 426, "name": "func1"}], "name": "Progressed."}, {"value": 220, "name": "Started"}, {"children": [{"value": 271, "name": "func1"}], "name": "Started."}, {"value": 220, "name": "Succeeded"}, {"children": [{"value": 284, "name": "func1"}], "name": "Succeeded."}, {"value": 704, "name": "insertJobRecord"}, {"children": [{"value": 894, "name": "func1"}], "name": "insertJobRecord."}, {"value": 412, "name": "updateJobRecord"}, {"children": [{"value": 1593, "name": "func1"}], "name": "updateJobRecord."}], "name": "(*JobLogger)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 76, "name": "GetBackup"}, {"value": 48, "name": "GetDetails"}, {"value": 76, "name": "GetRestore"}, {"value": 280, "name": "Marshal"}, {"value": 1919, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 615, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 7756, "name": "Unmarshal"}, {"value": 260, "name": "XXX_OneofFuncs"}, {"value": 288, "name": "typ"}], "name": "(*JobPayload)."}, {"children": [{"value": 182, "name": "MarshalTo"}, {"value": 89, "name": "Size"}, {"value": 1, "name": "isJobPayload_Details"}], "name": "(*JobPayload_Backup)."}, {"children": [{"value": 182, "name": "MarshalTo"}, {"value": 89, "name": "Size"}, {"value": 1, "name": "isJobPayload_Details"}], "name": "(*JobPayload_Restore)."}, {"children": [{"value": 171, "name": "(github.com/cockroachdb/cockroach/pkg/sql.getTableLease)-fm"}, {"value": 133, "name": "(github.com/cockroachdb/cockroach/pkg/sql.getTableLeaseByID)-fm"}, {"value": 2398, "name": "getTableLease"}, {"value": 1780, "name": "getTableLeaseByID"}, {"value": 560, "name": "releaseLeases"}, {"value": 1062, "name": "removeLeaseIfExpiring"}], "name": "(*LeaseCollection)."}, {"children": [{"value": 261, "name": "Acquire"}, {"value": 1186, "name": "AcquireByName"}, {"value": 257, "name": "Publish"}, {"value": 400, "name": "RefreshLeases"}, {"children": [{"value": 2817, "name": "func1"}], "name": "RefreshLeases."}, {"value": 289, "name": "Release"}, {"value": 485, "name": "SetDraining"}, {"value": 261, "name": "WaitForOneVersion"}, {"value": 514, "name": "acquireFreshestFromStore"}, {"value": 479, "name": "findTableState"}, {"value": 123, "name": "isDraining"}, {"value": 461, "name": "resolveName"}], "name": "(*LeaseManager)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*LeaseManagerTestingKnobs)."}, {"children": [{"value": 17, "name": "AddColumn"}, {"value": 17, "name": "AddColumnMutation"}, {"value": 35, "name": "AddColumnToFamilyMaybeCreate"}, {"value": 17, "name": "AddFamily"}, {"value": 41, "name": "AddIndex"}, {"value": 17, "name": "AddIndexMutation"}, {"value": 22, "name": "Adding"}, {"value": 44, "name": "AllIndexSpans"}, {"value": 44, "name": "AllNonDropIndexes"}, {"value": 35, "name": "AllocateIDs"}, {"value": 170, "name": "CheckUniqueConstraints"}, {"value": 71, "name": "Descriptor"}, {"value": 22, "name": "Dropped"}, {"value": 40, "name": "Expiration"}, {"value": 43, "name": "FinalizeMutation"}, {"value": 44, "name": "FindActiveColumnByID"}, {"value": 72, "name": "FindActiveColumnByName"}, {"value": 72, "name": "FindActiveColumnByNormalizedName"}, {"value": 62, "name": "FindActiveColumnsByNames"}, {"value": 44, "name": "FindColumnByID"}, {"value": 53, "name": "FindColumnByName"}, {"value": 53, "name": "FindColumnByNormalizedName"}, {"value": 44, "name": "FindFamilyByID"}, {"value": 44, "name": "FindIndexByID"}, {"value": 53, "name": "FindIndexByName"}, {"value": 53, "name": "FindIndexByNormalizedName"}, {"value": 35, "name": "ForeachNonDropIndex"}, {"value": 44, "name": "GetChecks"}, {"value": 44, "name": "GetColumns"}, {"value": 234, "name": "GetConstraintInfo"}, {"value": 202, "name": "GetConstraintInfoWithLookup"}, {"value": 44, "name": "GetDependedOnBy"}, {"value": 44, "name": "GetDependsOn"}, {"value": 186, "name": "GetDescMetadataKey"}, {"value": 44, "name": "GetFamilies"}, {"value": 25, "name": "GetFormatVersion"}, {"value": 25, "name": "GetID"}, {"value": 44, "name": "GetIndexes"}, {"value": 26, "name": "GetLease"}, {"value": 34, "name": "GetModificationTime"}, {"value": 44, "name": "GetMutations"}, {"value": 35, "name": "GetName"}, {"value": 186, "name": "GetNameMetadataKey"}, {"value": 25, "name": "GetNextColumnID"}, {"value": 25, "name": "GetNextFamilyID"}, {"value": 25, "name": "GetNextIndexID"}, {"value": 25, "name": "GetNextMutationID"}, {"value": 25, "name": "GetParentID"}, {"value": 57, "name": "GetPrimaryIndex"}, {"value": 26, "name": "GetPrivileges"}, {"value": 44, "name": "GetRenames"}, {"value": 25, "name": "GetState"}, {"value": 22, "name": "GetUpVersion"}, {"value": 25, "name": "GetVersion"}, {"value": 35, "name": "GetViewQuery"}, {"value": 48, "name": "IndexSpan"}, {"value": 17, "name": "InvalidateFKConstraints"}, {"value": 22, "name": "IsEmpty"}, {"value": 22, "name": "IsInterleaved"}, {"value": 22, "name": "IsPhysicalTable"}, {"value": 22, "name": "IsTable"}, {"value": 22, "name": "IsView"}, {"value": 22, "name": "IsVirtualTable"}, {"value": 26, "name": "KeysPerRow"}, {"value": 17, "name": "MakeMutationComplete"}, {"value": 62, "name": "Marshal"}, {"value": 44, "name": "MarshalTo"}, {"value": 22, "name": "MaybeUpgradeFormatVersion"}, {"value": 48, "name": "PrimaryIndexSpan"}, {"value": 17, "name": "ProtoMessage"}, {"value": 174, "name": "Refcount"}, {"value": 17, "name": "RemoveColumnFromFamily"}, {"value": 17, "name": "RenameColumnNormalized"}, {"value": 22, "name": "Renamed"}, {"value": 17, "name": "Reset"}, {"value": 17, "name": "SetID"}, {"value": 17, "name": "SetName"}, {"value": 35, "name": "SetUpVersion"}, {"value": 26, "name": "Size"}, {"value": 425, "name": "String"}, {"value": 48, "name": "TableSpan"}, {"value": 35, "name": "TypeName"}, {"value": 35, "name": "Unmarshal"}, {"value": 35, "name": "Validate"}, {"value": 35, "name": "ValidateTable"}, {"value": 44, "name": "VisibleColumns"}, {"value": 360, "name": "hasSomeLifeLeft"}, {"value": 109, "name": "incRefcount"}, {"value": 698, "name": "incRefcountLocked"}], "name": "(*LeaseState)."}, {"children": [{"value": 376, "name": "Acquire"}, {"value": 335, "name": "Publish"}, {"value": 258, "name": "Release"}, {"value": 339, "name": "WaitForOneVersion"}], "name": "(*LeaseStore)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*LeaseStoreTestingKnobs)."}, {"children": [{"value": 150, "name": "MetricStruct"}], "name": "(*MemoryMetrics)."}, {"children": [{"value": 310, "name": "Add"}, {"children": [{"value": 469, "name": "func1"}, {"children": [{"value": 200, "name": "1"}], "name": "func1."}], "name": "Add."}, {"value": 186, "name": "Err"}, {"value": 180, "name": "Len"}, {"value": 276, "name": "Wait"}, {"value": 760, "name": "insertInQueue"}, {"children": [{"value": 190, "name": "func1"}], "name": "insertInQueue."}, {"value": 569, "name": "prereqsForPlanLocked"}], "name": "(*ParallelizeQueue)."}, {"children": [{"value": 224, "name": "Delete"}, {"value": 208, "name": "Exists"}, {"value": 221, "name": "Get"}, {"value": 290, "name": "New"}], "name": "(*PreparedPortals)."}, {"children": [{"value": 224, "name": "Delete"}, {"value": 299, "name": "DeleteAll"}, {"value": 208, "name": "Exists"}, {"value": 221, "name": "Get"}, {"value": 290, "name": "New"}], "name": "(*PreparedStatements)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*RestoreJobDetails)."}, {"children": [{"value": 91, "name": "Close"}], "name": "(*Result)."}, {"children": [{"value": 204, "name": "Close"}], "name": "(*ResultList)."}, {"children": [{"value": 63, "name": "AddRow"}, {"value": 45, "name": "At"}, {"value": 18, "name": "Clear"}, {"value": 18, "name": "Close"}, {"value": 27, "name": "Len"}, {"value": 187, "name": "Next"}, {"value": 18, "name": "PopFirst"}, {"value": 36, "name": "Replace"}, {"value": 18, "name": "Swap"}, {"value": 33, "name": "Values"}], "name": "(*RowBuffer)."}, {"children": [{"value": 288, "name": "Start"}, {"children": [{"value": 5464, "name": "func1"}], "name": "Start."}, {"value": 540, "name": "newTimer"}], "name": "(*SchemaChangeManager)."}, {"children": [{"value": 337, "name": "AcquireLease"}, {"children": [{"value": 1079, "name": "func1"}], "name": "AcquireLease."}, {"value": 754, "name": "ExtendLease"}, {"children": [{"value": 595, "name": "func1"}], "name": "ExtendLease."}, {"value": 277, "name": "MaybeIncrementVersion"}, {"children": [{"value": 61, "name": "func1"}], "name": "MaybeIncrementVersion."}, {"value": 221, "name": "ReleaseLease"}, {"children": [{"value": 515, "name": "func1"}], "name": "ReleaseLease."}, {"value": 456, "name": "RunStateMachineBeforeBackfill"}, {"children": [{"value": 466, "name": "func1"}], "name": "RunStateMachineBeforeBackfill."}, {"value": 265, "name": "backfillIndexes"}, {"value": 203, "name": "createSchemaChangeLease"}, {"value": 1546, "name": "deleteIndexMutationsWithReversedColumns"}, {"value": 1311, "name": "distBackfill"}, {"children": [{"value": 2164, "name": "func1"}], "name": "distBackfill."}, {"value": 582, "name": "done"}, {"children": [{"value": 537, "name": "func1"}, {"value": 288, "name": "func2"}], "name": "done."}, {"value": 1712, "name": "exec"}, {"children": [{"value": 234, "name": "func1"}, {"value": 194, "name": "func2"}], "name": "exec."}, {"value": 749, "name": "findTableWithLease"}, {"value": 429, "name": "getSpansToBackfill"}, {"children": [{"value": 641, "name": "func1"}], "name": "getSpansToBackfill."}, {"value": 464, "name": "getTableLease"}, {"value": 1865, "name": "maybeAddDropRename"}, {"children": [{"value": 34, "name": "func1"}, {"value": 19, "name": "func2"}, {"value": 505, "name": "func3"}, {"value": 142, "name": "func4"}], "name": "maybeAddDropRename."}, {"value": 1562, "name": "maybeWriteResumeSpan"}, {"value": 770, "name": "reverseMutations"}, {"children": [{"value": 1229, "name": "func1"}, {"value": 470, "name": "func2"}], "name": "reverseMutations."}, {"value": 3699, "name": "runBackfill"}, {"children": [{"value": 193, "name": "func1"}], "name": "runBackfill."}, {"value": 393, "name": "runStateMachineAndBackfill"}, {"value": 265, "name": "truncateAndBackfillColumns"}, {"value": 292, "name": "truncateAndDropTable"}, {"value": 2088, "name": "truncateIndexes"}, {"children": [{"value": 1932, "name": "func1"}], "name": "truncateIndexes."}, {"value": 742, "name": "waitToUpdateLeases"}], "name": "(*SchemaChanger)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*SchemaChangerTestingKnobs)."}, {"children": [{"value": 219, "name": "ClearStatementsAndPortals"}, {"value": 145, "name": "CopyEnd"}, {"value": 67, "name": "Ctx"}, {"value": 57, "name": "Ctx-fm"}, {"value": 797, "name": "Finish"}, {"value": 48, "name": "OpenAccount"}, {"value": 1617, "name": "ProcessCopyData"}, {"value": 499, "name": "StartMonitor"}, {"value": 311, "name": "StartUnlimitedMonitor"}, {"value": 427, "name": "checkTestingVerifyMetadataInitialOrDie"}, {"value": 330, "name": "checkTestingVerifyMetadataOrDie"}, {"value": 794, "name": "deriveAndStartMonitors"}, {"value": 356, "name": "evalCtx"}, {"value": 241, "name": "hijackCtx"}, {"value": 1372, "name": "newPlanner"}, {"value": 207, "name": "resetApplicationName"}, {"value": 137, "name": "resetForBatch"}], "name": "(*Session)."}, {"children": [{"value": 101, "name": "Close"}], "name": "(*StatementResults)."}, {"children": [{"value": 165, "name": "ClearSchemaChangers"}], "name": "(*TestingSchemaChangerCollection)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*TxnStateEnum)."}, {"children": [{"value": 32, "name": "Wsession"}, {"value": 32, "name": "Wtxn"}], "name": "(*WrappableMemoryAccount)."}, {"children": [{"value": 195, "name": "Clear"}, {"value": 195, "name": "Close"}, {"value": 225, "name": "Grow"}, {"value": 225, "name": "OpenAndInit"}, {"value": 238, "name": "ResizeItem"}], "name": "(*WrappedMemoryAccount)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 1254, "name": "VisitPre"}], "name": "(*aggExprVisitor)."}, {"children": [{"value": 484, "name": "Eval"}, {"value": 88, "name": "Format"}, {"value": 88, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}, {"value": 1021, "name": "add"}, {"value": 467, "name": "close"}], "name": "(*aggregateFuncHolder)."}, {"children": [{"value": 159, "name": "InSameGroup"}], "name": "(*allPeers)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 15927, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*alterTableNode)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 377, "name": "getStatsForStmt"}, {"value": 1285, "name": "recordStatement"}], "name": "(*appStats)."}, {"children": [{"value": 341, "name": "VisitPost"}, {"value": 1125, "name": "VisitPre"}], "name": "(*applyConstraintsVisitor)."}, {"children": [{"value": 134, "name": "(github.com/cockroachdb/cockroach/pkg/sql.enterNode)-fm"}, {"value": 2985, "name": "enterNode"}], "name": "(*backrefCollector)."}, {"children": [{"value": 272, "name": "AddRow"}, {"value": 55, "name": "MarkSeen"}, {"value": 32, "name": "Rows"}, {"value": 59, "name": "Seen"}], "name": "(*bucket)."}, {"children": [{"value": 951, "name": "AddRow"}, {"value": 14, "name": "Buckets"}, {"value": 182, "name": "Close"}, {"value": 117, "name": "Fetch"}, {"value": 442, "name": "InitSeen"}], "name": "(*buckets)."}, {"children": [{"value": 152, "name": "IndexedVarEval"}, {"value": 94, "name": "IndexedVarFormat"}, {"value": 78, "name": "IndexedVarResolvedType"}, {"value": 581, "name": "check"}, {"value": 1990, "name": "init"}, {"value": 1112, "name": "loadRow"}], "name": "(*checkHelper)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 1748, "name": "VisitPre"}], "name": "(*checkQueryVisitor)."}, {"children": [{"value": 116, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 224, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 217, "name": "Start"}, {"value": 28, "name": "Values"}, {"value": 4180, "name": "addRow"}], "name": "(*copyNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 1033, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*createDatabaseNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 2834, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*createIndexNode)."}, {"children": [{"value": 158, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 5076, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*createTableNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 1281, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*createUserNode)."}, {"children": [{"value": 168, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 2765, "name": "Start"}, {"value": 90, "name": "Values"}, {"value": 1701, "name": "makeViewTableDesc"}, {"value": 639, "name": "resolveViewDependencies"}], "name": "(*createViewNode)."}, {"children": [{"value": 520, "name": "FormatVar"}, {"value": 2156, "name": "String"}, {"value": 1522, "name": "checkDatabaseName"}, {"value": 1779, "name": "expandStar"}, {"children": [{"value": 809, "name": "func1"}], "name": "expandStar."}, {"value": 395, "name": "findTableAlias"}], "name": "(*dataSourceInfo)."}, {"children": [{"value": 1479, "name": "getCachedDatabaseDesc"}, {"value": 748, "name": "getDatabaseID"}, {"value": 200, "name": "getID"}, {"value": 202, "name": "setID"}], "name": "(*databaseCache)."}, {"children": [{"value": 205, "name": "Key"}, {"value": 171, "name": "Name"}], "name": "(*databaseKey)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*debugValueType)."}, {"children": [{"value": 773, "name": "AsRow"}], "name": "(*debugValues)."}, {"children": [{"value": 158, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 171, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 118, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 99, "name": "Values"}], "name": "(*delayedNode)."}, {"children": [{"value": 95, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 177, "name": "DebugValues"}, {"value": 50, "name": "FastPathResults"}, {"value": 299, "name": "MarkDebug"}, {"value": 677, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 495, "name": "Start"}, {"value": 42, "name": "Values"}, {"value": 489, "name": "fastDelete"}], "name": "(*deleteNode)."}, {"children": [{"value": 213, "name": "Error"}], "name": "(*descriptorAlreadyExistsErr)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 789, "name": "VisitPre"}], "name": "(*distSQLExprCheckVisitor)."}, {"children": [{"value": 161, "name": "CheckSupport"}, {"value": 1998, "name": "CreateBackfiller"}, {"value": 1015, "name": "FinalizePlan"}, {"value": 477, "name": "NewPlanningCtx"}, {"value": 566, "name": "PlanAndRun"}, {"value": 3825, "name": "Run"}, {"children": [{"value": 1, "name": "func1"}], "name": "Run."}, {"value": 12542, "name": "addAggregators"}, {"children": [{"value": 71, "name": "func1"}, {"value": 71, "name": "func2"}], "name": "addAggregators."}, {"value": 1300, "name": "addSorters"}, {"value": 240, "name": "checkExpr"}, {"value": 4853, "name": "checkSupportForNode"}, {"value": 539, "name": "convertOrdering"}, {"value": 1768, "name": "createPlanForDistinct"}, {"value": 2646, "name": "createPlanForIndexJoin"}, {"value": 8100, "name": "createPlanForJoin"}, {"children": [{"value": 255, "name": "func1"}], "name": "createPlanForJoin."}, {"value": 3611, "name": "createPlanForNode"}, {"value": 2690, "name": "createTableReaders"}, {"value": 646, "name": "extractAggExprs"}, {"value": 371, "name": "extractPostAggrExprs"}, {"value": 385, "name": "initRunners"}, {"children": [{"value": 404, "name": "func1"}], "name": "initRunners."}, {"value": 5729, "name": "partitionSpans"}, {"value": 485, "name": "selectRenders"}], "name": "(*distSQLPlanner)."}, {"children": [{"value": 147, "name": "ProducerDone"}, {"value": 2020, "name": "Push"}, {"value": 834, "name": "updateCaches"}], "name": "(*distSQLReceiver)."}, {"children": [{"value": 343, "name": "Close"}, {"value": 98, "name": "Columns"}, {"value": 315, "name": "DebugValues"}, {"value": 289, "name": "MarkDebug"}, {"value": 1826, "name": "Next"}, {"value": 207, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 204, "name": "Start"}, {"value": 98, "name": "Values"}, {"value": 248, "name": "addSuffixSeen"}, {"value": 790, "name": "encodeValues"}], "name": "(*distinctNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 3655, "name": "Start"}, {"children": [{"value": 396, "name": "func1"}], "name": "Start."}, {"value": 90, "name": "Values"}], "name": "(*dropDatabaseNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 720, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*dropIndexNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 777, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*dropTableNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 110, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 24, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 790, "name": "Start"}, {"value": 90, "name": "Values"}], "name": "(*dropViewNode)."}, {"children": [{"value": 225, "name": "Eval"}, {"value": 195, "name": "Format"}, {"value": 171, "name": "ResolvedType"}, {"value": 195, "name": "String"}, {"value": 241, "name": "TypeCheck"}, {"value": 217, "name": "Walk"}], "name": "(*dummyColumnItem)."}, {"children": [{"value": 1639, "name": "collectSpans"}, {"value": 503, "name": "initEditNode"}, {"value": 202, "name": "startEditNode"}], "name": "(*editNodeRun)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 28, "name": "Columns"}, {"value": 224, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 34, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 73, "name": "Spans"}, {"value": 19, "name": "Start"}, {"value": 28, "name": "Values"}], "name": "(*emptyNode)."}, {"children": [{"value": 422, "name": "emitLeft"}, {"value": 348, "name": "emitRight"}], "name": "(*exceptNodeEmitAll)."}, {"children": [{"value": 351, "name": "emitLeft"}, {"value": 348, "name": "emitRight"}], "name": "(*exceptNodeEmitDistinct)."}, {"children": [{"value": 88, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 117, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 108, "name": "Start"}, {"value": 948, "name": "Values"}], "name": "(*explainDebugNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 65, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 1292, "name": "Start"}, {"value": 33, "name": "Values"}], "name": "(*explainDistSQLNode)."}, {"children": [{"value": 127, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 71, "name": "Next"}, {"value": 200, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 142, "name": "Start"}, {"value": 94, "name": "Values"}], "name": "(*explainPlanNode)."}, {"children": [{"value": 173, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 83, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 9300, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 108, "name": "Start"}, {"value": 72, "name": "Values"}, {"value": 391, "name": "hijackTxnContext"}, {"value": 109, "name": "unhijackCtx"}], "name": "(*explainTraceNode)."}, {"children": [{"value": 119, "name": "(github.com/cockroachdb/cockroach/pkg/sql.attr)-fm"}, {"value": 134, "name": "(github.com/cockroachdb/cockroach/pkg/sql.enterNode)-fm"}, {"value": 135, "name": "(github.com/cockroachdb/cockroach/pkg/sql.expr)-fm"}, {"value": 16, "name": "(github.com/cockroachdb/cockroach/pkg/sql.leaveNode)-fm"}, {"value": 517, "name": "attr"}, {"value": 541, "name": "enterNode"}, {"value": 753, "name": "expr"}, {"children": [{"value": 18, "name": "func1"}], "name": "expr."}, {"value": 595, "name": "observer"}], "name": "(*explainer)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 2757, "name": "VisitPre"}], "name": "(*extractAggregatesVisitor)."}, {"children": [{"value": 167, "name": "VisitPost"}, {"value": 1564, "name": "VisitPre"}], "name": "(*extractWindowFuncsVisitor)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 99, "name": "Columns"}, {"value": 315, "name": "DebugValues"}, {"value": 176, "name": "IndexedVarEval"}, {"value": 94, "name": "IndexedVarFormat"}, {"value": 78, "name": "IndexedVarResolvedType"}, {"value": 290, "name": "MarkDebug"}, {"value": 598, "name": "Next"}, {"value": 208, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 99, "name": "Values"}], "name": "(*filterNode)."}, {"children": [{"value": 301, "name": "Close"}, {"value": 51, "name": "Columns"}, {"value": 327, "name": "DebugValues"}, {"value": 293, "name": "MarkDebug"}, {"value": 1756, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 98, "name": "Values"}, {"value": 1443, "name": "computeAggregates"}, {"value": 583, "name": "desiredAggregateOrdering"}, {"value": 659, "name": "isNotNullFilter"}], "name": "(*groupNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 224, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 82, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 180, "name": "Start"}, {"value": 83, "name": "Values"}], "name": "(*hookFnNode)."}, {"children": [{"value": 214, "name": "String"}], "name": "(*indexConstraint)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*indexConstraints)."}, {"children": [{"value": 513, "name": "analyzeExprs"}, {"value": 1322, "name": "analyzeOrdering"}, {"value": 210, "name": "init"}, {"value": 268, "name": "isCoveringIndex"}, {"value": 7788, "name": "makeIndexConstraints"}, {"value": 565, "name": "makeOrConstraints"}], "name": "(*indexInfo)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 217, "name": "Less"}, {"value": 184, "name": "Sort"}, {"value": 309, "name": "Swap"}], "name": "(*indexInfoByCost)."}, {"children": [{"value": 8, "name": "Close"}, {"value": 46, "name": "Columns"}, {"value": 315, "name": "DebugValues"}, {"value": 312, "name": "MarkDebug"}, {"value": 1983, "name": "Next"}, {"value": 201, "name": "Ordering"}, {"value": 464, "name": "Spans"}, {"value": 183, "name": "Start"}, {"value": 46, "name": "Values"}], "name": "(*indexJoinNode)."}, {"children": [{"value": 95, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 177, "name": "DebugValues"}, {"value": 299, "name": "MarkDebug"}, {"value": 1498, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 1209, "name": "Start"}, {"value": 42, "name": "Values"}], "name": "(*insertNode)."}, {"children": [{"value": 422, "name": "emitLeft"}, {"value": 348, "name": "emitRight"}], "name": "(*intersectNodeEmitAll)."}, {"children": [{"value": 356, "name": "emitLeft"}, {"value": 348, "name": "emitRight"}], "name": "(*intersectNodeEmitDistinct)."}, {"children": [{"value": 159, "name": "Add"}, {"value": 83, "name": "Close"}, {"value": 271, "name": "DebugValues"}, {"value": 63, "name": "Finish"}, {"value": 224, "name": "Next"}, {"value": 33, "name": "Values"}], "name": "(*iterativeSortStrategy)."}, {"children": [{"value": 348, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 292, "name": "DebugValues"}, {"value": 326, "name": "MarkDebug"}, {"value": 3450, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 1203, "name": "Spans"}, {"value": 1052, "name": "Start"}, {"value": 37, "name": "Values"}, {"value": 273, "name": "debugNext"}, {"value": 883, "name": "hashJoinStart"}], "name": "(*joinNode)."}, {"children": [{"value": 162, "name": "IndexedVarEval"}, {"value": 97, "name": "IndexedVarFormat"}, {"value": 81, "name": "IndexedVarResolvedType"}, {"value": 648, "name": "encode"}, {"value": 586, "name": "eval"}, {"value": 687, "name": "getNeededColumns"}, {"value": 853, "name": "prepareRow"}, {"value": 2147, "name": "tryAddEqualityFilter"}], "name": "(*joinPredicate)."}, {"children": [{"value": 655, "name": "String"}, {"value": 169, "name": "find"}, {"value": 293, "name": "findIndex"}, {"children": [{"value": 134, "name": "func1"}], "name": "findIndex."}, {"value": 283, "name": "findNewest"}, {"children": [{"value": 68, "name": "func1"}], "name": "findNewest."}, {"value": 864, "name": "insert"}, {"value": 722, "name": "remove"}], "name": "(*leaseSet)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 99, "name": "Columns"}, {"value": 315, "name": "DebugValues"}, {"value": 290, "name": "MarkDebug"}, {"value": 495, "name": "Next"}, {"value": 208, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 165, "name": "Start"}, {"value": 99, "name": "Values"}, {"value": 269, "name": "estimateLimit"}, {"value": 842, "name": "evalLimit"}], "name": "(*limitNode)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 2871, "name": "VisitPre"}], "name": "(*nameResolutionVisitor)."}, {"children": [{"value": 215, "name": "BuiltinOid"}, {"value": 215, "name": "CheckConstraintOid"}, {"value": 205, "name": "CollationOid"}, {"value": 215, "name": "ColumnOid"}, {"value": 195, "name": "DBOid"}, {"value": 215, "name": "ForeignKeyConstraintOid"}, {"value": 215, "name": "IndexOid"}, {"value": 205, "name": "NamespaceOid"}, {"value": 215, "name": "PrimaryKeyConstraintOid"}, {"value": 215, "name": "RegProc"}, {"value": 205, "name": "TableOid"}, {"value": 215, "name": "UniqueConstraintOid"}, {"value": 205, "name": "UserOid"}], "name": "(*oidHasher)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*orIndexConstraints)."}, {"children": [{"value": 250, "name": "AsString"}, {"value": 234, "name": "Format"}, {"value": 495, "name": "addColumn"}, {"value": 294, "name": "trim"}], "name": "(*orderingInfo)."}, {"children": [{"value": 88, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 170, "name": "DebugValues"}, {"value": 78, "name": "MarkDebug"}, {"value": 416, "name": "Next"}, {"value": 108, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 108, "name": "Start"}, {"value": 33, "name": "Values"}], "name": "(*ordinalityNode)."}, {"children": [{"value": 502, "name": "Compare"}, {"value": 95, "name": "InSameGroup"}, {"value": 15, "name": "Len"}, {"value": 95, "name": "Less"}, {"value": 319, "name": "Swap"}], "name": "(*partitionSorter)."}, {"children": [{"value": 17, "name": "AddFilter"}, {"value": 35, "name": "AddLimit"}, {"value": 17, "name": "AddNoGroupingStage"}, {"value": 29, "name": "AddProcessor"}, {"value": 17, "name": "AddProjection"}, {"value": 17, "name": "AddRendering"}, {"value": 17, "name": "AddSingleGroupStage"}, {"value": 26, "name": "GenerateFlowSpecs"}, {"value": 57, "name": "GetLastStagePost"}, {"value": 17, "name": "MergeResultStreams"}, {"value": 17, "name": "PopulateEndpoints"}, {"value": 17, "name": "SetLastStagePost"}, {"value": 17, "name": "SetMergeOrdering"}], "name": "(*physicalPlan)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 703, "name": "VisitPre"}, {"value": 569, "name": "expr"}, {"value": 293, "name": "subqueries"}, {"value": 17080, "name": "visit"}, {"children": [{"value": 347, "name": "func1"}, {"value": 347, "name": "func2"}, {"value": 347, "name": "func3"}], "name": "visit."}], "name": "(*planVisitor)."}, {"children": [{"value": 880, "name": "AlterTable"}, {"value": 389, "name": "BeginTransaction"}, {"value": 642, "name": "CheckPrivilege"}, {"value": 896, "name": "CopyData"}, {"value": 1304, "name": "CopyFrom"}, {"value": 1897, "name": "CreateDatabase"}, {"value": 669, "name": "CreateIndex"}, {"value": 2058, "name": "CreateTable"}, {"value": 968, "name": "CreateUser"}, {"value": 2996, "name": "CreateView"}, {"children": [{"value": 115, "name": "func1"}, {"value": 491, "name": "func2"}], "name": "CreateView."}, {"value": 2421, "name": "Delete"}, {"value": 237, "name": "Distinct"}, {"value": 2330, "name": "DropDatabase"}, {"value": 1144, "name": "DropIndex"}, {"value": 3412, "name": "DropTable"}, {"value": 2023, "name": "DropView"}, {"value": 22, "name": "ExecCfg"}, {"value": 4264, "name": "Explain"}, {"value": 319, "name": "Grant"}, {"children": [{"value": 110, "name": "func1"}], "name": "Grant."}, {"value": 974, "name": "Help"}, {"children": [{"value": 1530, "name": "func1"}], "name": "Help."}, {"value": 6885, "name": "Insert"}, {"value": 22, "name": "LeaseMgr"}, {"value": 1194, "name": "Limit"}, {"value": 247, "name": "QualifyWithDatabase"}, {"value": 557, "name": "QueryRow"}, {"value": 2446, "name": "Relocate"}, {"value": 4423, "name": "RenameColumn"}, {"children": [{"value": 613, "name": "func1"}], "name": "RenameColumn."}, {"value": 2688, "name": "RenameDatabase"}, {"value": 3138, "name": "RenameIndex"}, {"value": 5214, "name": "RenameTable"}, {"children": [{"value": 321, "name": "func1"}], "name": "RenameTable."}, {"value": 507, "name": "RequireSuperUser"}, {"value": 319, "name": "Revoke"}, {"children": [{"value": 110, "name": "func1"}], "name": "Revoke."}, {"value": 121, "name": "Scan"}, {"value": 3690, "name": "Scatter"}, {"value": 1706, "name": "Select"}, {"value": 2856, "name": "SelectClause"}, {"value": 2010, "name": "Set"}, {"value": 332, "name": "SetDefaultIsolation"}, {"value": 2614, "name": "SetTimeZone"}, {"value": 277, "name": "SetTransaction"}, {"value": 1483, "name": "Show"}, {"children": [{"value": 1533, "name": "func1"}], "name": "Show."}, {"value": 1140, "name": "ShowColumns"}, {"children": [{"value": 991, "name": "func1"}], "name": "ShowColumns."}, {"value": 1501, "name": "ShowConstraints"}, {"children": [{"value": 2527, "name": "func1"}], "name": "ShowConstraints."}, {"value": 1277, "name": "ShowCreateTable"}, {"children": [{"value": 1036, "name": "func1"}], "name": "ShowCreateTable."}, {"value": 1339, "name": "ShowCreateView"}, {"children": [{"value": 2850, "name": "func1"}, {"children": [{"value": 15, "name": "1"}], "name": "func1."}], "name": "ShowCreateView."}, {"value": 279, "name": "ShowDatabases"}, {"value": 1039, "name": "ShowGrants"}, {"children": [{"value": 8050, "name": "func1"}, {"children": [{"value": 473, "name": "1"}], "name": "func1."}], "name": "ShowGrants."}, {"value": 1345, "name": "ShowIndex"}, {"children": [{"value": 991, "name": "func1"}], "name": "ShowIndex."}, {"value": 624, "name": "ShowRanges"}, {"value": 849, "name": "ShowTables"}, {"children": [{"value": 595, "name": "func1"}], "name": "ShowTables."}, {"value": 279, "name": "ShowUsers"}, {"value": 2151, "name": "Split"}, {"value": 2649, "name": "Truncate"}, {"value": 765, "name": "TypeAsString"}, {"children": [{"value": 123, "name": "func1"}], "name": "TypeAsString."}, {"value": 956, "name": "TypeAsStringArray"}, {"children": [{"value": 362, "name": "func1"}], "name": "TypeAsStringArray."}, {"value": 3087, "name": "UnionClause"}, {"value": 8430, "name": "Update"}, {"value": 28, "name": "User"}, {"value": 3986, "name": "ValuesClause"}, {"value": 460, "name": "accumulateDependentTables"}, {"value": 204, "name": "addInterleave"}, {"value": 5295, "name": "addJoinFilter"}, {"children": [{"value": 248, "name": "func1"}, {"value": 277, "name": "func2"}, {"value": 280, "name": "func3"}, {"value": 256, "name": "func4"}, {"value": 253, "name": "func5"}, {"value": 267, "name": "func6"}], "name": "addJoinFilter."}, {"value": 710, "name": "addRenderFilter"}, {"children": [{"value": 413, "name": "func1"}], "name": "addRenderFilter."}, {"value": 805, "name": "analyzeExpr"}, {"value": 538, "name": "anyPrivilege"}, {"value": 293, "name": "canRemoveDependentView"}, {"value": 621, "name": "canRemoveDependentViewGeneric"}, {"value": 584, "name": "canRemoveFK"}, {"value": 555, "name": "canRemoveInterleave"}, {"value": 2433, "name": "changePrivileges"}, {"value": 1721, "name": "colIndex"}, {"value": 1014, "name": "computeRender"}, {"value": 1501, "name": "computeRenderAllowingStars"}, {"value": 864, "name": "createDatabase"}, {"value": 1160, "name": "createDescriptor"}, {"value": 1630, "name": "createDescriptorWithID"}, {"children": [{"value": 278, "name": "func1"}], "name": "createDescriptorWithID."}, {"value": 1480, "name": "dependentViewRenameError"}, {"value": 5446, "name": "dropIndexByName"}, {"value": 3125, "name": "dropTableImpl"}, {"children": [{"value": 135, "name": "func1"}], "name": "dropTableImpl."}, {"value": 373, "name": "dropTableOrViewPrepare"}, {"value": 2530, "name": "dropViewImpl"}, {"children": [{"value": 135, "name": "func1"}], "name": "dropViewImpl."}, {"value": 575, "name": "exec"}, {"value": 541, "name": "expandIndexName"}, {"value": 325, "name": "expandPlan"}, {"value": 638, "name": "fillFKTableMap"}, {"value": 865, "name": "filterCascadedTables"}, {"value": 1008, "name": "finalizeInterleave"}, {"value": 1443, "name": "findTableContainingIndex"}, {"value": 405, "name": "getAliasedTableName"}, {"value": 5119, "name": "getDataSource"}, {"value": 356, "name": "getGeneratorPlan"}, {"value": 768, "name": "getPlanForDesc"}, {"value": 454, "name": "getQualifiedTableName"}, {"value": 1120, "name": "getSources"}, {"value": 939, "name": "getStringVal"}, {"value": 498, "name": "getSubqueryPlan"}, {"value": 1163, "name": "getTableAndIndex"}, {"value": 750, "name": "getTableScanByRef"}, {"value": 530, "name": "getTableScanOrViewPlan"}, {"value": 2031, "name": "getViewDescForCascade"}, {"value": 1423, "name": "getViewPlan"}, {"children": [{"value": 15, "name": "func1"}], "name": "getViewPlan."}, {"value": 1108, "name": "getVirtualDataSource"}, {"value": 8009, "name": "groupBy"}, {"value": 806, "name": "initiateDropTable"}, {"value": 756, "name": "makeEditNode"}, {"value": 1820, "name": "makeExplainPlanNode"}, {"value": 1998, "name": "makeGenerator"}, {"value": 3167, "name": "makeIndexJoin"}, {"children": [{"value": 259, "name": "func1"}], "name": "makeIndexJoin."}, {"value": 3703, "name": "makeJoin"}, {"value": 778, "name": "makeOnPredicate"}, {"value": 1008, "name": "makePlan"}, {"value": 398, "name": "makeTableDesc"}, {"value": 3086, "name": "makeUpsertHelper"}, {"value": 654, "name": "maybePlanHook"}, {"value": 1459, "name": "namesForExprs"}, {"value": 539, "name": "newContainerValuesNode"}, {"value": 10709, "name": "newPlan"}, {"value": 3114, "name": "newReturningHelper"}, {"value": 1089, "name": "optimizePlan"}, {"value": 3494, "name": "orderBy"}, {"value": 367, "name": "planContainsStar"}, {"value": 672, "name": "populateExplain"}, {"children": [{"value": 2040, "name": "func1"}], "name": "populateExplain."}, {"value": 523, "name": "populateViewBackrefs"}, {"value": 4669, "name": "prepare"}, {"value": 1726, "name": "processColumns"}, {"value": 11622, "name": "propagateFilters"}, {"value": 1426, "name": "propagateOrWrapFilters"}, {"value": 788, "name": "query"}, {"value": 1530, "name": "queryRows"}, {"value": 441, "name": "queryRowsAsRoot"}, {"children": [{"value": 108, "name": "func1"}], "name": "queryRowsAsRoot."}, {"value": 315, "name": "removeDependentView"}, {"value": 437, "name": "removeFK"}, {"value": 1291, "name": "removeFKBackReference"}, {"value": 409, "name": "removeInterleave"}, {"value": 1401, "name": "removeInterleaveBackReference"}, {"value": 2225, "name": "renameDatabase"}, {"children": [{"value": 208, "name": "func1"}, {"value": 389, "name": "func2"}], "name": "renameDatabase."}, {"value": 489, "name": "replaceSubqueries"}, {"value": 196, "name": "resolveFK"}, {"value": 765, "name": "resolveNames"}, {"value": 864, "name": "saveNonmutationAndNotify"}, {"value": 1553, "name": "searchAndQualifyDatabase"}, {"value": 7316, "name": "selectIndex"}, {"value": 2155, "name": "setClusterSetting"}, {"value": 319, "name": "setIsolationLevel"}, {"value": 333, "name": "setTxn"}, {"value": 365, "name": "setUserPriority"}, {"value": 3483, "name": "showClusterSetting"}, {"children": [{"value": 1249, "name": "func1"}, {"value": 187, "name": "func2"}, {"value": 328, "name": "func3"}], "name": "showClusterSetting."}, {"value": 718, "name": "showCreateInterleave"}, {"value": 6401, "name": "showCreateTable"}, {"value": 259, "name": "startPlan"}, {"value": 529, "name": "startSubqueryPlans"}, {"value": 2463, "name": "toSettingString"}, {"children": [{"value": 385, "name": "func1"}, {"value": 509, "name": "func2"}, {"value": 424, "name": "func3"}, {"value": 515, "name": "func4"}, {"value": 519, "name": "func5"}, {"value": 1141, "name": "func6"}, {"value": 625, "name": "func7"}, {"value": 810, "name": "func8"}], "name": "toSettingString."}, {"value": 777, "name": "triggerFilterPropagation"}, {"value": 2170, "name": "validateCheckExpr"}, {"value": 5362, "name": "validateForeignKey"}, {"children": [{"value": 90, "name": "func1"}], "name": "validateForeignKey."}, {"value": 1141, "name": "window"}, {"value": 1964, "name": "wrapOrdinality"}, {"value": 543, "name": "writeTableDesc"}], "name": "(*planner)."}, {"children": [{"value": 255, "name": "VisitPost"}, {"value": 26, "name": "VisitPre"}, {"value": 191, "name": "extract"}], "name": "(*postAggExprVisitor)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 299, "name": "Columns"}, {"value": 143, "name": "DebugValues"}, {"value": 109, "name": "MarkDebug"}, {"value": 2310, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 512, "name": "Values"}], "name": "(*relocateNode)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 39, "name": "Columns"}, {"value": 171, "name": "DebugValues"}, {"value": 162, "name": "IndexedVarEval"}, {"value": 113, "name": "IndexedVarFormat"}, {"value": 90, "name": "IndexedVarResolvedType"}, {"value": 293, "name": "MarkDebug"}, {"value": 439, "name": "Next"}, {"value": 114, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 42, "name": "Values"}, {"value": 915, "name": "addOrMergeRender"}, {"value": 426, "name": "addOrMergeRenders"}, {"value": 749, "name": "computeOrdering"}, {"value": 199, "name": "equivalentRenders"}, {"value": 110, "name": "findRenderIndexForCol"}, {"value": 615, "name": "initFrom"}, {"value": 1374, "name": "initTargets"}, {"value": 1597, "name": "initWhere"}, {"value": 212, "name": "isRenderEquivalent"}, {"value": 479, "name": "renderRow"}, {"value": 509, "name": "resetRenderColumns"}, {"value": 1513, "name": "rewriteSRFs"}], "name": "(*renderNode)."}, {"children": [{"value": 152, "name": "IndexedVarEval"}, {"value": 94, "name": "IndexedVarFormat"}, {"value": 78, "name": "IndexedVarResolvedType"}, {"value": 667, "name": "cookResultRow"}], "name": "(*returningHelper)."}, {"children": [{"value": 311, "name": "checkColumnTypes"}, {"value": 318, "name": "extractValues"}], "name": "(*scalarSlot)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 42, "name": "Columns"}, {"value": 323, "name": "DebugValues"}, {"value": 162, "name": "IndexedVarEval"}, {"value": 132, "name": "IndexedVarFormat"}, {"value": 81, "name": "IndexedVarResolvedType"}, {"value": 270, "name": "MarkDebug"}, {"value": 707, "name": "Next"}, {"value": 114, "name": "Ordering"}, {"value": 87, "name": "Spans"}, {"value": 236, "name": "Start"}, {"value": 42, "name": "Values"}, {"value": 958, "name": "computeOrdering"}, {"value": 1355, "name": "debugNext"}, {"value": 2568, "name": "initDescDefaults"}, {"value": 265, "name": "initOrdering"}, {"value": 373, "name": "initScan"}, {"value": 437, "name": "initTable"}, {"value": 1231, "name": "lookupSpecifiedIndex"}], "name": "(*scanNode)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 377, "name": "Columns"}, {"value": 143, "name": "DebugValues"}, {"value": 109, "name": "MarkDebug"}, {"value": 49, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 521, "name": "Start"}, {"value": 868, "name": "Values"}], "name": "(*scatterNode)."}, {"children": [{"value": 2689, "name": "execSchemaChanges"}], "name": "(*schemaChangerCollection)."}, {"children": [{"value": 109, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 143, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 2662, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 263, "name": "Start"}, {"value": 33, "name": "Values"}], "name": "(*showRangesNode)."}, {"children": [{"value": 159, "name": "Add"}, {"value": 83, "name": "Close"}, {"value": 165, "name": "DebugValues"}, {"value": 63, "name": "Finish"}, {"value": 70, "name": "Next"}, {"value": 93, "name": "Values"}], "name": "(*sortAllStrategy)."}, {"children": [{"value": 196, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 315, "name": "DebugValues"}, {"value": 290, "name": "MarkDebug"}, {"value": 1982, "name": "Next"}, {"value": 1147, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 115, "name": "Values"}], "name": "(*sortNode)."}, {"children": [{"value": 495, "name": "Add"}, {"value": 83, "name": "Close"}, {"value": 165, "name": "DebugValues"}, {"value": 105, "name": "Finish"}, {"value": 70, "name": "Next"}, {"value": 93, "name": "Values"}], "name": "(*sortTopKStrategy)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 249, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*sortedDBDescs)."}, {"children": [{"value": 105, "name": "Clear"}, {"value": 710, "name": "Independent"}, {"value": 1069, "name": "analyzePlan"}], "name": "(*spanBasedDependencyAnalyzer)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 424, "name": "Swap"}], "name": "(*spanEvents)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 299, "name": "Columns"}, {"value": 143, "name": "DebugValues"}, {"value": 109, "name": "MarkDebug"}, {"value": 657, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 109, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 512, "name": "Values"}], "name": "(*splitNode)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 511, "name": "getStatsForApplication"}, {"value": 502, "name": "resetStats"}], "name": "(*sqlStats)."}, {"children": [{"value": 933, "name": "VisitPost"}, {"value": 55, "name": "VisitPre"}], "name": "(*srfExtractionVisitor)."}, {"children": [{"value": 85, "name": "(github.com/cockroachdb/cockroach/pkg/sql.enterNode)-fm"}], "name": "(*starDetector)."}, {"children": [{"value": 211, "name": "String"}], "name": "(*stmtKey)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*stmtStats)."}, {"children": [{"value": 172, "name": "Eval"}, {"value": 273, "name": "Format"}, {"value": 24, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}, {"value": 2527, "name": "doEval"}, {"children": [{"value": 147, "name": "func1"}], "name": "doEval."}, {"value": 632, "name": "subqueryTupleOrdering"}], "name": "(*subquery)."}, {"children": [{"value": 6, "name": "(github.com/cockroachdb/cockroach/pkg/sql.enterNode)-fm"}, {"value": 109, "name": "(github.com/cockroachdb/cockroach/pkg/sql.subqueryNode)-fm"}, {"value": 882, "name": "subqueryNode"}], "name": "(*subqueryInitializer)."}, {"children": [{"value": 35, "name": "(github.com/cockroachdb/cockroach/pkg/sql.enterNode)-fm"}, {"value": 109, "name": "(github.com/cockroachdb/cockroach/pkg/sql.subqueryNode)-fm"}, {"value": 406, "name": "subqueryNode"}], "name": "(*subqueryPlanVisitor)."}, {"children": [{"value": 109, "name": "(github.com/cockroachdb/cockroach/pkg/sql.subqueryNode)-fm"}, {"value": 766, "name": "subqueryNode"}], "name": "(*subquerySpanCollector)."}, {"children": [{"value": 54, "name": "AlterTable"}, {"value": 54, "name": "BeginTransaction"}, {"value": 36, "name": "CheckPrivilege"}, {"value": 54, "name": "CopyData"}, {"value": 54, "name": "CopyFrom"}, {"value": 54, "name": "CreateDatabase"}, {"value": 54, "name": "CreateIndex"}, {"value": 54, "name": "CreateTable"}, {"value": 54, "name": "CreateUser"}, {"value": 54, "name": "CreateView"}, {"value": 54, "name": "Delete"}, {"value": 27, "name": "Distinct"}, {"value": 54, "name": "DropDatabase"}, {"value": 54, "name": "DropIndex"}, {"value": 54, "name": "DropTable"}, {"value": 54, "name": "DropView"}, {"value": 27, "name": "ExecCfg"}, {"value": 54, "name": "Explain"}, {"value": 54, "name": "Grant"}, {"value": 54, "name": "Help"}, {"value": 54, "name": "Insert"}, {"value": 27, "name": "LeaseMgr"}, {"value": 45, "name": "Limit"}, {"value": 45, "name": "QualifyWithDatabase"}, {"value": 63, "name": "QueryRow"}, {"value": 54, "name": "Relocate"}, {"value": 54, "name": "RenameColumn"}, {"value": 54, "name": "RenameDatabase"}, {"value": 54, "name": "RenameIndex"}, {"value": 54, "name": "RenameTable"}, {"value": 36, "name": "RequireSuperUser"}, {"value": 54, "name": "Revoke"}, {"value": 27, "name": "Scan"}, {"value": 54, "name": "Scatter"}, {"value": 54, "name": "Select"}, {"value": 57, "name": "SelectClause"}, {"value": 54, "name": "Set"}, {"value": 54, "name": "SetDefaultIsolation"}, {"value": 54, "name": "SetTimeZone"}, {"value": 54, "name": "SetTransaction"}, {"value": 54, "name": "Show"}, {"value": 54, "name": "ShowColumns"}, {"value": 54, "name": "ShowConstraints"}, {"value": 54, "name": "ShowCreateTable"}, {"value": 54, "name": "ShowCreateView"}, {"value": 54, "name": "ShowDatabases"}, {"value": 54, "name": "ShowGrants"}, {"value": 54, "name": "ShowIndex"}, {"value": 54, "name": "ShowRanges"}, {"value": 54, "name": "ShowTables"}, {"value": 54, "name": "ShowUsers"}, {"value": 54, "name": "Split"}, {"value": 54, "name": "Truncate"}, {"value": 45, "name": "TypeAsString"}, {"value": 45, "name": "TypeAsStringArray"}, {"value": 54, "name": "UnionClause"}, {"value": 54, "name": "Update"}, {"value": 36, "name": "User"}, {"value": 54, "name": "ValuesClause"}, {"value": 84, "name": "VisitPost"}, {"value": 2988, "name": "VisitPre"}, {"value": 36, "name": "anyPrivilege"}, {"value": 656, "name": "getSubqueryContext"}], "name": "(*subqueryVisitor)."}, {"children": [{"value": 760, "name": "deleteAllRows"}, {"value": 1208, "name": "deleteAllRowsFast"}, {"value": 1496, "name": "deleteAllRowsScan"}, {"value": 786, "name": "deleteIndex"}, {"value": 1049, "name": "deleteIndexFast"}, {"value": 1518, "name": "deleteIndexScan"}, {"value": 1770, "name": "fastDelete"}, {"value": 765, "name": "fastPathAvailable"}, {"value": 215, "name": "finalize"}, {"value": 260, "name": "init"}, {"value": 194, "name": "row"}, {"value": 192, "name": "spans"}, {"value": 1, "name": "walkExprs"}], "name": "(*tableDeleter)."}, {"children": [{"value": 266, "name": "finalize"}, {"value": 260, "name": "init"}, {"value": 217, "name": "row"}, {"value": 192, "name": "spans"}, {"value": 1, "name": "walkExprs"}], "name": "(*tableInserter)."}, {"children": [{"value": 212, "name": "Key"}, {"value": 172, "name": "Name"}], "name": "(*tableKey)."}, {"children": [{"value": 1085, "name": "get"}, {"value": 665, "name": "insert"}, {"value": 393, "name": "remove"}], "name": "(*tableNameCache)."}, {"children": [{"value": 1089, "name": "acquire"}, {"value": 429, "name": "acquireFreshestFromStoreLocked"}, {"value": 374, "name": "acquireFromStoreLocked"}, {"value": 836, "name": "acquireNodeLease"}, {"children": [{"value": 113, "name": "func1"}], "name": "acquireNodeLease."}, {"value": 182, "name": "acquireWait"}, {"value": 194, "name": "checkLease"}, {"value": 722, "name": "purgeOldLeases"}, {"children": [{"value": 631, "name": "func1"}], "name": "purgeOldLeases."}, {"value": 683, "name": "release"}, {"children": [{"value": 1217, "name": "func1"}], "name": "release."}, {"value": 339, "name": "releaseInactiveLeases"}, {"children": [{"value": 202, "name": "func1"}], "name": "releaseInactiveLeases."}, {"value": 907, "name": "removeLease"}, {"children": [{"value": 356, "name": "func1"}, {"children": [{"value": 83, "name": "1"}], "name": "func1."}], "name": "removeLease."}], "name": "(*tableState)."}, {"children": [{"value": 266, "name": "finalize"}, {"value": 260, "name": "init"}, {"value": 300, "name": "row"}, {"value": 228, "name": "spans"}, {"value": 1, "name": "walkExprs"}], "name": "(*tableUpdater)."}, {"children": [{"value": 2567, "name": "fetchExisting"}, {"value": 283, "name": "finalize"}, {"value": 1400, "name": "flush"}, {"children": [{"value": 123, "name": "func1"}], "name": "flush."}, {"value": 2299, "name": "init"}, {"value": 1396, "name": "row"}, {"value": 192, "name": "spans"}, {"value": 2609, "name": "upsertRowPKs"}, {"value": 92, "name": "walkExprs"}], "name": "(*tableUpserter)."}, {"children": [{"value": 294, "name": "String"}], "name": "(*traceResult)."}, {"children": [{"value": 262, "name": "checkColumnTypes"}, {"value": 277, "name": "extractValues"}], "name": "(*tupleSlot)."}, {"children": [{"value": 48, "name": "OpenAccount"}, {"value": 689, "name": "finishSQLTxn"}, {"value": 301, "name": "hijackCtx"}, {"children": [{"value": 96, "name": "func1"}], "name": "hijackCtx."}, {"value": 2357, "name": "resetForNewSQLTxn"}, {"value": 712, "name": "resetStateAndTxn"}, {"value": 142, "name": "setIsolationLevel"}, {"value": 150, "name": "setPriority"}, {"value": 445, "name": "updateStateAndCleanupOnErr"}], "name": "(*txnState)."}, {"children": [{"value": 147, "name": "Close"}, {"value": 42, "name": "Columns"}, {"value": 87, "name": "DebugValues"}, {"value": 322, "name": "MarkDebug"}, {"value": 195, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 1202, "name": "Spans"}, {"value": 193, "name": "Start"}, {"value": 174, "name": "Values"}, {"value": 981, "name": "readLeft"}, {"value": 1141, "name": "readRight"}], "name": "(*unionNode)."}, {"children": [{"value": 342, "name": "emitLeft"}, {"value": 342, "name": "emitRight"}], "name": "(*unionNodeEmitDistinct)."}, {"children": [{"value": 95, "name": "Close"}, {"value": 37, "name": "Columns"}, {"value": 177, "name": "DebugValues"}, {"value": 299, "name": "MarkDebug"}, {"value": 2607, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 199, "name": "Spans"}, {"value": 196, "name": "Start"}, {"value": 42, "name": "Values"}], "name": "(*updateNode)."}, {"children": [{"value": 275, "name": "IndexedVarEval"}, {"value": 149, "name": "IndexedVarFormat"}, {"value": 139, "name": "IndexedVarResolvedType"}, {"value": 685, "name": "eval"}, {"value": 181, "name": "walkExprs"}], "name": "(*upsertHelper)."}, {"children": [{"value": 76, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 521, "name": "DebugValues"}, {"value": 1, "name": "MarkDebug"}, {"value": 109, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 73, "name": "Spans"}, {"value": 728, "name": "Start"}, {"value": 99, "name": "Values"}], "name": "(*valueGenerator)."}, {"children": [{"value": 141, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 556, "name": "DebugValues"}, {"value": 79, "name": "InitMaxHeap"}, {"value": 79, "name": "InitMinHeap"}, {"value": 26, "name": "Len"}, {"value": 242, "name": "Less"}, {"value": 1, "name": "MarkDebug"}, {"value": 84, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 174, "name": "Pop"}, {"value": 139, "name": "PopValues"}, {"value": 1, "name": "Push"}, {"value": 226, "name": "PushValues"}, {"value": 14, "name": "ResetLen"}, {"value": 79, "name": "SortAll"}, {"value": 73, "name": "Spans"}, {"value": 1289, "name": "Start"}, {"value": 84, "name": "Swap"}, {"value": 109, "name": "Values"}, {"value": 194, "name": "ValuesLess"}], "name": "(*valuesNode)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 777, "name": "VisitPre"}], "name": "(*varConvertVisitor)."}, {"children": [{"value": 466, "name": "getVirtualDatabaseDesc"}, {"value": 336, "name": "getVirtualSchemaEntry"}, {"value": 145, "name": "getVirtualTableDesc"}, {"value": 856, "name": "getVirtualTableEntry"}, {"value": 2382, "name": "init"}], "name": "(*virtualSchemaHolder)."}, {"children": [{"value": 191, "name": "Eval"}, {"value": 84, "name": "Format"}, {"value": 97, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*windowFuncHolder)."}, {"children": [{"value": 397, "name": "Close"}, {"value": 39, "name": "Columns"}, {"value": 325, "name": "DebugValues"}, {"value": 293, "name": "MarkDebug"}, {"value": 919, "name": "Next"}, {"value": 109, "name": "Ordering"}, {"value": 200, "name": "Spans"}, {"value": 109, "name": "Start"}, {"value": 96, "name": "Values"}, {"value": 5327, "name": "computeWindows"}, {"value": 2656, "name": "constructWindowDefinitions"}, {"value": 2842, "name": "extractWindowFunctions"}, {"value": 1552, "name": "populateValues"}, {"value": 2747, "name": "replaceIndexVarsAndAggFuncs"}, {"children": [{"value": 1846, "name": "func1"}], "name": "replaceIndexVarsAndAggFuncs."}], "name": "(*windowNode)."}, {"children": [{"value": 53, "name": "IndexedVarEval"}, {"value": 123, "name": "IndexedVarFormat"}, {"value": 139, "name": "IndexedVarResolvedType"}], "name": "(*windowNodeAggContainer)."}, {"children": [{"value": 53, "name": "IndexedVarEval"}, {"value": 94, "name": "IndexedVarFormat"}, {"value": 78, "name": "IndexedVarResolvedType"}], "name": "(*windowNodeColContainer)."}, {"children": [{"value": 254, "name": "IndexedVarEval"}], "name": "(*windowNodeIvarContainer)."}, {"children": [{"value": 103, "name": "(github.com/cockroachdb/cockroach/pkg/sql.tableOrErr)-fm"}], "name": "(tableLookupFn)."}, {"children": [{"value": 1, "name": "Format"}, {"value": 19, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 19, "name": "String"}], "name": "CopyDataBlock."}, {"value": 8, "name": "DistSQLClusterExecMode"}, {"children": [{"value": 370, "name": "String"}], "name": "DistSQLExecMode."}, {"value": 16, "name": "ErrIntOverflowJobs"}, {"value": 16, "name": "ErrInvalidLengthJobs"}, {"value": 1522, "name": "EvalAsOfTimestamp"}, {"children": [{"value": 264, "name": "ExecuteStatementInTransaction"}, {"value": 365, "name": "GetTableSpan"}, {"value": 1917, "name": "InsertEventRecord"}, {"children": [{"value": 362, "name": "func1"}], "name": "InsertEventRecord."}, {"value": 310, "name": "QueryRowInTransaction"}], "name": "EventLogger."}, {"value": 1768, "name": "GenerateInsertRow"}, {"value": 324, "name": "GenerateUniqueDescID"}, {"value": 312, "name": "GetKeysForTableDescriptor"}, {"value": 447, "name": "GetTableDesc"}, {"value": 671, "name": "GetUserHashedPassword"}, {"children": [{"value": 1133, "name": "func1"}], "name": "GetUserHashedPassword."}, {"value": 1295, "name": "GetZoneConfig"}, {"value": 310, "name": "HashAppName"}, {"children": [{"value": 445, "name": "ExecuteStatementInTransaction"}, {"value": 947, "name": "GetTableSpan"}, {"value": 507, "name": "QueryRowInTransaction"}], "name": "InternalExecutor."}, {"value": 441, "name": "IsStmtParallelized"}, {"children": [{"value": 32, "name": "func1"}], "name": "IsStmtParallelized."}, {"value": 8, "name": "LeaseDuration"}, {"children": [{"value": 258, "name": "Publish"}, {"value": 262, "name": "WaitForOneVersion"}], "name": "LeaseManager."}, {"children": [{"value": 168, "name": "CheckUniqueConstraints"}, {"value": 232, "name": "GetConstraintInfo"}, {"value": 200, "name": "GetConstraintInfoWithLookup"}, {"value": 184, "name": "GetDescMetadataKey"}, {"value": 184, "name": "GetNameMetadataKey"}], "name": "LeaseState."}, {"children": [{"value": 2880, "name": "Acquire"}, {"children": [{"value": 1271, "name": "func1"}], "name": "Acquire."}, {"value": 1795, "name": "Publish"}, {"children": [{"value": 2606, "name": "func1"}], "name": "Publish."}, {"value": 1141, "name": "Release"}, {"children": [{"value": 1382, "name": "func1"}], "name": "Release."}, {"value": 1921, "name": "WaitForOneVersion"}, {"value": 552, "name": "countLeases"}, {"children": [{"value": 927, "name": "func1"}], "name": "countLeases."}], "name": "LeaseStore."}, {"value": 3181, "name": "MakeMemMetrics"}, {"value": 8213, "name": "MakeTableDesc"}, {"children": [{"value": 1, "name": "MetricStruct"}], "name": "MemoryMetrics."}, {"value": 56, "name": "MetaDdl"}, {"value": 56, "name": "MetaDelete"}, {"value": 56, "name": "MetaDistSQLExecLatency"}, {"value": 56, "name": "MetaDistSQLSelect"}, {"value": 56, "name": "MetaDistSQLServiceLatency"}, {"value": 56, "name": "MetaInsert"}, {"value": 56, "name": "MetaMisc"}, {"value": 56, "name": "MetaQuery"}, {"value": 56, "name": "MetaSQLExecLatency"}, {"value": 56, "name": "MetaSQLServiceLatency"}, {"value": 56, "name": "MetaSelect"}, {"value": 56, "name": "MetaTxnAbort"}, {"value": 56, "name": "MetaTxnBegin"}, {"value": 56, "name": "MetaTxnCommit"}, {"value": 56, "name": "MetaTxnRollback"}, {"value": 56, "name": "MetaUpdate"}, {"value": 8, "name": "MinLeaseDuration"}, {"value": 8, "name": "MinSchemaChangeLeaseDuration"}, {"value": 309, "name": "MustGetDatabaseDesc"}, {"value": 6949, "name": "NewExecutor"}, {"value": 1021, "name": "NewLeaseManager"}, {"value": 825, "name": "NewSchemaChangeManager"}, {"value": 2762, "name": "NewSession"}, {"value": 812, "name": "NormalizeAndValidateUsername"}, {"children": [{"value": 351, "name": "Delete"}, {"value": 101, "name": "Exists"}, {"value": 114, "name": "Get"}, {"value": 721, "name": "New"}], "name": "PreparedPortals."}, {"children": [{"value": 702, "name": "Delete"}, {"value": 101, "name": "Exists"}, {"value": 114, "name": "Get"}, {"value": 683, "name": "New"}, {"value": 458, "name": "closeAll"}], "name": "PreparedStatements."}, {"value": 1243, "name": "ProcessDefaultColumns"}, {"children": [{"value": 402, "name": "func1"}], "name": "ProcessDefaultColumns."}, {"children": [{"value": 226, "name": "Close"}], "name": "ResultList."}, {"children": [{"value": 219, "name": "AddRow"}, {"value": 122, "name": "At"}, {"value": 102, "name": "Clear"}, {"value": 102, "name": "Close"}, {"value": 46, "name": "Len"}, {"value": 82, "name": "PopFirst"}, {"value": 190, "name": "Replace"}, {"value": 102, "name": "Swap"}], "name": "RowBuffer."}, {"value": 8, "name": "SQLStatsCollectionLatencyThreshold"}, {"value": 8, "name": "SchemaChangeLeaseDuration"}, {"value": 8, "name": "StmtStatsEnable"}, {"children": [{"value": 14, "name": "ClearSchemaChangers"}], "name": "TestingSchemaChangerCollection."}, {"children": [{"value": 305, "name": "String"}], "name": "TxnStateEnum."}, {"children": [{"value": 90, "name": "Clear"}, {"value": 90, "name": "Close"}, {"value": 120, "name": "Grow"}, {"value": 120, "name": "OpenAndInit"}, {"value": 139, "name": "ResizeItem"}], "name": "WrappedMemoryAccount."}, {"value": 670, "name": "_JobPayload_OneofMarshaler"}, {"value": 671, "name": "_JobPayload_OneofSizer"}, {"value": 797, "name": "_JobPayload_OneofUnmarshaler"}, {"value": 6, "name": "_TxnStateEnum_index"}, {"value": 1480, "name": "addIndexForFK"}, {"value": 2176, "name": "addInterleave"}, {"value": 696, "name": "addOrMergeExpr"}, {"children": [{"value": 313, "name": "extract"}], "name": "aggExprVisitor."}, {"value": 149, "name": "allColumns"}, {"children": [{"value": 6, "name": "InSameGroup"}], "name": "allPeers."}, {"value": 536, "name": "analyzeExpr"}, {"value": 40, "name": "anonymousTable"}, {"value": 637, "name": "appendUnselectedColumns"}, {"value": 674, "name": "applyColumnMutation"}, {"value": 1490, "name": "applyConstraint"}, {"value": 3204, "name": "applyConstraintFlat"}, {"children": [{"value": 212, "name": "func1"}, {"value": 212, "name": "func2"}, {"value": 212, "name": "func3"}], "name": "applyConstraintFlat."}, {"value": 3012, "name": "applyInConstraint"}, {"value": 1224, "name": "applyIndexConstraints"}, {"value": 5003, "name": "applyLimit"}, {"value": 8, "name": "blacklistedUsernames"}, {"value": 462, "name": "canDeleteWithoutScan"}, {"value": 211, "name": "characterMaximumLength"}, {"value": 211, "name": "characterOctetLength"}, {"value": 455, "name": "checkDBExists"}, {"children": [{"value": 270, "name": "check"}], "name": "checkQueryVisitor."}, {"value": 950, "name": "checkRenderStar"}, {"value": 2318, "name": "checkResultType"}, {"value": 587, "name": "checkTableExists"}, {"value": 1069, "name": "checkTablePrivileges"}, {"value": 483, "name": "colIDArrayToDatum"}, {"value": 406, "name": "colIDArrayToVector"}, {"value": 515, "name": "colNames"}, {"value": 522, "name": "collectSubquerySpans"}, {"value": 501, "name": "collectTableWriterSpans"}, {"value": 617, "name": "commitSQLTransaction"}, {"value": 942, "name": "commonColumns"}, {"value": 8, "name": "conTypeCheck"}, {"value": 8, "name": "conTypeExclusion"}, {"value": 8, "name": "conTypeFK"}, {"value": 8, "name": "conTypePKey"}, {"value": 8, "name": "conTypeTrigger"}, {"value": 8, "name": "conTypeUnique"}, {"value": 1315, "name": "constructWindowDef"}, {"value": 404, "name": "containsOrderingFunction"}, {"children": [{"value": 192, "name": "func1"}], "name": "containsOrderingFunction."}, {"value": 305, "name": "convertToErrWithPGCode"}, {"value": 327, "name": "countRowsAffected"}, {"value": 161, "name": "dIntFnOrNull"}, {"value": 132, "name": "dNameOrNull"}, {"value": 197, "name": "dStringForIndexDirection"}, {"value": 8, "name": "datEncodingEnUTF8"}, {"value": 8, "name": "datEncodingUTFId"}, {"children": [{"value": 108, "name": "Key"}, {"value": 21, "name": "Name"}], "name": "databaseKey."}, {"value": 8, "name": "datumToTypeCategory"}, {"value": 24, "name": "debugColumns"}, {"value": 1, "name": "debugTrace7881Enabled"}, {"children": [{"value": 419, "name": "String"}], "name": "debugValueType."}, {"value": 806, "name": "decimalToHLC"}, {"value": 2219, "name": "decodeCopy"}, {"value": 8, "name": "decodeMap"}, {"value": 8, "name": "defString"}, {"value": 8, "name": "depTypeAuto"}, {"value": 8, "name": "depTypeAutoExtension"}, {"value": 8, "name": "depTypeExtension"}, {"value": 8, "name": "depTypeInternal"}, {"value": 8, "name": "depTypeNormal"}, {"value": 8, "name": "depTypePin"}, {"value": 347, "name": "descExists"}, {"value": 55, "name": "descInSlice"}, {"children": [{"value": 306, "name": "Error"}], "name": "descriptorAlreadyExistsErr."}, {"value": 1, "name": "distributeIndexJoin"}, {"value": 12939, "name": "doExpandPlan"}, {"children": [{"value": 109, "name": "Eval"}, {"value": 104, "name": "Format"}, {"value": 21, "name": "ResolvedType"}, {"value": 173, "name": "String"}, {"value": 136, "name": "TypeCheck"}, {"value": 112, "name": "Walk"}], "name": "dummyColumnItem."}, {"value": 1706, "name": "dumpStmtStats"}, {"value": 8, "name": "dumpStmtStatsToLogBeforeReset"}, {"value": 8, "name": "emptyPrivileges"}, {"value": 8, "name": "emptyString"}, {"value": 1, "name": "enableParallelStmts"}, {"value": 813, "name": "encodeEndConstraintAscending"}, {"value": 823, "name": "encodeEndConstraintDescending"}, {"value": 617, "name": "encodeLogicalKeyPart"}, {"value": 823, "name": "encodeStartConstraintAscending"}, {"value": 813, "name": "encodeStartConstraintDescending"}, {"value": 122, "name": "encodeVarintJobs"}, {"value": 16, "name": "errDidntUpdateDescriptor"}, {"value": 16, "name": "errEmptyColumnName"}, {"value": 16, "name": "errEmptyDatabaseName"}, {"value": 16, "name": "errEmptyIndexName"}, {"value": 16, "name": "errExistingSchemaChangeLease"}, {"value": 16, "name": "errNoDatabase"}, {"value": 16, "name": "errNoTable"}, {"value": 16, "name": "errNoTransactionInProgress"}, {"value": 16, "name": "errStaleMetadata"}, {"value": 16, "name": "errTableAdding"}, {"value": 16, "name": "errTableDropped"}, {"value": 16, "name": "errTransactionInProgress"}, {"value": 224, "name": "errWrongNumberOfPreparedStatements"}, {"children": [{"value": 315, "name": "emitLeft"}, {"value": 232, "name": "emitRight"}], "name": "exceptNodeEmitAll."}, {"children": [{"value": 239, "name": "emitLeft"}, {"value": 232, "name": "emitRight"}], "name": "exceptNodeEmitDistinct."}, {"value": 3500, "name": "expandConstraint"}, {"value": 1224, "name": "expandRenderNode"}, {"value": 441, "name": "expandScanNode"}, {"children": [{"value": 158, "name": "func1"}], "name": "expandScanNode."}, {"value": 987, "name": "expandTableGlob"}, {"value": 185, "name": "expectDeleted"}, {"value": 446, "name": "expectDescriptor"}, {"value": 332, "name": "expectDescriptorID"}, {"value": 24, "name": "explainDistSQLColumns"}, {"value": 8, "name": "explainStrings"}, {"value": 190, "name": "exprCheckVars"}, {"value": 317, "name": "exprConvertVars"}, {"children": [{"value": 361, "name": "extract"}], "name": "extractAggregatesVisitor."}, {"value": 1055, "name": "extractInsertSource"}, {"children": [{"value": 424, "name": "extract"}], "name": "extractWindowFuncsVisitor."}, {"value": 24, "name": "fieldDelim"}, {"value": 24, "name": "fileDescriptorJobs"}, {"value": 149, "name": "fillColumnRange"}, {"value": 305, "name": "fillDefault"}, {"value": 1627, "name": "fillDefaults"}, {"value": 1300, "name": "filterColumns"}, {"value": 351, "name": "filterTableState"}, {"value": 206, "name": "finishInternalPlanner"}, {"value": 8, "name": "fkActionCascade"}, {"value": 8, "name": "fkActionNone"}, {"value": 8, "name": "fkActionRestrict"}, {"value": 8, "name": "fkActionSetDefault"}, {"value": 8, "name": "fkActionSetNull"}, {"value": 8, "name": "fkMatchTypeFull"}, {"value": 8, "name": "fkMatchTypePartial"}, {"value": 8, "name": "fkMatchTypeSimple"}, {"value": 742, "name": "forEachColumnInIndex"}, {"value": 224, "name": "forEachColumnInTable"}, {"value": 918, "name": "forEachDatabaseDesc"}, {"value": 317, "name": "forEachIndexInTable"}, {"value": 144, "name": "forEachTableDesc"}, {"children": [{"value": 94, "name": "func1"}], "name": "forEachTableDesc."}, {"value": 4719, "name": "forEachTableDescWithTableLookup"}, {"children": [{"value": 300, "name": "func1"}], "name": "forEachTableDescWithTableLookup."}, {"value": 845, "name": "forEachUser"}, {"value": 866, "name": "formatColumns"}, {"children": [{"value": 146, "name": "func1"}], "name": "formatColumns."}, {"value": 545, "name": "getAllDatabaseDescs"}, {"value": 1574, "name": "getAllDescriptors"}, {"value": 92, "name": "getColVarIdx"}, {"value": 455, "name": "getDatabaseDesc"}, {"value": 1017, "name": "getDefaultValuesClause"}, {"value": 2013, "name": "getDescriptor"}, {"value": 2024, "name": "getDescriptorsFromTargetList"}, {"value": 311, "name": "getKeysForDatabaseDescriptor"}, {"value": 387, "name": "getOutputColumnsFromScanNode"}, {"value": 779, "name": "getRenderColName"}, {"value": 667, "name": "getRowKey"}, {"value": 337, "name": "getTableDesc"}, {"value": 974, "name": "getTableID"}, {"value": 1499, "name": "getTableNames"}, {"value": 953, "name": "getTableOrViewDesc"}, {"value": 95, "name": "getTransactionState"}, {"value": 965, "name": "getTypesForPlanResult"}, {"value": 337, "name": "getViewDesc"}, {"children": [{"value": 2507, "name": "func1"}, {"value": 144, "name": "func10"}, {"children": [{"value": 1305, "name": "1"}], "name": "func10."}, {"value": 144, "name": "func11"}, {"children": [{"value": 336, "name": "1"}, {"children": [{"value": 2111, "name": "1"}, {"value": 1513, "name": "2"}], "name": "1."}], "name": "func11."}, {"value": 144, "name": "func12"}, {"children": [{"value": 1872, "name": "1"}], "name": "func12."}, {"value": 144, "name": "func13"}, {"children": [{"value": 1675, "name": "1"}], "name": "func13."}, {"value": 144, "name": "func14"}, {"children": [{"value": 876, "name": "1"}], "name": "func14."}, {"value": 144, "name": "func15"}, {"children": [{"value": 1274, "name": "1"}], "name": "func15."}, {"value": 654, "name": "func17"}, {"value": 207, "name": "func18"}, {"children": [{"value": 216, "name": "1"}, {"children": [{"value": 899, "name": "1"}], "name": "1."}], "name": "func18."}, {"value": 207, "name": "func19"}, {"children": [{"value": 612, "name": "1"}, {"children": [{"value": 2213, "name": "1"}, {"value": 194, "name": "2"}, {"value": 219, "name": "3"}, {"children": [{"value": 203, "name": "1"}], "name": "3."}], "name": "1."}], "name": "func19."}, {"value": 3844, "name": "func2"}, {"value": 207, "name": "func20"}, {"children": [{"value": 2807, "name": "1"}, {"children": [{"value": 2375, "name": "1"}], "name": "1."}], "name": "func20."}, {"value": 1254, "name": "func21"}, {"value": 207, "name": "func22"}, {"children": [{"value": 6082, "name": "1"}], "name": "func22."}, {"value": 207, "name": "func23"}, {"children": [{"value": 1235, "name": "1"}], "name": "func23."}, {"value": 1257, "name": "func24"}, {"children": [{"value": 1799, "name": "1"}], "name": "func24."}, {"value": 19, "name": "func25"}, {"value": 19, "name": "func26"}, {"value": 19, "name": "func27"}, {"value": 19, "name": "func28"}, {"value": 19, "name": "func29"}, {"value": 1055, "name": "func3"}, {"children": [{"value": 1579, "name": "1"}], "name": "func3."}, {"value": 207, "name": "func30"}, {"children": [{"value": 289, "name": "1"}, {"children": [{"value": 2558, "name": "1"}], "name": "1."}], "name": "func30."}, {"value": 253, "name": "func31"}, {"children": [{"value": 223, "name": "1"}, {"children": [{"value": 1101, "name": "1"}], "name": "1."}], "name": "func31."}, {"value": 19, "name": "func32"}, {"value": 207, "name": "func33"}, {"children": [{"value": 567, "name": "1"}], "name": "func33."}, {"value": 6703, "name": "func34"}, {"value": 19, "name": "func35"}, {"value": 207, "name": "func36"}, {"children": [{"value": 1559, "name": "1"}], "name": "func36."}, {"value": 1981, "name": "func37"}, {"value": 144, "name": "func38"}, {"children": [{"value": 887, "name": "1"}], "name": "func38."}, {"value": 5598, "name": "func39"}, {"value": 3101, "name": "func4"}, {"value": 144, "name": "func40"}, {"children": [{"value": 688, "name": "1"}], "name": "func40."}, {"value": 19, "name": "func41"}, {"value": 19, "name": "func42"}, {"value": 19, "name": "func43"}, {"value": 479, "name": "func44"}, {"value": 28, "name": "func45"}, {"value": 121, "name": "func46"}, {"value": 931, "name": "func47"}, {"value": 86, "name": "func48"}, {"value": 35, "name": "func49"}, {"value": 5796, "name": "func5"}, {"value": 947, "name": "func50"}, {"value": 88, "name": "func51"}, {"value": 160, "name": "func52"}, {"value": 1330, "name": "func53"}, {"value": 127, "name": "func54"}, {"value": 139, "name": "func55"}, {"value": 565, "name": "func56"}, {"value": 22, "name": "func57"}, {"value": 19, "name": "func58"}, {"value": 227, "name": "func59"}, {"value": 2913, "name": "func6"}, {"children": [{"value": 257, "name": "1"}], "name": "func6."}, {"value": 27, "name": "func60"}, {"value": 100, "name": "func61"}, {"value": 180, "name": "func62"}, {"value": 95, "name": "func63"}, {"value": 99, "name": "func64"}, {"value": 106, "name": "func65"}, {"value": 22, "name": "func66"}, {"value": 22, "name": "func67"}, {"value": 28, "name": "func68"}, {"value": 22, "name": "func69"}, {"value": 144, "name": "func7"}, {"children": [{"value": 197, "name": "1"}, {"children": [{"value": 2407, "name": "1"}], "name": "1."}], "name": "func7."}, {"value": 568, "name": "func70"}, {"value": 543, "name": "func71"}, {"value": 144, "name": "func8"}, {"children": [{"value": 2808, "name": "1"}], "name": "func8."}, {"value": 144, "name": "func9"}, {"children": [{"value": 510, "name": "1"}], "name": "func9."}], "name": "glob."}, {"value": 2702, "name": "golangFillQueryArguments"}, {"value": 2070, "name": "hoistConstraints"}, {"children": [{"value": 548, "name": "String"}], "name": "indexConstraint."}, {"children": [{"value": 453, "name": "String"}, {"value": 331, "name": "exactPrefix"}, {"value": 1824, "name": "exactPrefixDatums"}], "name": "indexConstraints."}, {"value": 1989, "name": "indexDefFromDescriptor"}, {"value": 8, "name": "indexDirectionAsc"}, {"value": 8, "name": "indexDirectionDesc"}, {"value": 8, "name": "indexDirectionNA"}, {"children": [{"value": 11, "name": "Len"}, {"value": 87, "name": "Less"}, {"value": 126, "name": "Sort"}, {"value": 202, "name": "Swap"}], "name": "indexInfoByCost."}, {"value": 26711, "name": "init"}, {"children": [{"value": 100, "name": "1"}, {"value": 191, "name": "2"}, {"value": 210, "name": "3"}, {"value": 371, "name": "4"}], "name": "init."}, {"value": 591, "name": "initBackfillerSpec"}, {"value": 971, "name": "initTableReaderSpec"}, {"value": 483, "name": "initVirtualTableDesc"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 315, "name": "emitLeft"}, {"value": 232, "name": "emitRight"}], "name": "intersectNodeEmitAll."}, {"children": [{"value": 252, "name": "emitLeft"}, {"value": 232, "name": "emitRight"}], "name": "intersectNodeEmitDistinct."}, {"value": 987, "name": "intersectSorted"}, {"value": 702, "name": "isAsOf"}, {"value": 8, "name": "isUnique"}, {"value": 366, "name": "isVar"}, {"value": 80, "name": "isVirtualDescriptor"}, {"value": 109, "name": "jitteredLeaseDuration"}, {"value": 162, "name": "jobTimestamp"}, {"value": 112, "name": "joinAndExprs"}, {"children": [{"value": 347, "name": "func1"}], "name": "joinAndExprs."}, {"value": 363, "name": "joinExprs"}, {"value": 112, "name": "joinOrExprs"}, {"children": [{"value": 347, "name": "func1"}], "name": "joinOrExprs."}, {"value": 482, "name": "labeledRowValues"}, {"value": 1, "name": "logPlanDiagram"}, {"value": 8, "name": "logStatementsExecuteEnabled"}, {"value": 2040, "name": "lookupRangeDescriptor"}, {"value": 2092, "name": "makeCheckConstraint"}, {"children": [{"value": 1179, "name": "func1"}], "name": "makeCheckConstraint."}, {"value": 207, "name": "makeCrossPredicate"}, {"value": 7793, "name": "makeEqualityPredicate"}, {"children": [{"value": 901, "name": "func1"}, {"value": 1029, "name": "func2"}], "name": "makeEqualityPredicate."}, {"value": 690, "name": "makeIndexColNames"}, {"value": 2489, "name": "makeInternalPlanner"}, {"value": 168, "name": "makeIsNotNull"}, {"value": 2012, "name": "makeLogicalSpansForIndexConstraints"}, {"value": 150, "name": "makePlanToStreamColMap"}, {"value": 1022, "name": "makePrefixRange"}, {"value": 900, "name": "makeRes"}, {"value": 1084, "name": "makeSpans"}, {"value": 1601, "name": "makeTableDescIfAs"}, {"value": 98, "name": "makeTableNameCacheKey"}, {"value": 821, "name": "makeUsingPredicate"}, {"value": 90, "name": "markOmitted"}, {"value": 159, "name": "matchesIndex"}, {"value": 1686, "name": "mergeAndSortSpans"}, {"value": 1862, "name": "mergeSorted"}, {"children": [{"value": 2013, "name": "checkDatabaseName"}, {"value": 2020, "name": "findColumn"}, {"children": [{"value": 510, "name": "func1"}], "name": "findColumn."}], "name": "multiSourceInfo."}, {"value": 383, "name": "mustGetTableDesc"}, {"value": 383, "name": "mustGetTableOrViewDesc"}, {"value": 383, "name": "mustGetViewDesc"}, {"value": 203, "name": "nameMatchesLease"}, {"value": 8, "name": "negOneVal"}, {"value": 1186, "name": "newDistSQLPlanner"}, {"value": 166, "name": "newSortTopKStrategy"}, {"value": 604, "name": "newSourceInfoForSingleTable"}, {"value": 296, "name": "nextInDirection"}, {"value": 32, "name": "noParams"}, {"value": 8, "name": "noString"}, {"value": 947, "name": "nodeName"}, {"value": 24, "name": "nopVar"}, {"value": 8, "name": "noteworthyInternalMemoryUsageBytes"}, {"value": 8, "name": "noteworthyMemoryUsageBytes"}, {"value": 211, "name": "numericPrecision"}, {"value": 211, "name": "numericScale"}, {"children": [{"value": 226, "name": "BuiltinOid"}, {"value": 218, "name": "CheckConstraintOid"}, {"value": 160, "name": "CollationOid"}, {"value": 218, "name": "ColumnOid"}, {"value": 146, "name": "DBOid"}, {"value": 218, "name": "ForeignKeyConstraintOid"}, {"value": 218, "name": "IndexOid"}, {"value": 160, "name": "NamespaceOid"}, {"value": 218, "name": "PrimaryKeyConstraintOid"}, {"value": 356, "name": "RegProc"}, {"value": 184, "name": "TableOid"}, {"value": 218, "name": "UniqueConstraintOid"}, {"value": 160, "name": "UserOid"}, {"value": 266, "name": "getOid"}, {"value": 142, "name": "writeCheckConstraint"}, {"value": 128, "name": "writeColumn"}, {"value": 128, "name": "writeDB"}, {"value": 171, "name": "writeForeignKeyReference"}, {"value": 82, "name": "writeIndex"}, {"value": 173, "name": "writeStr"}, {"value": 128, "name": "writeTable"}, {"value": 79, "name": "writeTypeTag"}, {"value": 298, "name": "writeUInt32"}, {"value": 299, "name": "writeUInt8"}], "name": "oidHasher."}, {"value": 8, "name": "oidZero"}, {"children": [{"value": 380, "name": "String"}, {"value": 837, "name": "exactPrefix"}], "name": "orIndexConstraints."}, {"value": 8, "name": "orderingFunctions"}, {"children": [{"value": 297, "name": "AsString"}, {"value": 1478, "name": "Format"}, {"value": 298, "name": "computeMatch"}, {"value": 766, "name": "reverse"}], "name": "orderingInfo."}, {"value": 24, "name": "orderingTerminated"}, {"value": 658, "name": "pgNamespaceForDB"}, {"value": 8, "name": "pgNamespaceInformationSchema"}, {"value": 8, "name": "pgNamespacePGCatalog"}, {"value": 8, "name": "pgNamespaceSystem"}, {"value": 24, "name": "pgNamespaces"}, {"value": 800, "name": "pickUsingColumn"}, {"value": 24, "name": "planHooks"}, {"value": 8, "name": "planNodeNames"}, {"value": 799, "name": "planToString"}, {"children": [{"value": 1424, "name": "func1"}], "name": "planToString."}, {"value": 8, "name": "proArgModeIn"}, {"value": 8, "name": "proArgModeInOut"}, {"value": 8, "name": "proArgModeOut"}, {"value": 8, "name": "proArgModeTable"}, {"value": 8, "name": "proArgModeVariadic"}, {"value": 514, "name": "queryInfoSchema"}, {"children": [{"value": 453, "name": "func1"}], "name": "queryInfoSchema."}, {"value": 351, "name": "quoteNames"}, {"value": 513, "name": "rangeGroupFromSpans"}, {"value": 8, "name": "relKindIndex"}, {"value": 8, "name": "relKindTable"}, {"value": 8, "name": "relKindView"}, {"value": 8, "name": "removeLeaseSem"}, {"value": 492, "name": "removeMatchingReferences"}, {"value": 5682, "name": "resolveFK"}, {"value": 721, "name": "rollbackSQLTransaction"}, {"value": 290, "name": "runInDB"}, {"value": 1237, "name": "runShowTransactionState"}, {"value": 457, "name": "runTxnAttempt"}, {"children": [{"value": 450, "name": "run"}], "name": "runnerRequest."}, {"children": [{"value": 233, "name": "checkColumnTypes"}, {"value": 113, "name": "extractValues"}], "name": "scalarSlot."}, {"value": 2804, "name": "scanMetaKVs"}, {"value": 686, "name": "scrubStmtStatKey"}, {"children": [{"value": 231, "name": "func1"}], "name": "scrubStmtStatKey."}, {"value": 522, "name": "sessionEventf"}, {"value": 7558, "name": "setNeededColumns"}, {"value": 90, "name": "setUnlimited"}, {"value": 8, "name": "settingsCtxUser"}, {"value": 24, "name": "showRangesColumns"}, {"value": 2270, "name": "simplifyAndExpr"}, {"value": 2586, "name": "simplifyComparisonExpr"}, {"value": 912, "name": "simplifyExpr"}, {"value": 3147, "name": "simplifyNotExpr"}, {"value": 9993, "name": "simplifyOneAndExpr"}, {"value": 4127, "name": "simplifyOneAndInExpr"}, {"value": 11078, "name": "simplifyOneOrExpr"}, {"value": 2753, "name": "simplifyOneOrInExpr"}, {"value": 2275, "name": "simplifyOrExpr"}, {"value": 9226, "name": "simplifyOrderings"}, {"value": 1621, "name": "skipJobs"}, {"children": [{"value": 11, "name": "Len"}, {"value": 147, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "sortedDBDescs."}, {"children": [{"value": 270, "name": "columnRange"}, {"value": 333, "name": "srcIdx"}], "name": "sourceAliases."}, {"value": 34, "name": "sovJobs"}, {"children": [{"value": 11, "name": "Len"}, {"value": 251, "name": "Less"}, {"value": 311, "name": "Swap"}], "name": "spanEvents."}, {"value": 2136, "name": "spanFromLogicalSpan"}, {"value": 2190, "name": "spansFromLogicalSpans"}, {"value": 673, "name": "splitAndExpr"}, {"value": 6551, "name": "splitBoolExpr"}, {"value": 340, "name": "splitFilter"}, {"value": 673, "name": "splitOrExpr"}, {"value": 24, "name": "statictmp_10010"}, {"value": 24, "name": "statictmp_10011"}, {"value": 16, "name": "statictmp_10012"}, {"value": 16, "name": "statictmp_10048"}, {"value": 24, "name": "statictmp_10462"}, {"value": 136, "name": "statictmp_10975"}, {"value": 4352, "name": "statictmp_11059"}, {"value": 16, "name": "statictmp_11119"}, {"value": 48, "name": "statictmp_11183"}, {"value": 112, "name": "statictmp_11209"}, {"value": 112, "name": "statictmp_11221"}, {"value": 16, "name": "statictmp_11222"}, {"value": 112, "name": "statictmp_11229"}, {"value": 160, "name": "statictmp_11475"}, {"value": 80, "name": "statictmp_11522"}, {"value": 200, "name": "statictmp_11540"}, {"value": 80, "name": "statictmp_11575"}, {"value": 80, "name": "statictmp_11761"}, {"value": 120, "name": "statictmp_11775"}, {"value": 320, "name": "statictmp_11786"}, {"value": 200, "name": "statictmp_11802"}, {"value": 40, "name": "statictmp_11813"}, {"value": 160, "name": "statictmp_11825"}, {"value": 40, "name": "statictmp_11897"}, {"value": 40, "name": "statictmp_12038"}, {"value": 80, "name": "statictmp_12168"}, {"value": 40, "name": "statictmp_12172"}, {"value": 88, "name": "statictmp_12243"}, {"value": 88, "name": "statictmp_12247"}, {"value": 80, "name": "statictmp_12302"}, {"value": 40, "name": "statictmp_12306"}, {"value": 40, "name": "statictmp_12338"}, {"value": 40, "name": "statictmp_12344"}, {"value": 120, "name": "statictmp_12362"}, {"value": 40, "name": "statictmp_12379"}, {"value": 40, "name": "statictmp_13104"}, {"value": 40, "name": "statictmp_13105"}, {"value": 40, "name": "statictmp_13317"}, {"value": 48, "name": "statictmp_13318"}, {"value": 48, "name": "statictmp_13381"}, {"value": 40, "name": "statictmp_13481"}, {"value": 24, "name": "statictmp_13570"}, {"value": 24, "name": "statictmp_13576"}, {"value": 24, "name": "statictmp_13577"}, {"value": 40, "name": "statictmp_13803"}, {"value": 40, "name": "statictmp_13958"}, {"value": 40, "name": "statictmp_13997"}, {"value": 608, "name": "statictmp_14098"}, {"value": 40, "name": "statictmp_14100"}, {"value": 40, "name": "statictmp_14103"}, {"value": 40, "name": "statictmp_14111"}, {"value": 40, "name": "statictmp_14119"}, {"value": 32, "name": "statictmp_14123"}, {"value": 32, "name": "statictmp_14124"}, {"value": 40, "name": "statictmp_14520"}, {"value": 136, "name": "statictmp_14711"}, {"value": 16, "name": "statictmp_15346"}, {"value": 4512, "name": "statictmp_15414"}, {"value": 96, "name": "statictmp_16149"}, {"value": 48, "name": "statictmp_16542"}, {"value": 32, "name": "statictmp_16599"}, {"value": 72, "name": "statictmp_1724"}, {"value": 72, "name": "statictmp_1725"}, {"value": 40, "name": "statictmp_1730"}, {"value": 1, "name": "statictmp_17336"}, {"value": 160, "name": "statictmp_17337"}, {"value": 32, "name": "statictmp_17338"}, {"value": 160, "name": "statictmp_17339"}, {"value": 120, "name": "statictmp_17341"}, {"value": 422, "name": "statictmp_17343"}, {"value": 48, "name": "statictmp_17344"}, {"value": 48, "name": "statictmp_17345"}, {"value": 48, "name": "statictmp_17346"}, {"value": 24, "name": "statictmp_17348"}, {"value": 120, "name": "statictmp_17349"}, {"value": 216, "name": "statictmp_17350"}, {"value": 576, "name": "statictmp_17351"}, {"value": 144, "name": "statictmp_17352"}, {"value": 24, "name": "statictmp_17353"}, {"value": 7, "name": "statictmp_17451"}, {"value": 7, "name": "statictmp_17452"}, {"value": 1, "name": "statictmp_17456"}, {"value": 16, "name": "statictmp_17457"}, {"value": 32, "name": "statictmp_17542"}, {"value": 64, "name": "statictmp_17543"}, {"value": 200, "name": "statictmp_17547"}, {"value": 24, "name": "statictmp_17554"}, {"value": 48, "name": "statictmp_17555"}, {"value": 24, "name": "statictmp_1968"}, {"value": 40, "name": "statictmp_1986"}, {"value": 48, "name": "statictmp_1990"}, {"value": 72, "name": "statictmp_2021"}, {"value": 40, "name": "statictmp_2035"}, {"value": 48, "name": "statictmp_2039"}, {"value": 40, "name": "statictmp_2088"}, {"value": 48, "name": "statictmp_2092"}, {"value": 40, "name": "statictmp_2161"}, {"value": 48, "name": "statictmp_2165"}, {"value": 16, "name": "statictmp_2228"}, {"value": 24, "name": "statictmp_2260"}, {"value": 40, "name": "statictmp_2300"}, {"value": 48, "name": "statictmp_2304"}, {"value": 608, "name": "statictmp_2491"}, {"value": 608, "name": "statictmp_2505"}, {"value": 608, "name": "statictmp_2540"}, {"value": 24, "name": "statictmp_2786"}, {"value": 24, "name": "statictmp_2787"}, {"value": 24, "name": "statictmp_2792"}, {"value": 24, "name": "statictmp_2795"}, {"value": 24, "name": "statictmp_2832"}, {"value": 24, "name": "statictmp_2833"}, {"value": 24, "name": "statictmp_2835"}, {"value": 24, "name": "statictmp_2849"}, {"value": 24, "name": "statictmp_2854"}, {"value": 24, "name": "statictmp_2866"}, {"value": 24, "name": "statictmp_2874"}, {"value": 24, "name": "statictmp_2885"}, {"value": 24, "name": "statictmp_2895"}, {"value": 24, "name": "statictmp_2908"}, {"value": 24, "name": "statictmp_2911"}, {"value": 24, "name": "statictmp_2912"}, {"value": 24, "name": "statictmp_2916"}, {"value": 24, "name": "statictmp_2920"}, {"value": 40, "name": "statictmp_2975"}, {"value": 40, "name": "statictmp_2979"}, {"value": 40, "name": "statictmp_2989"}, {"value": 40, "name": "statictmp_2992"}, {"value": 40, "name": "statictmp_3016"}, {"value": 40, "name": "statictmp_3020"}, {"value": 40, "name": "statictmp_3024"}, {"value": 40, "name": "statictmp_3147"}, {"value": 40, "name": "statictmp_3161"}, {"value": 40, "name": "statictmp_3177"}, {"value": 40, "name": "statictmp_3232"}, {"value": 16, "name": "statictmp_3472"}, {"value": 648, "name": "statictmp_3606"}, {"value": 104, "name": "statictmp_3607"}, {"value": 24, "name": "statictmp_3620"}, {"value": 144, "name": "statictmp_3640"}, {"value": 144, "name": "statictmp_3641"}, {"value": 56, "name": "statictmp_3650"}, {"value": 24, "name": "statictmp_3654"}, {"value": 680, "name": "statictmp_3673"}, {"value": 144, "name": "statictmp_3679"}, {"value": 144, "name": "statictmp_3680"}, {"value": 56, "name": "statictmp_3689"}, {"value": 104, "name": "statictmp_3722"}, {"value": 104, "name": "statictmp_3819"}, {"value": 104, "name": "statictmp_3847"}, {"value": 56, "name": "statictmp_3873"}, {"value": 24, "name": "statictmp_3875"}, {"value": 24, "name": "statictmp_3877"}, {"value": 144, "name": "statictmp_3932"}, {"value": 144, "name": "statictmp_4006"}, {"value": 144, "name": "statictmp_4007"}, {"value": 56, "name": "statictmp_4039"}, {"value": 56, "name": "statictmp_4048"}, {"value": 24, "name": "statictmp_4058"}, {"value": 24, "name": "statictmp_4059"}, {"value": 24, "name": "statictmp_4060"}, {"value": 144, "name": "statictmp_4086"}, {"value": 144, "name": "statictmp_4087"}, {"value": 144, "name": "statictmp_4088"}, {"value": 144, "name": "statictmp_4089"}, {"value": 144, "name": "statictmp_4090"}, {"value": 144, "name": "statictmp_4091"}, {"value": 144, "name": "statictmp_4092"}, {"value": 144, "name": "statictmp_4095"}, {"value": 144, "name": "statictmp_4106"}, {"value": 104, "name": "statictmp_4112"}, {"value": 104, "name": "statictmp_4113"}, {"value": 104, "name": "statictmp_4114"}, {"value": 104, "name": "statictmp_4132"}, {"value": 32, "name": "statictmp_4138"}, {"value": 64, "name": "statictmp_4191"}, {"value": 40, "name": "statictmp_4364"}, {"value": 48, "name": "statictmp_4368"}, {"value": 96, "name": "statictmp_4444"}, {"value": 40, "name": "statictmp_4466"}, {"value": 48, "name": "statictmp_4470"}, {"value": 40, "name": "statictmp_4532"}, {"value": 48, "name": "statictmp_4536"}, {"value": 32, "name": "statictmp_4634"}, {"value": 40, "name": "statictmp_4660"}, {"value": 48, "name": "statictmp_4664"}, {"value": 40, "name": "statictmp_4883"}, {"value": 48, "name": "statictmp_5056"}, {"value": 40, "name": "statictmp_5261"}, {"value": 80, "name": "statictmp_5284"}, {"value": 80, "name": "statictmp_5288"}, {"value": 80, "name": "statictmp_5291"}, {"value": 80, "name": "statictmp_5292"}, {"value": 80, "name": "statictmp_5293"}, {"value": 80, "name": "statictmp_5299"}, {"value": 80, "name": "statictmp_5360"}, {"value": 80, "name": "statictmp_5361"}, {"value": 80, "name": "statictmp_5366"}, {"value": 80, "name": "statictmp_5368"}, {"value": 80, "name": "statictmp_5369"}, {"value": 80, "name": "statictmp_5373"}, {"value": 80, "name": "statictmp_5374"}, {"value": 80, "name": "statictmp_5375"}, {"value": 80, "name": "statictmp_5379"}, {"value": 16, "name": "statictmp_5381"}, {"value": 80, "name": "statictmp_5382"}, {"value": 80, "name": "statictmp_5388"}, {"value": 80, "name": "statictmp_5394"}, {"value": 80, "name": "statictmp_5400"}, {"value": 80, "name": "statictmp_5406"}, {"value": 80, "name": "statictmp_5412"}, {"value": 80, "name": "statictmp_5415"}, {"value": 80, "name": "statictmp_5418"}, {"value": 80, "name": "statictmp_5419"}, {"value": 80, "name": "statictmp_5424"}, {"value": 80, "name": "statictmp_5432"}, {"value": 80, "name": "statictmp_5468"}, {"value": 4512, "name": "statictmp_5478"}, {"value": 80, "name": "statictmp_5512"}, {"value": 80, "name": "statictmp_5527"}, {"value": 80, "name": "statictmp_5528"}, {"value": 80, "name": "statictmp_5529"}, {"value": 80, "name": "statictmp_5530"}, {"value": 80, "name": "statictmp_5532"}, {"value": 80, "name": "statictmp_5533"}, {"value": 32, "name": "statictmp_563"}, {"value": 16, "name": "statictmp_5634"}, {"value": 16, "name": "statictmp_5635"}, {"value": 16, "name": "statictmp_5653"}, {"value": 16, "name": "statictmp_5654"}, {"value": 16, "name": "statictmp_5655"}, {"value": 16, "name": "statictmp_5770"}, {"value": 40, "name": "statictmp_5977"}, {"value": 48, "name": "statictmp_6000"}, {"value": 40, "name": "statictmp_6001"}, {"value": 48, "name": "statictmp_6002"}, {"value": 160, "name": "statictmp_6021"}, {"value": 64, "name": "statictmp_6041"}, {"value": 80, "name": "statictmp_607"}, {"value": 40, "name": "statictmp_6096"}, {"value": 48, "name": "statictmp_6098"}, {"value": 40, "name": "statictmp_638"}, {"value": 40, "name": "statictmp_6381"}, {"value": 40, "name": "statictmp_6419"}, {"value": 48, "name": "statictmp_642"}, {"value": 40, "name": "statictmp_6580"}, {"value": 16, "name": "statictmp_6669"}, {"value": 48, "name": "statictmp_7362"}, {"value": 48, "name": "statictmp_7363"}, {"value": 48, "name": "statictmp_7372"}, {"value": 48, "name": "statictmp_7373"}, {"value": 40, "name": "statictmp_8031"}, {"value": 48, "name": "statictmp_8040"}, {"value": 8, "name": "statictmp_8122"}, {"value": 8, "name": "statictmp_8127"}, {"value": 8, "name": "statictmp_8133"}, {"value": 24, "name": "statictmp_8557"}, {"value": 24, "name": "statictmp_8566"}, {"value": 24, "name": "statictmp_8570"}, {"value": 40, "name": "statictmp_8593"}, {"value": 48, "name": "statictmp_8970"}, {"value": 48, "name": "statictmp_9011"}, {"value": 48, "name": "statictmp_9012"}, {"value": 24, "name": "statictmp_9092"}, {"value": 80, "name": "statictmp_9236"}, {"value": 40, "name": "statictmp_9244"}, {"value": 80, "name": "statictmp_9251"}, {"value": 48, "name": "statictmp_9333"}, {"value": 96, "name": "statictmp_9666"}, {"value": 40, "name": "statictmp_9962"}, {"value": 24, "name": "statictmp_9979"}, {"value": 112, "name": "statictmp_9989"}, {"value": 16, "name": "statictmp_9990"}, {"value": 112, "name": "statictmp_9996"}, {"value": 16, "name": "statictmp_9997"}, {"value": 237, "name": "stmtAllowedInImplicitTxn"}, {"children": [{"value": 168, "name": "String"}, {"value": 273, "name": "flags"}], "name": "stmtKey."}, {"children": [{"value": 180, "name": "AlterTable"}, {"value": 150, "name": "BeginTransaction"}, {"value": 148, "name": "CheckPrivilege"}, {"value": 179, "name": "CopyData"}, {"value": 180, "name": "CopyFrom"}, {"value": 150, "name": "CreateDatabase"}, {"value": 180, "name": "CreateIndex"}, {"value": 180, "name": "CreateTable"}, {"value": 180, "name": "CreateUser"}, {"value": 180, "name": "CreateView"}, {"value": 219, "name": "Delete"}, {"value": 259, "name": "Distinct"}, {"value": 180, "name": "DropDatabase"}, {"value": 180, "name": "DropIndex"}, {"value": 180, "name": "DropTable"}, {"value": 180, "name": "DropView"}, {"value": 56, "name": "ExecCfg"}, {"value": 180, "name": "Explain"}, {"value": 180, "name": "Grant"}, {"value": 180, "name": "Help"}, {"value": 219, "name": "Insert"}, {"value": 56, "name": "LeaseMgr"}, {"value": 167, "name": "Limit"}, {"value": 167, "name": "QualifyWithDatabase"}, {"value": 245, "name": "QueryRow"}, {"value": 180, "name": "Relocate"}, {"value": 180, "name": "RenameColumn"}, {"value": 180, "name": "RenameDatabase"}, {"value": 180, "name": "RenameIndex"}, {"value": 180, "name": "RenameTable"}, {"value": 137, "name": "RequireSuperUser"}, {"value": 180, "name": "Revoke"}, {"value": 163, "name": "Scan"}, {"value": 180, "name": "Scatter"}, {"value": 219, "name": "Select"}, {"value": 310, "name": "SelectClause"}, {"value": 180, "name": "Set"}, {"value": 150, "name": "SetDefaultIsolation"}, {"value": 150, "name": "SetTimeZone"}, {"value": 150, "name": "SetTransaction"}, {"value": 150, "name": "Show"}, {"value": 180, "name": "ShowColumns"}, {"value": 180, "name": "ShowConstraints"}, {"value": 180, "name": "ShowCreateTable"}, {"value": 180, "name": "ShowCreateView"}, {"value": 180, "name": "ShowDatabases"}, {"value": 180, "name": "ShowGrants"}, {"value": 180, "name": "ShowIndex"}, {"value": 180, "name": "ShowRanges"}, {"value": 180, "name": "ShowTables"}, {"value": 180, "name": "ShowUsers"}, {"value": 180, "name": "Split"}, {"value": 180, "name": "Truncate"}, {"value": 137, "name": "TypeAsString"}, {"value": 137, "name": "TypeAsStringArray"}, {"value": 219, "name": "UnionClause"}, {"value": 219, "name": "Update"}, {"value": 65, "name": "User"}, {"value": 219, "name": "ValuesClause"}, {"value": 137, "name": "anyPrivilege"}], "name": "subqueryVisitor."}, {"value": 141, "name": "symbolicExprStr"}, {"children": [{"value": 108, "name": "Key"}, {"value": 21, "name": "Name"}], "name": "tableKey."}, {"children": [{"value": 273, "name": "tableOrErr"}], "name": "tableLookupFn."}, {"value": 8, "name": "tableTypeBaseTable"}, {"value": 8, "name": "tableTypeSystemView"}, {"value": 8, "name": "tableTypeView"}, {"value": 1, "name": "testDisableTableLeases"}, {"value": 24, "name": "traceColumns"}, {"value": 24, "name": "traceColumnsWithTS"}, {"value": 24, "name": "traceOrdering"}, {"value": 8, "name": "traceSessionEventLogEnabled"}, {"value": 8, "name": "traceTxnThreshold"}, {"value": 573, "name": "translateOrdering"}, {"value": 935, "name": "truncateAndDropTable"}, {"children": [{"value": 476, "name": "func1"}, {"value": 529, "name": "func2"}], "name": "truncateAndDropTable."}, {"value": 842, "name": "truncateTable"}, {"value": 990, "name": "truncateTableInChunks"}, {"children": [{"value": 968, "name": "func1"}], "name": "truncateTableInChunks."}, {"children": [{"value": 473, "name": "checkColumnTypes"}, {"value": 168, "name": "extractValues"}], "name": "tupleSlot."}, {"value": 108, "name": "typByVal"}, {"value": 8, "name": "typCategoryArray"}, {"value": 8, "name": "typCategoryBitString"}, {"value": 8, "name": "typCategoryBoolean"}, {"value": 8, "name": "typCategoryComposite"}, {"value": 8, "name": "typCategoryDateTime"}, {"value": 8, "name": "typCategoryEnum"}, {"value": 8, "name": "typCategoryGeometric"}, {"value": 8, "name": "typCategoryNetworkAddr"}, {"value": 8, "name": "typCategoryNumeric"}, {"value": 8, "name": "typCategoryPseudo"}, {"value": 8, "name": "typCategoryRange"}, {"value": 8, "name": "typCategoryString"}, {"value": 8, "name": "typCategoryTimespan"}, {"value": 8, "name": "typCategoryUnknown"}, {"value": 8, "name": "typCategoryUserDefined"}, {"value": 545, "name": "typColl"}, {"value": 8, "name": "typDelim"}, {"value": 144, "name": "typLen"}, {"value": 258, "name": "typOid"}, {"value": 8, "name": "typTypeBase"}, {"value": 8, "name": "typTypeComposite"}, {"value": 8, "name": "typTypeDomain"}, {"value": 8, "name": "typTypeEnum"}, {"value": 8, "name": "typTypePseudo"}, {"value": 8, "name": "typTypeRange"}, {"children": [{"value": 231, "name": "emitLeft"}, {"value": 231, "name": "emitRight"}], "name": "unionNodeEmitDistinct."}, {"value": 419, "name": "unmarshalJobPayload"}, {"value": 40, "name": "upsertExcludedTable"}, {"value": 2596, "name": "upsertExprsAndIndex"}, {"children": [{"value": 398, "name": "func1"}], "name": "upsertExprsAndIndex."}, {"value": 101, "name": "userCanSeeDatabase"}, {"value": 177, "name": "userCanSeeDescriptor"}, {"value": 125, "name": "userCanSeeTable"}, {"value": 8, "name": "usernameRE"}, {"value": 719, "name": "varEqual"}, {"value": 8, "name": "varGen"}, {"value": 24, "name": "varNames"}, {"value": 8, "name": "varTypeString"}, {"value": 774, "name": "verifyDropTableMetadata"}, {"children": [{"value": 504, "name": "tableNames"}], "name": "virtualSchemaEntry."}, {"value": 24, "name": "virtualSchemas"}, {"children": [{"value": 1023, "name": "getPlanInfo"}, {"children": [{"value": 506, "name": "func1"}, {"children": [{"value": 1407, "name": "1"}], "name": "func1."}], "name": "getPlanInfo."}], "name": "virtualTableEntry."}, {"value": 495, "name": "walkPlan"}, {"value": 8, "name": "yesString"}, {"value": 8, "name": "zeroVal"}, {"value": 56, "name": "go.itab.*BackupJobDetails,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*JobPayload,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*JobPayload_Backup,github.com/cockroachdb/cockroach/pkg/sql.isJobPayload_Details"}, {"value": 56, "name": "go.itab.*JobPayload_Restore,github.com/cockroachdb/cockroach/pkg/sql.isJobPayload_Details"}, {"value": 56, "name": "go.itab.*RestoreJobDetails,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*aggExprVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 64, "name": "go.itab.*aggregateFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*aggregateFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*aggregateFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 104, "name": "go.itab.*alterTableNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*applyConstraintsVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 56, "name": "go.itab.*checkHelper,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 48, "name": "go.itab.*checkQueryVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 104, "name": "go.itab.*copyNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*createDatabaseNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*createIndexNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*createTableNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*createUserNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*createViewNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*delayedNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*deleteNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*distSQLExprCheckVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 48, "name": "go.itab.*distSQLReceiver,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 104, "name": "go.itab.*distinctNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*dropDatabaseNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*dropIndexNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*dropTableNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*dropViewNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*emptyNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*explainDebugNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*explainDistSQLNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*explainPlanNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*explainTraceNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*extractAggregatesVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 48, "name": "go.itab.*extractWindowFuncsVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 104, "name": "go.itab.*filterNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*filterNode,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 104, "name": "go.itab.*groupNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*hookFnNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*indexJoinNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*insertNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 80, "name": "go.itab.*iterativeSortStrategy,github.com/cockroachdb/cockroach/pkg/sql.sortingStrategy"}, {"value": 104, "name": "go.itab.*joinNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*joinPredicate,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 104, "name": "go.itab.*limitNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*nameResolutionVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 104, "name": "go.itab.*ordinalityNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 40, "name": "go.itab.*partitionSorter,github.com/cockroachdb/cockroach/pkg/sql.peerGroupChecker"}, {"value": 56, "name": "go.itab.*partitionSorter,sort.Interface"}, {"value": 48, "name": "go.itab.*planVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 96, "name": "go.itab.*planner,github.com/cockroachdb/cockroach/pkg/sql.PlanHookState"}, {"value": 48, "name": "go.itab.*planner,github.com/cockroachdb/cockroach/pkg/sql/parser.EvalPlanner"}, {"value": 48, "name": "go.itab.*postAggExprVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 104, "name": "go.itab.*relocateNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*renderNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*renderNode,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 56, "name": "go.itab.*returningHelper,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 104, "name": "go.itab.*scanNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*scanNode,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 104, "name": "go.itab.*scatterNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*showRangesNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 80, "name": "go.itab.*sortAllStrategy,github.com/cockroachdb/cockroach/pkg/sql.sortingStrategy"}, {"value": 104, "name": "go.itab.*sortNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 80, "name": "go.itab.*sortTopKStrategy,github.com/cockroachdb/cockroach/pkg/sql.sortingStrategy"}, {"value": 48, "name": "go.itab.*spanBasedDependencyAnalyzer,github.com/cockroachdb/cockroach/pkg/sql.DependencyAnalyzer"}, {"value": 104, "name": "go.itab.*splitNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*srfExtractionVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 64, "name": "go.itab.*subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 48, "name": "go.itab.*subqueryVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 72, "name": "go.itab.*tableDeleter,github.com/cockroachdb/cockroach/pkg/sql.tableWriter"}, {"value": 72, "name": "go.itab.*tableInserter,github.com/cockroachdb/cockroach/pkg/sql.tableWriter"}, {"value": 72, "name": "go.itab.*tableUpdater,github.com/cockroachdb/cockroach/pkg/sql.tableWriter"}, {"value": 72, "name": "go.itab.*tableUpserter,github.com/cockroachdb/cockroach/pkg/sql.tableWriter"}, {"value": 104, "name": "go.itab.*unionNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 104, "name": "go.itab.*updateNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 48, "name": "go.itab.*upsertHelper,github.com/cockroachdb/cockroach/pkg/sql.tableUpsertEvaler"}, {"value": 56, "name": "go.itab.*upsertHelper,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 104, "name": "go.itab.*valueGenerator,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 72, "name": "go.itab.*valuesNode,container/heap.Interface"}, {"value": 104, "name": "go.itab.*valuesNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*valuesNode,sort.Interface"}, {"value": 48, "name": "go.itab.*varConvertVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 56, "name": "go.itab.*virtualSchemaHolder,github.com/cockroachdb/cockroach/pkg/sql.VirtualTabler"}, {"value": 64, "name": "go.itab.*windowFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*windowFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*windowFuncHolder,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 104, "name": "go.itab.*windowNode,github.com/cockroachdb/cockroach/pkg/sql.planNode"}, {"value": 56, "name": "go.itab.*windowNodeAggContainer,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 56, "name": "go.itab.*windowNodeColContainer,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 64, "name": "go.itab.CopyDataBlock,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.InternalExecutor,github.com/cockroachdb/cockroach/pkg/sql/sqlutil.InternalExecutor"}, {"value": 40, "name": "go.itab.allPeers,github.com/cockroachdb/cockroach/pkg/sql.peerGroupChecker"}, {"value": 48, "name": "go.itab.databaseKey,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.DescriptorKey"}, {"value": 40, "name": "go.itab.descriptorAlreadyExistsErr,error"}, {"value": 64, "name": "go.itab.dummyColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 80, "name": "go.itab.dummyColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 48, "name": "go.itab.exceptNodeEmitAll,github.com/cockroachdb/cockroach/pkg/sql.unionNodeEmit"}, {"value": 48, "name": "go.itab.exceptNodeEmitDistinct,github.com/cockroachdb/cockroach/pkg/sql.unionNodeEmit"}, {"value": 56, "name": "go.itab.indexInfoByCost,sort.Interface"}, {"value": 48, "name": "go.itab.intersectNodeEmitAll,github.com/cockroachdb/cockroach/pkg/sql.unionNodeEmit"}, {"value": 48, "name": "go.itab.intersectNodeEmitDistinct,github.com/cockroachdb/cockroach/pkg/sql.unionNodeEmit"}, {"value": 48, "name": "go.itab.scalarSlot,github.com/cockroachdb/cockroach/pkg/sql.sourceSlot"}, {"value": 56, "name": "go.itab.sortedDBDescs,sort.Interface"}, {"value": 56, "name": "go.itab.spanEvents,sort.Interface"}, {"value": 48, "name": "go.itab.tableKey,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.DescriptorKey"}, {"value": 48, "name": "go.itab.tupleSlot,github.com/cockroachdb/cockroach/pkg/sql.sourceSlot"}, {"value": 48, "name": "go.itab.unionNodeEmitDistinct,github.com/cockroachdb/cockroach/pkg/sql.unionNodeEmit"}], "name": "sql."}, {"children": [{"children": [{"children": [{"value": 1288, "name": "AddFilter"}, {"value": 1701, "name": "AddLimit"}, {"value": 1584, "name": "AddNoGroupingStage"}, {"value": 328, "name": "AddProcessor"}, {"value": 1774, "name": "AddProjection"}, {"value": 3699, "name": "AddRendering"}, {"value": 1156, "name": "AddSingleGroupStage"}, {"value": 967, "name": "GenerateFlowSpecs"}, {"value": 1282, "name": "GetLastStagePost"}, {"value": 651, "name": "MergeResultStreams"}, {"value": 1791, "name": "PopulateEndpoints"}, {"value": 415, "name": "SetLastStagePost"}, {"value": 195, "name": "SetMergeOrdering"}], "name": "(*PhysicalPlan)."}, {"children": [{"value": 780, "name": "ChoosePreferredLeaseHolder"}], "name": "(*binPackingOracle)."}, {"children": [{"value": 457, "name": "NewSpanResolverIterator"}], "name": "(*spanResolver)."}, {"children": [{"value": 147, "name": "Desc"}, {"value": 133, "name": "Error"}, {"value": 100, "name": "NeedAnother"}, {"value": 162, "name": "Next"}, {"value": 1162, "name": "ReplicaInfo"}, {"value": 1682, "name": "Seek"}, {"value": 85, "name": "Valid"}], "name": "(*spanResolverIterator)."}, {"children": [{"value": 109, "name": "IndexedVarEval"}, {"value": 211, "name": "IndexedVarFormat"}, {"value": 115, "name": "IndexedVarResolvedType"}], "name": "(*typeContainer)."}, {"value": 8, "name": "DistAggregationTable"}, {"value": 1275, "name": "MakeExpression"}, {"children": [{"value": 477, "name": "func1"}], "name": "MakeExpression."}, {"value": 1169, "name": "MergePlans"}, {"value": 1139, "name": "emptyPlan"}, {"value": 8, "name": "exprFmtFlagsBase"}, {"value": 8, "name": "exprFmtFlagsNoMap"}, {"children": [{"value": 724, "name": "func1"}, {"value": 120, "name": "func2"}, {"value": 208, "name": "func3"}], "name": "glob."}, {"value": 2729, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 583, "name": "replicaSliceOrErr"}, {"value": 306, "name": "reverseProjection"}, {"value": 24, "name": "statictmp_102"}, {"value": 80, "name": "statictmp_111"}, {"value": 56, "name": "statictmp_114"}, {"value": 24, "name": "statictmp_117"}, {"value": 56, "name": "statictmp_141"}, {"value": 24, "name": "statictmp_144"}, {"value": 32, "name": "statictmp_26"}, {"value": 8, "name": "statictmp_333"}, {"value": 24, "name": "statictmp_494"}, {"value": 24, "name": "statictmp_503"}, {"value": 4, "name": "statictmp_567"}, {"value": 4, "name": "statictmp_570"}, {"value": 4, "name": "statictmp_574"}, {"value": 4, "name": "statictmp_577"}, {"value": 4, "name": "statictmp_581"}, {"value": 4, "name": "statictmp_584"}, {"value": 4, "name": "statictmp_588"}, {"value": 4, "name": "statictmp_591"}, {"value": 4, "name": "statictmp_595"}, {"value": 4, "name": "statictmp_598"}, {"value": 4, "name": "statictmp_602"}, {"value": 4, "name": "statictmp_605"}, {"value": 4, "name": "statictmp_609"}, {"value": 4, "name": "statictmp_612"}, {"value": 8, "name": "statictmp_616"}, {"value": 8, "name": "statictmp_619"}, {"value": 40, "name": "go.itab.*binPackingOracle,github.com/cockroachdb/cockroach/pkg/sql/distsqlplan.leaseHolderOracle"}, {"value": 40, "name": "go.itab.*spanResolver,github.com/cockroachdb/cockroach/pkg/sql/distsqlplan.SpanResolver"}, {"value": 88, "name": "go.itab.*spanResolverIterator,github.com/cockroachdb/cockroach/pkg/sql/distsqlplan.SpanResolverIterator"}, {"value": 56, "name": "go.itab.*typeContainer,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}], "name": "distsqlplan."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 956, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 344, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3322, "name": "Unmarshal"}, {"value": 1163, "name": "summary"}], "name": "(*AggregatorSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 307, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 23, "name": "Reset"}, {"value": 110, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2178, "name": "Unmarshal"}], "name": "(*AggregatorSpec_Aggregation)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*AggregatorSpec_Func)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 411, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 118, "name": "Reset"}, {"value": 142, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2014, "name": "Unmarshal"}], "name": "(*AlgebraicSetOpSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*AlgebraicSetOpSpec_SetOpType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1632, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 710, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5129, "name": "Unmarshal"}, {"value": 432, "name": "summary"}], "name": "(*BackfillerSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*BackfillerSpec_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 77, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 481, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 141, "name": "Reset"}, {"value": 248, "name": "SetValue"}, {"value": 169, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2556, "name": "Unmarshal"}], "name": "(*ConsumerSignal)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 434, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 145, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2063, "name": "Unmarshal"}], "name": "(*DatumInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 400, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 259, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3716, "name": "Unmarshal"}, {"value": 671, "name": "summary"}], "name": "(*DistinctSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}], "name": "(*DrainRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 492, "name": "ErrorDetail"}, {"value": 47, "name": "GetDetail"}, {"value": 75, "name": "GetPGError"}, {"value": 75, "name": "GetRetryableTxnError"}, {"value": 280, "name": "Marshal"}, {"value": 189, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 102, "name": "Reset"}, {"value": 87, "name": "Size"}, {"value": 139, "name": "String"}, {"value": 2750, "name": "Unmarshal"}, {"value": 260, "name": "XXX_OneofFuncs"}], "name": "(*Error)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isError_Detail"}], "name": "(*Error_PGError)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isError_Detail"}], "name": "(*Error_RetryableTxnError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1368, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 398, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4762, "name": "Unmarshal"}], "name": "(*EvalContext)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 494, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 143, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*Expression)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 457, "name": "Cleanup"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 214, "name": "RunSync"}, {"value": 17, "name": "SetEventLog"}, {"value": 1142, "name": "Start"}, {"value": 68, "name": "Wait"}, {"value": 781, "name": "makeProcessor"}, {"value": 3534, "name": "setupFlow"}, {"value": 1920, "name": "setupInboundStream"}, {"value": 1676, "name": "setupOutboundStream"}, {"value": 576, "name": "setupRouter"}], "name": "(*Flow)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 151, "name": "setupTxn"}], "name": "(*FlowCtx)."}, {"children": [{"value": 85, "name": "Bytes"}, {"value": 138, "name": "GetBytes"}, {"value": 160, "name": "MarshalBinary"}, {"value": 138, "name": "MarshalText"}, {"value": 181, "name": "MarshalTo"}, {"value": 35, "name": "Scan"}, {"value": 17, "name": "SetVariant"}, {"value": 17, "name": "SetVersion"}, {"value": 105, "name": "Short"}, {"value": 76, "name": "Size"}, {"value": 105, "name": "String"}, {"value": 35, "name": "Unmarshal"}, {"value": 35, "name": "UnmarshalBinary"}, {"value": 35, "name": "UnmarshalText"}, {"value": 125, "name": "Value"}, {"value": 133, "name": "Variant"}, {"value": 83, "name": "Version"}], "name": "(*FlowID)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 822, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 329, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2696, "name": "Unmarshal"}], "name": "(*FlowSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1410, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 442, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4813, "name": "Unmarshal"}, {"value": 1112, "name": "summary"}], "name": "(*HashJoinerSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1388, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 566, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4248, "name": "Unmarshal"}, {"value": 385, "name": "summary"}], "name": "(*InputSyncSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*InputSyncSpec_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 413, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 144, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2023, "name": "Unmarshal"}, {"value": 518, "name": "summary"}], "name": "(*JoinReaderSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*JoinType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1052, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 280, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3326, "name": "Unmarshal"}], "name": "(*MergeJoinerSpec)."}, {"children": [{"value": 275, "name": "ConsumerClosed"}, {"value": 292, "name": "ConsumerDone"}, {"value": 252, "name": "Init"}, {"value": 527, "name": "Next"}, {"value": 164, "name": "ProducerDone"}, {"value": 151, "name": "Push"}, {"value": 32, "name": "Types"}], "name": "(*MultiplexedRowChannel)."}, {"children": [{"value": 491, "name": "NextRow"}], "name": "(*NoMetadataRowSource)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 111, "name": "summary"}], "name": "(*NoopCoreSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 461, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 206, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1904, "name": "Unmarshal"}, {"value": 598, "name": "diagramString"}], "name": "(*Ordering)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 232, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 110, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1777, "name": "Unmarshal"}], "name": "(*Ordering_Column)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 257, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*Ordering_Column_Direction)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 791, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 360, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3855, "name": "Unmarshal"}, {"value": 570, "name": "summary"}], "name": "(*OutputRouterSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*OutputRouterSpec_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1618, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 516, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5318, "name": "Unmarshal"}, {"value": 2429, "name": "summary"}], "name": "(*PostProcessSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 344, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 3046, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 1151, "name": "SetValue"}, {"value": 883, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 9782, "name": "Unmarshal"}], "name": "(*ProcessorCoreUnion)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1719, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 719, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4439, "name": "Unmarshal"}], "name": "(*ProcessorSpec)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 813, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 304, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3377, "name": "Unmarshal"}], "name": "(*ProducerData)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 433, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 29, "name": "Reset"}, {"value": 120, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2015, "name": "Unmarshal"}], "name": "(*ProducerHeader)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1232, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 460, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3498, "name": "Unmarshal"}], "name": "(*ProducerMessage)."}, {"children": [{"value": 222, "name": "Empty"}], "name": "(*ProducerMetadata)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 75, "name": "GetError"}, {"value": 75, "name": "GetRangeInfo"}, {"value": 47, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 189, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 102, "name": "Reset"}, {"value": 87, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2788, "name": "Unmarshal"}, {"value": 260, "name": "XXX_OneofFuncs"}], "name": "(*RemoteProducerMetadata)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isRemoteProducerMetadata_Value"}], "name": "(*RemoteProducerMetadata_Error)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isRemoteProducerMetadata_Value"}], "name": "(*RemoteProducerMetadata_RangeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 579, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 319, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2038, "name": "Unmarshal"}], "name": "(*RemoteProducerMetadata_RangeInfos)."}, {"children": [{"value": 181, "name": "ConsumerClosed"}, {"value": 292, "name": "ConsumerDone"}, {"value": 239, "name": "Init"}, {"value": 240, "name": "InitWithBufSize"}, {"value": 426, "name": "Next"}, {"value": 64, "name": "ProducerDone"}, {"value": 484, "name": "Push"}, {"value": 32, "name": "Types"}], "name": "(*RowChannel)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}], "name": "(*ServerConfig)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 327, "name": "FlowStream"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 782, "name": "RunSyncFlow"}, {"children": [{"value": 248, "name": "func1"}, {"children": [{"value": 1, "name": "1"}], "name": "func1."}], "name": "RunSyncFlow."}, {"value": 17, "name": "SetEventLog"}, {"value": 484, "name": "SetupFlow"}, {"value": 227, "name": "SetupSyncFlow"}, {"value": 67, "name": "Start"}, {"value": 1544, "name": "flowStreamInt"}, {"value": 4554, "name": "setupFlow"}, {"children": [{"value": 22, "name": "func1"}], "name": "setupFlow."}], "name": "(*ServerImpl)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1336, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 366, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4175, "name": "Unmarshal"}], "name": "(*SetupFlowRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 351, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1782, "name": "Unmarshal"}], "name": "(*SimpleResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 410, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 118, "name": "Reset"}, {"value": 141, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2014, "name": "Unmarshal"}, {"value": 578, "name": "summary"}], "name": "(*SorterSpec)."}, {"children": [{"value": 1822, "name": "AddMessage"}, {"value": 2205, "name": "GetRow"}], "name": "(*StreamDecoder)."}, {"children": [{"value": 641, "name": "AddMetadata"}, {"value": 1225, "name": "AddRow"}, {"value": 716, "name": "FormMessage"}], "name": "(*StreamEncoder)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 440, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 122, "name": "Reset"}, {"value": 169, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2473, "name": "Unmarshal"}], "name": "(*StreamEndpointSpec)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*StreamEndpointSpec_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}], "name": "(*TableReaderSpan)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1145, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 201, "name": "Reset"}, {"value": 443, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3948, "name": "Unmarshal"}, {"value": 518, "name": "summary"}], "name": "(*TableReaderSpec)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*TestingKnobs)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 949, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 458, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3053, "name": "Unmarshal"}, {"value": 510, "name": "summary"}], "name": "(*ValuesCoreSpec)."}, {"children": [{"value": 1109, "name": "add"}, {"value": 216, "name": "get"}], "name": "(*aggregateFuncHolder)."}, {"children": [{"value": 2209, "name": "Run"}, {"children": [{"value": 307, "name": "func1"}], "name": "Run."}, {"value": 1815, "name": "accumulateRows"}, {"children": [{"value": 355, "name": "func1"}], "name": "accumulateRows."}, {"value": 404, "name": "encode"}], "name": "(*aggregator)."}, {"children": [{"value": 1234, "name": "Run"}, {"value": 4482, "name": "exceptAll"}], "name": "(*algebraicSetOp)."}, {"children": [{"value": 1003, "name": "Run"}, {"value": 2638, "name": "mainLoop"}, {"value": 304, "name": "runChunk"}], "name": "(*backfiller)."}, {"children": [{"value": 17, "name": "Run"}, {"value": 3732, "name": "init"}, {"value": 616, "name": "runChunk"}, {"children": [{"value": 4750, "name": "func1"}], "name": "runChunk."}], "name": "(*columnBackfiller)."}, {"children": [{"value": 444, "name": "FlowStream"}, {"value": 439, "name": "RunSyncFlow"}, {"value": 326, "name": "SetupFlow"}], "name": "(*distSQLClient)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*distSQLFlowStreamClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*distSQLFlowStreamServer)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*distSQLRunSyncFlowClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*distSQLRunSyncFlowServer)."}, {"children": [{"value": 2726, "name": "Run"}, {"children": [{"value": 300, "name": "func1"}], "name": "Run."}, {"value": 567, "name": "encode"}, {"value": 457, "name": "matchLastGroupKey"}], "name": "(*distinct)."}, {"children": [{"value": 279, "name": "IndexedVarEval"}, {"value": 208, "name": "IndexedVarFormat"}, {"value": 116, "name": "IndexedVarResolvedType"}, {"value": 124, "name": "String"}, {"value": 191, "name": "eval"}, {"value": 184, "name": "evalFilter"}, {"value": 1281, "name": "init"}], "name": "(*exprHelper)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 1878, "name": "ConnectInboundStream"}, {"children": [{"value": 137, "name": "func1"}], "name": "ConnectInboundStream."}, {"value": 17, "name": "Lock"}, {"value": 1012, "name": "RegisterFlow"}, {"children": [{"value": 1212, "name": "func1"}], "name": "RegisterFlow."}, {"value": 17, "name": "Unlock"}, {"value": 237, "name": "UnregisterFlow"}, {"value": 533, "name": "finishInboundStreamLocked"}, {"value": 388, "name": "releaseEntryLocked"}, {"value": 889, "name": "waitForFlowLocked"}], "name": "(*flowRegistry)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 160, "name": "ScheduleFlow"}, {"children": [{"value": 393, "name": "func1"}], "name": "ScheduleFlow."}, {"value": 17, "name": "SetEventLog"}, {"value": 279, "name": "Start"}, {"children": [{"value": 1056, "name": "func1"}], "name": "Start."}, {"value": 308, "name": "runFlowNow"}, {"children": [{"value": 94, "name": "func1"}, {"value": 94, "name": "func2"}], "name": "runFlowNow."}], "name": "(*flowScheduler)."}, {"children": [{"value": 2525, "name": "Run"}, {"value": 2356, "name": "buildPhase"}, {"value": 2699, "name": "probePhase"}, {"children": [{"value": 587, "name": "func1"}], "name": "probePhase."}], "name": "(*hashJoiner)."}, {"children": [{"value": 17, "name": "ProducerDone"}, {"value": 831, "name": "Push"}, {"value": 826, "name": "computeDestination"}], "name": "(*hashRouter)."}, {"children": [{"value": 17, "name": "Run"}, {"value": 2610, "name": "init"}, {"value": 1149, "name": "runChunk"}, {"children": [{"value": 2406, "name": "func1"}], "name": "runChunk."}], "name": "(*indexBackfiller)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 338, "name": "VisitPre"}], "name": "(*ivarBinder)."}, {"children": [{"value": 507, "name": "Run"}, {"value": 594, "name": "generateKey"}, {"value": 2585, "name": "mainLoop"}], "name": "(*joinReader)."}, {"children": [{"value": 1831, "name": "init"}, {"value": 2139, "name": "render"}], "name": "(*joinerBase)."}, {"children": [{"value": 743, "name": "Run"}, {"value": 648, "name": "outputBatch"}], "name": "(*mergeJoiner)."}, {"children": [{"value": 17, "name": "ProducerDone"}, {"value": 608, "name": "Push"}], "name": "(*mirrorRouter)."}, {"children": [{"value": 729, "name": "Run"}], "name": "(*noopProcessor)."}, {"children": [{"value": 80, "name": "ConsumerClosed"}, {"value": 92, "name": "ConsumerDone"}, {"value": 15, "name": "Len"}, {"value": 364, "name": "Less"}, {"value": 1232, "name": "Next"}, {"value": 71, "name": "Pop"}, {"value": 109, "name": "Push"}, {"value": 77, "name": "Swap"}, {"value": 118, "name": "Types"}, {"value": 1236, "name": "advanceRoot"}, {"value": 994, "name": "consumeMetadata"}, {"value": 290, "name": "consumerStatusChanged"}, {"value": 385, "name": "drainSources"}, {"value": 485, "name": "initHeap"}], "name": "(*orderedSynchronizer)."}, {"children": [{"value": 17, "name": "ConsumerClosed"}, {"value": 17, "name": "ConsumerDone"}, {"value": 17, "name": "Init"}, {"value": 17, "name": "InitWithBufSize"}, {"value": 89, "name": "Next"}, {"value": 17, "name": "ProducerDone"}, {"value": 25, "name": "Push"}, {"value": 44, "name": "Types"}, {"value": 667, "name": "addRow"}, {"value": 908, "name": "flush"}, {"value": 2582, "name": "mainLoop"}, {"children": [{"value": 62, "name": "func1"}], "name": "mainLoop."}, {"value": 259, "name": "run"}, {"value": 353, "name": "start"}, {"value": 168, "name": "waitForDrainSignalFromConsumer"}, {"children": [{"value": 547, "name": "func1"}], "name": "waitForDrainSignalFromConsumer."}], "name": "(*outbox)."}, {"children": [{"value": 69, "name": "close"}, {"value": 3755, "name": "emitRow"}, {"value": 2286, "name": "init"}, {"value": 620, "name": "neededColumns"}], "name": "(*procOutputHelper)."}, {"children": [{"value": 138, "name": "ProducerDone"}, {"value": 603, "name": "fwdMetadata"}], "name": "(*routerBase)."}, {"children": [{"value": 753, "name": "AddRow"}, {"value": 44, "name": "At"}, {"value": 17, "name": "Clear"}, {"value": 17, "name": "Close"}, {"value": 563, "name": "EncRow"}, {"value": 79, "name": "InitMaxHeap"}, {"value": 26, "name": "Len"}, {"value": 307, "name": "Less"}, {"value": 679, "name": "MaybeReplaceMax"}, {"value": 109, "name": "Pop"}, {"value": 17, "name": "PopFirst"}, {"value": 109, "name": "Push"}, {"value": 35, "name": "Replace"}, {"value": 79, "name": "Sort"}, {"value": 17, "name": "Swap"}], "name": "(*rowContainer)."}, {"children": [{"value": 566, "name": "Execute"}], "name": "(*sortAllStrategy)."}, {"children": [{"value": 2307, "name": "Execute"}, {"children": [{"value": 376, "name": "func1"}], "name": "Execute."}], "name": "(*sortChunksStrategy)."}, {"children": [{"value": 776, "name": "Execute"}], "name": "(*sortTopKStrategy)."}, {"children": [{"value": 1869, "name": "Run"}], "name": "(*sorter)."}, {"children": [{"value": 1850, "name": "advanceGroup"}, {"value": 679, "name": "peekAtCurrentGroup"}], "name": "(*streamGroupAccumulator)."}, {"children": [{"value": 190, "name": "NextBatch"}, {"value": 2302, "name": "computeBatch"}], "name": "(*streamMerger)."}, {"children": [{"value": 1852, "name": "Run"}, {"value": 1332, "name": "sendMisplannedRangesMetadata"}], "name": "(*tableReader)."}, {"children": [{"value": 1831, "name": "Run"}], "name": "(*valuesProcessor)."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "AggregatorSpec_Func."}, {"value": 8, "name": "AggregatorSpec_Func_name"}, {"value": 8, "name": "AggregatorSpec_Func_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "AlgebraicSetOpSpec_SetOpType."}, {"value": 8, "name": "AlgebraicSetOpSpec_SetOpType_name"}, {"value": 8, "name": "AlgebraicSetOpSpec_SetOpType_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "BackfillerSpec_Type."}, {"value": 8, "name": "BackfillerSpec_Type_name"}, {"value": 8, "name": "BackfillerSpec_Type_value"}, {"value": 85, "name": "ColumnMutationFilter"}, {"value": 786, "name": "CompareEncDatumRowForMerge"}, {"value": 483, "name": "ConvertBackfillError"}, {"value": 538, "name": "DrainAndClose"}, {"children": [{"value": 124, "name": "func1"}], "name": "DrainAndClose."}, {"value": 809, "name": "DrainAndForwardMetadata"}, {"value": 16, "name": "ErrIntOverflowApi"}, {"value": 16, "name": "ErrIntOverflowData"}, {"value": 16, "name": "ErrIntOverflowProcessors"}, {"value": 16, "name": "ErrInvalidLengthApi"}, {"value": 16, "name": "ErrInvalidLengthData"}, {"value": 16, "name": "ErrInvalidLengthProcessors"}, {"children": [{"value": 82, "name": "Bytes"}, {"value": 135, "name": "GetBytes"}, {"value": 157, "name": "MarshalBinary"}, {"value": 135, "name": "MarshalText"}, {"value": 181, "name": "MarshalTo"}, {"value": 102, "name": "Short"}, {"value": 73, "name": "Size"}, {"value": 102, "name": "String"}, {"value": 122, "name": "Value"}, {"value": 130, "name": "Variant"}, {"value": 80, "name": "Version"}], "name": "FlowID."}, {"value": 1489, "name": "GeneratePlanDiagram"}, {"value": 1388, "name": "GeneratePlanDiagramWithURL"}, {"value": 1523, "name": "GetAggregateInfo"}, {"children": [{"value": 231, "name": "func1"}], "name": "GetAggregateInfo."}, {"value": 73, "name": "IndexMutationFilter"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "InputSyncSpec_Type."}, {"value": 8, "name": "InputSyncSpec_Type_name"}, {"value": 8, "name": "InputSyncSpec_Type_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "JoinType."}, {"value": 8, "name": "JoinType_name"}, {"value": 8, "name": "JoinType_value"}, {"value": 539, "name": "MakeEvalContext"}, {"value": 835, "name": "NewError"}, {"value": 1523, "name": "NewServer"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 152, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "Ordering_Column_Direction."}, {"value": 8, "name": "Ordering_Column_Direction_name"}, {"value": 8, "name": "Ordering_Column_Direction_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "OutputRouterSpec_Type."}, {"value": 8, "name": "OutputRouterSpec_Type_name"}, {"value": 8, "name": "OutputRouterSpec_Type_value"}, {"value": 706, "name": "ProcessInboundStream"}, {"children": [{"value": 33, "name": "Empty"}], "name": "ProducerMetadata."}, {"value": 101, "name": "RegisterDistSQLServer"}, {"children": [{"value": 88, "name": "ConsumerClosed"}, {"value": 88, "name": "ConsumerDone"}], "name": "RowSource."}, {"value": 587, "name": "SetFlowRequestTrace"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "StreamEndpointSpec_Type."}, {"value": 8, "name": "StreamEndpointSpec_Type_name"}, {"value": 8, "name": "StreamEndpointSpec_Type_value"}, {"value": 898, "name": "WriteResumeSpan"}, {"children": [{"value": 2956, "name": "func1"}, {"children": [{"value": 792, "name": "1"}], "name": "func1."}], "name": "WriteResumeSpan."}, {"value": 249, "name": "_DistSQL_FlowStream_Handler"}, {"value": 249, "name": "_DistSQL_RunSyncFlow_Handler"}, {"value": 777, "name": "_DistSQL_SetupFlow_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_DistSQL_SetupFlow_Handler."}, {"value": 96, "name": "_DistSQL_serviceDesc"}, {"value": 669, "name": "_Error_OneofMarshaler"}, {"value": 670, "name": "_Error_OneofSizer"}, {"value": 795, "name": "_Error_OneofUnmarshaler"}, {"value": 669, "name": "_RemoteProducerMetadata_OneofMarshaler"}, {"value": 670, "name": "_RemoteProducerMetadata_OneofSizer"}, {"value": 795, "name": "_RemoteProducerMetadata_OneofUnmarshaler"}, {"children": [{"value": 305, "name": "runChunk"}], "name": "backfiller."}, {"value": 631, "name": "checkNumInOut"}, {"value": 496, "name": "colListStr"}, {"value": 199, "name": "convertToColumnOrdering"}, {"value": 8, "name": "crc32Table"}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "distSQLFlowStreamClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "distSQLFlowStreamServer."}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "distSQLRunSyncFlowClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "distSQLRunSyncFlowServer."}, {"value": 1670, "name": "emitHelper"}, {"value": 573, "name": "encodeColumnsOfRow"}, {"value": 122, "name": "encodeVarintApi"}, {"value": 122, "name": "encodeVarintData"}, {"value": 122, "name": "encodeVarintProcessors"}, {"value": 24, "name": "fileDescriptorApi"}, {"value": 24, "name": "fileDescriptorData"}, {"value": 24, "name": "fileDescriptorProcessors"}, {"value": 5415, "name": "generateDiagramData"}, {"value": 4773, "name": "init"}, {"children": [{"value": 283, "name": "1"}, {"value": 210, "name": "2"}, {"value": 847, "name": "3"}, {"value": 210, "name": "4"}, {"value": 1031, "name": "5"}, {"value": 210, "name": "6"}], "name": "init."}, {"value": 962, "name": "initRowFetcher"}, {"value": 1, "name": "initdone."}, {"value": 792, "name": "makeHashRouter"}, {"value": 583, "name": "makeMirrorRouter"}, {"value": 967, "name": "makeOrderedSync"}, {"value": 769, "name": "makeRouter"}, {"value": 826, "name": "makeRowContainer"}, {"value": 1097, "name": "makeStreamMerger"}, {"value": 2860, "name": "newAggregator"}, {"value": 1663, "name": "newAlgebraicSetOp"}, {"value": 681, "name": "newColumnBackfiller"}, {"value": 1180, "name": "newDistinct"}, {"value": 1081, "name": "newHashJoiner"}, {"value": 681, "name": "newIndexBackfiller"}, {"value": 1184, "name": "newJoinReader"}, {"value": 1125, "name": "newMergeJoiner"}, {"value": 418, "name": "newNoopProcessor"}, {"value": 4907, "name": "newProcessor"}, {"value": 909, "name": "newSorter"}, {"value": 1547, "name": "newTableReader"}, {"value": 771, "name": "newValuesProcessor"}, {"value": 8, "name": "noteworthyMemoryUsageBytes"}, {"value": 767, "name": "processExpression"}, {"value": 1896, "name": "processInboundStreamHelper"}, {"value": 277, "name": "sendDrainSignalToStreamProducer"}, {"value": 1621, "name": "skipApi"}, {"value": 1621, "name": "skipData"}, {"value": 1621, "name": "skipProcessors"}, {"value": 34, "name": "sovApi"}, {"value": 34, "name": "sovData"}, {"value": 34, "name": "sovProcessors"}, {"value": 24, "name": "statictmp_1064"}, {"value": 16, "name": "statictmp_1068"}, {"value": 16, "name": "statictmp_1072"}, {"value": 16, "name": "statictmp_1076"}, {"value": 16, "name": "statictmp_1078"}, {"value": 8, "name": "statictmp_1080"}, {"value": 32, "name": "statictmp_1127"}, {"value": 8, "name": "statictmp_1133"}, {"value": 24, "name": "statictmp_1135"}, {"value": 8, "name": "statictmp_1139"}, {"value": 16, "name": "statictmp_1144"}, {"value": 32, "name": "statictmp_1146"}, {"value": 8, "name": "statictmp_1150"}, {"value": 8, "name": "statictmp_1156"}, {"value": 8, "name": "statictmp_1162"}, {"value": 8, "name": "statictmp_1168"}, {"value": 8, "name": "statictmp_1173"}, {"value": 8, "name": "statictmp_1179"}, {"value": 8, "name": "statictmp_1185"}, {"value": 16, "name": "statictmp_1187"}, {"value": 8, "name": "statictmp_1191"}, {"value": 24, "name": "statictmp_1238"}, {"value": 16, "name": "statictmp_1242"}, {"value": 40, "name": "statictmp_129"}, {"value": 8, "name": "statictmp_1755"}, {"value": 32, "name": "statictmp_1886"}, {"value": 48, "name": "statictmp_1890"}, {"value": 32, "name": "statictmp_1941"}, {"value": 16, "name": "statictmp_2065"}, {"value": 56, "name": "statictmp_2117"}, {"value": 168, "name": "statictmp_2192"}, {"value": 40, "name": "statictmp_2273"}, {"value": 72, "name": "statictmp_2826"}, {"value": 72, "name": "statictmp_2860"}, {"value": 88, "name": "statictmp_290"}, {"value": 128, "name": "statictmp_2904"}, {"value": 128, "name": "statictmp_2909"}, {"value": 128, "name": "statictmp_2910"}, {"value": 128, "name": "statictmp_2911"}, {"value": 8, "name": "statictmp_299"}, {"value": 8, "name": "statictmp_305"}, {"value": 40, "name": "statictmp_3062"}, {"value": 8, "name": "statictmp_307"}, {"value": 8, "name": "statictmp_311"}, {"value": 16, "name": "statictmp_313"}, {"value": 8, "name": "statictmp_319"}, {"value": 8, "name": "statictmp_324"}, {"value": 40, "name": "statictmp_3257"}, {"value": 40, "name": "statictmp_3258"}, {"value": 40, "name": "statictmp_3383"}, {"value": 40, "name": "statictmp_3599"}, {"value": 8, "name": "statictmp_3670"}, {"value": 16, "name": "statictmp_3674"}, {"value": 16, "name": "statictmp_3678"}, {"value": 16, "name": "statictmp_3682"}, {"value": 8, "name": "statictmp_3688"}, {"value": 8, "name": "statictmp_3694"}, {"value": 8, "name": "statictmp_3700"}, {"value": 8, "name": "statictmp_3705"}, {"value": 8, "name": "statictmp_3711"}, {"value": 8, "name": "statictmp_3717"}, {"value": 8, "name": "statictmp_3723"}, {"value": 8, "name": "statictmp_3729"}, {"value": 32, "name": "statictmp_3731"}, {"value": 8, "name": "statictmp_3735"}, {"value": 8, "name": "statictmp_3741"}, {"value": 8, "name": "statictmp_3747"}, {"value": 8, "name": "statictmp_3753"}, {"value": 8, "name": "statictmp_3759"}, {"value": 16, "name": "statictmp_3764"}, {"value": 8, "name": "statictmp_3770"}, {"value": 8, "name": "statictmp_3776"}, {"value": 32, "name": "statictmp_3778"}, {"value": 8, "name": "statictmp_3782"}, {"value": 80, "name": "statictmp_4544"}, {"value": 56, "name": "statictmp_4551"}, {"value": 32, "name": "statictmp_4629"}, {"value": 56, "name": "statictmp_4827"}, {"value": 48, "name": "statictmp_4926"}, {"value": 12, "name": "statictmp_5208"}, {"value": 48, "name": "statictmp_5318"}, {"value": 608, "name": "statictmp_5328"}, {"value": 240, "name": "statictmp_5368"}, {"value": 40, "name": "statictmp_5497"}, {"value": 48, "name": "statictmp_55"}, {"value": 40, "name": "statictmp_5502"}, {"value": 4600, "name": "statictmp_5532"}, {"value": 112, "name": "statictmp_5586"}, {"value": 16, "name": "statictmp_5590"}, {"value": 112, "name": "statictmp_5633"}, {"value": 16, "name": "statictmp_5634"}, {"value": 4352, "name": "statictmp_5638"}, {"value": 4472, "name": "statictmp_5646"}, {"value": 40, "name": "statictmp_5817"}, {"value": 40, "name": "statictmp_5818"}, {"value": 40, "name": "statictmp_5825"}, {"value": 40, "name": "statictmp_5826"}, {"value": 13304, "name": "statictmp_5941"}, {"value": 13304, "name": "statictmp_5946"}, {"value": 40, "name": "statictmp_6247"}, {"value": 24, "name": "statictmp_6305"}, {"value": 64, "name": "statictmp_6306"}, {"value": 16, "name": "statictmp_6307"}, {"value": 673, "name": "statictmp_6308"}, {"value": 1145, "name": "statictmp_6309"}, {"value": 1595, "name": "statictmp_6310"}, {"value": 8, "name": "statictmp_6312"}, {"value": 32, "name": "statictmp_6313"}, {"value": 32, "name": "statictmp_6317"}, {"value": 8, "name": "statictmp_6318"}, {"value": 12, "name": "statictmp_6322"}, {"value": 48, "name": "statictmp_6323"}, {"value": 48, "name": "statictmp_6327"}, {"value": 12, "name": "statictmp_6328"}, {"value": 8, "name": "statictmp_6332"}, {"value": 32, "name": "statictmp_6333"}, {"value": 32, "name": "statictmp_6337"}, {"value": 8, "name": "statictmp_6338"}, {"value": 16, "name": "statictmp_6342"}, {"value": 64, "name": "statictmp_6343"}, {"value": 64, "name": "statictmp_6347"}, {"value": 16, "name": "statictmp_6348"}, {"value": 16, "name": "statictmp_6352"}, {"value": 64, "name": "statictmp_6353"}, {"value": 64, "name": "statictmp_6357"}, {"value": 16, "name": "statictmp_6358"}, {"value": 48, "name": "statictmp_6362"}, {"value": 192, "name": "statictmp_6363"}, {"value": 192, "name": "statictmp_6367"}, {"value": 48, "name": "statictmp_6368"}, {"value": 12, "name": "statictmp_6372"}, {"value": 48, "name": "statictmp_6373"}, {"value": 48, "name": "statictmp_6377"}, {"value": 12, "name": "statictmp_6378"}, {"value": 4, "name": "statictmp_6382"}, {"value": 16, "name": "statictmp_6383"}, {"value": 16, "name": "statictmp_6387"}, {"value": 4, "name": "statictmp_6388"}, {"value": 16, "name": "statictmp_6412"}, {"value": 16, "name": "statictmp_6469"}, {"value": 24, "name": "statictmp_6473"}, {"value": 16, "name": "statictmp_6487"}, {"value": 16, "name": "statictmp_6491"}, {"value": 8, "name": "statictmp_6497"}, {"value": 16, "name": "statictmp_6501"}, {"value": 16, "name": "statictmp_6505"}, {"value": 40, "name": "statictmp_889"}, {"value": 40, "name": "statictmp_906"}, {"value": 56, "name": "go.itab.*AggregatorSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*AggregatorSpec_Aggregation,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*AlgebraicSetOpSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BackfillerSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ConsumerSignal,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DatumInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DistinctSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DrainRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Error,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Error_PGError,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.isError_Detail"}, {"value": 56, "name": "go.itab.*Error_RetryableTxnError,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.isError_Detail"}, {"value": 56, "name": "go.itab.*EvalContext,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Expression,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FlowSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HashJoinerSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InputSyncSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*JoinReaderSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MergeJoinerSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*MultiplexedRowChannel,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 64, "name": "go.itab.*MultiplexedRowChannel,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowSource"}, {"value": 56, "name": "go.itab.*NoopCoreSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Ordering,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Ordering_Column,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*OutputRouterSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PostProcessSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ProcessorCoreUnion,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ProcessorSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ProducerData,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ProducerHeader,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ProducerMessage,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RemoteProducerMetadata,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RemoteProducerMetadata_Error,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.isRemoteProducerMetadata_Value"}, {"value": 56, "name": "go.itab.*RemoteProducerMetadata_RangeInfo,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.isRemoteProducerMetadata_Value"}, {"value": 56, "name": "go.itab.*RemoteProducerMetadata_RangeInfos,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*RowChannel,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 64, "name": "go.itab.*RowChannel,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowSource"}, {"value": 56, "name": "go.itab.*ServerImpl,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQLServer"}, {"value": 56, "name": "go.itab.*SetupFlowRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SimpleResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SorterSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StreamEndpointSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableReaderSpan,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableReaderSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ValuesCoreSpec,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*aggregator,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 40, "name": "go.itab.*algebraicSetOp,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 40, "name": "go.itab.*columnBackfiller,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.chunkBackfiller"}, {"value": 40, "name": "go.itab.*columnBackfiller,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 56, "name": "go.itab.*distSQLClient,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQLClient"}, {"value": 96, "name": "go.itab.*distSQLFlowStreamClient,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQL_FlowStreamClient"}, {"value": 96, "name": "go.itab.*distSQLFlowStreamServer,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQL_FlowStreamServer"}, {"value": 96, "name": "go.itab.*distSQLRunSyncFlowClient,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQL_RunSyncFlowClient"}, {"value": 96, "name": "go.itab.*distSQLRunSyncFlowServer,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.DistSQL_RunSyncFlowServer"}, {"value": 40, "name": "go.itab.*distinct,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 56, "name": "go.itab.*exprHelper,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 40, "name": "go.itab.*hashJoiner,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 48, "name": "go.itab.*hashRouter,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 40, "name": "go.itab.*indexBackfiller,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.chunkBackfiller"}, {"value": 40, "name": "go.itab.*indexBackfiller,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 48, "name": "go.itab.*ivarBinder,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 40, "name": "go.itab.*joinReader,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 40, "name": "go.itab.*mergeJoiner,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 48, "name": "go.itab.*mirrorRouter,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 40, "name": "go.itab.*noopProcessor,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 72, "name": "go.itab.*orderedSynchronizer,container/heap.Interface"}, {"value": 64, "name": "go.itab.*orderedSynchronizer,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowSource"}, {"value": 48, "name": "go.itab.*outbox,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.RowReceiver"}, {"value": 72, "name": "go.itab.*rowContainer,container/heap.Interface"}, {"value": 56, "name": "go.itab.*rowContainer,sort.Interface"}, {"value": 40, "name": "go.itab.*sortAllStrategy,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.sorterStrategy"}, {"value": 40, "name": "go.itab.*sortChunksStrategy,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.sorterStrategy"}, {"value": 40, "name": "go.itab.*sortTopKStrategy,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.sorterStrategy"}, {"value": 40, "name": "go.itab.*sorter,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 40, "name": "go.itab.*tableReader,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}, {"value": 40, "name": "go.itab.*valuesProcessor,github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.processor"}], "name": "distsqlrun."}, {"children": [{"children": [{"value": 104, "name": "Clear"}, {"value": 104, "name": "Close"}, {"value": 119, "name": "Grow"}, {"value": 135, "name": "ResizeItem"}], "name": "(*BoundAccount)."}, {"children": [{"value": 102, "name": "ClearAccount"}, {"value": 108, "name": "CloseAccount"}, {"value": 169, "name": "GrowAccount"}, {"value": 20, "name": "MakeBoundAccount"}, {"value": 1, "name": "OpenAccount"}, {"value": 120, "name": "OpenAndInitAccount"}, {"value": 233, "name": "ResizeItem"}, {"value": 481, "name": "ShrinkAccount"}, {"value": 1312, "name": "Start"}, {"value": 926, "name": "Stop"}, {"value": 202, "name": "adjustBudget"}, {"value": 590, "name": "increaseBudget"}, {"value": 339, "name": "releaseBudget"}, {"value": 1018, "name": "releaseMemory"}, {"value": 1373, "name": "reserveMemory"}], "name": "(*MemoryMonitor)."}, {"value": 8, "name": "DefaultPoolAllocationSize"}, {"value": 503, "name": "MakeUnlimitedMonitor"}, {"value": 239, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "maxAllocatedButUnusedMemoryBlocks"}, {"value": 403, "name": "newMemoryError"}, {"value": 112, "name": "statictmp_32"}], "name": "mon."}, {"children": [{"children": [{"value": 214, "name": "Format"}], "name": "(*AliasClause)."}, {"children": [{"value": 381, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "tableExpr"}], "name": "(*AliasedTableExpr)."}, {"children": [{"value": 35, "name": "Database"}, {"value": 187, "name": "Eval"}, {"value": 265, "name": "Format"}, {"value": 44, "name": "NormalizeTableName"}, {"value": 53, "name": "NormalizeTablePattern"}, {"value": 41, "name": "NormalizeVarName"}, {"value": 62, "name": "NormalizedTableName"}, {"value": 35, "name": "QualifyWithDatabase"}, {"value": 109, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 35, "name": "Table"}, {"value": 193, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*AllColumnsSelector)."}, {"children": [{"value": 172, "name": "Format"}, {"value": 41, "name": "NormalizeTablePattern"}, {"value": 288, "name": "QualifyWithDatabase"}, {"value": 92, "name": "String"}], "name": "(*AllTablesSelector)."}, {"children": [{"value": 311, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*AlterTable)."}, {"children": [{"value": 240, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableAddColumn)."}, {"children": [{"value": 222, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableAddConstraint)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 204, "name": "String"}], "name": "(*AlterTableCmds)."}, {"children": [{"value": 435, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableDropColumn)."}, {"children": [{"value": 378, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableDropConstraint)."}, {"children": [{"value": 249, "name": "Format"}, {"value": 24, "name": "GetColumn"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableDropNotNull)."}, {"children": [{"value": 430, "name": "Format"}, {"value": 24, "name": "GetColumn"}, {"value": 92, "name": "String"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableSetDefault)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 1, "name": "alterTableCmd"}], "name": "(*AlterTableValidateConstraint)."}, {"children": [{"value": 898, "name": "Eval"}, {"value": 134, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 749, "name": "TypeCheck"}, {"value": 104, "name": "TypedLeft"}, {"value": 105, "name": "TypedRight"}, {"value": 515, "name": "Walk"}, {"value": 2492, "name": "normalize"}, {"value": 1, "name": "operatorExpr"}], "name": "(*AndExpr)."}, {"children": [{"value": 490, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 473, "name": "TypeCheck"}, {"value": 104, "name": "TypedInnerExpr"}, {"value": 356, "name": "Walk"}, {"value": 93, "name": "annotationType"}, {"value": 104, "name": "normalize"}], "name": "(*AnnotateTypeExpr)."}, {"children": [{"value": 163, "name": "Length"}, {"value": 204, "name": "String"}, {"value": 214, "name": "Types"}, {"value": 202, "name": "getAt"}, {"value": 223, "name": "match"}, {"value": 223, "name": "matchAt"}, {"value": 173, "name": "matchLen"}], "name": "(*ArgTypes)."}, {"children": [{"value": 522, "name": "Eval"}, {"value": 179, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1103, "name": "TypeCheck"}, {"value": 399, "name": "Walk"}], "name": "(*Array)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*ArrayColType)."}, {"children": [{"value": 635, "name": "Eval"}, {"value": 127, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 921, "name": "TypeCheck"}, {"value": 399, "name": "Walk"}], "name": "(*ArrayFlatten)."}, {"children": [{"value": 314, "name": "Format"}, {"value": 1, "name": "namePart"}], "name": "(*ArraySubscript)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*ArraySubscripts)."}, {"children": [{"value": 195, "name": "Format"}], "name": "(*AsOfClause)."}, {"children": [{"value": 705, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Backup)."}, {"children": [{"value": 548, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*BeginTransaction)."}, {"children": [{"value": 230, "name": "params"}, {"value": 159, "name": "preferred"}, {"value": 217, "name": "returnType"}], "name": "(*BinOp)."}, {"children": [{"value": 763, "name": "Eval"}, {"value": 151, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 2699, "name": "TypeCheck"}, {"value": 105, "name": "TypedLeft"}, {"value": 105, "name": "TypedRight"}, {"value": 558, "name": "Walk"}, {"value": 834, "name": "memoizeFn"}, {"value": 1831, "name": "normalize"}, {"value": 1, "name": "operatorExpr"}], "name": "(*BinaryExpr)."}, {"children": [{"value": 186, "name": "String"}, {"value": 150, "name": "operator"}], "name": "(*BinaryOperator)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*BoolColType)."}, {"children": [{"value": 213, "name": "Category"}, {"value": 217, "name": "Class"}, {"value": 216, "name": "DistSQLBlacklist"}, {"value": 213, "name": "FixedReturnType"}, {"value": 216, "name": "Impure"}, {"value": 213, "name": "Signature"}, {"value": 230, "name": "params"}, {"value": 216, "name": "preferred"}, {"value": 217, "name": "returnType"}], "name": "(*Builtin)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*BytesColType)."}, {"children": [{"value": 600, "name": "CopyNode"}, {"value": 1596, "name": "Eval"}, {"value": 530, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 3189, "name": "TypeCheck"}, {"value": 1061, "name": "Walk"}], "name": "(*CaseExpr)."}, {"children": [{"value": 21044, "name": "Eval"}, {"value": 712, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1673, "name": "TypeCheck"}, {"value": 356, "name": "Walk"}, {"value": 93, "name": "castType"}, {"value": 247, "name": "normalize"}], "name": "(*CastExpr)."}, {"children": [{"value": 342, "name": "Format"}, {"value": 1, "name": "constraintTableDef"}, {"value": 99, "name": "setName"}, {"value": 1, "name": "tableDef"}], "name": "(*CheckConstraintTableDef)."}, {"children": [{"value": 216, "name": "params"}, {"value": 159, "name": "preferred"}, {"value": 205, "name": "returnType"}], "name": "(*CmpOp)."}, {"children": [{"value": 463, "name": "CopyNode"}, {"value": 454, "name": "Eval"}, {"value": 203, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 829, "name": "TypeCheck"}, {"value": 138, "name": "TypedExprAt"}, {"value": 928, "name": "Walk"}, {"value": 867, "name": "normalize"}], "name": "(*CoalesceExpr)."}, {"children": [{"value": 852, "name": "Eval"}, {"value": 171, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1104, "name": "TypeCheck"}, {"value": 342, "name": "Walk"}], "name": "(*CollateExpr)."}, {"children": [{"value": 323, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*CollatedStringColType)."}, {"children": [{"value": 607, "name": "getCacheEntry"}], "name": "(*CollationEnvironment)."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "(*ColumnCheckConstraint)."}, {"children": [{"value": 150, "name": "columnQualification"}], "name": "(*ColumnCollation)."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "(*ColumnDefault)."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "(*ColumnFKConstraint)."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "(*ColumnFamilyConstraint)."}, {"children": [{"value": 24, "name": "Column"}, {"value": 187, "name": "Eval"}, {"value": 473, "name": "Format"}, {"value": 41, "name": "NormalizeVarName"}, {"value": 177, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 383, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*ColumnItem)."}, {"children": [{"value": 2210, "name": "Format"}, {"value": 36, "name": "HasColumnFamily"}, {"value": 20, "name": "HasDefaultExpr"}, {"value": 23, "name": "HasFKConstraint"}, {"value": 99, "name": "setName"}, {"value": 1, "name": "tableDef"}], "name": "(*ColumnTableDef)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*CommitTransaction)."}, {"children": [{"value": 2573, "name": "Eval"}, {"value": 344, "name": "Format"}, {"value": 912, "name": "IsMixedTypeComparison"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1120, "name": "TypeCheck"}, {"value": 105, "name": "TypedLeft"}, {"value": 105, "name": "TypedRight"}, {"value": 531, "name": "Walk"}, {"value": 223, "name": "formatInTupleAndHideConstants"}, {"value": 1172, "name": "memoizeFn"}, {"value": 5795, "name": "normalize"}, {"value": 1, "name": "operatorExpr"}], "name": "(*ComparisonExpr)."}, {"children": [{"value": 186, "name": "String"}, {"value": 150, "name": "operator"}], "name": "(*ComparisonOperator)."}, {"children": [{"value": 127, "name": "ContainsWindowFunc"}, {"value": 21, "name": "VisitPost"}, {"value": 195, "name": "VisitPre"}], "name": "(*ContainsWindowVisitor)."}, {"children": [{"value": 413, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CopyFrom)."}, {"children": [{"value": 627, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CreateDatabase)."}, {"children": [{"value": 795, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CreateIndex)."}, {"children": [{"value": 20, "name": "As"}, {"value": 661, "name": "Format"}, {"value": 58, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CreateTable)."}, {"children": [{"value": 304, "name": "Format"}, {"value": 20, "name": "HasPassword"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CreateUser)."}, {"children": [{"value": 400, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*CreateView)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 1435, "name": "Append"}, {"value": 647, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 349, "name": "Format"}, {"value": 6, "name": "IsMax"}, {"value": 20, "name": "IsMin"}, {"value": 15, "name": "Len"}, {"value": 503, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 135, "name": "ResolvedType"}, {"value": 160, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 151, "name": "min"}], "name": "(*DArray)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 403, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 112, "name": "Format"}, {"value": 13, "name": "IsMax"}, {"value": 16, "name": "IsMin"}, {"value": 30, "name": "Next"}, {"value": 30, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 30, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DBool)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 491, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 82, "name": "Format"}, {"value": 6, "name": "IsMax"}, {"value": 20, "name": "IsMin"}, {"value": 469, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 19, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DBytes)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 488, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 161, "name": "Format"}, {"value": 6, "name": "IsComposite"}, {"value": 6, "name": "IsMax"}, {"value": 20, "name": "IsMin"}, {"value": 24, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 136, "name": "ResolvedType"}, {"value": 31, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 277, "name": "min"}], "name": "(*DCollatedString)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 595, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 269, "name": "Format"}, {"value": 29, "name": "IsMax"}, {"value": 29, "name": "IsMin"}, {"value": 103, "name": "Next"}, {"value": 103, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 24, "name": "min"}], "name": "(*DDate)."}, {"children": [{"value": 26, "name": "Abs"}, {"value": 6, "name": "AmbiguousFormat"}, {"value": 26, "name": "Cmp"}, {"value": 26, "name": "CmpTotal"}, {"value": 865, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 44, "name": "Float64"}, {"value": 229, "name": "Format"}, {"value": 44, "name": "Int64"}, {"value": 231, "name": "IsComposite"}, {"value": 6, "name": "IsMax"}, {"value": 6, "name": "IsMin"}, {"value": 22, "name": "IsZero"}, {"value": 17, "name": "Modf"}, {"value": 26, "name": "Neg"}, {"value": 24, "name": "Next"}, {"value": 26, "name": "NumDigits"}, {"value": 24, "name": "Prev"}, {"value": 35, "name": "Reduce"}, {"value": 25, "name": "ResolvedType"}, {"value": 26, "name": "Set"}, {"value": 26, "name": "SetCoefficient"}, {"value": 26, "name": "SetExponent"}, {"value": 44, "name": "SetFloat64"}, {"value": 26, "name": "SetInt64"}, {"value": 267, "name": "SetString"}, {"value": 26, "name": "Sign"}, {"value": 76, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 35, "name": "ToSci"}, {"value": 35, "name": "ToStandard"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 24, "name": "min"}], "name": "(*DDecimal)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 847, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 481, "name": "Format"}, {"value": 62, "name": "IsComposite"}, {"value": 37, "name": "IsMax"}, {"value": 37, "name": "IsMin"}, {"value": 162, "name": "Next"}, {"value": 162, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 30, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DFloat)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 666, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 106, "name": "Format"}, {"value": 29, "name": "IsMax"}, {"value": 29, "name": "IsMin"}, {"value": 103, "name": "Next"}, {"value": 103, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 30, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DInt)."}, {"children": [{"value": 87, "name": "Add"}, {"value": 6, "name": "AmbiguousFormat"}, {"value": 395, "name": "Compare"}, {"value": 175, "name": "Div"}, {"value": 120, "name": "DivFloat"}, {"value": 302, "name": "Encode"}, {"value": 136, "name": "EncodeBigInt"}, {"value": 41, "name": "Eval"}, {"value": 171, "name": "Format"}, {"value": 55, "name": "IsMax"}, {"value": 55, "name": "IsMin"}, {"value": 80, "name": "Mul"}, {"value": 120, "name": "MulFloat"}, {"value": 24, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 87, "name": "Sub"}, {"value": 41, "name": "TypeCheck"}, {"value": 101, "name": "ValueAsString"}, {"value": 23, "name": "Walk"}, {"value": 30, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DInterval)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 167, "name": "AsRegProc"}, {"value": 389, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 152, "name": "Format"}, {"value": 29, "name": "IsMax"}, {"value": 29, "name": "IsMin"}, {"value": 300, "name": "Next"}, {"value": 300, "name": "Prev"}, {"value": 84, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 299, "name": "max"}, {"value": 299, "name": "min"}], "name": "(*DOid)."}, {"children": [{"value": 77, "name": "AmbiguousFormat"}, {"value": 337, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 88, "name": "Format"}, {"value": 77, "name": "IsMax"}, {"value": 77, "name": "IsMin"}, {"value": 145, "name": "Next"}, {"value": 145, "name": "Prev"}, {"value": 124, "name": "ResolvedType"}, {"value": 82, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 148, "name": "max"}, {"value": 148, "name": "min"}], "name": "(*DOidWrapper)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 522, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 92, "name": "Format"}, {"value": 6, "name": "IsMax"}, {"value": 20, "name": "IsMin"}, {"value": 501, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 19, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 30, "name": "min"}], "name": "(*DString)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 90, "name": "Close"}, {"value": 120, "name": "ColumnTypes"}, {"value": 182, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 81, "name": "Format"}, {"value": 6, "name": "IsMax"}, {"value": 6, "name": "IsMin"}, {"value": 24, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 178, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 110, "name": "Start"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 120, "name": "Values"}, {"value": 23, "name": "Walk"}, {"value": 24, "name": "max"}, {"value": 24, "name": "min"}], "name": "(*DTable)."}, {"children": [{"value": 156, "name": "Add"}, {"value": 172, "name": "AddDate"}, {"value": 79, "name": "After"}, {"value": 6, "name": "AmbiguousFormat"}, {"value": 206, "name": "AppendFormat"}, {"value": 79, "name": "Before"}, {"value": 134, "name": "Clock"}, {"value": 212, "name": "Compare"}, {"value": 134, "name": "Date"}, {"value": 111, "name": "Day"}, {"value": 70, "name": "Equal"}, {"value": 41, "name": "Eval"}, {"value": 248, "name": "Format"}, {"value": 35, "name": "GobDecode"}, {"value": 158, "name": "GobEncode"}, {"value": 111, "name": "Hour"}, {"value": 121, "name": "ISOWeek"}, {"value": 142, "name": "In"}, {"value": 136, "name": "IsMax"}, {"value": 136, "name": "IsMin"}, {"value": 61, "name": "IsZero"}, {"value": 131, "name": "Local"}, {"value": 60, "name": "Location"}, {"value": 158, "name": "MarshalBinary"}, {"value": 158, "name": "MarshalJSON"}, {"value": 158, "name": "MarshalText"}, {"value": 111, "name": "Minute"}, {"value": 111, "name": "Month"}, {"value": 51, "name": "Nanosecond"}, {"value": 298, "name": "Next"}, {"value": 298, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 142, "name": "Round"}, {"value": 111, "name": "Second"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 142, "name": "Sub"}, {"value": 142, "name": "Truncate"}, {"value": 41, "name": "TypeCheck"}, {"value": 109, "name": "UTC"}, {"value": 58, "name": "Unix"}, {"value": 75, "name": "UnixNano"}, {"value": 35, "name": "UnmarshalBinary"}, {"value": 35, "name": "UnmarshalJSON"}, {"value": 35, "name": "UnmarshalText"}, {"value": 23, "name": "Walk"}, {"value": 111, "name": "Weekday"}, {"value": 111, "name": "Year"}, {"value": 111, "name": "YearDay"}, {"value": 134, "name": "Zone"}, {"value": 24, "name": "max"}, {"value": 24, "name": "min"}], "name": "(*DTimestamp)."}, {"children": [{"value": 156, "name": "Add"}, {"value": 172, "name": "AddDate"}, {"value": 79, "name": "After"}, {"value": 6, "name": "AmbiguousFormat"}, {"value": 206, "name": "AppendFormat"}, {"value": 79, "name": "Before"}, {"value": 134, "name": "Clock"}, {"value": 212, "name": "Compare"}, {"value": 134, "name": "Date"}, {"value": 111, "name": "Day"}, {"value": 70, "name": "Equal"}, {"value": 41, "name": "Eval"}, {"value": 248, "name": "Format"}, {"value": 35, "name": "GobDecode"}, {"value": 158, "name": "GobEncode"}, {"value": 111, "name": "Hour"}, {"value": 121, "name": "ISOWeek"}, {"value": 142, "name": "In"}, {"value": 136, "name": "IsMax"}, {"value": 136, "name": "IsMin"}, {"value": 61, "name": "IsZero"}, {"value": 131, "name": "Local"}, {"value": 60, "name": "Location"}, {"value": 158, "name": "MarshalBinary"}, {"value": 158, "name": "MarshalJSON"}, {"value": 158, "name": "MarshalText"}, {"value": 111, "name": "Minute"}, {"value": 111, "name": "Month"}, {"value": 51, "name": "Nanosecond"}, {"value": 298, "name": "Next"}, {"value": 298, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 142, "name": "Round"}, {"value": 111, "name": "Second"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 142, "name": "Sub"}, {"value": 142, "name": "Truncate"}, {"value": 41, "name": "TypeCheck"}, {"value": 109, "name": "UTC"}, {"value": 58, "name": "Unix"}, {"value": 75, "name": "UnixNano"}, {"value": 35, "name": "UnmarshalBinary"}, {"value": 35, "name": "UnmarshalJSON"}, {"value": 35, "name": "UnmarshalText"}, {"value": 23, "name": "Walk"}, {"value": 111, "name": "Weekday"}, {"value": 111, "name": "Year"}, {"value": 111, "name": "YearDay"}, {"value": 134, "name": "Zone"}, {"value": 24, "name": "max"}, {"value": 24, "name": "min"}], "name": "(*DTimestampTZ)."}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 226, "name": "AssertSorted"}, {"value": 627, "name": "Compare"}, {"value": 41, "name": "Eval"}, {"value": 101, "name": "Format"}, {"value": 171, "name": "IsMax"}, {"value": 171, "name": "IsMin"}, {"value": 760, "name": "Next"}, {"value": 94, "name": "Normalize"}, {"value": 866, "name": "Prev"}, {"value": 419, "name": "ResolvedType"}, {"value": 317, "name": "SearchSorted"}, {"children": [{"value": 142, "name": "func1"}], "name": "SearchSorted."}, {"value": 15, "name": "SetSorted"}, {"value": 159, "name": "Size"}, {"value": 885, "name": "SortedDifference"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 357, "name": "makeUnique"}, {"value": 511, "name": "max"}, {"value": 511, "name": "min"}, {"value": 168, "name": "sort"}, {"children": [{"value": 161, "name": "func1"}], "name": "sort."}], "name": "(*DTuple)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*DateColType)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 163, "name": "Len"}, {"value": 184, "name": "Reverse"}, {"value": 92, "name": "String"}], "name": "(*Datums)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 58, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*Deallocate)."}, {"children": [{"value": 443, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*DecimalColType)."}, {"children": [{"value": 208, "name": "Eval"}, {"value": 178, "name": "Format"}, {"value": 172, "name": "ResolvedType"}, {"value": 178, "name": "String"}, {"value": 196, "name": "TypeCheck"}, {"value": 200, "name": "Walk"}], "name": "(*DefaultVal)."}, {"children": [{"value": 374, "name": "CopyNode"}, {"value": 303, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 79, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1194, "name": "WalkStmt"}], "name": "(*Delete)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Direction)."}, {"children": [{"value": 200, "name": "String"}], "name": "(*DropBehavior)."}, {"children": [{"value": 208, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*DropDatabase)."}, {"children": [{"value": 316, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*DropIndex)."}, {"children": [{"value": 316, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*DropTable)."}, {"children": [{"value": 316, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*DropView)."}, {"children": [{"value": 190, "name": "GetClusterTimestamp"}, {"value": 176, "name": "GetClusterTimestampRaw"}, {"value": 41, "name": "GetLocation"}, {"value": 194, "name": "GetStmtTimestamp"}, {"value": 218, "name": "GetTxnTimestamp"}, {"value": 218, "name": "GetTxnTimestampNoZone"}, {"value": 194, "name": "GetTxnTimestampRaw"}, {"value": 406, "name": "NormalizeExpr"}, {"value": 22, "name": "SetClusterTimestamp"}, {"value": 111, "name": "SetStmtTimestamp"}, {"value": 111, "name": "SetTxnTimestamp"}], "name": "(*EvalContext)."}, {"children": [{"value": 307, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Execute)."}, {"children": [{"value": 187, "name": "Eval"}, {"value": 127, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 366, "name": "TypeCheck"}, {"value": 399, "name": "Walk"}], "name": "(*ExistsExpr)."}, {"children": [{"value": 419, "name": "CopyNode"}, {"value": 544, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 611, "name": "WalkStmt"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "tableExpr"}], "name": "(*Explain)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 204, "name": "String"}], "name": "(*Exprs)."}, {"children": [{"value": 308, "name": "Format"}, {"value": 99, "name": "setName"}, {"value": 1, "name": "tableDef"}], "name": "(*FamilyTableDef)."}, {"children": [{"value": 246, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*FloatColType)."}, {"children": [{"value": 573, "name": "Format"}, {"value": 1, "name": "constraintTableDef"}, {"value": 99, "name": "setName"}, {"value": 1, "name": "tableDef"}], "name": "(*ForeignKeyConstraintTableDef)."}, {"children": [{"value": 234, "name": "Format"}], "name": "(*From)."}, {"children": [{"value": 1456, "name": "CopyNode"}, {"value": 1362, "name": "Eval"}, {"value": 955, "name": "Format"}, {"value": 181, "name": "GetAggregateConstructor"}, {"children": [{"value": 172, "name": "func1"}], "name": "GetAggregateConstructor."}, {"value": 181, "name": "GetWindowConstructor"}, {"children": [{"value": 172, "name": "func1"}], "name": "GetWindowConstructor."}, {"value": 67, "name": "IsDistSQLBlacklist"}, {"value": 14, "name": "IsImpure"}, {"value": 20, "name": "IsWindowFunctionApplication"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 5300, "name": "TypeCheck"}, {"value": 1461, "name": "Walk"}, {"value": 1, "name": "tableExpr"}], "name": "(*FuncExpr)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "functionReference"}], "name": "(*FunctionDefinition)."}, {"children": [{"value": 355, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*Grant)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*GroupBy)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*Help)."}, {"children": [{"value": 163, "name": "Length"}, {"value": 175, "name": "String"}, {"value": 261, "name": "Types"}, {"value": 178, "name": "getAt"}, {"value": 159, "name": "match"}, {"value": 159, "name": "matchAt"}, {"value": 159, "name": "matchLen"}], "name": "(*HomogeneousType)."}, {"children": [{"value": 449, "name": "Eval"}, {"value": 425, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1212, "name": "TypeCheck"}, {"value": 104, "name": "TypedCondExpr"}, {"value": 105, "name": "TypedElseExpr"}, {"value": 105, "name": "TypedTrueExpr"}, {"value": 702, "name": "Walk"}, {"value": 540, "name": "normalize"}], "name": "(*IfExpr)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*IndexElem)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*IndexElemList)."}, {"children": [{"value": 707, "name": "Format"}], "name": "(*IndexHints)."}, {"children": [{"value": 516, "name": "Format"}, {"value": 99, "name": "setName"}, {"value": 1, "name": "tableDef"}], "name": "(*IndexTableDef)."}, {"children": [{"value": 245, "name": "Eval"}, {"value": 396, "name": "Format"}, {"value": 212, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 348, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*IndexedVar)."}, {"children": [{"value": 291, "name": "AppendSlot"}, {"value": 938, "name": "BindIfUnbound"}, {"value": 236, "name": "GetIndexedVars"}, {"value": 182, "name": "IndexedVar"}, {"value": 118, "name": "IndexedVarUsed"}, {"value": 15, "name": "NumVars"}, {"value": 443, "name": "Rebind"}, {"value": 141, "name": "Reset"}, {"value": 21, "name": "VisitPost"}, {"value": 179, "name": "VisitPre"}, {"value": 373, "name": "checkIndex"}], "name": "(*IndexedVarHelper)."}, {"children": [{"value": 786, "name": "CopyNode"}, {"value": 1498, "name": "Eval"}, {"value": 175, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1662, "name": "TypeCheck"}, {"value": 928, "name": "Walk"}], "name": "(*IndirectionExpr)."}, {"children": [{"value": 167, "name": "CopyNode"}, {"value": 26, "name": "DefaultValues"}, {"value": 1214, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 79, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 749, "name": "WalkStmt"}], "name": "(*Insert)."}, {"children": [{"value": 254, "name": "Format"}, {"value": 281, "name": "IsSerial"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*IntColType)."}, {"children": [{"value": 639, "name": "Format"}], "name": "(*InterleaveDef)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*IntervalColType)."}, {"children": [{"value": 9, "name": "Reset"}, {"value": 21, "name": "VisitPost"}, {"value": 483, "name": "VisitPre"}], "name": "(*IsAggregateVisitor)."}, {"children": [{"value": 583, "name": "Eval"}, {"value": 492, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 368, "name": "TypeCheck"}, {"value": 344, "name": "Walk"}, {"value": 1, "name": "operatorExpr"}], "name": "(*IsOfTypeExpr)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*IsolationLevel)."}, {"children": [{"value": 663, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "tableExpr"}], "name": "(*JoinTableExpr)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 233, "name": "Get"}], "name": "(*KVOptions)."}, {"children": [{"value": 334, "name": "Format"}], "name": "(*Limit)."}, {"children": [{"value": 375, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 89, "name": "Result"}], "name": "(*MaxAggregate)."}, {"children": [{"value": 375, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 89, "name": "Result"}], "name": "(*MinAggregate)."}, {"children": [{"value": 192, "name": "Error"}], "name": "(*MultipleResultsError)."}, {"children": [{"value": 195, "name": "Format"}, {"value": 195, "name": "Normalize"}, {"value": 195, "name": "String"}, {"value": 150, "name": "namePart"}], "name": "(*Name)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*NameColType)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 204, "name": "String"}, {"value": 214, "name": "ToStrings"}], "name": "(*NameList)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*NameParts)."}, {"children": [{"value": 178, "name": "Format"}, {"value": 150, "name": "joinCond"}], "name": "(*NaturalJoinCond)."}, {"children": [{"value": 1, "name": "Format"}, {"value": 1, "name": "returningClause"}, {"value": 10, "name": "statementType"}], "name": "(*NoReturningClause)."}, {"children": [{"value": 195, "name": "Format"}, {"value": 691, "name": "Normalize"}, {"value": 120, "name": "NormalizeTableName"}, {"value": 222, "name": "NormalizeWithDatabaseName"}, {"value": 195, "name": "String"}, {"value": 112, "name": "TableName"}, {"value": 1, "name": "tableExpr"}], "name": "(*NormalizableTableName)."}, {"children": [{"value": 455, "name": "Eval"}, {"value": 127, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 373, "name": "TypeCheck"}, {"value": 104, "name": "TypedInnerExpr"}, {"value": 399, "name": "Walk"}, {"value": 1, "name": "operatorExpr"}], "name": "(*NotExpr)."}, {"children": [{"value": 150, "name": "columnQualification"}], "name": "(*NotNullConstraint)."}, {"children": [{"value": 150, "name": "columnQualification"}], "name": "(*NullConstraint)."}, {"children": [{"value": 637, "name": "Eval"}, {"value": 307, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 924, "name": "TypeCheck"}, {"value": 515, "name": "Walk"}], "name": "(*NullIfExpr)."}, {"children": [{"value": 232, "name": "AsInt64"}, {"value": 237, "name": "AvailableTypes"}, {"value": 110, "name": "ExactString"}, {"value": 117, "name": "Format"}, {"value": 100, "name": "Kind"}, {"value": 3197, "name": "ResolveAsType"}, {"value": 106, "name": "ShouldBeInt64"}, {"value": 92, "name": "String"}, {"value": 158, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}, {"value": 178, "name": "asConstantInt"}, {"value": 78, "name": "canBeInt64"}, {"children": [{"value": 90, "name": "implementsValue"}], "name": "go/constant."}], "name": "(*NumVal)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*OidColType)."}, {"children": [{"value": 64, "name": "IsUpsertAlias"}], "name": "(*OnConflict)."}, {"children": [{"value": 170, "name": "Format"}, {"value": 1, "name": "joinCond"}], "name": "(*OnJoinCond)."}, {"children": [{"value": 1039, "name": "Eval"}, {"value": 134, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 749, "name": "TypeCheck"}, {"value": 104, "name": "TypedLeft"}, {"value": 105, "name": "TypedRight"}, {"value": 515, "name": "Walk"}, {"value": 2492, "name": "normalize"}, {"value": 1, "name": "operatorExpr"}], "name": "(*OrExpr)."}, {"children": [{"value": 222, "name": "Format"}], "name": "(*Order)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*OrderBy)."}, {"children": [{"value": 161, "name": "Eval"}, {"value": 173, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 409, "name": "TypeCheck"}, {"value": 104, "name": "TypedInnerExpr"}, {"value": 399, "name": "Walk"}, {"value": 254, "name": "normalize"}], "name": "(*ParenExpr)."}, {"children": [{"value": 136, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 314, "name": "WalkStmt"}, {"value": 1, "name": "selectStatement"}], "name": "(*ParenSelect)."}, {"children": [{"value": 173, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "tableExpr"}], "name": "(*ParenTableExpr)."}, {"children": [{"value": 323, "name": "AggregateInExpr"}, {"value": 666, "name": "AssertNoAggregationOrWindowing"}, {"value": 427, "name": "IsAggregate"}, {"value": 485, "name": "NormalizeExpr"}, {"value": 288, "name": "Parse"}, {"value": 97, "name": "WindowFuncInExpr"}, {"value": 196, "name": "WindowFuncInExprs"}], "name": "(*Parser)."}, {"children": [{"value": 213, "name": "Eval"}, {"value": 101, "name": "Format"}, {"value": 221, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 688, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*Placeholder)."}, {"children": [{"value": 1056, "name": "AssertAllAssigned"}, {"value": 337, "name": "Assign"}, {"value": 234, "name": "Clear"}, {"value": 421, "name": "FillUnassigned"}, {"value": 193, "name": "IsUnresolvedPlaceholder"}, {"value": 672, "name": "SetType"}, {"value": 389, "name": "SetTypes"}, {"value": 810, "name": "SetValue"}, {"value": 172, "name": "Type"}, {"value": 171, "name": "Value"}], "name": "(*PlaceholderInfo)."}, {"children": [{"value": 206, "name": "ProcessPlaceholderAnnotations"}], "name": "(*PlaceholderTypes)."}, {"children": [{"value": 605, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*Prepare)."}, {"children": [{"value": 150, "name": "columnQualification"}], "name": "(*PrimaryKeyConstraint)."}, {"children": [{"value": 187, "name": "Eval"}, {"value": 274, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 1007, "name": "TypeCheck"}, {"value": 105, "name": "TypedFrom"}, {"value": 105, "name": "TypedLeft"}, {"value": 105, "name": "TypedTo"}, {"value": 747, "name": "Walk"}, {"value": 1545, "name": "normalize"}, {"children": [{"value": 347, "name": "func1"}, {"value": 347, "name": "func2"}], "name": "normalize."}, {"value": 1, "name": "operatorExpr"}], "name": "(*RangeCond)."}, {"children": [{"value": 369, "name": "GetRegexp"}, {"value": 196, "name": "Len"}, {"value": 282, "name": "lookup"}, {"value": 272, "name": "update"}], "name": "(*RegexpCache)."}, {"children": [{"value": 117, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*ReleaseSavepoint)."}, {"children": [{"value": 365, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Relocate)."}, {"children": [{"value": 433, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*RenameColumn)."}, {"children": [{"value": 271, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*RenameDatabase)."}, {"children": [{"value": 303, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*RenameIndex)."}, {"children": [{"value": 381, "name": "Format"}, {"value": 57, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*RenameTable)."}, {"children": [{"value": 195, "name": "Format"}, {"value": 774, "name": "Resolve"}, {"value": 195, "name": "String"}, {"value": 90, "name": "functionReference"}], "name": "(*ResolvableFunctionReference)."}, {"children": [{"value": 566, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Restore)."}, {"children": [{"value": 353, "name": "CopyNode"}, {"value": 189, "name": "Format"}, {"value": 1, "name": "returningClause"}, {"value": 10, "name": "statementType"}], "name": "(*ReturningExprs)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 1, "name": "returningClause"}, {"value": 10, "name": "statementType"}], "name": "(*ReturningNothing)."}, {"children": [{"value": 355, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*Revoke)."}, {"children": [{"value": 117, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*RollbackToSavepoint)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*RollbackTransaction)."}, {"children": [{"value": 117, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Savepoint)."}, {"children": [{"value": 1378, "name": "Error"}, {"value": 847, "name": "Lex"}, {"value": 97, "name": "Tokens"}, {"value": 213, "name": "init"}, {"value": 2477, "name": "scan"}, {"value": 712, "name": "scanComment"}, {"value": 491, "name": "scanIdent"}, {"value": 2208, "name": "scanNumber"}, {"value": 764, "name": "scanPlaceholder"}, {"value": 112, "name": "scanString"}, {"value": 2954, "name": "scanStringOrHex"}, {"value": 260, "name": "skipWhitespace"}], "name": "(*Scanner)."}, {"children": [{"value": 587, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Scatter)."}, {"children": [{"value": 364, "name": "CopyNode"}, {"value": 261, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 2456, "name": "WalkStmt"}], "name": "(*Select)."}, {"children": [{"value": 1671, "name": "CopyNode"}, {"value": 715, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 2405, "name": "WalkStmt"}, {"value": 1, "name": "selectStatement"}], "name": "(*SelectClause)."}, {"children": [{"value": 213, "name": "Format"}, {"value": 266, "name": "NormalizeTopLevelVarName"}], "name": "(*SelectExpr)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*SelectExprs)."}, {"children": [{"value": 109, "name": "isUnresolvedPlaceholder"}], "name": "(*SemaContext)."}, {"children": [{"value": 425, "name": "CopyNode"}, {"value": 555, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 836, "name": "WalkStmt"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*Set)."}, {"children": [{"value": 173, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*SetDefaultIsolation)."}, {"children": [{"value": 688, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*SetTimeZone)."}, {"children": [{"value": 341, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*SetTransaction)."}, {"children": [{"value": 174, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*Show)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowColumns)."}, {"children": [{"value": 208, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowConstraints)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowCreateTable)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowCreateView)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowDatabases)."}, {"children": [{"value": 319, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowGrants)."}, {"children": [{"value": 160, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowIndex)."}, {"children": [{"value": 273, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}], "name": "(*ShowRanges)."}, {"children": [{"value": 209, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowTables)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowTransactionStatus)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "hiddenFromStats"}, {"value": 1, "name": "independentFromParallelizedPriors"}], "name": "(*ShowUsers)."}, {"children": [{"value": 365, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Split)."}, {"children": [{"value": 43, "name": "Eval"}, {"value": 100, "name": "Format"}, {"value": 25, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 41, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 23, "name": "Walk"}], "name": "(*StarDatum)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 204, "name": "String"}], "name": "(*StatementList)."}, {"children": [{"value": 224, "name": "AvailableTypes"}, {"value": 123, "name": "Format"}, {"value": 1926, "name": "ResolveAsType"}, {"value": 92, "name": "String"}, {"value": 158, "name": "TypeCheck"}, {"value": 23, "name": "Walk"}], "name": "(*StrVal)."}, {"children": [{"value": 246, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*StringColType)."}, {"children": [{"value": 128, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 109, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 342, "name": "Walk"}, {"value": 1, "name": "tableExpr"}], "name": "(*Subquery)."}, {"children": [{"value": 204, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 184, "name": "IsAmbiguous"}, {"value": 183, "name": "Oid"}, {"value": 195, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 195, "name": "String"}], "name": "(*TArray)."}, {"children": [{"value": 489, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 168, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 195, "name": "String"}], "name": "(*TCollatedString)."}, {"children": [{"value": 458, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 184, "name": "IsAmbiguous"}, {"value": 183, "name": "Oid"}, {"value": 195, "name": "SQLName"}, {"value": 194, "name": "Size"}, {"value": 195, "name": "String"}], "name": "(*TPlaceholder)."}, {"children": [{"value": 213, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 193, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 203, "name": "Size"}, {"value": 204, "name": "String"}], "name": "(*TTable)."}, {"children": [{"value": 213, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 193, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 203, "name": "Size"}, {"value": 204, "name": "String"}], "name": "(*TTuple)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*TableDefs)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*TableExprs)."}, {"children": [{"value": 23, "name": "Database"}, {"value": 252, "name": "Format"}, {"value": 29, "name": "NormalizeTableName"}, {"value": 41, "name": "NormalizeTablePattern"}, {"value": 304, "name": "NormalizedTableName"}, {"value": 288, "name": "QualifyWithDatabase"}, {"value": 92, "name": "String"}, {"value": 24, "name": "Table"}], "name": "(*TableName)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*TableNameReferences)."}, {"children": [{"value": 214, "name": "Format"}], "name": "(*TableNameWithIndex)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*TableNameWithIndexList)."}, {"children": [{"value": 204, "name": "Format"}, {"value": 204, "name": "String"}], "name": "(*TableNames)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*TablePatterns)."}, {"children": [{"value": 629, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "tableExpr"}], "name": "(*TableRef)."}, {"children": [{"value": 201, "name": "Format"}], "name": "(*TargetList)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*TimestampColType)."}, {"children": [{"value": 81, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*TimestampTZColType)."}, {"children": [{"value": 435, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}], "name": "(*Truncate)."}, {"children": [{"value": 775, "name": "Eval"}, {"value": 219, "name": "Format"}, {"value": 98, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 865, "name": "TypeCheck"}, {"value": 399, "name": "Walk"}, {"value": 526, "name": "formatHideConstants"}], "name": "(*Tuple)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*TypedExprs)."}, {"children": [{"value": 407, "name": "Eval"}, {"value": 170, "name": "Format"}, {"value": 115, "name": "ResolvedType"}, {"value": 92, "name": "String"}, {"value": 2205, "name": "TypeCheck"}, {"value": 105, "name": "TypedInnerExpr"}, {"value": 381, "name": "Walk"}, {"value": 985, "name": "normalize"}, {"value": 1, "name": "operatorExpr"}], "name": "(*UnaryExpr)."}, {"children": [{"value": 210, "name": "params"}, {"value": 159, "name": "preferred"}, {"value": 197, "name": "returnType"}], "name": "(*UnaryOp)."}, {"children": [{"value": 186, "name": "String"}, {"value": 150, "name": "operator"}], "name": "(*UnaryOperator)."}, {"children": [{"value": 297, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 1, "name": "selectStatement"}], "name": "(*UnionClause)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*UnionType)."}, {"children": [{"value": 150, "name": "columnQualification"}], "name": "(*UniqueConstraint)."}, {"children": [{"value": 613, "name": "Format"}, {"value": 1, "name": "constraintTableDef"}, {"value": 17, "name": "setName"}, {"value": 17, "name": "tableDef"}], "name": "(*UniqueConstraintTableDef)."}, {"children": [{"value": 208, "name": "Eval"}, {"value": 178, "name": "Format"}, {"value": 218, "name": "NormalizeVarName"}, {"value": 178, "name": "ResolvedType"}, {"value": 178, "name": "String"}, {"value": 231, "name": "TypeCheck"}, {"value": 150, "name": "Variable"}, {"value": 200, "name": "Walk"}, {"value": 150, "name": "namePart"}], "name": "(*UnqualifiedStar)."}, {"children": [{"value": 234, "name": "Eval"}, {"value": 204, "name": "Format"}, {"value": 214, "name": "NormalizeTableName"}, {"value": 224, "name": "NormalizeTablePattern"}, {"value": 214, "name": "NormalizeUnqualifiedColumnItem"}, {"value": 224, "name": "NormalizeVarName"}, {"value": 250, "name": "ResolveFunction"}, {"value": 204, "name": "ResolvedType"}, {"value": 204, "name": "String"}, {"value": 266, "name": "TypeCheck"}, {"value": 150, "name": "Variable"}, {"value": 226, "name": "Walk"}, {"value": 150, "name": "functionReference"}], "name": "(*UnresolvedName)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*UnresolvedNames)."}, {"children": [{"value": 769, "name": "CopyNode"}, {"value": 414, "name": "Format"}, {"value": 22, "name": "StatementTag"}, {"value": 79, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 860, "name": "WalkStmt"}], "name": "(*Update)."}, {"children": [{"value": 362, "name": "Format"}], "name": "(*UpdateExpr)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*UpdateExprs)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*UserPriority)."}, {"children": [{"value": 179, "name": "Format"}, {"value": 1, "name": "joinCond"}], "name": "(*UsingJoinCond)."}, {"children": [{"value": 274, "name": "Format"}, {"value": 175, "name": "StatementTag"}, {"value": 163, "name": "StatementType"}, {"value": 92, "name": "String"}, {"value": 791, "name": "WalkStmt"}, {"value": 140, "name": "formatHideConstants"}, {"value": 1, "name": "selectStatement"}], "name": "(*ValuesClause)."}, {"children": [{"value": 163, "name": "Length"}, {"value": 195, "name": "String"}, {"value": 283, "name": "Types"}, {"value": 171, "name": "getAt"}, {"value": 214, "name": "match"}, {"value": 214, "name": "matchAt"}, {"value": 159, "name": "matchLen"}], "name": "(*VariadicType)."}, {"children": [{"value": 82, "name": "Format"}, {"value": 92, "name": "String"}, {"value": 1, "name": "castTargetType"}, {"value": 1, "name": "columnType"}], "name": "(*VectorColType)."}, {"children": [{"value": 288, "name": "Format"}], "name": "(*When)."}, {"children": [{"value": 225, "name": "Format"}], "name": "(*Where)."}, {"children": [{"value": 204, "name": "Format"}], "name": "(*Window)."}, {"children": [{"value": 792, "name": "Format"}], "name": "(*WindowDef)."}, {"children": [{"value": 88, "name": "Close"}, {"value": 762, "name": "Compute"}], "name": "(*aggregateWindowFunc)."}, {"children": [{"value": 248, "name": "Add"}, {"value": 86, "name": "Close"}, {"value": 96, "name": "Result"}], "name": "(*arrayAggregate)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 161, "name": "ColumnTypes"}, {"value": 76, "name": "Next"}, {"value": 32, "name": "Start"}, {"value": 191, "name": "Values"}], "name": "(*arrayValueGenerator)."}, {"children": [{"value": 290, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 887, "name": "Result"}], "name": "(*avgAggregate)."}, {"children": [{"value": 269, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 115, "name": "Result"}], "name": "(*boolAndAggregate)."}, {"children": [{"value": 261, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 115, "name": "Result"}], "name": "(*boolOrAggregate)."}, {"children": [{"value": 514, "name": "Add"}, {"value": 86, "name": "Close"}, {"value": 607, "name": "Result"}], "name": "(*concatAggregate)."}, {"children": [{"value": 198, "name": "VisitPost"}, {"value": 179, "name": "VisitPre"}], "name": "(*constantFolderVisitor)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 200, "name": "VisitPre"}], "name": "(*containsVarsVisitor)."}, {"children": [{"value": 184, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 113, "name": "Result"}], "name": "(*countAggregate)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 375, "name": "Compute"}], "name": "(*cumulativeDistWindow)."}, {"children": [{"value": 159, "name": "AmbiguousFormat"}, {"value": 239, "name": "Compare"}, {"value": 218, "name": "Eval"}, {"value": 178, "name": "Format"}, {"value": 159, "name": "IsMax"}, {"value": 159, "name": "IsMin"}, {"value": 177, "name": "Next"}, {"value": 177, "name": "Prev"}, {"value": 178, "name": "ResolvedType"}, {"value": 163, "name": "Size"}, {"value": 178, "name": "String"}, {"value": 218, "name": "TypeCheck"}, {"value": 200, "name": "Walk"}, {"value": 183, "name": "max"}, {"value": 183, "name": "min"}], "name": "(*dNull)."}, {"children": [{"value": 37, "name": "VisitPost"}, {"value": 614, "name": "VisitPre"}], "name": "(*debugVisitor)."}, {"children": [{"value": 332, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 520, "name": "Result"}], "name": "(*decimalSumAggregate)."}, {"children": [{"value": 611, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 473, "name": "Result"}], "name": "(*decimalVarianceAggregate)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 249, "name": "Compute"}], "name": "(*denseRankWindow)."}, {"children": [{"value": 150, "name": "Close"}, {"value": 289, "name": "Compute"}], "name": "(*firstValueWindow)."}, {"children": [{"value": 262, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 187, "name": "Result"}], "name": "(*floatSumAggregate)."}, {"children": [{"value": 324, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 216, "name": "Result"}], "name": "(*floatVarianceAggregate)."}, {"children": [{"value": 229, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 41, "name": "Result"}], "name": "(*identAggregate)."}, {"children": [{"value": 534, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 570, "name": "Result"}], "name": "(*intSumAggregate)."}, {"children": [{"value": 327, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 103, "name": "Result"}], "name": "(*intVarianceAggregate)."}, {"children": [{"value": 784, "name": "consumeInt"}, {"value": 1021, "name": "consumeNum"}, {"value": 87, "name": "consumeSpaces"}, {"value": 508, "name": "consumeUnit"}, {"value": 1390, "name": "parseShortDuration"}], "name": "(*intervalLexer)."}, {"children": [{"value": 300, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 201, "name": "Result"}], "name": "(*intervalSumAggregate)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 296, "name": "VisitPre"}, {"value": 107, "name": "run"}], "name": "(*isConstVisitor)."}, {"children": [{"value": 150, "name": "Close"}, {"value": 369, "name": "Compute"}], "name": "(*lastValueWindow)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 1148, "name": "Compute"}], "name": "(*leadLagWindow)."}, {"children": [{"value": 223, "name": "pattern"}], "name": "(*likeKey)."}, {"children": [{"value": 498, "name": "VisitPost"}, {"value": 129, "name": "VisitPre"}, {"value": 95, "name": "isConst"}], "name": "(*normalizeVisitor)."}, {"children": [{"value": 150, "name": "Close"}, {"value": 297, "name": "Compute"}], "name": "(*nthValueWindow)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 1003, "name": "Compute"}], "name": "(*ntileWindow)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 491, "name": "Compute"}], "name": "(*percentRankWindow)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 1789, "name": "VisitPre"}], "name": "(*placeholderAnnotationVisitor)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*placeholderTypeAmbiguityError)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 300, "name": "Compute"}], "name": "(*rankWindow)."}, {"children": [{"value": 233, "name": "pattern"}], "name": "(*regexpEscapeKey)."}, {"children": [{"value": 233, "name": "pattern"}], "name": "(*regexpFlagKey)."}, {"children": [{"value": 223, "name": "pattern"}], "name": "(*regexpKey)."}, {"children": [{"value": 150, "name": "Close"}, {"value": 271, "name": "Compute"}], "name": "(*rowNumberWindow)."}, {"children": [{"value": 1, "name": "Close"}, {"value": 160, "name": "ColumnTypes"}, {"value": 139, "name": "Next"}, {"value": 19, "name": "Start"}, {"value": 200, "name": "Values"}], "name": "(*seriesValueGenerator)."}, {"children": [{"value": 215, "name": "pattern"}], "name": "(*similarToKey)."}, {"children": [{"value": 21, "name": "VisitPost"}, {"value": 311, "name": "VisitPre"}], "name": "(*simpleVisitor)."}, {"children": [{"value": 271, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 185, "name": "Result"}], "name": "(*smallIntSumAggregate)."}, {"children": [{"value": 18, "name": "Lookahead"}, {"value": 333407, "name": "Parse"}, {"children": [{"value": 41, "name": "func1"}], "name": "Parse."}], "name": "(*sqlParserImpl)."}, {"children": [{"value": 128, "name": "Add"}, {"value": 1, "name": "Close"}, {"value": 834, "name": "Result"}], "name": "(*stdDevAggregate)."}, {"children": [{"value": 159, "name": "Equivalent"}, {"value": 227, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tAny)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tBool)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tBytes)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tDate)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tDecimal)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tFloat)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tInt)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tInterval)."}, {"children": [{"value": 314, "name": "Equivalent"}, {"value": 227, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tNull)."}, {"children": [{"value": 316, "name": "Equivalent"}, {"value": 240, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 160, "name": "Oid"}, {"value": 184, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 184, "name": "String"}], "name": "(*tOid)."}, {"children": [{"value": 119, "name": "Equivalent"}, {"value": 119, "name": "FamilyEqual"}, {"value": 99, "name": "IsAmbiguous"}, {"value": 161, "name": "Oid"}, {"value": 110, "name": "SQLName"}, {"value": 109, "name": "Size"}, {"value": 202, "name": "String"}], "name": "(*tOidWrapper)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tString)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tTimestamp)."}, {"children": [{"value": 395, "name": "Equivalent"}, {"value": 298, "name": "FamilyEqual"}, {"value": 159, "name": "IsAmbiguous"}, {"value": 162, "name": "Oid"}, {"value": 175, "name": "SQLName"}, {"value": 168, "name": "Size"}, {"value": 175, "name": "String"}], "name": "(*tTimestampTZ)."}, {"children": [{"value": 195, "name": "ResolvedType"}], "name": "(*typeAnnotation)."}, {"children": [{"value": 245, "name": "IndexedVarEval"}, {"value": 248, "name": "IndexedVarFormat"}, {"value": 245, "name": "IndexedVarResolvedType"}], "name": "(*unboundContainerType)."}, {"children": [{"value": 201, "name": "Error"}], "name": "(*unexpectedTypeError)."}, {"children": [{"value": 93, "name": "FamilyEqual-fm"}], "name": "(Type)."}, {"value": 8, "name": "AbsentReturningClause"}, {"value": 8, "name": "Aggregates"}, {"children": [{"value": 262, "name": "Format"}], "name": "AliasClause."}, {"children": [{"value": 266, "name": "Format"}, {"value": 149, "name": "String"}], "name": "AlterTableCmds."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "AndExpr."}, {"children": [{"value": 11, "name": "Length"}, {"value": 497, "name": "String"}, {"value": 274, "name": "Types"}, {"value": 72, "name": "getAt"}, {"value": 231, "name": "match"}, {"value": 208, "name": "matchAt"}, {"value": 21, "name": "matchLen"}], "name": "ArgTypes."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "Array."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "ArrayFlatten."}, {"children": [{"value": 139, "name": "Format"}], "name": "ArraySubscripts."}, {"value": 314, "name": "AsDArray"}, {"value": 328, "name": "AsDInt"}, {"value": 345, "name": "AsDString"}, {"children": [{"value": 168, "name": "Format"}], "name": "AsOfClause."}, {"value": 102, "name": "AsString"}, {"value": 243, "name": "AsStringWithFlags"}, {"children": [{"value": 278, "name": "matchParams"}, {"value": 21, "name": "params"}, {"value": 6, "name": "preferred"}, {"value": 11, "name": "returnType"}], "name": "BinOp."}, {"value": 8, "name": "BinOps"}, {"children": [{"value": 118, "name": "ResolvedType"}], "name": "BinaryExpr."}, {"children": [{"value": 250, "name": "String"}, {"value": 1, "name": "operator"}], "name": "BinaryOperator."}, {"children": [{"value": 393, "name": "Category"}, {"value": 11, "name": "Class"}, {"value": 10, "name": "DistSQLBlacklist"}, {"value": 125, "name": "FixedReturnType"}, {"value": 10, "name": "Impure"}, {"value": 400, "name": "Signature"}, {"value": 21, "name": "params"}, {"value": 10, "name": "preferred"}, {"value": 11, "name": "returnType"}], "name": "Builtin."}, {"value": 8, "name": "Builtins"}, {"children": [{"value": 115, "name": "ResolvedType"}], "name": "CaseExpr."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "CastExpr."}, {"value": 1926, "name": "CastTargetToDatumType"}, {"children": [{"value": 307, "name": "matchParams"}, {"value": 21, "name": "params"}, {"value": 6, "name": "preferred"}, {"value": 13, "name": "returnType"}], "name": "CmpOp."}, {"value": 8, "name": "CmpOps"}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "CoalesceExpr."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "CollateExpr."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "ColumnCollation."}, {"children": [{"value": 118, "name": "ResolvedType"}], "name": "ComparisonExpr."}, {"children": [{"value": 250, "name": "String"}, {"value": 1, "name": "operator"}], "name": "ComparisonOperator."}, {"value": 128, "name": "ContainsVars"}, {"value": 8, "name": "DBoolFalse"}, {"value": 8, "name": "DBoolTrue"}, {"children": [{"value": 86, "name": "Add"}, {"value": 174, "name": "Div"}, {"value": 119, "name": "DivFloat"}, {"value": 301, "name": "Encode"}, {"value": 135, "name": "EncodeBigInt"}, {"value": 79, "name": "Mul"}, {"value": 119, "name": "MulFloat"}, {"value": 86, "name": "Sub"}], "name": "DInterval."}, {"value": 16, "name": "DNull"}, {"children": [{"value": 88, "name": "Close"}, {"value": 118, "name": "ColumnTypes"}, {"value": 108, "name": "Start"}, {"value": 118, "name": "Values"}], "name": "DTable."}, {"children": [{"value": 154, "name": "Add"}, {"value": 177, "name": "AddDate"}, {"value": 77, "name": "After"}, {"value": 211, "name": "AppendFormat"}, {"value": 77, "name": "Before"}, {"value": 133, "name": "Clock"}, {"value": 133, "name": "Date"}, {"value": 110, "name": "Day"}, {"value": 68, "name": "Equal"}, {"value": 163, "name": "GobEncode"}, {"value": 110, "name": "Hour"}, {"value": 120, "name": "ISOWeek"}, {"value": 141, "name": "In"}, {"value": 59, "name": "IsZero"}, {"value": 130, "name": "Local"}, {"value": 56, "name": "Location"}, {"value": 163, "name": "MarshalBinary"}, {"value": 163, "name": "MarshalJSON"}, {"value": 163, "name": "MarshalText"}, {"value": 110, "name": "Minute"}, {"value": 110, "name": "Month"}, {"value": 42, "name": "Nanosecond"}, {"value": 141, "name": "Round"}, {"value": 110, "name": "Second"}, {"value": 141, "name": "Sub"}, {"value": 141, "name": "Truncate"}, {"value": 107, "name": "UTC"}, {"value": 55, "name": "Unix"}, {"value": 70, "name": "UnixNano"}, {"value": 110, "name": "Weekday"}, {"value": 110, "name": "Year"}, {"value": 110, "name": "YearDay"}, {"value": 133, "name": "Zone"}], "name": "DTimestamp."}, {"children": [{"value": 154, "name": "Add"}, {"value": 177, "name": "AddDate"}, {"value": 77, "name": "After"}, {"value": 211, "name": "AppendFormat"}, {"value": 77, "name": "Before"}, {"value": 133, "name": "Clock"}, {"value": 133, "name": "Date"}, {"value": 110, "name": "Day"}, {"value": 68, "name": "Equal"}, {"value": 163, "name": "GobEncode"}, {"value": 110, "name": "Hour"}, {"value": 120, "name": "ISOWeek"}, {"value": 141, "name": "In"}, {"value": 59, "name": "IsZero"}, {"value": 130, "name": "Local"}, {"value": 56, "name": "Location"}, {"value": 163, "name": "MarshalBinary"}, {"value": 163, "name": "MarshalJSON"}, {"value": 163, "name": "MarshalText"}, {"value": 110, "name": "Minute"}, {"value": 110, "name": "Month"}, {"value": 42, "name": "Nanosecond"}, {"value": 141, "name": "Round"}, {"value": 110, "name": "Second"}, {"value": 141, "name": "Sub"}, {"value": 141, "name": "Truncate"}, {"value": 107, "name": "UTC"}, {"value": 55, "name": "Unix"}, {"value": 70, "name": "UnixNano"}, {"value": 110, "name": "Weekday"}, {"value": 110, "name": "Year"}, {"value": 110, "name": "YearDay"}, {"value": 133, "name": "Zone"}], "name": "DTimestampTZ."}, {"value": 8, "name": "DZero"}, {"value": 2409, "name": "DatumTypeToColumnType"}, {"children": [{"value": 304, "name": "Format"}, {"value": 11, "name": "Len"}, {"value": 327, "name": "Reverse"}], "name": "Datums."}, {"value": 8, "name": "DecimalCtx"}, {"value": 56, "name": "DecimalOne"}, {"children": [{"value": 208, "name": "Eval"}, {"value": 81, "name": "Format"}, {"value": 19, "name": "ResolvedType"}, {"value": 116, "name": "String"}, {"value": 43, "name": "TypeCheck"}, {"value": 92, "name": "Walk"}], "name": "DefaultVal."}, {"children": [{"value": 250, "name": "String"}], "name": "Direction."}, {"children": [{"value": 69, "name": "String"}], "name": "DropBehavior."}, {"value": 8, "name": "ExactCtx"}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "ExistsExpr."}, {"value": 390, "name": "ExprDebugString"}, {"children": [{"value": 266, "name": "Format"}, {"value": 149, "name": "String"}], "name": "Exprs."}, {"value": 308, "name": "FindEqualComparisonFunction"}, {"value": 8, "name": "FmtAnonymize"}, {"value": 8, "name": "FmtBareStrings"}, {"value": 8, "name": "FmtHideConstants"}, {"value": 216, "name": "FmtIndexedVarFormat"}, {"value": 8, "name": "FmtParsable"}, {"value": 8, "name": "FmtShowTypes"}, {"value": 8, "name": "FmtSimple"}, {"value": 8, "name": "FmtSimpleWithPasswords"}, {"value": 216, "name": "FmtStarDatumFormat"}, {"value": 8, "name": "FmtSymbolicVars"}, {"value": 1037, "name": "FormatNode"}, {"children": [{"value": 121, "name": "ResolvedType"}], "name": "FuncExpr."}, {"value": 256, "name": "GenerateUniqueInt"}, {"value": 8, "name": "Generators"}, {"value": 473, "name": "GetBool"}, {"children": [{"value": 258, "name": "Format"}], "name": "GroupBy."}, {"value": 8, "name": "HighPrecisionCtx"}, {"children": [{"value": 10, "name": "Length"}, {"value": 22, "name": "String"}, {"value": 160, "name": "Types"}, {"value": 25, "name": "getAt"}, {"value": 6, "name": "match"}, {"value": 6, "name": "matchAt"}, {"value": 6, "name": "matchLen"}], "name": "HomogeneousType."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "IfExpr."}, {"children": [{"value": 202, "name": "Format"}], "name": "IndexElem."}, {"children": [{"value": 310, "name": "Format"}], "name": "IndexElemList."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "IndirectionExpr."}, {"value": 516, "name": "IsNumericOne"}, {"value": 580, "name": "IsNumericZero"}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "IsOfTypeExpr."}, {"children": [{"value": 250, "name": "String"}], "name": "IsolationLevel."}, {"children": [{"value": 369, "name": "Format"}, {"value": 264, "name": "Get"}], "name": "KVOptions."}, {"value": 224, "name": "MakeDTimestamp"}, {"value": 224, "name": "MakeDTimestampTZ"}, {"value": 274, "name": "MakeDTimestampTZFromDate"}, {"value": 207, "name": "MakeScanner"}, {"value": 231, "name": "MustBeDArray"}, {"value": 231, "name": "MustBeDInt"}, {"value": 241, "name": "MustBeDString"}, {"children": [{"value": 114, "name": "Format"}, {"value": 303, "name": "Normalize"}, {"value": 139, "name": "String"}, {"value": 1, "name": "namePart"}], "name": "Name."}, {"children": [{"value": 282, "name": "Format"}, {"value": 149, "name": "String"}, {"value": 332, "name": "ToStrings"}], "name": "NameList."}, {"children": [{"value": 289, "name": "Format"}], "name": "NameParts."}, {"children": [{"value": 81, "name": "Format"}, {"value": 1, "name": "joinCond"}], "name": "NaturalJoinCond."}, {"value": 133, "name": "NewDBytes"}, {"value": 592, "name": "NewDCollatedString"}, {"value": 305, "name": "NewDDateFromTime"}, {"value": 82, "name": "NewDFloat"}, {"value": 80, "name": "NewDInt"}, {"value": 100, "name": "NewDIntVectorFromDArray"}, {"value": 161, "name": "NewDName"}, {"value": 100, "name": "NewDNameFromDString"}, {"value": 186, "name": "NewDOid"}, {"value": 133, "name": "NewDString"}, {"value": 173, "name": "NewDTuple"}, {"value": 99, "name": "NewIdentAggregate"}, {"value": 234, "name": "NewRegexpCache"}, {"children": [{"value": 20, "name": "func1"}], "name": "NewRegexpCache."}, {"value": 358, "name": "NewTypedComparisonExpr"}, {"children": [{"value": 208, "name": "Format"}, {"value": 118, "name": "NormalizeTableName"}, {"value": 139, "name": "String"}], "name": "NormalizableTableName."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "NotExpr."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "NotNullConstraint."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "NullConstraint."}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "NullIfExpr."}, {"children": [{"value": 114, "name": "ExactString"}, {"value": 101, "name": "Kind"}, {"children": [{"value": 88, "name": "implementsValue"}], "name": "go/constant."}], "name": "NumVal."}, {"value": 8, "name": "OidToType"}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "OrExpr."}, {"children": [{"value": 208, "name": "Format"}], "name": "OrderBy."}, {"value": 190, "name": "PGDisplayName"}, {"value": 266, "name": "PGIOBuiltinPrefix"}, {"children": [{"value": 112, "name": "ResolvedType"}], "name": "ParenExpr."}, {"value": 1379, "name": "ParseDBool"}, {"value": 239, "name": "ParseDDate"}, {"value": 134, "name": "ParseDDecimal"}, {"value": 264, "name": "ParseDFloat"}, {"value": 269, "name": "ParseDInt"}, {"value": 109, "name": "ParseDInterval"}, {"value": 188, "name": "ParseDIntervalWithField"}, {"value": 239, "name": "ParseDTimestamp"}, {"value": 243, "name": "ParseDTimestampTZ"}, {"value": 444, "name": "ParseExpr"}, {"value": 226, "name": "ParseExprs"}, {"value": 377, "name": "ParseOne"}, {"value": 545, "name": "ParseTableName"}, {"value": 555, "name": "ParseType"}, {"children": [{"value": 1408, "name": "ProcessPlaceholderAnnotations"}], "name": "PlaceholderTypes."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "PrimaryKeyConstraint."}, {"children": [{"value": 115, "name": "ResolvedType"}], "name": "RangeCond."}, {"value": 90, "name": "ReNormalizeName"}, {"value": 618, "name": "ReType"}, {"children": [{"value": 86, "name": "Format"}, {"value": 139, "name": "String"}, {"value": 88, "name": "functionReference"}], "name": "ResolvableFunctionReference."}, {"value": 8, "name": "RoundCtx"}, {"children": [{"value": 250, "name": "Format"}], "name": "SelectExpr."}, {"children": [{"value": 349, "name": "Format"}], "name": "SelectExprs."}, {"value": 102, "name": "Serialize"}, {"value": 98, "name": "SimilarEscape"}, {"value": 325, "name": "SimpleVisit"}, {"value": 8, "name": "StarDatumInstance"}, {"children": [{"value": 266, "name": "Format"}, {"value": 149, "name": "String"}], "name": "StatementList."}, {"value": 166, "name": "StripParens"}, {"children": [{"value": 339, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 87, "name": "IsAmbiguous"}, {"value": 143, "name": "Oid"}, {"value": 143, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 143, "name": "String"}], "name": "TArray."}, {"children": [{"value": 390, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 16, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 190, "name": "String"}], "name": "TCollatedString."}, {"children": [{"value": 341, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 109, "name": "IsAmbiguous"}, {"value": 109, "name": "Oid"}, {"value": 109, "name": "SQLName"}, {"value": 109, "name": "Size"}, {"value": 190, "name": "String"}], "name": "TPlaceholder."}, {"children": [{"value": 313, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 101, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 95, "name": "Size"}, {"value": 161, "name": "String"}], "name": "TTable."}, {"children": [{"value": 508, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 147, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 171, "name": "Size"}, {"value": 470, "name": "String"}], "name": "TTuple."}, {"children": [{"value": 266, "name": "Format"}], "name": "TableDefs."}, {"children": [{"value": 315, "name": "Format"}], "name": "TableExprs."}, {"children": [{"value": 266, "name": "Format"}], "name": "TableNameReferences."}, {"children": [{"value": 223, "name": "Format"}], "name": "TableNameWithIndex."}, {"children": [{"value": 214, "name": "Format"}], "name": "TableNameWithIndexList."}, {"children": [{"value": 202, "name": "Format"}, {"value": 149, "name": "String"}], "name": "TableNames."}, {"children": [{"value": 231, "name": "Format"}], "name": "TablePatterns."}, {"children": [{"value": 240, "name": "Format"}], "name": "TargetList."}, {"value": 200, "name": "TimestampToDecimal"}, {"value": 16, "name": "TypeAny"}, {"value": 16, "name": "TypeAnyArray"}, {"value": 16, "name": "TypeBool"}, {"value": 16, "name": "TypeBytes"}, {"value": 334, "name": "TypeCheck"}, {"value": 779, "name": "TypeCheckAndRequire"}, {"value": 16, "name": "TypeCollatedString"}, {"value": 16, "name": "TypeDate"}, {"value": 16, "name": "TypeDecimal"}, {"value": 16, "name": "TypeFloat"}, {"value": 16, "name": "TypeInt"}, {"value": 16, "name": "TypeIntArray"}, {"value": 16, "name": "TypeIntVector"}, {"value": 16, "name": "TypeInterval"}, {"value": 16, "name": "TypeName"}, {"value": 16, "name": "TypeNameArray"}, {"value": 16, "name": "TypeNull"}, {"value": 4, "name": "TypeOid"}, {"value": 16, "name": "TypePlaceholder"}, {"value": 4, "name": "TypeRegClass"}, {"value": 4, "name": "TypeRegNamespace"}, {"value": 4, "name": "TypeRegProc"}, {"value": 4, "name": "TypeRegProcedure"}, {"value": 4, "name": "TypeRegType"}, {"value": 16, "name": "TypeString"}, {"value": 16, "name": "TypeStringArray"}, {"value": 16, "name": "TypeTable"}, {"value": 16, "name": "TypeTimestamp"}, {"value": 16, "name": "TypeTimestampTZ"}, {"value": 16, "name": "TypeTuple"}, {"children": [{"value": 564, "name": "String"}], "name": "TypedExprs."}, {"value": 24, "name": "TypesAnyNonArray"}, {"children": [{"value": 118, "name": "ResolvedType"}], "name": "UnaryExpr."}, {"children": [{"value": 21, "name": "params"}, {"value": 6, "name": "preferred"}, {"value": 11, "name": "returnType"}], "name": "UnaryOp."}, {"children": [{"value": 250, "name": "String"}, {"value": 1, "name": "operator"}], "name": "UnaryOperator."}, {"value": 8, "name": "UnaryOps"}, {"children": [{"value": 250, "name": "String"}], "name": "UnionType."}, {"children": [{"value": 1, "name": "columnQualification"}], "name": "UniqueConstraint."}, {"children": [{"value": 208, "name": "Eval"}, {"value": 65, "name": "Format"}, {"value": 110, "name": "NormalizeVarName"}, {"value": 109, "name": "ResolvedType"}, {"value": 116, "name": "String"}, {"value": 109, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 92, "name": "Walk"}, {"value": 1, "name": "namePart"}], "name": "UnqualifiedStar."}, {"children": [{"value": 253, "name": "Eval"}, {"value": 100, "name": "Format"}, {"value": 393, "name": "NormalizeTableName"}, {"value": 1632, "name": "NormalizeTablePattern"}, {"value": 1057, "name": "NormalizeUnqualifiedColumnItem"}, {"value": 2502, "name": "NormalizeVarName"}, {"value": 1530, "name": "ResolveFunction"}, {"value": 109, "name": "ResolvedType"}, {"value": 149, "name": "String"}, {"value": 254, "name": "TypeCheck"}, {"value": 1, "name": "Variable"}, {"value": 122, "name": "Walk"}, {"value": 1, "name": "functionReference"}, {"value": 1365, "name": "normalizeFunctionName"}, {"value": 1699, "name": "normalizeTableNameAsValue"}], "name": "UnresolvedName."}, {"children": [{"value": 310, "name": "Format"}], "name": "UnresolvedNames."}, {"children": [{"value": 214, "name": "Format"}], "name": "UpdateExprs."}, {"children": [{"value": 250, "name": "String"}], "name": "UserPriority."}, {"value": 344, "name": "ValidateRestartCheckpoint"}, {"children": [{"value": 22, "name": "StatementTag"}, {"value": 10, "name": "StatementType"}], "name": "ValuesClause."}, {"children": [{"value": 10, "name": "Length"}, {"value": 173, "name": "String"}, {"value": 161, "name": "Types"}, {"value": 21, "name": "getAt"}, {"value": 183, "name": "match"}, {"value": 182, "name": "matchAt"}, {"value": 6, "name": "matchLen"}], "name": "VariadicType."}, {"value": 411, "name": "WalkExpr"}, {"value": 90, "name": "WalkExprConst"}, {"value": 281, "name": "WalkStmt"}, {"children": [{"value": 319, "name": "Format"}], "name": "Window."}, {"value": 459, "name": "addFrac"}, {"value": 8, "name": "aliasedOidToName"}, {"value": 426, "name": "anchorPattern"}, {"value": 329, "name": "arrayLength"}, {"value": 303, "name": "arrayLower"}, {"value": 880, "name": "arrayOf"}, {"value": 400, "name": "arrayOfType"}, {"value": 8, "name": "big10E10"}, {"value": 8, "name": "big10E6"}, {"value": 8, "name": "bigTen"}, {"value": 167, "name": "binExprFmtWithParen"}, {"value": 282, "name": "binExprFmtWithParenAndSubOp"}, {"children": [{"value": 440, "name": "lookupImpl"}], "name": "binOpOverload."}, {"value": 208, "name": "binaryOpName"}, {"value": 8, "name": "binaryOpToToken"}, {"value": 8, "name": "binaryOpToTokenIntOnly"}, {"value": 8, "name": "binaryShiftOpToToken"}, {"value": 24, "name": "boolCastTypes"}, {"value": 8, "name": "boolColTypeBool"}, {"value": 8, "name": "boolColTypeBoolean"}, {"value": 391, "name": "boolFromCmp"}, {"value": 632, "name": "bytesBuiltin1"}, {"children": [{"value": 200, "name": "func1"}], "name": "bytesBuiltin1."}, {"value": 24, "name": "bytesCastTypes"}, {"value": 8, "name": "bytesColTypeBlob"}, {"value": 8, "name": "bytesColTypeBytea"}, {"value": 8, "name": "bytesColTypeBytes"}, {"value": 209, "name": "canConstantBecome"}, {"value": 213, "name": "caseInsensitive"}, {"value": 920, "name": "categorizeType"}, {"value": 24, "name": "ceilImpl"}, {"value": 459, "name": "checkAllExprsAreTuples"}, {"value": 232, "name": "checkAllTuplesHaveLength"}, {"value": 485, "name": "checkForMissingZone"}, {"value": 293, "name": "checkTupleHasLength"}, {"children": [{"value": 496, "name": "lookupImpl"}], "name": "cmpOpOverload."}, {"value": 8, "name": "cmpOpReturnType"}, {"value": 163, "name": "cmpOpScalarEQFn"}, {"value": 451, "name": "cmpOpScalarFn"}, {"value": 163, "name": "cmpOpScalarLEFn"}, {"value": 163, "name": "cmpOpScalarLTFn"}, {"value": 690, "name": "cmpOpTupleFn"}, {"value": 477, "name": "collectBuiltins"}, {"value": 1031, "name": "commonConstantType"}, {"value": 272, "name": "commonNumericConstantType"}, {"value": 204, "name": "commonStringConstantType"}, {"value": 444, "name": "compareTimestamps"}, {"value": 400, "name": "comparisonOpName"}, {"value": 8, "name": "comparisonOpToToken"}, {"value": 1, "name": "constDBoolFalse"}, {"value": 1, "name": "constDBoolTrue"}, {"value": 8, "name": "constDInt"}, {"children": [{"value": 4181, "name": "VisitPost"}, {"children": [{"value": 127, "name": "func1"}], "name": "VisitPost."}, {"value": 26, "name": "VisitPre"}], "name": "constantFolderVisitor."}, {"value": 8, "name": "customOidNames"}, {"value": 8, "name": "dEmptyBytes"}, {"value": 8, "name": "dEmptyString"}, {"value": 8, "name": "dMaxFloat"}, {"value": 8, "name": "dMaxInt"}, {"value": 8, "name": "dMaxInterval"}, {"value": 8, "name": "dMinFloat"}, {"value": 8, "name": "dMinInt"}, {"value": 8, "name": "dMinInterval"}, {"children": [{"value": 6, "name": "AmbiguousFormat"}, {"value": 148, "name": "Compare"}, {"value": 110, "name": "Eval"}, {"value": 81, "name": "Format"}, {"value": 6, "name": "IsMax"}, {"value": 6, "name": "IsMin"}, {"value": 24, "name": "Next"}, {"value": 24, "name": "Prev"}, {"value": 25, "name": "ResolvedType"}, {"value": 10, "name": "Size"}, {"value": 116, "name": "String"}, {"value": 110, "name": "TypeCheck"}, {"value": 92, "name": "Walk"}, {"value": 30, "name": "max"}, {"value": 30, "name": "min"}], "name": "dNull."}, {"value": 24, "name": "dateCastTypes"}, {"value": 8, "name": "dateColTypeDate"}, {"value": 630, "name": "decimalBuiltin1"}, {"children": [{"value": 186, "name": "func1"}], "name": "decimalBuiltin1."}, {"value": 717, "name": "decimalBuiltin2"}, {"children": [{"value": 264, "name": "func1"}], "name": "decimalBuiltin2."}, {"value": 24, "name": "decimalCastTypes"}, {"value": 8, "name": "decimalColTypeDec"}, {"value": 8, "name": "decimalColTypeDecimal"}, {"value": 8, "name": "decimalColTypeNumeric"}, {"value": 24, "name": "decimalLikeTypes"}, {"value": 309, "name": "decimalLogFn"}, {"children": [{"value": 386, "name": "func1"}], "name": "decimalLogFn."}, {"value": 8, "name": "decimalNegativeZero"}, {"value": 8, "name": "decimalOne"}, {"value": 8, "name": "decimalTwo"}, {"value": 524, "name": "decorateTypeCheckError"}, {"value": 8, "name": "dfloatZero"}, {"value": 24, "name": "digitNames"}, {"value": 48, "name": "directionName"}, {"value": 1, "name": "dontEscape"}, {"value": 48, "name": "dropBehaviorName"}, {"value": 256, "name": "encodeMap"}, {"value": 551, "name": "encodeSQLBytes"}, {"value": 551, "name": "encodeSQLIdent"}, {"value": 92, "name": "encodeSQLString"}, {"value": 1747, "name": "encodeSQLStringWithFlags"}, {"value": 16, "name": "errAbsOfMinInt64"}, {"value": 16, "name": "errAmbiguousArrayType"}, {"value": 16, "name": "errBitLengthNotPositive"}, {"value": 16, "name": "errConstNotInt"}, {"value": 16, "name": "errConstOutOfRange"}, {"value": 16, "name": "errDivByZero"}, {"value": 16, "name": "errEmptyInputString"}, {"value": 16, "name": "errFloatOutOfRange"}, {"value": 16, "name": "errInsufficientArgs"}, {"value": 16, "name": "errIntOutOfRange"}, {"value": 16, "name": "errInvalidArgumentForNthValue"}, {"value": 16, "name": "errInvalidArgumentForNtile"}, {"value": 16, "name": "errInvalidDefaultUsage"}, {"value": 16, "name": "errLogOfNegNumber"}, {"value": 16, "name": "errLogOfZero"}, {"value": 16, "name": "errNonHomogeneousArray"}, {"value": 16, "name": "errSqrtOfNegNumber"}, {"value": 16, "name": "errStepCannotBeZero"}, {"value": 16, "name": "errZeroIP"}, {"value": 16, "name": "errZeroModulus"}, {"value": 1395, "name": "evalArrayCmp"}, {"value": 1072, "name": "evalComparison"}, {"value": 302, "name": "exprFmtWithParen"}, {"value": 4908, "name": "extractStringFromTimestamp"}, {"children": [{"value": 1, "name": "Close"}, {"value": 105, "name": "Compute"}], "name": "firstValueWindow."}, {"value": 148, "name": "fixedReturnType"}, {"children": [{"value": 19, "name": "func1"}], "name": "fixedReturnType."}, {"value": 8, "name": "flagToByte"}, {"value": 8, "name": "flagToNotByte"}, {"value": 630, "name": "floatBuiltin1"}, {"children": [{"value": 189, "name": "func1"}], "name": "floatBuiltin1."}, {"value": 717, "name": "floatBuiltin2"}, {"children": [{"value": 270, "name": "func1"}], "name": "floatBuiltin2."}, {"value": 24, "name": "floatCastTypes"}, {"value": 8, "name": "floatColTypeDouble"}, {"value": 8, "name": "floatColTypeFloat"}, {"value": 8, "name": "floatColTypeReal"}, {"value": 976, "name": "foldComparisonExpr"}, {"value": 161, "name": "foldConstantLiterals"}, {"value": 536, "name": "formatNodeOrHideConstants"}, {"value": 8, "name": "funDefs"}, {"value": 48, "name": "funcTypeName"}, {"children": [{"value": 203, "name": "func1"}, {"value": 624, "name": "func10"}, {"value": 290, "name": "func100"}, {"value": 139, "name": "func101"}, {"value": 141, "name": "func102"}, {"value": 108, "name": "func103"}, {"value": 713, "name": "func104"}, {"value": 259, "name": "func105"}, {"value": 141, "name": "func106"}, {"value": 299, "name": "func107"}, {"value": 222, "name": "func108"}, {"value": 336, "name": "func109"}, {"value": 1003, "name": "func11"}, {"value": 190, "name": "func110"}, {"value": 322, "name": "func111"}, {"value": 141, "name": "func112"}, {"value": 141, "name": "func113"}, {"value": 196, "name": "func114"}, {"value": 1369, "name": "func115"}, {"value": 293, "name": "func116"}, {"value": 293, "name": "func117"}, {"value": 293, "name": "func118"}, {"value": 677, "name": "func119"}, {"value": 380, "name": "func12"}, {"value": 247, "name": "func120"}, {"value": 247, "name": "func121"}, {"value": 936, "name": "func122"}, {"value": 215, "name": "func123"}, {"value": 194, "name": "func124"}, {"value": 379, "name": "func125"}, {"value": 780, "name": "func126"}, {"value": 1024, "name": "func127"}, {"value": 230, "name": "func128"}, {"value": 39, "name": "func129"}, {"value": 499, "name": "func13"}, {"value": 39, "name": "func130"}, {"value": 39, "name": "func131"}, {"value": 257, "name": "func132"}, {"value": 188, "name": "func133"}, {"value": 536, "name": "func134"}, {"value": 233, "name": "func135"}, {"value": 190, "name": "func136"}, {"value": 271, "name": "func137"}, {"value": 271, "name": "func138"}, {"value": 271, "name": "func139"}, {"value": 601, "name": "func14"}, {"value": 456, "name": "func140"}, {"value": 236, "name": "func141"}, {"value": 294, "name": "func142"}, {"value": 330, "name": "func143"}, {"value": 330, "name": "func144"}, {"value": 255, "name": "func145"}, {"value": 255, "name": "func146"}, {"value": 326, "name": "func147"}, {"value": 326, "name": "func148"}, {"value": 326, "name": "func149"}, {"value": 1101, "name": "func15"}, {"value": 326, "name": "func150"}, {"value": 342, "name": "func151"}, {"value": 387, "name": "func152"}, {"value": 387, "name": "func153"}, {"value": 456, "name": "func154"}, {"value": 236, "name": "func155"}, {"value": 294, "name": "func156"}, {"value": 330, "name": "func157"}, {"value": 330, "name": "func158"}, {"value": 255, "name": "func159"}, {"value": 432, "name": "func16"}, {"value": 232, "name": "func160"}, {"value": 308, "name": "func161"}, {"value": 308, "name": "func162"}, {"value": 315, "name": "func163"}, {"value": 315, "name": "func164"}, {"value": 335, "name": "func165"}, {"value": 335, "name": "func166"}, {"value": 396, "name": "func167"}, {"value": 342, "name": "func168"}, {"value": 470, "name": "func169"}, {"value": 475, "name": "func17"}, {"value": 236, "name": "func170"}, {"value": 294, "name": "func171"}, {"value": 330, "name": "func172"}, {"value": 330, "name": "func173"}, {"value": 323, "name": "func174"}, {"value": 323, "name": "func175"}, {"value": 360, "name": "func176"}, {"value": 371, "name": "func177"}, {"value": 236, "name": "func178"}, {"value": 294, "name": "func179"}, {"value": 474, "name": "func18"}, {"value": 330, "name": "func180"}, {"value": 330, "name": "func181"}, {"value": 448, "name": "func182"}, {"value": 438, "name": "func183"}, {"value": 349, "name": "func184"}, {"value": 297, "name": "func185"}, {"value": 294, "name": "func186"}, {"value": 399, "name": "func187"}, {"value": 505, "name": "func188"}, {"value": 349, "name": "func189"}, {"value": 694, "name": "func19"}, {"value": 268, "name": "func190"}, {"value": 294, "name": "func191"}, {"value": 330, "name": "func192"}, {"value": 330, "name": "func193"}, {"value": 401, "name": "func194"}, {"value": 342, "name": "func195"}, {"value": 281, "name": "func196"}, {"value": 284, "name": "func197"}, {"value": 252, "name": "func198"}, {"value": 270, "name": "func199"}, {"value": 247, "name": "func2"}, {"value": 989, "name": "func20"}, {"value": 294, "name": "func200"}, {"value": 330, "name": "func201"}, {"value": 330, "name": "func202"}, {"value": 323, "name": "func203"}, {"value": 323, "name": "func204"}, {"value": 323, "name": "func205"}, {"value": 167, "name": "func206"}, {"value": 167, "name": "func207"}, {"value": 271, "name": "func208"}, {"value": 279, "name": "func209"}, {"value": 577, "name": "func21"}, {"children": [{"value": 223, "name": "1"}], "name": "func21."}, {"value": 279, "name": "func210"}, {"value": 390, "name": "func211"}, {"value": 661, "name": "func212"}, {"value": 109, "name": "func213"}, {"value": 78, "name": "func214"}, {"value": 78, "name": "func215"}, {"value": 694, "name": "func216"}, {"value": 250, "name": "func217"}, {"value": 839, "name": "func218"}, {"value": 631, "name": "func219"}, {"value": 230, "name": "func22"}, {"value": 43, "name": "func220"}, {"value": 43, "name": "func221"}, {"value": 43, "name": "func222"}, {"value": 310, "name": "func223"}, {"value": 43, "name": "func224"}, {"value": 43, "name": "func225"}, {"value": 43, "name": "func226"}, {"value": 516, "name": "func227"}, {"value": 547, "name": "func228"}, {"value": 616, "name": "func229"}, {"value": 435, "name": "func23"}, {"value": 516, "name": "func230"}, {"value": 547, "name": "func231"}, {"value": 616, "name": "func232"}, {"value": 486, "name": "func233"}, {"value": 486, "name": "func234"}, {"value": 514, "name": "func235"}, {"value": 451, "name": "func24"}, {"value": 469, "name": "func25"}, {"value": 415, "name": "func26"}, {"value": 292, "name": "func27"}, {"value": 520, "name": "func28"}, {"value": 587, "name": "func29"}, {"value": 247, "name": "func3"}, {"value": 240, "name": "func30"}, {"value": 211, "name": "func31"}, {"value": 240, "name": "func32"}, {"value": 223, "name": "func33"}, {"value": 240, "name": "func34"}, {"value": 223, "name": "func35"}, {"value": 378, "name": "func36"}, {"value": 284, "name": "func37"}, {"value": 1309, "name": "func38"}, {"value": 380, "name": "func39"}, {"value": 147, "name": "func4"}, {"value": 537, "name": "func40"}, {"value": 662, "name": "func41"}, {"value": 235, "name": "func42"}, {"value": 545, "name": "func43"}, {"value": 596, "name": "func44"}, {"value": 599, "name": "func45"}, {"value": 648, "name": "func46"}, {"value": 126, "name": "func47"}, {"value": 138, "name": "func48"}, {"value": 244, "name": "func49"}, {"value": 110, "name": "func5"}, {"value": 147, "name": "func50"}, {"value": 147, "name": "func51"}, {"value": 520, "name": "func52"}, {"value": 578, "name": "func53"}, {"value": 520, "name": "func54"}, {"value": 481, "name": "func55"}, {"value": 207, "name": "func56"}, {"value": 186, "name": "func57"}, {"value": 185, "name": "func58"}, {"value": 109, "name": "func59"}, {"value": 110, "name": "func6"}, {"value": 109, "name": "func60"}, {"value": 144, "name": "func61"}, {"value": 144, "name": "func62"}, {"value": 100, "name": "func63"}, {"value": 134, "name": "func64"}, {"value": 134, "name": "func65"}, {"value": 342, "name": "func66"}, {"value": 445, "name": "func67"}, {"value": 2112, "name": "func68"}, {"value": 149, "name": "func69"}, {"value": 110, "name": "func7"}, {"value": 446, "name": "func70"}, {"value": 339, "name": "func71"}, {"value": 141, "name": "func72"}, {"value": 141, "name": "func73"}, {"value": 141, "name": "func74"}, {"value": 157, "name": "func75"}, {"value": 141, "name": "func76"}, {"value": 148, "name": "func77"}, {"value": 141, "name": "func78"}, {"value": 148, "name": "func79"}, {"value": 211, "name": "func8"}, {"value": 141, "name": "func80"}, {"value": 157, "name": "func81"}, {"value": 139, "name": "func82"}, {"value": 151, "name": "func83"}, {"value": 332, "name": "func84"}, {"value": 370, "name": "func85"}, {"value": 141, "name": "func86"}, {"value": 148, "name": "func87"}, {"value": 141, "name": "func88"}, {"value": 148, "name": "func89"}, {"value": 211, "name": "func9"}, {"value": 152, "name": "func90"}, {"value": 152, "name": "func91"}, {"value": 141, "name": "func92"}, {"value": 141, "name": "func93"}, {"value": 157, "name": "func94"}, {"value": 332, "name": "func95"}, {"value": 370, "name": "func96"}, {"value": 114, "name": "func97"}, {"value": 157, "name": "func98"}, {"value": 162, "name": "func99"}], "name": "glob."}, {"value": 6144, "name": "hexMap"}, {"value": 91, "name": "identityReturnType"}, {"children": [{"value": 161, "name": "func1"}], "name": "identityReturnType."}, {"value": 162964, "name": "init"}, {"children": [{"value": 1389, "name": "1"}, {"value": 654, "name": "2"}, {"value": 875, "name": "3"}, {"value": 900, "name": "4"}, {"value": 312, "name": "5"}, {"value": 912, "name": "6"}, {"value": 71, "name": "7"}], "name": "init."}, {"value": 1524, "name": "initAggregateBuiltins"}, {"value": 966, "name": "initGeneratorBuiltins"}, {"value": 1576, "name": "initPGBuiltins"}, {"value": 1242, "name": "initWindowBuiltins"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "int2vectorColType"}, {"value": 24, "name": "intCastTypes"}, {"value": 8, "name": "intColTypeBigInt"}, {"value": 8, "name": "intColTypeBigSerial"}, {"value": 8, "name": "intColTypeBit"}, {"value": 8, "name": "intColTypeInt"}, {"value": 8, "name": "intColTypeInt64"}, {"value": 8, "name": "intColTypeInt8"}, {"value": 8, "name": "intColTypeInteger"}, {"value": 8, "name": "intColTypeSerial"}, {"value": 8, "name": "intColTypeSmallInt"}, {"value": 8, "name": "intColTypeSmallSerial"}, {"value": 24, "name": "intLikeTypes"}, {"value": 8, "name": "intOne"}, {"value": 325, "name": "intPow"}, {"value": 24, "name": "intervalCastTypes"}, {"value": 8, "name": "intervalColTypeInterval"}, {"value": 447, "name": "invertComparisonOp"}, {"value": 160, "name": "isASCII"}, {"value": 408, "name": "isIdent"}, {"value": 166, "name": "isNaN"}, {"value": 1239, "name": "iso8601ToDuration"}, {"value": 8, "name": "isoDateUnitMap"}, {"value": 8, "name": "isoTimeUnitMap"}, {"value": 48, "name": "isolationLevelNames"}, {"value": 8, "name": "keywords"}, {"children": [{"value": 1, "name": "Close"}, {"value": 173, "name": "Compute"}], "name": "lastValueWindow."}, {"children": [{"value": 304, "name": "pattern"}], "name": "likeKey."}, {"value": 8, "name": "loneZeroRMatch"}, {"value": 283, "name": "makeAggBuiltin"}, {"value": 621, "name": "makeAggBuiltinWithReturnType"}, {"children": [{"value": 255, "name": "func1"}], "name": "makeAggBuiltinWithReturnType."}, {"value": 271, "name": "makeArrayGenerator"}, {"value": 193, "name": "makeEvalTupleIn"}, {"children": [{"value": 1002, "name": "func1"}], "name": "makeEvalTupleIn."}, {"value": 406, "name": "makeGeneratorBuiltin"}, {"value": 398, "name": "makeGeneratorBuiltinWithReturnType"}, {"children": [{"value": 323, "name": "func1"}], "name": "makeGeneratorBuiltinWithReturnType."}, {"value": 106, "name": "makeLeadLagWindowConstructor"}, {"children": [{"value": 134, "name": "func1"}], "name": "makeLeadLagWindowConstructor."}, {"value": 499, "name": "makeParseError"}, {"value": 501, "name": "makeSeriesGenerator"}, {"value": 385, "name": "makeTypeIOBuiltin"}, {"children": [{"value": 170, "name": "func1"}], "name": "makeTypeIOBuiltin."}, {"value": 2450, "name": "makeTypeIOBuiltins"}, {"value": 295, "name": "makeUnsupportedComparisonMessage"}, {"value": 321, "name": "makeWindowBuiltin"}, {"value": 716, "name": "matchLike"}, {"value": 333, "name": "matchRegexpWithKey"}, {"value": 433, "name": "mergeBuiltinSlices"}, {"value": 8, "name": "mustQuoteMap"}, {"value": 8, "name": "nameColTypeName"}, {"value": 105, "name": "naturalConstantType"}, {"value": 349, "name": "newArrayAggregate"}, {"value": 901, "name": "newBinExprIfValidOverload"}, {"value": 89, "name": "newBoolAndAggregate"}, {"value": 89, "name": "newBoolOrAggregate"}, {"value": 175, "name": "newBytesConcatAggregate"}, {"value": 5426, "name": "newColumnTableDef"}, {"value": 91, "name": "newCountAggregate"}, {"value": 91, "name": "newCumulativeDistWindow"}, {"value": 204, "name": "newDecimalAvgAggregate"}, {"value": 513, "name": "newDecimalStdDevAggregate"}, {"value": 84, "name": "newDecimalSumAggregate"}, {"value": 418, "name": "newDecimalVarianceAggregate"}, {"value": 99, "name": "newDenseRankWindow"}, {"value": 84, "name": "newFirstValueWindow"}, {"value": 215, "name": "newFloatAvgAggregate"}, {"value": 201, "name": "newFloatStdDevAggregate"}, {"value": 95, "name": "newFloatSumAggregate"}, {"value": 104, "name": "newFloatVarianceAggregate"}, {"value": 392, "name": "newFunctionDefinition"}, {"value": 204, "name": "newIntAvgAggregate"}, {"value": 590, "name": "newIntStdDevAggregate"}, {"value": 84, "name": "newIntSumAggregate"}, {"value": 498, "name": "newIntVarianceAggregate"}, {"value": 111, "name": "newIntervalSumAggregate"}, {"value": 84, "name": "newLastValueWindow"}, {"value": 170, "name": "newMaxAggregate"}, {"value": 170, "name": "newMinAggregate"}, {"value": 84, "name": "newNthValueWindow"}, {"value": 115, "name": "newNtileWindow"}, {"value": 91, "name": "newPercentRankWindow"}, {"value": 91, "name": "newRankWindow"}, {"value": 84, "name": "newRowNumberWindow"}, {"value": 95, "name": "newSmallIntSumAggregate"}, {"value": 172, "name": "newStringConcatAggregate"}, {"value": 24, "name": "normalize"}, {"children": [{"value": 1, "name": "Close"}, {"value": 812, "name": "Compute"}], "name": "nthValueWindow."}, {"value": 24, "name": "numValAvailDecimalNoFraction"}, {"value": 24, "name": "numValAvailDecimalWithFraction"}, {"value": 24, "name": "numValAvailInteger"}, {"value": 24, "name": "oidCastTypes"}, {"value": 8, "name": "oidColTypeOid"}, {"value": 8, "name": "oidColTypeRegClass"}, {"value": 8, "name": "oidColTypeRegNamespace"}, {"value": 8, "name": "oidColTypeRegProc"}, {"value": 8, "name": "oidColTypeRegProcedure"}, {"value": 8, "name": "oidColTypeRegType"}, {"value": 648, "name": "oidColTypeToType"}, {"value": 8, "name": "oidToArrayOid"}, {"value": 628, "name": "oidTypeToColType"}, {"value": 752, "name": "optimizedLikeFunc"}, {"children": [{"value": 16, "name": "func1"}, {"value": 6, "name": "func2"}, {"value": 17, "name": "func3"}, {"value": 268, "name": "func4"}, {"value": 244, "name": "func5"}, {"value": 311, "name": "func6"}], "name": "optimizedLikeFunc."}, {"value": 873, "name": "overlay"}, {"value": 152, "name": "parse"}, {"value": 1706, "name": "parseDInterval"}, {"value": 1877, "name": "parseDuration"}, {"value": 649, "name": "parseExprs"}, {"value": 1372, "name": "parseTimestampInLocation"}, {"value": 8, "name": "pgBuiltins"}, {"value": 8, "name": "pgSignatureRegexp"}, {"value": 770, "name": "pickFromTuple"}, {"children": [{"value": 166, "name": "Error"}], "name": "placeholderTypeAmbiguityError."}, {"value": 24, "name": "powImpls"}, {"value": 8, "name": "presetTypesForTesting"}, {"value": 175, "name": "queryOid"}, {"value": 2379, "name": "queryOidWithJoin"}, {"value": 8, "name": "regTypeInfos"}, {"children": [{"value": 293, "name": "pattern"}], "name": "regexpEscapeKey."}, {"value": 1316, "name": "regexpEvalFlags"}, {"value": 771, "name": "regexpExtract"}, {"children": [{"value": 139, "name": "pattern"}], "name": "regexpFlagKey."}, {"children": [{"value": 172, "name": "pattern"}], "name": "regexpKey."}, {"value": 1388, "name": "regexpReplace"}, {"children": [{"value": 555, "name": "func1"}], "name": "regexpReplace."}, {"value": 8, "name": "replaceSubRe"}, {"value": 8, "name": "reservedKeywords"}, {"value": 224, "name": "returnTypeToFixedType"}, {"value": 8, "name": "returningNothingClause"}, {"value": 658, "name": "round"}, {"value": 162, "name": "roundDecimal"}, {"children": [{"value": 1, "name": "Close"}, {"value": 122, "name": "Compute"}], "name": "rowNumberWindow."}, {"value": 282, "name": "sameTypeOrNull"}, {"value": 411, "name": "shouldConstantBecome"}, {"value": 2105, "name": "similarEscapeCustomChar"}, {"children": [{"value": 140, "name": "pattern"}], "name": "similarToKey."}, {"value": 16, "name": "singletonStarName"}, {"value": 238104, "name": "sqlAct"}, {"value": 17104, "name": "sqlChk"}, {"value": 8, "name": "sqlDebug"}, {"value": 17104, "name": "sqlDef"}, {"value": 1517, "name": "sqlErrorMessage"}, {"value": 1, "name": "sqlErrorVerbose"}, {"value": 7728, "name": "sqlExca"}, {"value": 17104, "name": "sqlPact"}, {"value": 2248, "name": "sqlPgo"}, {"value": 9816, "name": "sqlR1"}, {"value": 9816, "name": "sqlR2"}, {"value": 216, "name": "sqlStatname"}, {"value": 4760, "name": "sqlStdToDuration"}, {"value": 1016, "name": "sqlTok1"}, {"value": 2048, "name": "sqlTok2"}, {"value": 888, "name": "sqlTok3"}, {"value": 309, "name": "sqlTokname"}, {"value": 5376, "name": "sqlToknames"}, {"value": 605, "name": "sqllex1"}, {"value": 56, "name": "statictmp_10422"}, {"value": 56, "name": "statictmp_10427"}, {"value": 56, "name": "statictmp_10428"}, {"value": 56, "name": "statictmp_10429"}, {"value": 56, "name": "statictmp_10430"}, {"value": 56, "name": "statictmp_10443"}, {"value": 56, "name": "statictmp_10451"}, {"value": 56, "name": "statictmp_10492"}, {"value": 56, "name": "statictmp_10500"}, {"value": 56, "name": "statictmp_10512"}, {"value": 56, "name": "statictmp_10514"}, {"value": 56, "name": "statictmp_10519"}, {"value": 56, "name": "statictmp_10523"}, {"value": 56, "name": "statictmp_10524"}, {"value": 56, "name": "statictmp_10532"}, {"value": 96, "name": "statictmp_11318"}, {"value": 136, "name": "statictmp_12043"}, {"value": 208, "name": "statictmp_12086"}, {"value": 208, "name": "statictmp_12096"}, {"value": 32, "name": "statictmp_12483"}, {"value": 64, "name": "statictmp_12493"}, {"value": 96, "name": "statictmp_12501"}, {"value": 32, "name": "statictmp_12509"}, {"value": 64, "name": "statictmp_12519"}, {"value": 96, "name": "statictmp_12527"}, {"value": 32, "name": "statictmp_12534"}, {"value": 32, "name": "statictmp_12542"}, {"value": 64, "name": "statictmp_12550"}, {"value": 176, "name": "statictmp_12820"}, {"value": 4, "name": "statictmp_12821"}, {"value": 40, "name": "statictmp_12822"}, {"value": 160, "name": "statictmp_12823"}, {"value": 384, "name": "statictmp_12825"}, {"value": 24, "name": "statictmp_12826"}, {"value": 64, "name": "statictmp_12827"}, {"value": 24, "name": "statictmp_12828"}, {"value": 96, "name": "statictmp_12829"}, {"value": 24, "name": "statictmp_12830"}, {"value": 64, "name": "statictmp_12831"}, {"value": 24, "name": "statictmp_12832"}, {"value": 96, "name": "statictmp_12833"}, {"value": 24, "name": "statictmp_12834"}, {"value": 192, "name": "statictmp_12836"}, {"value": 24, "name": "statictmp_12837"}, {"value": 24, "name": "statictmp_12839"}, {"value": 192, "name": "statictmp_12841"}, {"value": 288, "name": "statictmp_12842"}, {"value": 24, "name": "statictmp_12843"}, {"value": 64, "name": "statictmp_12844"}, {"value": 16, "name": "statictmp_12845"}, {"value": 16, "name": "statictmp_12846"}, {"value": 16, "name": "statictmp_12847"}, {"value": 32, "name": "statictmp_12848"}, {"value": 32, "name": "statictmp_12849"}, {"value": 32, "name": "statictmp_12850"}, {"value": 24, "name": "statictmp_12855"}, {"value": 16, "name": "statictmp_12857"}, {"value": 16, "name": "statictmp_12858"}, {"value": 16, "name": "statictmp_12859"}, {"value": 16, "name": "statictmp_12860"}, {"value": 16, "name": "statictmp_12861"}, {"value": 16, "name": "statictmp_12862"}, {"value": 16, "name": "statictmp_12863"}, {"value": 40, "name": "statictmp_12864"}, {"value": 16, "name": "statictmp_12865"}, {"value": 24, "name": "statictmp_12866"}, {"value": 16, "name": "statictmp_12867"}, {"value": 32, "name": "statictmp_12868"}, {"value": 32, "name": "statictmp_12869"}, {"value": 32, "name": "statictmp_12870"}, {"value": 32, "name": "statictmp_12871"}, {"value": 32, "name": "statictmp_12872"}, {"value": 32, "name": "statictmp_12873"}, {"value": 32, "name": "statictmp_12874"}, {"value": 32, "name": "statictmp_12875"}, {"value": 32, "name": "statictmp_12876"}, {"value": 32, "name": "statictmp_12877"}, {"value": 32, "name": "statictmp_12878"}, {"value": 32, "name": "statictmp_12879"}, {"value": 32, "name": "statictmp_12880"}, {"value": 24, "name": "statictmp_12881"}, {"value": 24, "name": "statictmp_12882"}, {"value": 24, "name": "statictmp_12883"}, {"value": 16, "name": "statictmp_12884"}, {"value": 16, "name": "statictmp_12885"}, {"value": 32, "name": "statictmp_12886"}, {"value": 32, "name": "statictmp_12887"}, {"value": 4, "name": "statictmp_12888"}, {"value": 32, "name": "statictmp_12889"}, {"value": 112, "name": "statictmp_12890"}, {"value": 32, "name": "statictmp_12891"}, {"value": 16, "name": "statictmp_12892"}, {"value": 56, "name": "statictmp_12893"}, {"value": 240, "name": "statictmp_12894"}, {"value": 24, "name": "statictmp_12895"}, {"value": 24, "name": "statictmp_12896"}, {"value": 112, "name": "statictmp_12898"}, {"value": 192, "name": "statictmp_12899"}, {"value": 4, "name": "statictmp_12900"}, {"value": 176, "name": "statictmp_12901"}, {"value": 176, "name": "statictmp_12902"}, {"value": 208, "name": "statictmp_12903"}, {"value": 4, "name": "statictmp_12904"}, {"value": 64, "name": "statictmp_12905"}, {"value": 112, "name": "statictmp_12906"}, {"value": 112, "name": "statictmp_12907"}, {"value": 80, "name": "statictmp_12908"}, {"value": 80, "name": "statictmp_12909"}, {"value": 4, "name": "statictmp_12910"}, {"value": 40, "name": "statictmp_12911"}, {"value": 40, "name": "statictmp_12912"}, {"value": 40, "name": "statictmp_12913"}, {"value": 40, "name": "statictmp_12914"}, {"value": 40, "name": "statictmp_12915"}, {"value": 40, "name": "statictmp_12916"}, {"value": 40, "name": "statictmp_12917"}, {"value": 40, "name": "statictmp_12919"}, {"value": 16, "name": "statictmp_12920"}, {"value": 24, "name": "statictmp_12924"}, {"value": 16, "name": "statictmp_12925"}, {"value": 16, "name": "statictmp_12926"}, {"value": 32, "name": "statictmp_13262"}, {"value": 32, "name": "statictmp_13265"}, {"value": 32, "name": "statictmp_13268"}, {"value": 32, "name": "statictmp_13271"}, {"value": 96, "name": "statictmp_13274"}, {"value": 64, "name": "statictmp_13277"}, {"value": 32, "name": "statictmp_13280"}, {"value": 96, "name": "statictmp_13283"}, {"value": 128, "name": "statictmp_13286"}, {"value": 64, "name": "statictmp_13289"}, {"value": 96, "name": "statictmp_13292"}, {"value": 128, "name": "statictmp_13295"}, {"value": 64, "name": "statictmp_13298"}, {"value": 64, "name": "statictmp_13301"}, {"value": 64, "name": "statictmp_13304"}, {"value": 64, "name": "statictmp_13307"}, {"value": 64, "name": "statictmp_13314"}, {"value": 64, "name": "statictmp_13317"}, {"value": 64, "name": "statictmp_13320"}, {"value": 64, "name": "statictmp_13323"}, {"value": 32, "name": "statictmp_13326"}, {"value": 64, "name": "statictmp_13329"}, {"value": 64, "name": "statictmp_13344"}, {"value": 64, "name": "statictmp_13347"}, {"value": 64, "name": "statictmp_13350"}, {"value": 32, "name": "statictmp_13353"}, {"value": 64, "name": "statictmp_13356"}, {"value": 32, "name": "statictmp_13359"}, {"value": 32, "name": "statictmp_13362"}, {"value": 64, "name": "statictmp_13367"}, {"value": 64, "name": "statictmp_13372"}, {"value": 64, "name": "statictmp_13375"}, {"value": 32, "name": "statictmp_13378"}, {"value": 32, "name": "statictmp_13381"}, {"value": 64, "name": "statictmp_13384"}, {"value": 64, "name": "statictmp_13387"}, {"value": 64, "name": "statictmp_13390"}, {"value": 32, "name": "statictmp_13399"}, {"value": 32, "name": "statictmp_13402"}, {"value": 32, "name": "statictmp_13405"}, {"value": 32, "name": "statictmp_13408"}, {"value": 32, "name": "statictmp_13411"}, {"value": 64, "name": "statictmp_13414"}, {"value": 96, "name": "statictmp_13430"}, {"value": 96, "name": "statictmp_13433"}, {"value": 96, "name": "statictmp_13436"}, {"value": 96, "name": "statictmp_13439"}, {"value": 96, "name": "statictmp_13442"}, {"value": 96, "name": "statictmp_13445"}, {"value": 96, "name": "statictmp_13448"}, {"value": 96, "name": "statictmp_13451"}, {"value": 96, "name": "statictmp_13462"}, {"value": 192, "name": "statictmp_13467"}, {"value": 96, "name": "statictmp_13482"}, {"value": 192, "name": "statictmp_13485"}, {"value": 192, "name": "statictmp_13490"}, {"value": 192, "name": "statictmp_13493"}, {"value": 96, "name": "statictmp_13496"}, {"value": 96, "name": "statictmp_13499"}, {"value": 96, "name": "statictmp_13506"}, {"value": 96, "name": "statictmp_13509"}, {"value": 288, "name": "statictmp_13512"}, {"value": 96, "name": "statictmp_13515"}, {"value": 192, "name": "statictmp_13518"}, {"value": 96, "name": "statictmp_13521"}, {"value": 192, "name": "statictmp_13527"}, {"value": 96, "name": "statictmp_13530"}, {"value": 192, "name": "statictmp_13533"}, {"value": 192, "name": "statictmp_13536"}, {"value": 96, "name": "statictmp_13539"}, {"value": 288, "name": "statictmp_13542"}, {"value": 288, "name": "statictmp_13563"}, {"value": 192, "name": "statictmp_13570"}, {"value": 288, "name": "statictmp_13577"}, {"value": 96, "name": "statictmp_13580"}, {"value": 384, "name": "statictmp_13587"}, {"value": 288, "name": "statictmp_13592"}, {"value": 96, "name": "statictmp_13601"}, {"value": 96, "name": "statictmp_13604"}, {"value": 96, "name": "statictmp_13607"}, {"value": 96, "name": "statictmp_13610"}, {"value": 96, "name": "statictmp_13613"}, {"value": 96, "name": "statictmp_13616"}, {"value": 96, "name": "statictmp_13619"}, {"value": 96, "name": "statictmp_13622"}, {"value": 96, "name": "statictmp_13625"}, {"value": 96, "name": "statictmp_13628"}, {"value": 96, "name": "statictmp_13631"}, {"value": 192, "name": "statictmp_13634"}, {"value": 4, "name": "statictmp_13638"}, {"value": 2, "name": "statictmp_13639"}, {"value": 2, "name": "statictmp_13643"}, {"value": 1, "name": "statictmp_13644"}, {"value": 16, "name": "statictmp_13652"}, {"value": 16, "name": "statictmp_13653"}, {"value": 8, "name": "statictmp_13657"}, {"value": 8, "name": "statictmp_13658"}, {"value": 32, "name": "statictmp_13662"}, {"value": 32, "name": "statictmp_13663"}, {"value": 40, "name": "statictmp_13667"}, {"value": 40, "name": "statictmp_13668"}, {"value": 16, "name": "statictmp_13672"}, {"value": 16, "name": "statictmp_13673"}, {"value": 48, "name": "statictmp_13677"}, {"value": 48, "name": "statictmp_13678"}, {"value": 3, "name": "statictmp_13682"}, {"value": 3, "name": "statictmp_13683"}, {"value": 64, "name": "statictmp_13749"}, {"value": 96, "name": "statictmp_13756"}, {"value": 32, "name": "statictmp_13763"}, {"value": 16, "name": "statictmp_13802"}, {"value": 48, "name": "statictmp_13805"}, {"value": 16, "name": "statictmp_13808"}, {"value": 16, "name": "statictmp_13811"}, {"value": 16, "name": "statictmp_13814"}, {"value": 16, "name": "statictmp_13817"}, {"value": 16, "name": "statictmp_13820"}, {"value": 16, "name": "statictmp_13823"}, {"value": 32, "name": "statictmp_13826"}, {"value": 16, "name": "statictmp_13829"}, {"value": 4528, "name": "statictmp_13833"}, {"value": 2264, "name": "statictmp_13834"}, {"value": 64, "name": "statictmp_13880"}, {"value": 96, "name": "statictmp_13883"}, {"value": 32, "name": "statictmp_13886"}, {"value": 32, "name": "statictmp_13889"}, {"value": 32, "name": "statictmp_13892"}, {"value": 64, "name": "statictmp_13895"}, {"value": 64, "name": "statictmp_13898"}, {"value": 32, "name": "statictmp_13901"}, {"value": 64, "name": "statictmp_13904"}, {"value": 32, "name": "statictmp_13907"}, {"value": 64, "name": "statictmp_13910"}, {"value": 32, "name": "statictmp_13913"}, {"value": 32, "name": "statictmp_13916"}, {"value": 96, "name": "statictmp_13922"}, {"value": 192, "name": "statictmp_13925"}, {"value": 96, "name": "statictmp_13928"}, {"value": 96, "name": "statictmp_13931"}, {"value": 96, "name": "statictmp_13934"}, {"value": 96, "name": "statictmp_13937"}, {"value": 96, "name": "statictmp_13940"}, {"value": 192, "name": "statictmp_13943"}, {"value": 96, "name": "statictmp_13946"}, {"value": 96, "name": "statictmp_13949"}, {"value": 96, "name": "statictmp_13952"}, {"value": 96, "name": "statictmp_13955"}, {"value": 60, "name": "statictmp_14043"}, {"value": 240, "name": "statictmp_14044"}, {"value": 20, "name": "statictmp_14048"}, {"value": 20, "name": "statictmp_14049"}, {"value": 4, "name": "statictmp_14053"}, {"value": 16, "name": "statictmp_14054"}, {"value": 32, "name": "statictmp_14073"}, {"value": 24, "name": "statictmp_1843"}, {"value": 24, "name": "statictmp_1844"}, {"value": 24, "name": "statictmp_1866"}, {"value": 7, "name": "statictmp_2320"}, {"value": 7, "name": "statictmp_2321"}, {"value": 32, "name": "statictmp_2348"}, {"value": 64, "name": "statictmp_2370"}, {"value": 80, "name": "statictmp_2382"}, {"value": 64, "name": "statictmp_2400"}, {"value": 56, "name": "statictmp_2412"}, {"value": 56, "name": "statictmp_3604"}, {"value": 32, "name": "statictmp_361"}, {"value": 56, "name": "statictmp_3612"}, {"value": 56, "name": "statictmp_3616"}, {"value": 96, "name": "statictmp_3645"}, {"value": 96, "name": "statictmp_365"}, {"value": 24, "name": "statictmp_3746"}, {"value": 96, "name": "statictmp_3902"}, {"value": 24, "name": "statictmp_4008"}, {"value": 24, "name": "statictmp_4012"}, {"value": 24, "name": "statictmp_4020"}, {"value": 96, "name": "statictmp_4566"}, {"value": 32, "name": "statictmp_4580"}, {"value": 32, "name": "statictmp_4585"}, {"value": 32, "name": "statictmp_749"}, {"value": 32, "name": "statictmp_770"}, {"value": 32, "name": "statictmp_791"}, {"value": 96, "name": "statictmp_807"}, {"value": 32, "name": "statictmp_825"}, {"value": 4, "name": "statictmp_8438"}, {"value": 40, "name": "statictmp_9600"}, {"value": 40, "name": "statictmp_9604"}, {"value": 40, "name": "statictmp_9608"}, {"value": 40, "name": "statictmp_9613"}, {"value": 40, "name": "statictmp_9617"}, {"value": 24, "name": "strValAvailAllParsable"}, {"value": 24, "name": "strValAvailBytes"}, {"value": 24, "name": "strValAvailBytesString"}, {"value": 632, "name": "stringBuiltin1"}, {"children": [{"value": 217, "name": "func1"}], "name": "stringBuiltin1."}, {"value": 793, "name": "stringBuiltin2"}, {"children": [{"value": 344, "name": "func1"}], "name": "stringBuiltin2."}, {"value": 857, "name": "stringBuiltin3"}, {"children": [{"value": 486, "name": "func1"}], "name": "stringBuiltin3."}, {"value": 24, "name": "stringCastTypes"}, {"value": 8, "name": "stringColTypeChar"}, {"value": 8, "name": "stringColTypeString"}, {"value": 8, "name": "stringColTypeText"}, {"value": 8, "name": "stringColTypeVarChar"}, {"value": 24, "name": "substringImpls"}, {"children": [{"value": 6, "name": "Equivalent"}, {"value": 119, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tAny."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tBool."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tBytes."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tDate."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tDecimal."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tFloat."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tInt."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tInterval."}, {"children": [{"value": 209, "name": "Equivalent"}, {"value": 119, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tNull."}, {"children": [{"value": 211, "name": "Equivalent"}, {"value": 87, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 483, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 78, "name": "String"}], "name": "tOid."}, {"children": [{"value": 117, "name": "Equivalent"}, {"value": 117, "name": "FamilyEqual"}, {"value": 97, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 108, "name": "SQLName"}, {"value": 107, "name": "Size"}, {"value": 170, "name": "String"}], "name": "tOidWrapper."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tString."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tTimestamp."}, {"children": [{"value": 290, "name": "Equivalent"}, {"value": 193, "name": "FamilyEqual"}, {"value": 6, "name": "IsAmbiguous"}, {"value": 9, "name": "Oid"}, {"value": 22, "name": "SQLName"}, {"value": 15, "name": "Size"}, {"value": 22, "name": "String"}], "name": "tTimestampTZ."}, {"value": 24, "name": "timeFormats"}, {"value": 504, "name": "timeFromDatum"}, {"value": 24, "name": "timestampCastTypes"}, {"value": 8, "name": "timestampColTypeTimestamp"}, {"value": 80, "name": "timestampMinusBinOp"}, {"value": 8, "name": "timestampTzColTypeTimestampWithTZ"}, {"value": 314, "name": "truncateDInterval"}, {"value": 24, "name": "txnTSImpl"}, {"children": [{"value": 90, "name": "ResolvedType"}, {"value": 132, "name": "assertTyped"}], "name": "typeAnnotation."}, {"value": 8, "name": "typeBuiltinsHaveUnderscore"}, {"value": 724, "name": "typeCheckAndRequire"}, {"value": 189, "name": "typeCheckAndRequireBoolean"}, {"value": 6168, "name": "typeCheckComparisonOp"}, {"value": 4999, "name": "typeCheckComparisonOpWithSubOperator"}, {"value": 1315, "name": "typeCheckConstant"}, {"value": 10514, "name": "typeCheckOverloadedExprs"}, {"children": [{"value": 910, "name": "func1"}, {"value": 183, "name": "func10"}, {"value": 176, "name": "func11"}, {"value": 417, "name": "func2"}, {"value": 114, "name": "func3"}, {"value": 187, "name": "func4"}, {"value": 203, "name": "func5"}, {"value": 1758, "name": "func6"}, {"value": 272, "name": "func7"}, {"value": 176, "name": "func8"}, {"value": 183, "name": "func9"}], "name": "typeCheckOverloadedExprs."}, {"value": 6522, "name": "typeCheckSameTypedExprs"}, {"children": [{"value": 427, "name": "func1"}, {"value": 2135, "name": "func2"}, {"children": [{"value": 486, "name": "1"}], "name": "func2."}, {"value": 426, "name": "func3"}], "name": "typeCheckSameTypedExprs."}, {"value": 2884, "name": "typeCheckSameTypedTupleExprs"}, {"value": 2014, "name": "typeCheckTupleComparison"}, {"value": 16, "name": "typeFloat4"}, {"value": 16, "name": "typeInt2"}, {"value": 16, "name": "typeInt2Array"}, {"value": 16, "name": "typeInt4"}, {"value": 16, "name": "typeInt4Array"}, {"value": 16, "name": "typeVarChar"}, {"value": 356, "name": "typesOfExprs"}, {"value": 8, "name": "tzMatch"}, {"value": 48, "name": "unaryOpName"}, {"value": 8, "name": "unaryOpToToken"}, {"value": 8, "name": "unaryOpToTokenIntOnly"}, {"value": 8, "name": "unboundContainer"}, {"children": [{"value": 265, "name": "Error"}], "name": "unexpectedTypeError."}, {"value": 96, "name": "unimplemented"}, {"value": 229, "name": "unimplementedWithIssue"}, {"value": 48, "name": "unionTypeName"}, {"value": 8, "name": "uniqueIntEpoch"}, {"value": 24, "name": "uniqueIntState"}, {"value": 8, "name": "unitMap"}, {"value": 16, "name": "unknownReturnType"}, {"value": 64, "name": "userPriorityNames"}, {"value": 96, "name": "uuidV4Impl"}, {"value": 1871, "name": "validCastTypes"}, {"value": 677, "name": "walkExprSlice"}, {"value": 652, "name": "walkOrderBy"}, {"value": 1174, "name": "walkReturningClause"}, {"value": 8, "name": "windows"}, {"value": 356, "name": "wrapFunction"}, {"value": 460, "name": "wrapTypeWithOid"}, {"value": 747, "name": "wrapWithOid"}, {"value": 40, "name": "go.itab.*AliasedTableExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*AllColumnsSelector,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*AllColumnsSelector,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.*AllColumnsSelector,github.com/cockroachdb/cockroach/pkg/sql/parser.VarName"}, {"value": 40, "name": "go.itab.*AllTablesSelector,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*AllTablesSelector,github.com/cockroachdb/cockroach/pkg/sql/parser.TablePattern"}, {"value": 40, "name": "go.itab.*AlterTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableAddColumn,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableAddConstraint,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableDropColumn,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableDropConstraint,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableDropNotNull,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*AlterTableSetDefault,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*AndExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*AndExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*AndExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 72, "name": "go.itab.*AndExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.normalizableExpr"}, {"value": 64, "name": "go.itab.*AnnotateTypeExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*AnnotateTypeExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Array,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*Array,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*Array,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*ArrayColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*ArrayColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*ArrayFlatten,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*ArrayFlatten,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*ArrayFlatten,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*ArraySubscript,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Backup,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*BeginTransaction,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*BinaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*BinaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*BinaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*BoolColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*BoolColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*BytesColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*BytesColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*CaseExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*CaseExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*CaseExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*CastExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*CastExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*CastExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 56, "name": "go.itab.*CheckConstraintTableDef,github.com/cockroachdb/cockroach/pkg/sql/parser.TableDef"}, {"value": 64, "name": "go.itab.*CoalesceExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*CoalesceExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*CoalesceExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*CollateExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*CollateExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*CollateExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*CollatedStringColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*CollatedStringColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ColumnFamilyConstraint,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnQualification"}, {"value": 64, "name": "go.itab.*ColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*ColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*ColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 88, "name": "go.itab.*ColumnItem,github.com/cockroachdb/cockroach/pkg/sql/parser.VarName"}, {"value": 40, "name": "go.itab.*ColumnTableDef,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CommitTransaction,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*ComparisonExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*ComparisonExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*ComparisonExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 48, "name": "go.itab.*ContainsWindowVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 40, "name": "go.itab.*CopyFrom,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CreateDatabase,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CreateIndex,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CreateTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CreateUser,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*CreateView,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 152, "name": "go.itab.*DArray,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DArray,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DArray,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DArray,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DBool,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DBool,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DBool,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DBool,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DBytes,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DBytes,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DBytes,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DBytes,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DCollatedString,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DCollatedString,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DCollatedString,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DCollatedString,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DDate,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DDate,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DDate,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DDate,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DDecimal,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DDecimal,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DDecimal,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DDecimal,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DFloat,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DFloat,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DFloat,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DFloat,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DInt,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DInt,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DInt,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DInt,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DInterval,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DInterval,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DInterval,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DInterval,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DOid,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DOid,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DOid,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DOid,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DOidWrapper,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DOidWrapper,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DOidWrapper,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DOidWrapper,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DString,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DString,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DString,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DString,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DTable,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DTable,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DTable,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DTimestamp,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DTimestamp,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DTimestamp,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DTimestamp,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DTimestampTZ,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DTimestampTZ,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DTimestampTZ,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DTimestampTZ,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 152, "name": "go.itab.*DTuple,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.*DTuple,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*DTuple,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*DTuple,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*DateColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*DateColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Datums,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Deallocate,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*DecimalColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*DecimalColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Delete,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Delete,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*DropDatabase,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*DropIndex,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*DropTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*DropView,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Execute,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*ExistsExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*ExistsExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*ExistsExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*Explain,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Explain,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 48, "name": "go.itab.*Explain,github.com/cockroachdb/cockroach/pkg/sql/parser.TableExpr"}, {"value": 56, "name": "go.itab.*FloatColType,github.com/cockroachdb/cockroach/pkg/sql/parser.CastTargetType"}, {"value": 64, "name": "go.itab.*FloatColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*FloatColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*ForeignKeyConstraintTableDef,github.com/cockroachdb/cockroach/pkg/sql/parser.TableDef"}, {"value": 40, "name": "go.itab.*From,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*FuncExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*FuncExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*FuncExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TableExpr"}, {"value": 80, "name": "go.itab.*FuncExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 56, "name": "go.itab.*FunctionDefinition,github.com/cockroachdb/cockroach/pkg/sql/parser.FunctionReference"}, {"value": 40, "name": "go.itab.*FunctionDefinition,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Grant,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Help,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*IfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*IfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*IfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*IndexHints,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*IndexedVar,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*IndexedVar,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*IndexedVar,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 48, "name": "go.itab.*IndexedVarHelper,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 64, "name": "go.itab.*IndirectionExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*IndirectionExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*IndirectionExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*Insert,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Insert,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 64, "name": "go.itab.*IntColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*IntColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*InterleaveDef,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*IntervalColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*IntervalColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*IsAggregateVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 64, "name": "go.itab.*IsOfTypeExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*IsOfTypeExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*IsOfTypeExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*JoinTableExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Limit,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*MaxAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*MinAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 40, "name": "go.itab.*MultipleResultsError,error"}, {"value": 64, "name": "go.itab.*NameColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*NameColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*NoReturningClause,github.com/cockroachdb/cockroach/pkg/sql/parser.ReturningClause"}, {"value": 40, "name": "go.itab.*NormalizableTableName,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*NormalizableTableName,github.com/cockroachdb/cockroach/pkg/sql/parser.TableExpr"}, {"value": 64, "name": "go.itab.*NotExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*NotExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*NotExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*NullIfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*NullIfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*NullIfExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 80, "name": "go.itab.*NumVal,github.com/cockroachdb/cockroach/pkg/sql/parser.Constant"}, {"value": 64, "name": "go.itab.*NumVal,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*NumVal,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*OidColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*OidColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*OrExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*OrExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*OrExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 72, "name": "go.itab.*OrExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.normalizableExpr"}, {"value": 40, "name": "go.itab.*Order,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*ParenExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*ParenExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*ParenExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*ParenSelect,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 72, "name": "go.itab.*ParenSelect,github.com/cockroachdb/cockroach/pkg/sql/parser.SelectStatement"}, {"value": 64, "name": "go.itab.*ParenSelect,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*ParenTableExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Placeholder,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*Placeholder,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*Placeholder,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*Prepare,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*RangeCond,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*RangeCond,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*RangeCond,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*ReleaseSavepoint,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Relocate,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RenameColumn,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RenameDatabase,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RenameIndex,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RenameTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Restore,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*ReturningExprs,github.com/cockroachdb/cockroach/pkg/sql/parser.ReturningClause"}, {"value": 40, "name": "go.itab.*Revoke,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RollbackToSavepoint,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*RollbackTransaction,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Savepoint,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*Scanner,github.com/cockroachdb/cockroach/pkg/sql/parser.sqlLexer"}, {"value": 40, "name": "go.itab.*Scatter,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Select,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Select,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*SelectClause,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*SelectClause,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*Set,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Set,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*SetDefaultIsolation,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*SetTimeZone,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*SetTransaction,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Show,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowColumns,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowConstraints,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowCreateTable,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowCreateView,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowDatabases,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowGrants,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowIndex,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowRanges,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowTables,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowTransactionStatus,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ShowUsers,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Split,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*StarDatum,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*StarDatum,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*StarDatum,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 80, "name": "go.itab.*StrVal,github.com/cockroachdb/cockroach/pkg/sql/parser.Constant"}, {"value": 64, "name": "go.itab.*StrVal,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*StrVal,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*StringColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*StringColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*Subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*Subquery,github.com/cockroachdb/cockroach/pkg/sql/parser.TableExpr"}, {"value": 88, "name": "go.itab.*TPlaceholder,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 40, "name": "go.itab.*TableName,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.*TableName,github.com/cockroachdb/cockroach/pkg/sql/parser.TableNameReference"}, {"value": 56, "name": "go.itab.*TableName,github.com/cockroachdb/cockroach/pkg/sql/parser.TablePattern"}, {"value": 40, "name": "go.itab.*TableNameWithIndex,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*TableRef,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*TableRef,github.com/cockroachdb/cockroach/pkg/sql/parser.TableExpr"}, {"value": 40, "name": "go.itab.*TargetList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*TimestampColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*TimestampColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*TimestampTZColType,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnType"}, {"value": 40, "name": "go.itab.*TimestampTZColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Truncate,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Tuple,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*Tuple,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*Tuple,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 64, "name": "go.itab.*UnaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.*UnaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.*UnaryExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.*UnionClause,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Update,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 64, "name": "go.itab.*Update,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*UpdateExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*ValuesClause,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 72, "name": "go.itab.*ValuesClause,github.com/cockroachdb/cockroach/pkg/sql/parser.SelectStatement"}, {"value": 64, "name": "go.itab.*ValuesClause,github.com/cockroachdb/cockroach/pkg/sql/parser.Statement"}, {"value": 40, "name": "go.itab.*VectorColType,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*When,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*Where,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.*WindowDef,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.*aggregateWindowFunc,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 56, "name": "go.itab.*arrayAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 72, "name": "go.itab.*arrayValueGenerator,github.com/cockroachdb/cockroach/pkg/sql/parser.ValueGenerator"}, {"value": 56, "name": "go.itab.*avgAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*boolAndAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*boolOrAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*concatAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 48, "name": "go.itab.*containsVarsVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 56, "name": "go.itab.*countAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 48, "name": "go.itab.*cumulativeDistWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*debugVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 56, "name": "go.itab.*decimalSumAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*decimalVarianceAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 48, "name": "go.itab.*denseRankWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*firstValueWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 56, "name": "go.itab.*floatSumAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*floatVarianceAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*identAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*intSumAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*intVarianceAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*intervalSumAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 48, "name": "go.itab.*isConstVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 48, "name": "go.itab.*lastValueWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*leadLagWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*normalizeVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 48, "name": "go.itab.*nthValueWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*ntileWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*percentRankWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*placeholderAnnotationVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 48, "name": "go.itab.*rankWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 48, "name": "go.itab.*rowNumberWindow,github.com/cockroachdb/cockroach/pkg/sql/parser.WindowFunc"}, {"value": 72, "name": "go.itab.*seriesValueGenerator,github.com/cockroachdb/cockroach/pkg/sql/parser.ValueGenerator"}, {"value": 48, "name": "go.itab.*simpleVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 56, "name": "go.itab.*smallIntSumAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*stdDevAggregate,github.com/cockroachdb/cockroach/pkg/sql/parser.AggregateFunc"}, {"value": 56, "name": "go.itab.*unboundContainerType,github.com/cockroachdb/cockroach/pkg/sql/parser.IndexedVarContainer"}, {"value": 40, "name": "go.itab.AliasClause,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.AlterTableCmds,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.ArgTypes,github.com/cockroachdb/cockroach/pkg/sql/parser.typeList"}, {"value": 40, "name": "go.itab.ArraySubscripts,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.AsOfClause,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.BinOp,github.com/cockroachdb/cockroach/pkg/sql/parser.overloadImpl"}, {"value": 56, "name": "go.itab.Builtin,github.com/cockroachdb/cockroach/pkg/sql/parser.overloadImpl"}, {"value": 56, "name": "go.itab.CmpOp,github.com/cockroachdb/cockroach/pkg/sql/parser.overloadImpl"}, {"value": 40, "name": "go.itab.ColumnCollation,github.com/cockroachdb/cockroach/pkg/sql/parser.ColumnQualification"}, {"value": 64, "name": "go.itab.DefaultVal,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.DefaultVal,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.Exprs,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.GroupBy,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.HomogeneousType,github.com/cockroachdb/cockroach/pkg/sql/parser.typeList"}, {"value": 40, "name": "go.itab.IndexElem,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.IndexElemList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.KVOptions,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.Name,github.com/cockroachdb/cockroach/pkg/sql/parser.NamePart"}, {"value": 40, "name": "go.itab.Name,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.NameList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.NameParts,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.NaturalJoinCond,github.com/cockroachdb/cockroach/pkg/sql/parser.JoinCond"}, {"value": 40, "name": "go.itab.NormalizableTableName,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.OrderBy,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.ResolvableFunctionReference,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.SelectExpr,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.SelectExprs,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.StatementList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.TArray,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.TCollatedString,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.TPlaceholder,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.TTable,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.TTuple,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 40, "name": "go.itab.TableDefs,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TableExprs,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TableNameReferences,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TableNameWithIndexList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TableNames,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TablePatterns,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.TargetList,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.UnaryOp,github.com/cockroachdb/cockroach/pkg/sql/parser.overloadImpl"}, {"value": 64, "name": "go.itab.UnqualifiedStar,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 48, "name": "go.itab.UnqualifiedStar,github.com/cockroachdb/cockroach/pkg/sql/parser.NamePart"}, {"value": 40, "name": "go.itab.UnqualifiedStar,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.UnqualifiedStar,github.com/cockroachdb/cockroach/pkg/sql/parser.VarName"}, {"value": 64, "name": "go.itab.UnresolvedName,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.UnresolvedName,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 56, "name": "go.itab.UnresolvedName,github.com/cockroachdb/cockroach/pkg/sql/parser.TableNameReference"}, {"value": 56, "name": "go.itab.UnresolvedName,github.com/cockroachdb/cockroach/pkg/sql/parser.TablePattern"}, {"value": 88, "name": "go.itab.UnresolvedName,github.com/cockroachdb/cockroach/pkg/sql/parser.VarName"}, {"value": 40, "name": "go.itab.UnresolvedNames,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 40, "name": "go.itab.UpdateExprs,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 88, "name": "go.itab.VariadicType,github.com/cockroachdb/cockroach/pkg/sql/parser.typeList"}, {"value": 40, "name": "go.itab.Window,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 48, "name": "go.itab.constantFolderVisitor,github.com/cockroachdb/cockroach/pkg/sql/parser.Visitor"}, {"value": 152, "name": "go.itab.dNull,github.com/cockroachdb/cockroach/pkg/sql/parser.Datum"}, {"value": 64, "name": "go.itab.dNull,github.com/cockroachdb/cockroach/pkg/sql/parser.Expr"}, {"value": 40, "name": "go.itab.dNull,github.com/cockroachdb/cockroach/pkg/sql/parser.NodeFormatter"}, {"value": 80, "name": "go.itab.dNull,github.com/cockroachdb/cockroach/pkg/sql/parser.TypedExpr"}, {"value": 40, "name": "go.itab.likeKey,github.com/cockroachdb/cockroach/pkg/sql/parser.regexpCacheKey"}, {"value": 40, "name": "go.itab.placeholderTypeAmbiguityError,error"}, {"value": 40, "name": "go.itab.regexpEscapeKey,github.com/cockroachdb/cockroach/pkg/sql/parser.regexpCacheKey"}, {"value": 40, "name": "go.itab.regexpFlagKey,github.com/cockroachdb/cockroach/pkg/sql/parser.regexpCacheKey"}, {"value": 40, "name": "go.itab.regexpKey,github.com/cockroachdb/cockroach/pkg/sql/parser.regexpCacheKey"}, {"value": 40, "name": "go.itab.similarToKey,github.com/cockroachdb/cockroach/pkg/sql/parser.regexpCacheKey"}, {"value": 88, "name": "go.itab.tAny,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tBool,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tBytes,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tDate,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tDecimal,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tFloat,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tInt,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tInterval,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tNull,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tOid,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tOidWrapper,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tString,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tTimestamp,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 88, "name": "go.itab.tTimestampTZ,github.com/cockroachdb/cockroach/pkg/sql/parser.Type"}, {"value": 40, "name": "go.itab.unexpectedTypeError,error"}], "name": "parser."}, {"children": [{"children": [{"value": 169, "name": "IsDraining"}, {"value": 68, "name": "IsDraining-fm"}, {"value": 17, "name": "Metrics"}, {"value": 5275, "name": "ServeConn"}, {"children": [{"value": 179, "name": "func1"}], "name": "ServeConn."}, {"value": 113, "name": "SetDraining"}, {"value": 1084, "name": "setDrainingImpl"}, {"children": [{"value": 589, "name": "func1"}, {"value": 467, "name": "func2"}, {"value": 370, "name": "func3"}], "name": "setDrainingImpl."}], "name": "(*Server)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*clientMessageType)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*formatCode)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*pgNumericSign)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*prepareType)."}, {"children": [{"value": 445, "name": "getBytes"}, {"value": 163, "name": "getPrepareType"}, {"value": 382, "name": "getString"}, {"value": 366, "name": "getUint16"}, {"value": 352, "name": "getUint32"}, {"value": 240, "name": "readTypedMsg"}, {"value": 846, "name": "readUntypedMsg"}], "name": "(*readBuffer)."}, {"children": [{"value": 110, "name": "Close"}, {"value": 110, "name": "LocalAddr"}, {"value": 639, "name": "Read"}, {"children": [{"value": 102, "name": "func1"}], "name": "Read."}, {"value": 110, "name": "RemoteAddr"}, {"value": 141, "name": "SetDeadline"}, {"value": 141, "name": "SetReadDeadline"}, {"value": 141, "name": "SetWriteDeadline"}, {"value": 157, "name": "Write"}], "name": "(*readTimeoutConn)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*serverErrFieldType)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*serverMessageType)."}, {"children": [{"value": 134, "name": "closeSession"}, {"value": 1386, "name": "copyIn"}, {"value": 651, "name": "executeStatements"}, {"children": [{"value": 127, "name": "func1"}], "name": "executeStatements."}, {"value": 194, "name": "finish"}, {"value": 1171, "name": "handleAuthentication"}, {"value": 4826, "name": "handleBind"}, {"value": 649, "name": "handleClose"}, {"value": 1779, "name": "handleDescribe"}, {"value": 929, "name": "handleExecute"}, {"value": 3123, "name": "handleParse"}, {"value": 212, "name": "handleSimpleQuery"}, {"value": 771, "name": "sendAuthPasswordRequest"}, {"value": 215, "name": "sendCommandComplete"}, {"value": 971, "name": "sendError"}, {"value": 148, "name": "sendInternalError"}, {"value": 4019, "name": "sendResponse"}, {"value": 1164, "name": "sendRowDescription"}, {"value": 4119, "name": "serve"}, {"children": [{"value": 125, "name": "func1"}, {"value": 148, "name": "func2"}, {"children": [{"value": 243, "name": "1"}], "name": "func2."}], "name": "serve."}, {"value": 389, "name": "setupSession"}], "name": "(*v3Conn)."}, {"children": [{"value": 418, "name": "finishMsg"}, {"value": 173, "name": "initMsg"}, {"value": 132, "name": "nullTerminate"}, {"value": 136, "name": "putErrFieldMsg"}, {"value": 177, "name": "putInt16"}, {"value": 169, "name": "putInt32"}, {"value": 172, "name": "putInt64"}, {"value": 117, "name": "reset"}, {"value": 161, "name": "write"}, {"value": 4504, "name": "writeBinaryDatum"}, {"children": [{"value": 15, "name": "func1"}, {"value": 78, "name": "func2"}], "name": "writeBinaryDatum."}, {"value": 136, "name": "writeByte"}, {"value": 111, "name": "writeLengthPrefixedDatum"}, {"value": 103, "name": "writeLengthPrefixedString"}, {"value": 208, "name": "writeLengthPrefixedVariablePutbuf"}, {"value": 147, "name": "writeString"}, {"value": 94, "name": "writeTerminatedString"}, {"value": 4627, "name": "writeTextDatum"}], "name": "(*writeBuffer)."}, {"value": 1601, "name": "MakeServer"}, {"value": 202, "name": "Match"}, {"value": 56, "name": "MetaBytesIn"}, {"value": 56, "name": "MetaBytesOut"}, {"value": 56, "name": "MetaConns"}, {"value": 5, "name": "_clientMessageType_index_0"}, {"value": 3, "name": "_clientMessageType_index_2"}, {"value": 3, "name": "_clientMessageType_index_5"}, {"value": 3, "name": "_formatCode_index"}, {"value": 3, "name": "_serverErrFieldType_index_0"}, {"value": 3, "name": "_serverErrFieldType_index_3"}, {"value": 3, "name": "_serverErrFieldType_index_4"}, {"value": 4, "name": "_serverMessageType_index_0"}, {"value": 4, "name": "_serverMessageType_index_1"}, {"value": 4, "name": "_serverMessageType_index_4"}, {"value": 8, "name": "baseSQLMemoryBudget"}, {"children": [{"value": 741, "name": "String"}], "name": "clientMessageType."}, {"value": 8, "name": "connReservationBatchSize"}, {"value": 1364, "name": "decodeBinaryArray"}, {"value": 14410, "name": "decodeOidDatum"}, {"children": [{"value": 486, "name": "func1"}], "name": "decodeOidDatum."}, {"children": [{"value": 314, "name": "String"}], "name": "formatCode."}, {"value": 874, "name": "formatTs"}, {"value": 1235, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1657, "name": "makeServerMetrics"}, {"value": 165, "name": "newAdminShutdownErr"}, {"value": 328, "name": "newReadTimeoutConn"}, {"value": 223, "name": "newUnrecognizedMsgTypeErr"}, {"value": 8, "name": "noteworthyConnMemoryUsageBytes"}, {"value": 8, "name": "noteworthySQLMemoryUsageBytes"}, {"value": 1255, "name": "parseOptions"}, {"value": 122, "name": "pgBinaryToTime"}, {"value": 24, "name": "pgEpochJDate"}, {"value": 4, "name": "pgEpochJDateFromUnix"}, {"children": [{"value": 277, "name": "String"}], "name": "pgNumericSign."}, {"value": 133, "name": "pgTypeForParserType"}, {"children": [{"value": 273, "name": "String"}], "name": "prepareType."}, {"children": [{"value": 108, "name": "Close"}, {"value": 108, "name": "LocalAddr"}, {"value": 108, "name": "RemoteAddr"}, {"value": 139, "name": "SetDeadline"}, {"value": 139, "name": "SetReadDeadline"}, {"value": 139, "name": "SetWriteDeadline"}, {"value": 161, "name": "Write"}], "name": "readTimeoutConn."}, {"children": [{"value": 628, "name": "String"}], "name": "serverErrFieldType."}, {"children": [{"value": 741, "name": "String"}], "name": "serverMessageType."}, {"value": 24, "name": "sslSupported"}, {"value": 24, "name": "sslUnsupported"}, {"value": 24, "name": "statictmp_1246"}, {"value": 1, "name": "statictmp_1251"}, {"value": 1, "name": "statictmp_1252"}, {"value": 80, "name": "statictmp_1257"}, {"value": 80, "name": "statictmp_1258"}, {"value": 128, "name": "statictmp_167"}, {"value": 112, "name": "statictmp_179"}, {"value": 16, "name": "statictmp_181"}, {"value": 112, "name": "statictmp_187"}, {"value": 16, "name": "statictmp_189"}, {"value": 512, "name": "statictmp_254"}, {"value": 48, "name": "statictmp_782"}, {"value": 48, "name": "statictmp_787"}, {"value": 8, "name": "statusReportParams"}, {"value": 232, "name": "timeToPgBinary"}, {"value": 96, "name": "go.itab.*readTimeoutConn,net.Conn"}], "name": "pgwire."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 24, "name": "Error"}, {"value": 280, "name": "Marshal"}, {"value": 1276, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 372, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4433, "name": "Unmarshal"}], "name": "(*Error)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 612, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 212, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2704, "name": "Unmarshal"}], "name": "(*Error_Source)."}, {"value": 16, "name": "ErrIntOverflowErrors"}, {"value": 16, "name": "ErrInvalidLengthErrors"}, {"value": 174, "name": "GetPGCause"}, {"value": 245, "name": "NewError"}, {"value": 566, "name": "NewErrorf"}, {"value": 122, "name": "encodeVarintErrors"}, {"value": 24, "name": "fileDescriptorErrors"}, {"value": 362, "name": "init"}, {"children": [{"value": 141, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 257, "name": "makeSrcCtx"}, {"value": 1621, "name": "skipErrors"}, {"value": 34, "name": "sovErrors"}, {"value": 8, "name": "statictmp_23"}, {"value": 253, "name": "statictmp_286"}, {"value": 16, "name": "statictmp_29"}, {"value": 40, "name": "go.itab.*Error,error"}, {"value": 56, "name": "go.itab.*Error,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Error_Source,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "pgwire/pgerror."}, {"children": [{"children": [{"value": 174, "name": "Mask"}, {"value": 184, "name": "String"}], "name": "(*Kind)."}, {"children": [{"value": 194, "name": "Format"}, {"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 214, "name": "SortedNames"}, {"value": 204, "name": "SortedString"}, {"value": 204, "name": "String"}, {"value": 200, "name": "Swap"}, {"value": 192, "name": "ToBitField"}], "name": "(*List)."}, {"children": [{"value": 201, "name": "Contains"}, {"value": 204, "name": "String"}], "name": "(*Lists)."}, {"value": 32, "name": "ByValue"}, {"children": [{"value": 23, "name": "Mask"}, {"value": 310, "name": "String"}], "name": "Kind."}, {"children": [{"value": 212, "name": "Format"}, {"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 169, "name": "SortedNames"}, {"value": 162, "name": "SortedString"}, {"value": 162, "name": "String"}, {"value": 70, "name": "Swap"}, {"value": 64, "name": "ToBitField"}, {"value": 311, "name": "names"}], "name": "List."}, {"value": 345, "name": "ListFromBitField"}, {"children": [{"value": 165, "name": "Contains"}, {"value": 519, "name": "String"}], "name": "Lists."}, {"value": 24, "name": "ReadData"}, {"value": 24, "name": "ReadWriteData"}, {"value": 9, "name": "_Kind_index"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "statictmp_69"}, {"value": 20, "name": "statictmp_70"}], "name": "privilege."}, {"children": [{"children": [{"value": 205, "name": "NumColumns"}, {"value": 211, "name": "Type"}], "name": "(*ColTypeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1072, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 274, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4306, "name": "Unmarshal"}], "name": "(*ColumnDescriptor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 980, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 377, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4740, "name": "Unmarshal"}], "name": "(*ColumnFamilyDescriptor)."}, {"children": [{"value": 223, "name": "IsPrefixOf"}], "name": "(*ColumnOrdering)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 705, "name": "MarshalTo"}, {"value": 55, "name": "MaxCharacterLength"}, {"value": 50, "name": "MaxCharacterLength-fm"}, {"value": 53, "name": "MaxOctetLength"}, {"value": 48, "name": "MaxOctetLength-fm"}, {"value": 98, "name": "NumericPrecision"}, {"value": 86, "name": "NumericPrecision-fm"}, {"value": 65, "name": "NumericScale"}, {"value": 55, "name": "NumericScale-fm"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 2445, "name": "SQLString"}, {"value": 315, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 897, "name": "ToDatumType"}, {"value": 4369, "name": "Unmarshal"}], "name": "(*ColumnType)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ColumnType_Kind)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ConstraintValidity)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 27, "name": "GetID"}, {"value": 47, "name": "GetName"}, {"value": 30, "name": "GetPrivileges"}, {"value": 280, "name": "Marshal"}, {"value": 661, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 163, "name": "Reset"}, {"value": 13, "name": "SetID"}, {"value": 99, "name": "SetName"}, {"value": 205, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 22, "name": "TypeName"}, {"value": 2869, "name": "Unmarshal"}, {"value": 359, "name": "Validate"}], "name": "(*DatabaseDescriptor)."}, {"children": [{"value": 391, "name": "NewDBytes"}, {"value": 357, "name": "NewDDate"}, {"value": 494, "name": "NewDDecimal"}, {"value": 331, "name": "NewDFloat"}, {"value": 304, "name": "NewDInt"}, {"value": 390, "name": "NewDInterval"}, {"value": 419, "name": "NewDName"}, {"value": 507, "name": "NewDOid"}, {"value": 391, "name": "NewDString"}, {"value": 445, "name": "NewDTimestamp"}, {"value": 445, "name": "NewDTimestampTZ"}], "name": "(*DatumAlloc)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*DatumEncoding)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 75, "name": "GetDatabase"}, {"value": 157, "name": "GetID"}, {"value": 201, "name": "GetName"}, {"value": 75, "name": "GetTable"}, {"value": 47, "name": "GetUnion"}, {"value": 280, "name": "Marshal"}, {"value": 189, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 102, "name": "Reset"}, {"value": 87, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2780, "name": "Unmarshal"}, {"value": 260, "name": "XXX_OneofFuncs"}], "name": "(*Descriptor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 75, "name": "GetColumn"}, {"value": 47, "name": "GetDescriptor_"}, {"value": 75, "name": "GetIndex"}, {"value": 280, "name": "Marshal"}, {"value": 969, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 447, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5074, "name": "Unmarshal"}, {"value": 260, "name": "XXX_OneofFuncs"}], "name": "(*DescriptorMutation)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isDescriptorMutation_Descriptor_"}], "name": "(*DescriptorMutation_Column)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*DescriptorMutation_Direction)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isDescriptorMutation_Descriptor_"}], "name": "(*DescriptorMutation_Index)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*DescriptorMutation_State)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isDescriptor_Union"}], "name": "(*Descriptor_Database)."}, {"children": [{"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 1, "name": "isDescriptor_Union"}], "name": "(*Descriptor_Table)."}, {"children": [{"value": 487, "name": "Compare"}, {"value": 1204, "name": "Encode"}, {"value": 41, "name": "Encoding"}, {"value": 1383, "name": "EnsureDecoded"}, {"value": 578, "name": "IsNull"}, {"value": 36, "name": "IsUnset"}, {"value": 89, "name": "String"}, {"value": 183, "name": "UnsetDatum"}, {"value": 350, "name": "stringWithAlloc"}], "name": "(*EncDatum)."}, {"children": [{"value": 337, "name": "Compare"}, {"value": 337, "name": "CompareToDatums"}, {"value": 204, "name": "String"}], "name": "(*EncDatumRow)."}, {"children": [{"value": 437, "name": "AllocRow"}, {"value": 510, "name": "CopyRow"}], "name": "(*EncDatumRowAlloc)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 191, "name": "IsSet"}, {"value": 280, "name": "Marshal"}, {"value": 612, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 124, "name": "Reset"}, {"value": 243, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3265, "name": "Unmarshal"}], "name": "(*ForeignKeyReference)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*FormatVersion)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*IDs)."}, {"children": [{"value": 114, "name": "ContainsColumnID"}, {"children": [{"value": 55, "name": "func1"}], "name": "ContainsColumnID."}, {"value": 141, "name": "Descriptor"}, {"value": 1402, "name": "FillColumns"}, {"value": 1138, "name": "FullColumnIDs"}, {"value": 43, "name": "HasOldStoredColumns"}, {"value": 280, "name": "Marshal"}, {"value": 3650, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 466, "name": "RunOverAllColumns"}, {"value": 1498, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 14960, "name": "Unmarshal"}, {"value": 1633, "name": "allocateName"}, {"children": [{"value": 97, "name": "func1"}], "name": "allocateName."}], "name": "(*IndexDescriptor)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 194, "name": "ToEncodingDirection"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*IndexDescriptor_Direction)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 479, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 215, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1921, "name": "Unmarshal"}], "name": "(*InterleaveDescriptor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 311, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 149, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2172, "name": "Unmarshal"}], "name": "(*InterleaveDescriptor_Ancestor)."}, {"children": [{"value": 104, "name": "AddConfigDescriptor"}, {"value": 982, "name": "AddDescriptor"}, {"value": 224, "name": "GetInitialValues"}, {"value": 215, "name": "InitialRangeCount"}, {"value": 203, "name": "SystemConfigDescriptorCount"}, {"value": 203, "name": "SystemDescriptorCount"}], "name": "(*MetadataSchema)."}, {"children": [{"value": 213, "name": "AnyPrivilege"}, {"value": 221, "name": "CheckPrivilege"}, {"value": 141, "name": "Descriptor"}, {"value": 198, "name": "Grant"}, {"value": 280, "name": "Marshal"}, {"value": 486, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 430, "name": "Revoke"}, {"value": 214, "name": "Show"}, {"value": 219, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2003, "name": "Unmarshal"}, {"value": 212, "name": "Validate"}, {"value": 1222, "name": "findOrCreateUser"}, {"children": [{"value": 137, "name": "func1"}], "name": "findOrCreateUser."}, {"value": 532, "name": "removeUser"}], "name": "(*PrivilegeDescriptor)."}, {"children": [{"value": 1275, "name": "AddRow"}, {"value": 529, "name": "At"}, {"value": 170, "name": "Clear"}, {"value": 220, "name": "Close"}, {"value": 15, "name": "Len"}, {"value": 280, "name": "PopFirst"}, {"value": 425, "name": "Replace"}, {"value": 417, "name": "Swap"}, {"value": 917, "name": "allocChunks"}, {"value": 189, "name": "rowSize"}], "name": "(*RowContainer)."}, {"children": [{"value": 719, "name": "DeleteIndexRow"}, {"value": 1719, "name": "DeleteRow"}], "name": "(*RowDeleter)."}, {"children": [{"value": 98, "name": "GetRangeInfo"}, {"value": 2515, "name": "Init"}, {"value": 42, "name": "Key"}, {"value": 910, "name": "NextKey"}, {"value": 813, "name": "NextKeyDebug"}, {"value": 507, "name": "NextRow"}, {"value": 461, "name": "NextRowDecoded"}, {"value": 6043, "name": "ProcessKV"}, {"value": 300, "name": "ReadIndexKey"}, {"value": 687, "name": "StartScan"}, {"value": 641, "name": "finalizeRow"}, {"value": 3482, "name": "processValueBytes"}, {"value": 2508, "name": "processValueSingle"}, {"value": 434, "name": "processValueTuple"}], "name": "(*RowFetcher)."}, {"children": [{"value": 4160, "name": "InsertRow"}], "name": "(*RowInserter)."}, {"children": [{"value": 63, "name": "IsColumnOnlyUpdate"}, {"value": 10121, "name": "UpdateRow"}], "name": "(*RowUpdater)."}, {"children": [{"value": 303, "name": "AddColumn"}, {"value": 1010, "name": "AddColumnMutation"}, {"value": 1684, "name": "AddColumnToFamilyMaybeCreate"}, {"value": 303, "name": "AddFamily"}, {"value": 767, "name": "AddIndex"}, {"value": 1030, "name": "AddIndexMutation"}, {"value": 22, "name": "Adding"}, {"value": 207, "name": "AllIndexSpans"}, {"children": [{"value": 396, "name": "func1"}], "name": "AllIndexSpans."}, {"value": 1374, "name": "AllNonDropIndexes"}, {"value": 958, "name": "AllocateIDs"}, {"children": [{"value": 187, "name": "func1"}], "name": "AllocateIDs."}, {"value": 242, "name": "CheckUniqueConstraints"}, {"value": 141, "name": "Descriptor"}, {"value": 22, "name": "Dropped"}, {"value": 148, "name": "FinalizeMutation"}, {"value": 438, "name": "FindActiveColumnByID"}, {"value": 270, "name": "FindActiveColumnByName"}, {"value": 640, "name": "FindActiveColumnByNormalizedName"}, {"value": 657, "name": "FindActiveColumnsByNames"}, {"value": 725, "name": "FindColumnByID"}, {"value": 147, "name": "FindColumnByName"}, {"value": 1063, "name": "FindColumnByNormalizedName"}, {"value": 435, "name": "FindFamilyByID"}, {"value": 842, "name": "FindIndexByID"}, {"value": 147, "name": "FindIndexByName"}, {"value": 1098, "name": "FindIndexByNormalizedName"}, {"value": 701, "name": "ForeachNonDropIndex"}, {"value": 75, "name": "GetChecks"}, {"value": 66, "name": "GetColumns"}, {"value": 310, "name": "GetConstraintInfo"}, {"value": 274, "name": "GetConstraintInfoWithLookup"}, {"value": 75, "name": "GetDependedOnBy"}, {"value": 75, "name": "GetDependsOn"}, {"value": 258, "name": "GetDescMetadataKey"}, {"value": 66, "name": "GetFamilies"}, {"value": 30, "name": "GetFormatVersion"}, {"value": 27, "name": "GetID"}, {"value": 75, "name": "GetIndexes"}, {"value": 33, "name": "GetLease"}, {"value": 50, "name": "GetModificationTime"}, {"value": 75, "name": "GetMutations"}, {"value": 47, "name": "GetName"}, {"value": 258, "name": "GetNameMetadataKey"}, {"value": 27, "name": "GetNextColumnID"}, {"value": 27, "name": "GetNextFamilyID"}, {"value": 30, "name": "GetNextIndexID"}, {"value": 30, "name": "GetNextMutationID"}, {"value": 27, "name": "GetParentID"}, {"value": 160, "name": "GetPrimaryIndex"}, {"value": 33, "name": "GetPrivileges"}, {"value": 75, "name": "GetRenames"}, {"value": 30, "name": "GetState"}, {"value": 25, "name": "GetUpVersion"}, {"value": 27, "name": "GetVersion"}, {"value": 54, "name": "GetViewQuery"}, {"value": 293, "name": "IndexSpan"}, {"value": 217, "name": "InvalidateFKConstraints"}, {"value": 18, "name": "IsEmpty"}, {"value": 293, "name": "IsInterleaved"}, {"value": 35, "name": "IsPhysicalTable"}, {"value": 23, "name": "IsTable"}, {"value": 23, "name": "IsView"}, {"value": 19, "name": "IsVirtualTable"}, {"value": 39, "name": "KeysPerRow"}, {"value": 805, "name": "MakeMutationComplete"}, {"value": 280, "name": "Marshal"}, {"value": 6556, "name": "MarshalTo"}, {"value": 106, "name": "MaybeUpgradeFormatVersion"}, {"value": 175, "name": "PrimaryIndexSpan"}, {"value": 1, "name": "ProtoMessage"}, {"value": 1593, "name": "RemoveColumnFromFamily"}, {"value": 908, "name": "RenameColumnNormalized"}, {"children": [{"value": 256, "name": "func1"}], "name": "RenameColumnNormalized."}, {"value": 23, "name": "Renamed"}, {"value": 184, "name": "Reset"}, {"value": 13, "name": "SetID"}, {"value": 99, "name": "SetName"}, {"value": 237, "name": "SetUpVersion"}, {"value": 2544, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 284, "name": "TableSpan"}, {"value": 61, "name": "TypeName"}, {"value": 18557, "name": "Unmarshal"}, {"value": 205, "name": "Validate"}, {"value": 4977, "name": "ValidateTable"}, {"value": 478, "name": "VisibleColumns"}, {"value": 995, "name": "allNonDropColumns"}, {"value": 2999, "name": "allocateColumnFamilyIDs"}, {"children": [{"value": 2004, "name": "func1"}], "name": "allocateColumnFamilyIDs."}, {"value": 5554, "name": "allocateIndexIDs"}, {"children": [{"value": 488, "name": "func1"}], "name": "allocateIndexIDs."}, {"value": 996, "name": "ensurePrimaryKey"}, {"value": 1222, "name": "maybeUpgradeToFamilyFormatVersion"}, {"children": [{"value": 1285, "name": "func1"}], "name": "maybeUpgradeToFamilyFormatVersion."}, {"value": 4354, "name": "validateColumnFamilies"}, {"value": 6810, "name": "validateCrossReferences"}, {"children": [{"value": 417, "name": "func1"}, {"value": 838, "name": "func2"}], "name": "validateCrossReferences."}, {"value": 4031, "name": "validateTableIndexes"}], "name": "(*TableDescriptor)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 587, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 185, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2704, "name": "Unmarshal"}], "name": "(*TableDescriptor_CheckConstraint)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 394, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 134, "name": "Reset"}, {"value": 212, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3173, "name": "Unmarshal"}], "name": "(*TableDescriptor_Reference)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 358, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 111, "name": "Reset"}, {"value": 125, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2074, "name": "Unmarshal"}], "name": "(*TableDescriptor_RenameInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 233, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1778, "name": "Unmarshal"}], "name": "(*TableDescriptor_SchemaChangeLease)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TableDescriptor_State)."}, {"children": [{"value": 214, "name": "PrivilegeString"}], "name": "(*UserPrivilegeString)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 370, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 107, "name": "Reset"}, {"value": 126, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2040, "name": "Unmarshal"}], "name": "(*UserPrivileges)."}, {"children": [{"value": 323, "name": "CollectSpans"}], "name": "(*baseFKHelper)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 211, "name": "Less"}, {"value": 228, "name": "Swap"}], "name": "(*byID)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*columnIDs)."}, {"children": [{"value": 226, "name": "CollectSpans"}], "name": "(*fkDeleteHelper)."}, {"children": [{"value": 226, "name": "CollectSpans"}], "name": "(*fkInsertHelper)."}, {"children": [{"value": 238, "name": "CollectSpans"}], "name": "(*fkUpdateHelper)."}, {"children": [{"value": 3185, "name": "fetch"}, {"value": 178, "name": "getRangesInfo"}, {"value": 514, "name": "nextKV"}], "name": "(*kvFetcher)."}, {"children": [{"value": 178, "name": "Error"}], "name": "(*returnTrue)."}, {"children": [{"value": 754, "name": "encodeIndexes"}, {"value": 436, "name": "encodeSecondaryIndexes"}, {"value": 856, "name": "skipColumnInPK"}, {"value": 867, "name": "sortedColumnFamily"}], "name": "(*rowHelper)."}, {"value": 997, "name": "CheckColumnType"}, {"value": 1504, "name": "CheckValueWidth"}, {"value": 308, "name": "ColIDtoRowIndexFromCols"}, {"children": [{"value": 32, "name": "NumColumns"}, {"value": 186, "name": "Type"}], "name": "ColTypeInfo."}, {"children": [{"value": 142, "name": "IsPrefixOf"}], "name": "ColumnOrdering."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ColumnType_Kind."}, {"value": 8, "name": "ColumnType_Kind_name"}, {"value": 8, "name": "ColumnType_Kind_value"}, {"value": 597, "name": "ColumnsSelectors"}, {"value": 276, "name": "CompareDatums"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ConstraintValidity."}, {"value": 8, "name": "ConstraintValidity_name"}, {"value": 8, "name": "ConstraintValidity_value"}, {"value": 2193, "name": "ConvertBatchError"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "DatumEncoding."}, {"value": 8, "name": "DatumEncoding_name"}, {"value": 8, "name": "DatumEncoding_value"}, {"value": 798, "name": "DatumToEncDatum"}, {"value": 2004, "name": "DatumTypeToColumnType"}, {"value": 2045, "name": "DecodeIndexKey"}, {"value": 1777, "name": "DecodeIndexKeyPrefix"}, {"value": 1118, "name": "DecodeKeyVals"}, {"value": 411, "name": "DecodeTableIDIndexID"}, {"value": 11870, "name": "DecodeTableKey"}, {"value": 10017, "name": "DecodeTableValue"}, {"value": 24, "name": "DefaultSearchPath"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "DescriptorMutation_Direction."}, {"value": 8, "name": "DescriptorMutation_Direction_name"}, {"value": 8, "name": "DescriptorMutation_Direction_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "DescriptorMutation_State."}, {"value": 8, "name": "DescriptorMutation_State_name"}, {"value": 8, "name": "DescriptorMutation_State_value"}, {"value": 608, "name": "DescriptorTable"}, {"value": 1345, "name": "EncDatumFromBuffer"}, {"value": 355, "name": "EncDatumFromEncoded"}, {"children": [{"value": 383, "name": "Compare"}, {"value": 454, "name": "CompareToDatums"}, {"value": 274, "name": "String"}, {"value": 291, "name": "stringToBuf"}], "name": "EncDatumRow."}, {"value": 874, "name": "EncDatumRowToDatums"}, {"value": 897, "name": "EncodeColumns"}, {"value": 385, "name": "EncodeDatum"}, {"value": 315, "name": "EncodeDatums"}, {"value": 280, "name": "EncodeIndexKey"}, {"value": 1843, "name": "EncodePartialIndexKey"}, {"value": 3049, "name": "EncodeSecondaryIndex"}, {"value": 537, "name": "EncodeSecondaryIndexes"}, {"value": 6383, "name": "EncodeTableKey"}, {"value": 3537, "name": "EncodeTableValue"}, {"value": 16, "name": "ErrDescriptorNotFound"}, {"value": 16, "name": "ErrIntOverflowPrivilege"}, {"value": 16, "name": "ErrIntOverflowStructured"}, {"value": 16, "name": "ErrInvalidLengthPrivilege"}, {"value": 16, "name": "ErrInvalidLengthStructured"}, {"value": 16, "name": "ErrMissingColumns"}, {"value": 16, "name": "ErrMissingPrimaryKey"}, {"value": 608, "name": "EventLogTable"}, {"value": 3993, "name": "ExtractIndexKey"}, {"value": 962, "name": "FixedOffsetTimeZoneToLocation"}, {"children": [{"value": 14, "name": "IsSet"}], "name": "ForeignKeyReference."}, {"children": [{"value": 310, "name": "String"}], "name": "FormatVersion."}, {"value": 462, "name": "GetDatabaseDescFromID"}, {"value": 462, "name": "GetTableDescFromID"}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "IDs."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}, {"value": 294, "name": "ToEncodingDirection"}], "name": "IndexDescriptor_Direction."}, {"value": 8, "name": "IndexDescriptor_Direction_name"}, {"value": 8, "name": "IndexDescriptor_Direction_value"}, {"value": 229, "name": "IsPermanentSchemaChangeError"}, {"value": 100, "name": "IsUndefinedDatabaseError"}, {"value": 100, "name": "IsUndefinedTableError"}, {"value": 100, "name": "IsUniquenessConstraintViolationError"}, {"value": 608, "name": "JobsTable"}, {"value": 608, "name": "LeaseTable"}, {"value": 138, "name": "MakeAllDescsMetadataKey"}, {"value": 6497, "name": "MakeColumnDefDescs"}, {"value": 2059, "name": "MakeDefaultExprs"}, {"value": 200, "name": "MakeDescMetadataKey"}, {"value": 447, "name": "MakeEncodedKeyVals"}, {"value": 393, "name": "MakeIndexKeyPrefix"}, {"value": 1918, "name": "MakeKeyFromEncDatums"}, {"value": 183, "name": "MakeMetadataSchema"}, {"value": 498, "name": "MakeNameMetadataKey"}, {"value": 874, "name": "MakeRowContainer"}, {"value": 2618, "name": "MakeRowDeleter"}, {"children": [{"value": 587, "name": "func1"}], "name": "MakeRowDeleter."}, {"value": 1863, "name": "MakeRowInserter"}, {"value": 5962, "name": "MakeRowUpdater"}, {"children": [{"value": 179, "name": "func1"}, {"children": [{"value": 143, "name": "1"}], "name": "func1."}, {"value": 595, "name": "func2"}], "name": "MakeRowUpdater."}, {"value": 255, "name": "MakeZoneKey"}, {"value": 4851, "name": "MarshalColumnValue"}, {"children": [{"value": 1114, "name": "GetInitialValues"}, {"children": [{"value": 1296, "name": "func1"}], "name": "GetInitialValues."}, {"value": 23, "name": "InitialRangeCount"}, {"value": 11, "name": "SystemConfigDescriptorCount"}, {"value": 11, "name": "SystemDescriptorCount"}], "name": "MetadataSchema."}, {"value": 608, "name": "NamespaceTable"}, {"value": 240, "name": "NewDatabaseAlreadyExistsError"}, {"value": 111, "name": "NewDependentObjectError"}, {"value": 245, "name": "NewDependentObjectErrorWithHint"}, {"value": 134, "name": "NewInvalidSchemaDefinitionError"}, {"value": 240, "name": "NewNonNullViolationError"}, {"value": 269, "name": "NewPrivilegeDescriptor"}, {"value": 405, "name": "NewRangeUnavailableError"}, {"value": 240, "name": "NewRelationAlreadyExistsError"}, {"value": 321, "name": "NewRetryError"}, {"value": 345, "name": "NewRowContainer"}, {"value": 159, "name": "NewStatementCompletionUnknownError"}, {"value": 111, "name": "NewSyntaxError"}, {"value": 451, "name": "NewTransactionAbortedError"}, {"value": 112, "name": "NewTransactionCommittedError"}, {"value": 240, "name": "NewUndefinedDatabaseError"}, {"value": 240, "name": "NewUndefinedTableError"}, {"value": 240, "name": "NewUndefinedViewError"}, {"value": 913, "name": "NewUniquenessConstraintViolationError"}, {"value": 240, "name": "NewWindowingError"}, {"value": 359, "name": "NewWrongObjectTypeError"}, {"value": 1162, "name": "ParseFixedOffsetTimeZone"}, {"value": 296, "name": "PrettyKey"}, {"value": 603, "name": "PrettySpan"}, {"value": 496, "name": "PrettySpans"}, {"children": [{"value": 144, "name": "AnyPrivilege"}, {"value": 254, "name": "CheckPrivilege"}, {"value": 649, "name": "Show"}, {"value": 1634, "name": "Validate"}, {"value": 182, "name": "findUser"}, {"value": 312, "name": "findUserIndex"}, {"children": [{"value": 134, "name": "func1"}], "name": "findUserIndex."}], "name": "PrivilegeDescriptor."}, {"value": 608, "name": "RangeEventTable"}, {"value": 896, "name": "ResultColumnsFromColDescs"}, {"value": 239, "name": "RunFilter"}, {"value": 977, "name": "SanitizeVarFreeExpr"}, {"value": 608, "name": "SettingsTable"}, {"value": 8, "name": "SystemAllowedPrivileges"}, {"value": 32, "name": "SystemDB"}, {"value": 135, "name": "SystemDesiredPrivileges"}, {"children": [{"value": 151, "name": "CheckUniqueConstraints"}, {"value": 357, "name": "GetConstraintInfo"}, {"children": [{"value": 115, "name": "func1"}], "name": "GetConstraintInfo."}, {"value": 175, "name": "GetConstraintInfoWithLookup"}, {"value": 97, "name": "GetDescMetadataKey"}, {"value": 117, "name": "GetNameMetadataKey"}, {"value": 4590, "name": "collectConstraintInfo"}], "name": "TableDescriptor."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TableDescriptor_State."}, {"value": 8, "name": "TableDescriptor_State_name"}, {"value": 8, "name": "TableDescriptor_State_value"}, {"value": 1117, "name": "TablesNeededForFKs"}, {"value": 212, "name": "TimeZoneStringToLocation"}, {"value": 608, "name": "UITable"}, {"value": 7572, "name": "UnmarshalColumnValue"}, {"children": [{"value": 121, "name": "PrivilegeString"}], "name": "UserPrivilegeString."}, {"value": 608, "name": "UsersTable"}, {"value": 810, "name": "WrapDescriptor"}, {"value": 608, "name": "ZonesTable"}, {"value": 669, "name": "_DescriptorMutation_OneofMarshaler"}, {"value": 670, "name": "_DescriptorMutation_OneofSizer"}, {"value": 795, "name": "_DescriptorMutation_OneofUnmarshaler"}, {"value": 669, "name": "_Descriptor_OneofMarshaler"}, {"value": 670, "name": "_Descriptor_OneofSizer"}, {"value": 795, "name": "_Descriptor_OneofUnmarshaler"}, {"value": 4, "name": "_FormatVersion_index"}, {"value": 801, "name": "addSystemDatabaseToSchema"}, {"value": 479, "name": "appendEncDatumsToKey"}, {"children": [{"value": 371, "name": "CollectSpans"}, {"value": 929, "name": "check"}], "name": "baseFKHelper."}, {"children": [{"value": 11, "name": "Len"}, {"value": 81, "name": "Less"}, {"value": 98, "name": "Swap"}], "name": "byID."}, {"value": 1364, "name": "collectSpansForFKMap"}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "columnIDs."}, {"value": 24, "name": "columnKinds"}, {"value": 715, "name": "createDefaultZoneConfig"}, {"children": [{"value": 160, "name": "get"}], "name": "directions."}, {"value": 122, "name": "encodeVarintPrivilege"}, {"value": 122, "name": "encodeVarintStructured"}, {"value": 165, "name": "errHasCode"}, {"value": 16, "name": "errSkipUnusedFK"}, {"value": 285, "name": "exprContainsVarsError"}, {"value": 24, "name": "fileDescriptorEncodedDatum"}, {"value": 24, "name": "fileDescriptorPrivilege"}, {"value": 24, "name": "fileDescriptorStructured"}, {"children": [{"value": 120, "name": "CollectSpans"}, {"value": 336, "name": "checkAll"}, {"value": 1658, "name": "checkIdx"}], "name": "fkDeleteHelper."}, {"children": [{"value": 120, "name": "CollectSpans"}, {"value": 336, "name": "checkAll"}, {"value": 2045, "name": "checkIdx"}], "name": "fkInsertHelper."}, {"children": [{"value": 843, "name": "CollectSpans"}, {"value": 282, "name": "checkIdx"}], "name": "fkUpdateHelper."}, {"value": 533, "name": "generatedFamilyName"}, {"value": 348, "name": "incompatibleExprTypeError"}, {"value": 10027, "name": "init"}, {"children": [{"value": 95, "name": "1"}, {"value": 210, "name": "2"}, {"value": 141, "name": "3"}, {"value": 210, "name": "4"}, {"value": 1037, "name": "5"}, {"value": 210, "name": "6"}, {"value": 350, "name": "7"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 462, "name": "insertCPutFn"}, {"value": 444, "name": "insertPutFn"}, {"value": 8, "name": "kvBatchSize"}, {"value": 2028, "name": "makeBaseFKHelper"}, {"value": 1456, "name": "makeFKDeleteHelper"}, {"value": 1294, "name": "makeFKInsertHelper"}, {"value": 402, "name": "makeFKUpdateHelper"}, {"value": 1580, "name": "makeKVFetcher"}, {"value": 16, "name": "nowString"}, {"value": 408, "name": "pk"}, {"value": 688, "name": "prettyEncDatums"}, {"children": [{"value": 109, "name": "Error"}], "name": "returnTrue."}, {"value": 16, "name": "returnTruePseudoError"}, {"value": 24, "name": "singleASC"}, {"value": 24, "name": "singleID1"}, {"value": 1621, "name": "skipPrivilege"}, {"value": 1621, "name": "skipStructured"}, {"value": 34, "name": "sovPrivilege"}, {"value": 34, "name": "sovStructured"}, {"value": 24, "name": "statictmp_1109"}, {"value": 248, "name": "statictmp_1590"}, {"value": 784, "name": "statictmp_1743"}, {"value": 784, "name": "statictmp_1745"}, {"value": 784, "name": "statictmp_1747"}, {"value": 784, "name": "statictmp_1753"}, {"value": 784, "name": "statictmp_1766"}, {"value": 784, "name": "statictmp_1771"}, {"value": 784, "name": "statictmp_1774"}, {"value": 184, "name": "statictmp_1984"}, {"value": 184, "name": "statictmp_1993"}, {"value": 184, "name": "statictmp_1998"}, {"value": 184, "name": "statictmp_1999"}, {"value": 8, "name": "statictmp_223"}, {"value": 80, "name": "statictmp_2262"}, {"value": 96, "name": "statictmp_2306"}, {"value": 4, "name": "statictmp_2310"}, {"value": 80, "name": "statictmp_2438"}, {"value": 96, "name": "statictmp_3088"}, {"value": 8, "name": "statictmp_3340"}, {"value": 16, "name": "statictmp_3344"}, {"value": 16, "name": "statictmp_3348"}, {"value": 16, "name": "statictmp_3352"}, {"value": 16, "name": "statictmp_3356"}, {"value": 16, "name": "statictmp_3360"}, {"value": 8, "name": "statictmp_3366"}, {"value": 32, "name": "statictmp_3368"}, {"value": 8, "name": "statictmp_3372"}, {"value": 8, "name": "statictmp_3378"}, {"value": 8, "name": "statictmp_3384"}, {"value": 24, "name": "statictmp_3386"}, {"value": 8, "name": "statictmp_3390"}, {"value": 16, "name": "statictmp_3395"}, {"value": 8, "name": "statictmp_3401"}, {"value": 8, "name": "statictmp_3407"}, {"value": 8, "name": "statictmp_3458"}, {"value": 16, "name": "statictmp_3460"}, {"value": 296, "name": "statictmp_3461"}, {"value": 16, "name": "statictmp_3465"}, {"value": 16, "name": "statictmp_3471"}, {"value": 24, "name": "statictmp_3473"}, {"value": 16, "name": "statictmp_3477"}, {"value": 32, "name": "statictmp_3479"}, {"value": 16, "name": "statictmp_3483"}, {"value": 32, "name": "statictmp_3485"}, {"value": 8, "name": "statictmp_3491"}, {"value": 16, "name": "statictmp_3493"}, {"value": 8, "name": "statictmp_3497"}, {"value": 16, "name": "statictmp_384"}, {"value": 16, "name": "statictmp_394"}, {"value": 12, "name": "statictmp_4766"}, {"value": 32, "name": "statictmp_4980"}, {"value": 32, "name": "statictmp_4987"}, {"value": 48, "name": "statictmp_5080"}, {"value": 96, "name": "statictmp_5291"}, {"value": 296, "name": "statictmp_5301"}, {"value": 56, "name": "statictmp_5312"}, {"value": 24, "name": "statictmp_5334"}, {"value": 80, "name": "statictmp_5338"}, {"value": 32, "name": "statictmp_5351"}, {"value": 296, "name": "statictmp_5647"}, {"value": 4, "name": "statictmp_5775"}, {"value": 56, "name": "statictmp_6173"}, {"value": 56, "name": "statictmp_6258"}, {"value": 64, "name": "statictmp_6309"}, {"value": 64, "name": "statictmp_6310"}, {"value": 64, "name": "statictmp_6338"}, {"value": 56, "name": "statictmp_6493"}, {"value": 32, "name": "statictmp_6838"}, {"value": 16, "name": "statictmp_6841"}, {"value": 80, "name": "statictmp_6928"}, {"value": 1744, "name": "statictmp_693"}, {"value": 1744, "name": "statictmp_699"}, {"value": 16, "name": "statictmp_7000"}, {"value": 176, "name": "statictmp_7001"}, {"value": 214, "name": "statictmp_7002"}, {"value": 2211, "name": "statictmp_7004"}, {"value": 4, "name": "statictmp_7005"}, {"value": 4, "name": "statictmp_7006"}, {"value": 288, "name": "statictmp_7007"}, {"value": 160, "name": "statictmp_7008"}, {"value": 32, "name": "statictmp_7009"}, {"value": 8, "name": "statictmp_7010"}, {"value": 16, "name": "statictmp_7011"}, {"value": 4, "name": "statictmp_7012"}, {"value": 32, "name": "statictmp_7013"}, {"value": 8, "name": "statictmp_7014"}, {"value": 8, "name": "statictmp_7015"}, {"value": 192, "name": "statictmp_7016"}, {"value": 160, "name": "statictmp_7017"}, {"value": 16, "name": "statictmp_7018"}, {"value": 16, "name": "statictmp_7019"}, {"value": 4, "name": "statictmp_7020"}, {"value": 192, "name": "statictmp_7021"}, {"value": 160, "name": "statictmp_7022"}, {"value": 16, "name": "statictmp_7023"}, {"value": 16, "name": "statictmp_7024"}, {"value": 4, "name": "statictmp_7025"}, {"value": 192, "name": "statictmp_7026"}, {"value": 160, "name": "statictmp_7027"}, {"value": 16, "name": "statictmp_7028"}, {"value": 16, "name": "statictmp_7029"}, {"value": 4, "name": "statictmp_7030"}, {"value": 384, "name": "statictmp_7031"}, {"value": 80, "name": "statictmp_7032"}, {"value": 64, "name": "statictmp_7033"}, {"value": 16, "name": "statictmp_7034"}, {"value": 384, "name": "statictmp_7035"}, {"value": 80, "name": "statictmp_7036"}, {"value": 64, "name": "statictmp_7037"}, {"value": 16, "name": "statictmp_7038"}, {"value": 64, "name": "statictmp_7039"}, {"value": 1744, "name": "statictmp_704"}, {"value": 16, "name": "statictmp_7040"}, {"value": 16, "name": "statictmp_7041"}, {"value": 576, "name": "statictmp_7042"}, {"value": 400, "name": "statictmp_7043"}, {"value": 32, "name": "statictmp_7044"}, {"value": 8, "name": "statictmp_7045"}, {"value": 16, "name": "statictmp_7046"}, {"value": 4, "name": "statictmp_7047"}, {"value": 16, "name": "statictmp_7048"}, {"value": 4, "name": "statictmp_7049"}, {"value": 16, "name": "statictmp_7050"}, {"value": 4, "name": "statictmp_7051"}, {"value": 16, "name": "statictmp_7052"}, {"value": 4, "name": "statictmp_7053"}, {"value": 32, "name": "statictmp_7054"}, {"value": 8, "name": "statictmp_7055"}, {"value": 8, "name": "statictmp_7056"}, {"value": 672, "name": "statictmp_7057"}, {"value": 480, "name": "statictmp_7058"}, {"value": 32, "name": "statictmp_7059"}, {"value": 8, "name": "statictmp_7060"}, {"value": 16, "name": "statictmp_7061"}, {"value": 4, "name": "statictmp_7062"}, {"value": 16, "name": "statictmp_7063"}, {"value": 4, "name": "statictmp_7064"}, {"value": 16, "name": "statictmp_7065"}, {"value": 4, "name": "statictmp_7066"}, {"value": 16, "name": "statictmp_7067"}, {"value": 4, "name": "statictmp_7068"}, {"value": 16, "name": "statictmp_7069"}, {"value": 4, "name": "statictmp_7070"}, {"value": 32, "name": "statictmp_7071"}, {"value": 8, "name": "statictmp_7072"}, {"value": 8, "name": "statictmp_7073"}, {"value": 288, "name": "statictmp_7074"}, {"value": 240, "name": "statictmp_7075"}, {"value": 16, "name": "statictmp_7076"}, {"value": 16, "name": "statictmp_7077"}, {"value": 4, "name": "statictmp_7078"}, {"value": 16, "name": "statictmp_7079"}, {"value": 4, "name": "statictmp_7080"}, {"value": 384, "name": "statictmp_7081"}, {"value": 80, "name": "statictmp_7082"}, {"value": 64, "name": "statictmp_7083"}, {"value": 16, "name": "statictmp_7084"}, {"value": 296, "name": "statictmp_7085"}, {"value": 32, "name": "statictmp_7086"}, {"value": 8, "name": "statictmp_7087"}, {"value": 8, "name": "statictmp_7088"}, {"value": 4, "name": "statictmp_7089"}, {"value": 12, "name": "statictmp_7108"}, {"value": 48, "name": "statictmp_7109"}, {"value": 48, "name": "statictmp_7113"}, {"value": 12, "name": "statictmp_7114"}, {"value": 8, "name": "statictmp_7118"}, {"value": 32, "name": "statictmp_7119"}, {"value": 32, "name": "statictmp_7123"}, {"value": 8, "name": "statictmp_7124"}, {"value": 64, "name": "statictmp_7128"}, {"value": 256, "name": "statictmp_7129"}, {"value": 256, "name": "statictmp_7133"}, {"value": 64, "name": "statictmp_7134"}, {"value": 8, "name": "statictmp_7138"}, {"value": 32, "name": "statictmp_7139"}, {"value": 32, "name": "statictmp_7143"}, {"value": 8, "name": "statictmp_7144"}, {"value": 12, "name": "statictmp_7148"}, {"value": 48, "name": "statictmp_7149"}, {"value": 48, "name": "statictmp_7153"}, {"value": 12, "name": "statictmp_7154"}, {"value": 12, "name": "statictmp_7158"}, {"value": 48, "name": "statictmp_7159"}, {"value": 48, "name": "statictmp_7163"}, {"value": 12, "name": "statictmp_7164"}, {"value": 12, "name": "statictmp_7168"}, {"value": 48, "name": "statictmp_7169"}, {"value": 48, "name": "statictmp_7173"}, {"value": 12, "name": "statictmp_7174"}, {"value": 4, "name": "statictmp_7200"}, {"value": 4, "name": "statictmp_7207"}, {"value": 4, "name": "statictmp_7214"}, {"value": 4, "name": "statictmp_7221"}, {"value": 16, "name": "statictmp_7259"}, {"value": 8, "name": "statictmp_7263"}, {"value": 16, "name": "statictmp_7282"}, {"value": 8, "name": "statictmp_7286"}, {"value": 16, "name": "statictmp_7306"}, {"value": 16, "name": "statictmp_7310"}, {"value": 16, "name": "statictmp_7315"}, {"value": 32, "name": "statictmp_768"}, {"value": 32, "name": "statictmp_769"}, {"value": 32, "name": "statictmp_770"}, {"value": 96, "name": "statictmp_84"}, {"value": 96, "name": "statictmp_85"}, {"value": 24, "name": "statictmp_860"}, {"value": 24, "name": "statictmp_972"}, {"value": 8, "name": "statictmp_976"}, {"value": 24, "name": "statictmp_978"}, {"value": 8, "name": "statictmp_982"}, {"value": 16, "name": "uniqueRowIDString"}, {"value": 16, "name": "uuidV4String"}, {"value": 267, "name": "validateName"}, {"value": 56, "name": "go.itab.*ColumnDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ColumnFamilyDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ColumnType,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 104, "name": "go.itab.*DatabaseDescriptor,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.DescriptorProto"}, {"value": 56, "name": "go.itab.*DatabaseDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Descriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DescriptorMutation,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DescriptorMutation_Column,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.isDescriptorMutation_Descriptor_"}, {"value": 56, "name": "go.itab.*DescriptorMutation_Index,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.isDescriptorMutation_Descriptor_"}, {"value": 56, "name": "go.itab.*Descriptor_Database,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.isDescriptor_Union"}, {"value": 56, "name": "go.itab.*Descriptor_Table,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.isDescriptor_Union"}, {"value": 56, "name": "go.itab.*ForeignKeyReference,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*IndexDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InterleaveDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InterleaveDescriptor_Ancestor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PrivilegeDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 104, "name": "go.itab.*TableDescriptor,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.DescriptorProto"}, {"value": 56, "name": "go.itab.*TableDescriptor,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDescriptor_CheckConstraint,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDescriptor_Reference,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDescriptor_RenameInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TableDescriptor_SchemaChangeLease,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UserPrivileges,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.byID,sort.Interface"}, {"value": 56, "name": "go.itab.columnIDs,sort.Interface"}, {"value": 40, "name": "go.itab.fkDeleteHelper,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.FkSpanCollector"}, {"value": 40, "name": "go.itab.fkInsertHelper,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.FkSpanCollector"}, {"value": 40, "name": "go.itab.fkUpdateHelper,github.com/cockroachdb/cockroach/pkg/sql/sqlbase.FkSpanCollector"}, {"value": 40, "name": "go.itab.returnTrue,error"}], "name": "sqlbase."}, {"children": [{"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "sqlutil."}], "name": "sql/"}, {"children": [{"children": [{"value": 1037, "name": "ClearData"}, {"value": 863, "name": "CopyFrom"}, {"value": 737, "name": "CopyInto"}, {"value": 239, "name": "Del"}, {"value": 291, "name": "Get"}, {"value": 368, "name": "Iterate"}, {"children": [{"value": 400, "name": "func1"}], "name": "Iterate."}, {"value": 273, "name": "Put"}, {"value": 93, "name": "max"}, {"value": 93, "name": "min"}], "name": "(*AbortCache)."}, {"children": [{"value": 1337, "name": "AllocateTarget"}, {"value": 1950, "name": "ComputeAction"}, {"value": 379, "name": "RebalanceTarget"}, {"value": 386, "name": "RemoveTarget"}, {"value": 1711, "name": "ShouldTransferLease"}, {"value": 3031, "name": "TransferLeaseTarget"}], "name": "(*Allocator)."}, {"children": [{"value": 212, "name": "String"}], "name": "(*AllocatorAction)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1023, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 261, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3658, "name": "Unmarshal"}], "name": "(*CollectChecksumRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 598, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 177, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2743, "name": "Unmarshal"}], "name": "(*CollectChecksumResponse)."}, {"children": [{"value": 762, "name": "String"}, {"children": [{"value": 214, "name": "func1"}], "name": "String."}, {"value": 2457, "name": "add"}, {"value": 385, "name": "expand"}, {"value": 446, "name": "getOverlaps"}, {"children": [{"value": 414, "name": "func1"}, {"value": 423, "name": "func2"}], "name": "getOverlaps."}, {"value": 3573, "name": "getWait"}, {"value": 1238, "name": "remove"}], "name": "(*CommandQueue)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 809, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 223, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3295, "name": "Unmarshal"}], "name": "(*ConfChangeContext)."}, {"children": [{"value": 3975, "name": "MergeAndDestroy"}], "name": "(*EvalResult)."}, {"children": [{"value": 631, "name": "updateMetrics"}], "name": "(*GCInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 645, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 45, "name": "Reset"}, {"value": 238, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2863, "name": "Unmarshal"}], "name": "(*Liveness)."}, {"children": [{"value": 118, "name": "(github.com/cockroachdb/cockroach/pkg/storage.livenessGossipUpdate)-fm"}, {"value": 69, "name": "(github.com/cockroachdb/cockroach/pkg/storage.numLiveNodes)-fm"}, {"value": 849, "name": "GetIsLiveMap"}, {"value": 448, "name": "GetLiveness"}, {"value": 15, "name": "GetLivenessThreshold"}, {"value": 984, "name": "GetLivenesses"}, {"value": 115, "name": "Heartbeat"}, {"value": 1607, "name": "IncrementEpoch"}, {"children": [{"value": 85, "name": "func1"}, {"value": 327, "name": "func2"}, {"value": 784, "name": "func3"}], "name": "IncrementEpoch."}, {"value": 231, "name": "IsLive"}, {"value": 48, "name": "Metrics"}, {"value": 126, "name": "PauseHeartbeat"}, {"value": 391, "name": "RegisterCallback"}, {"value": 477, "name": "Self"}, {"value": 730, "name": "SetDraining"}, {"value": 741, "name": "StartHeartbeat"}, {"children": [{"value": 1863, "name": "func1"}], "name": "StartHeartbeat."}, {"value": 504, "name": "heartbeatInternal"}, {"children": [{"value": 1659, "name": "func1"}, {"children": [{"value": 356, "name": "1"}, {"value": 85, "name": "2"}, {"value": 276, "name": "3"}], "name": "func1."}], "name": "heartbeatInternal."}, {"value": 1231, "name": "livenessGossipUpdate"}, {"value": 736, "name": "numLiveNodes"}, {"value": 1095, "name": "setDrainingInternal"}, {"children": [{"value": 85, "name": "func1"}, {"value": 211, "name": "func2"}], "name": "setDrainingInternal."}, {"value": 141, "name": "setSelf"}, {"value": 1164, "name": "updateLiveness"}, {"children": [{"value": 1563, "name": "func1"}], "name": "updateLiveness."}], "name": "(*NodeLiveness)."}, {"children": [{"value": 22, "name": "Error"}], "name": "(*NotBootstrappedError)."}, {"children": [{"value": 96, "name": "Close"}], "name": "(*OutgoingSnapshot)."}, {"children": [{"value": 294, "name": "finishRaftApplication"}], "name": "(*ProposalData)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 564, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 45, "name": "Reset"}, {"value": 232, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3375, "name": "Unmarshal"}], "name": "(*RaftHeartbeat)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 22, "name": "GetUser"}, {"value": 280, "name": "Marshal"}, {"value": 2256, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 801, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5912, "name": "Unmarshal"}], "name": "(*RaftMessageRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 556, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 296, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2022, "name": "Unmarshal"}], "name": "(*RaftMessageRequestBatch)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1065, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 283, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3432, "name": "Unmarshal"}], "name": "(*RaftMessageResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 50, "name": "GetValue"}, {"value": 280, "name": "Marshal"}, {"value": 351, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 158, "name": "SetValue"}, {"value": 111, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1767, "name": "Unmarshal"}], "name": "(*RaftMessageResponseUnion)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 350, "name": "GetCircuitBreaker"}, {"value": 197, "name": "Listen"}, {"value": 621, "name": "RaftMessageBatch"}, {"children": [{"value": 340, "name": "func1"}, {"children": [{"value": 169, "name": "1"}, {"children": [{"value": 575, "name": "1"}], "name": "1."}], "name": "func1."}], "name": "RaftMessageBatch."}, {"value": 784, "name": "RaftSnapshot"}, {"children": [{"value": 169, "name": "func1"}, {"children": [{"value": 964, "name": "1"}], "name": "func1."}], "name": "RaftSnapshot."}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 1436, "name": "SendAsync"}, {"children": [{"value": 158, "name": "func1"}, {"value": 416, "name": "func2"}, {"children": [{"value": 123, "name": "1"}], "name": "func2."}], "name": "SendAsync."}, {"value": 910, "name": "SendSnapshot"}, {"children": [{"value": 636, "name": "func1"}, {"value": 197, "name": "func2"}], "name": "SendSnapshot."}, {"value": 17, "name": "SetEventLog"}, {"value": 143, "name": "Stop"}, {"value": 550, "name": "connectAndProcess"}, {"children": [{"value": 1062, "name": "func1"}], "name": "connectAndProcess."}, {"value": 297, "name": "getStats"}, {"value": 607, "name": "handleRaftRequest"}, {"value": 1924, "name": "processQueue"}, {"children": [{"value": 405, "name": "func1"}, {"children": [{"value": 178, "name": "1"}, {"children": [{"value": 601, "name": "1"}], "name": "1."}], "name": "func1."}], "name": "processQueue."}], "name": "(*RaftTransport)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 1454, "name": "AdminMerge"}, {"children": [{"value": 3065, "name": "func1"}], "name": "AdminMerge."}, {"value": 835, "name": "AdminSplit"}, {"value": 630, "name": "AdminTransferLease"}, {"children": [{"value": 2097, "name": "func1"}], "name": "AdminTransferLease."}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 158, "name": "ChangeReplicas"}, {"value": 3895, "name": "CheckConsistency"}, {"children": [{"value": 2981, "name": "func1"}, {"value": 869, "name": "func2"}], "name": "CheckConsistency."}, {"value": 172, "name": "ContainsKey"}, {"value": 231, "name": "ContainsKeyRange"}, {"value": 174, "name": "Desc"}, {"value": 496, "name": "Entries"}, {"value": 17, "name": "FinishEventLog"}, {"value": 238, "name": "FirstIndex"}, {"value": 219, "name": "GetFirstIndex"}, {"value": 142, "name": "GetLeaseHistory"}, {"value": 215, "name": "GetMVCCStats"}, {"value": 174, "name": "GetMaxBytes"}, {"value": 241, "name": "GetReplicaDescriptor"}, {"value": 1865, "name": "GetSnapshot"}, {"value": 84, "name": "GetTempPrefix"}, {"value": 1189, "name": "InitialState"}, {"value": 195, "name": "IsDestroyed"}, {"value": 21, "name": "IsFirstRange"}, {"value": 240, "name": "IsInitialized"}, {"value": 204, "name": "IsLeaseValid"}, {"value": 36, "name": "LastIndex"}, {"value": 226, "name": "Less"}, {"value": 769, "name": "Metrics"}, {"value": 23, "name": "NodeID"}, {"value": 181, "name": "RaftStatus"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 1791, "name": "Send"}, {"value": 17, "name": "SetEventLog"}, {"value": 165, "name": "SetMaxBytes"}, {"value": 399, "name": "Snapshot"}, {"value": 533, "name": "State"}, {"value": 305, "name": "String"}, {"value": 382, "name": "Term"}, {"value": 440, "name": "acquireMergeLock"}, {"children": [{"value": 67, "name": "func1"}], "name": "acquireMergeLock."}, {"value": 303, "name": "acquireSplitLock"}, {"children": [{"value": 559, "name": "func1"}], "name": "acquireSplitLock."}, {"value": 281, "name": "addUnreachableRemoteReplica"}, {"value": 1333, "name": "adminScatter"}, {"value": 4489, "name": "adminSplitWithDescriptor"}, {"children": [{"value": 2259, "name": "func1"}], "name": "adminSplitWithDescriptor."}, {"value": 2995, "name": "append"}, {"value": 2368, "name": "applyRaftCommand"}, {"value": 4361, "name": "applySnapshot"}, {"children": [{"value": 223, "name": "func1"}, {"value": 1336, "name": "func2"}], "name": "applySnapshot."}, {"value": 5076, "name": "applyTimestampCache"}, {"value": 182, "name": "assertState"}, {"value": 1662, "name": "assertStateRLocked"}, {"value": 4425, "name": "beginCmds"}, {"children": [{"value": 1612, "name": "func1"}], "name": "beginCmds."}, {"value": 660, "name": "cancelPendingCommandsLocked"}, {"value": 3140, "name": "changeReplicas"}, {"children": [{"value": 2693, "name": "func1"}], "name": "changeReplicas."}, {"value": 415, "name": "checkBatchRequest"}, {"value": 106, "name": "clearPendingSnapshotIndex"}, {"value": 903, "name": "computeChecksumDone"}, {"value": 1938, "name": "computeChecksumPostApply"}, {"children": [{"value": 636, "name": "func1"}], "name": "computeChecksumPostApply."}, {"value": 1835, "name": "destroyDataRaftMuLocked"}, {"value": 92, "name": "endKey"}, {"value": 1609, "name": "evaluateProposal"}, {"value": 1280, "name": "evaluateProposalInner"}, {"value": 4926, "name": "evaluateTxnWriteBatch"}, {"value": 3912, "name": "executeAdminBatch"}, {"value": 2205, "name": "executeReadOnlyBatch"}, {"children": [{"value": 95, "name": "func1"}], "name": "executeReadOnlyBatch."}, {"value": 1214, "name": "executeWriteBatch"}, {"value": 469, "name": "gcOldChecksumEntriesLocked"}, {"value": 2601, "name": "getChecksum"}, {"value": 287, "name": "getEstimatedBehindCountRLocked"}, {"value": 506, "name": "getLastReplicaGCTimestamp"}, {"value": 636, "name": "getLease"}, {"value": 358, "name": "getLeaseForGossip"}, {"children": [{"value": 493, "name": "func1"}], "name": "getLeaseForGossip."}, {"value": 574, "name": "getQueueLastProcessed"}, {"value": 675, "name": "getReplicaDescriptorByIDRLocked"}, {"value": 312, "name": "getReplicaDescriptorRLocked"}, {"value": 1430, "name": "gossipFirstRange"}, {"value": 401, "name": "handleEvalResult"}, {"value": 2227, "name": "handleLocalEvalResult"}, {"children": [{"value": 363, "name": "func1"}], "name": "handleLocalEvalResult."}, {"value": 380, "name": "handleRaftReady"}, {"value": 7961, "name": "handleRaftReadyRaftMuLocked"}, {"children": [{"value": 349, "name": "func1"}, {"value": 298, "name": "func2"}, {"value": 126, "name": "func3"}, {"value": 165, "name": "func4"}], "name": "handleRaftReadyRaftMuLocked."}, {"value": 4278, "name": "handleReplicatedEvalResult"}, {"value": 228, "name": "init"}, {"value": 3820, "name": "initLocked"}, {"value": 980, "name": "insertProposalLocked"}, {"value": 207, "name": "isLeaseValidRLocked"}, {"value": 1122, "name": "leaseGoodToGo"}, {"value": 2729, "name": "leasePostApply"}, {"value": 894, "name": "leaseStatus"}, {"value": 1127, "name": "loadSystemConfig"}, {"value": 590, "name": "maybeAcquireSplitMergeLock"}, {"value": 1060, "name": "maybeCoalesceHeartbeat"}, {"value": 1611, "name": "maybeGossipFirstRange"}, {"value": 3178, "name": "maybeGossipNodeLiveness"}, {"value": 1374, "name": "maybeGossipSystemConfig"}, {"value": 754, "name": "maybeInitializeRaftGroup"}, {"children": [{"value": 24, "name": "func1"}], "name": "maybeInitializeRaftGroup."}, {"value": 4786, "name": "maybeQuiesceLocked"}, {"value": 835, "name": "maybeSetCorrupt"}, {"value": 299, "name": "maybeTransferRaftLeadership"}, {"children": [{"value": 532, "name": "func1"}], "name": "maybeTransferRaftLeadership."}, {"value": 275, "name": "needsSplitBySize"}, {"value": 194, "name": "ownsValidLease"}, {"value": 267, "name": "ownsValidLeaseRLocked"}, {"value": 7060, "name": "processRaftCommand"}, {"children": [{"value": 678, "name": "func1"}, {"value": 148, "name": "func2"}, {"value": 132, "name": "func3"}], "name": "processRaftCommand."}, {"value": 2794, "name": "propose"}, {"children": [{"value": 6, "name": "func1"}, {"value": 341, "name": "func2"}], "name": "propose."}, {"value": 176, "name": "quiesce"}, {"value": 585, "name": "quiesceLocked"}, {"value": 101, "name": "raftStatusRLocked"}, {"value": 560, "name": "raftTruncatedStateLocked"}, {"value": 842, "name": "redirectOnOrAcquireLease"}, {"children": [{"value": 3605, "name": "func1"}, {"value": 2206, "name": "func2"}], "name": "redirectOnOrAcquireLease."}, {"value": 3553, "name": "refreshProposalsLocked"}, {"value": 454, "name": "reportSnapshotStatus"}, {"children": [{"value": 101, "name": "func1"}], "name": "reportSnapshotStatus."}, {"value": 1309, "name": "requestCanProceed"}, {"value": 1569, "name": "requestLeaseLocked"}, {"value": 1248, "name": "requestToProposal"}, {"value": 179, "name": "requiresExpiringLeaseRLocked"}, {"value": 2388, "name": "sendRaftMessage"}, {"children": [{"value": 117, "name": "func1"}], "name": "sendRaftMessage."}, {"value": 551, "name": "sendRaftMessageRequest"}, {"value": 2000, "name": "sendSnapshot"}, {"children": [{"value": 95, "name": "func1"}], "name": "sendSnapshot."}, {"value": 260, "name": "setDesc"}, {"value": 1055, "name": "setDescWithoutProcessUpdate"}, {"value": 161, "name": "setLastReplicaDescriptors"}, {"value": 409, "name": "setLastReplicaGCTimestamp"}, {"value": 469, "name": "setPendingSnapshotIndex"}, {"value": 364, "name": "setQueueLastProcessed"}, {"value": 208, "name": "setReplicaID"}, {"value": 1030, "name": "setReplicaIDLocked"}, {"value": 472, "name": "setTombstoneKey"}, {"value": 3094, "name": "sha512"}, {"value": 109, "name": "shouldGossip"}, {"value": 159, "name": "submitProposalLocked"}, {"value": 214, "name": "tick"}, {"value": 932, "name": "tickRaftMuLocked"}, {"value": 4238, "name": "tryExecuteWriteBatch"}, {"children": [{"value": 109, "name": "func1"}, {"value": 334, "name": "func2"}], "name": "tryExecuteWriteBatch."}, {"value": 364, "name": "unquiesceAndWakeLeaderLocked"}, {"value": 255, "name": "unquiesceLocked"}, {"value": 689, "name": "updateRangeInfo"}, {"value": 215, "name": "withRaftGroup"}, {"value": 1388, "name": "withRaftGroupLocked"}], "name": "(*Replica)."}, {"children": [{"value": 76, "name": "Close"}, {"value": 208, "name": "Key"}, {"value": 83, "name": "Next"}, {"value": 101, "name": "Valid"}, {"value": 102, "name": "Value"}, {"value": 373, "name": "advance"}, {"value": 382, "name": "allocIterKeyValue"}], "name": "(*ReplicaDataIterator)."}, {"children": [{"value": 166, "name": "AbortCache"}, {"value": 237, "name": "ContainsKey"}, {"value": 170, "name": "DB"}, {"value": 205, "name": "Desc"}, {"value": 185, "name": "Engine"}, {"value": 205, "name": "FirstIndex"}, {"value": 213, "name": "GCThreshold"}, {"value": 236, "name": "GetLastReplicaGCTimestamp"}, {"value": 215, "name": "GetLease"}, {"value": 341, "name": "GetMVCCStats"}, {"value": 195, "name": "GetTempPrefix"}, {"value": 172, "name": "IsFirstRange"}, {"value": 174, "name": "NodeID"}, {"value": 166, "name": "RangeID"}, {"value": 168, "name": "StoreID"}, {"value": 354, "name": "StoreTestingKnobs"}, {"value": 195, "name": "String"}, {"value": 215, "name": "Term"}, {"value": 179, "name": "Tracer"}, {"value": 213, "name": "TxnSpanGCThreshold"}], "name": "(*ReplicaEvalContext)."}, {"children": [{"value": 13, "name": "Desc"}, {"value": 191, "name": "Less"}, {"value": 313, "name": "String"}, {"value": 33, "name": "endKey"}], "name": "(*ReplicaPlaceholder)."}, {"children": [{"value": 204, "name": "String"}, {"value": 234, "name": "WriteTo"}], "name": "(*ReplicaSnapshotDiffSlice)."}, {"children": [{"value": 238, "name": "CollectChecksum"}], "name": "(*Server)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1077, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 305, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4175, "name": "Unmarshal"}], "name": "(*SnapshotRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 879, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 262, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3507, "name": "Unmarshal"}], "name": "(*SnapshotRequest_Header)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*SnapshotRequest_Priority)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 359, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 111, "name": "Reset"}, {"value": 126, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2074, "name": "Unmarshal"}], "name": "(*SnapshotResponse)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*SnapshotResponse_Status)."}, {"children": [{"value": 436, "name": "Add"}, {"value": 1072, "name": "checkAllowed"}, {"value": 862, "name": "validate"}], "name": "(*SpanSet)."}, {"children": [{"value": 68, "name": "Close"}, {"value": 607, "name": "ComputeStats"}, {"value": 23, "name": "Iterator"}, {"value": 207, "name": "Key"}, {"value": 116, "name": "Less"}, {"value": 302, "name": "Next"}, {"value": 302, "name": "NextKey"}, {"value": 302, "name": "Prev"}, {"value": 302, "name": "PrevKey"}, {"value": 343, "name": "Seek"}, {"value": 343, "name": "SeekReverse"}, {"value": 207, "name": "UnsafeKey"}, {"value": 98, "name": "UnsafeValue"}, {"value": 211, "name": "Valid"}, {"value": 101, "name": "Value"}, {"value": 111, "name": "ValueProto"}], "name": "(*SpanSetIterator)."}, {"children": [{"value": 106, "name": "AnnotateCtx"}, {"value": 105, "name": "Attrs"}, {"value": 1525, "name": "Bootstrap"}, {"value": 4471, "name": "BootstrapRange"}, {"value": 245, "name": "Capacity"}, {"value": 15, "name": "Clock"}, {"value": 32, "name": "ClusterID"}, {"value": 1112, "name": "ComputeMetrics"}, {"value": 487, "name": "ComputeStatsForKeySpan"}, {"children": [{"value": 452, "name": "func1"}], "name": "ComputeStatsForKeySpan."}, {"value": 15, "name": "DB"}, {"value": 482, "name": "Descriptor"}, {"value": 30, "name": "Engine"}, {"value": 298, "name": "GetReplica"}, {"value": 98, "name": "GetTempPrefix"}, {"value": 15, "name": "Gossip"}, {"value": 321, "name": "GossipDeadReplicas"}, {"value": 1252, "name": "GossipStore"}, {"value": 602, "name": "HandleRaftRequest"}, {"value": 2028, "name": "HandleRaftResponse"}, {"value": 1147, "name": "HandleRaftUncoalescedRequest"}, {"value": 3514, "name": "HandleSnapshot"}, {"children": [{"value": 246, "name": "func1"}], "name": "HandleSnapshot."}, {"value": 125, "name": "IsDraining"}, {"value": 22, "name": "IsStarted"}, {"value": 254, "name": "LeaseCount"}, {"children": [{"value": 113, "name": "func1"}], "name": "LeaseCount."}, {"value": 577, "name": "LookupReplica"}, {"children": [{"value": 94, "name": "func1"}], "name": "LookupReplica."}, {"value": 235, "name": "MVCCStats"}, {"value": 1828, "name": "MergeRange"}, {"value": 18, "name": "Metrics"}, {"value": 664, "name": "NewRangeDescriptor"}, {"value": 98, "name": "NewSnapshot"}, {"value": 185, "name": "NotifyBootstrapped"}, {"value": 261, "name": "RaftStatus"}, {"value": 1157, "name": "ReadLastUpTimestamp"}, {"value": 21, "name": "Registry"}, {"value": 993, "name": "RemoveReplica"}, {"children": [{"value": 88, "name": "func1"}], "name": "RemoveReplica."}, {"value": 186, "name": "ReplicaCount"}, {"value": 69, "name": "ReplicaCount-fm"}, {"value": 5891, "name": "Send"}, {"children": [{"value": 560, "name": "func1"}], "name": "Send."}, {"value": 745, "name": "SetDraining"}, {"children": [{"value": 863, "name": "func1"}, {"children": [{"value": 1788, "name": "1"}], "name": "func1."}], "name": "SetDraining."}, {"value": 2593, "name": "SplitRange"}, {"value": 2427, "name": "Start"}, {"children": [{"value": 1418, "name": "func1"}, {"value": 369, "name": "func2"}, {"value": 343, "name": "func3"}], "name": "Start."}, {"value": 18, "name": "Stopper"}, {"value": 13, "name": "StoreID"}, {"value": 266, "name": "String"}, {"value": 19, "name": "TestingKnobs"}, {"value": 24, "name": "Tracer"}, {"value": 68, "name": "WaitForInit"}, {"value": 1013, "name": "WriteLastUpTimestamp"}, {"value": 692, "name": "addPlaceholderLocked"}, {"value": 987, "name": "addReplicaInternalLocked"}, {"value": 343, "name": "addReplicaToRangeMapLocked"}, {"value": 255, "name": "canApplySnapshot"}, {"value": 1783, "name": "canApplySnapshotLocked"}, {"children": [{"value": 302, "name": "func1"}], "name": "canApplySnapshotLocked."}, {"value": 290, "name": "canCampaignIdleReplica"}, {"value": 1248, "name": "deadReplicas"}, {"value": 77, "name": "enqueueRaftUpdateCheck"}, {"value": 311, "name": "getOrCreateReplica"}, {"value": 652, "name": "getOverlappingKeyRangeLocked"}, {"children": [{"value": 151, "name": "func1"}], "name": "getOverlappingKeyRangeLocked."}, {"value": 2049, "name": "insertRangeLogEvent"}, {"value": 1335, "name": "logChange"}, {"value": 1039, "name": "logSplit"}, {"value": 410, "name": "maybeGossipOnCapacityChange"}, {"children": [{"value": 208, "name": "func1"}], "name": "maybeGossipOnCapacityChange."}, {"value": 587, "name": "maybeMergeTimestampCaches"}, {"value": 334, "name": "processRaft"}, {"value": 5920, "name": "processRaftRequest"}, {"children": [{"value": 639, "name": "func1"}, {"value": 114, "name": "func2"}, {"value": 488, "name": "func3"}, {"value": 250, "name": "func4"}], "name": "processRaftRequest."}, {"value": 230, "name": "processRangeDescriptorUpdate"}, {"value": 1141, "name": "processRangeDescriptorUpdateLocked"}, {"value": 2527, "name": "processReady"}, {"value": 917, "name": "processRequestQueue"}, {"value": 555, "name": "processTick"}, {"value": 246, "name": "raftTickLoop"}, {"children": [{"value": 865, "name": "func1"}, {"children": [{"value": 85, "name": "1"}], "name": "func1."}], "name": "raftTickLoop."}, {"value": 186, "name": "removePlaceholder"}, {"value": 971, "name": "removePlaceholderLocked"}, {"value": 2960, "name": "removeReplicaImpl"}, {"value": 1563, "name": "reserveSnapshot"}, {"children": [{"value": 205, "name": "func1"}], "name": "reserveSnapshot."}, {"value": 1018, "name": "sendQueuedHeartbeats"}, {"value": 1481, "name": "sendQueuedHeartbeatsToNode"}, {"value": 82, "name": "setReplicaGCQueueActive"}, {"value": 82, "name": "setReplicateQueueActive"}, {"value": 79, "name": "setScannerActive"}, {"value": 82, "name": "setSplitQueueActive"}, {"value": 82, "name": "setTimeSeriesMaintenanceQueueActive"}, {"value": 246, "name": "startCoalescedHeartbeatsLoop"}, {"children": [{"value": 400, "name": "func1"}, {"children": [{"value": 60, "name": "1"}], "name": "func1."}], "name": "startCoalescedHeartbeatsLoop."}, {"value": 932, "name": "startGossip"}, {"children": [{"value": 114, "name": "func1"}, {"value": 25, "name": "func2"}, {"value": 114, "name": "func3"}, {"value": 1347, "name": "func4"}], "name": "startGossip."}, {"value": 254, "name": "systemGossipUpdate"}, {"children": [{"value": 358, "name": "func1"}], "name": "systemGossipUpdate."}, {"value": 2888, "name": "tryGetOrCreateReplica"}, {"value": 1629, "name": "uncoalesceBeats"}, {"value": 212, "name": "updateCapacityGauges"}, {"value": 731, "name": "updateCommandQueueGauges"}, {"children": [{"value": 499, "name": "func1"}], "name": "updateCommandQueueGauges."}, {"value": 1492, "name": "updateReplicationGauges"}, {"children": [{"value": 689, "name": "func1"}], "name": "updateReplicationGauges."}, {"value": 536, "name": "visitReplicasLocked"}, {"children": [{"value": 316, "name": "func1"}], "name": "visitReplicasLocked."}], "name": "(*Store)."}, {"children": [{"value": 32, "name": "LeaseExpiration"}, {"value": 703, "name": "SetDefaults"}, {"value": 125, "name": "Valid"}], "name": "(*StoreConfig)."}, {"children": [{"value": 214, "name": "String"}], "name": "(*StoreList)."}, {"children": [{"value": 253, "name": "addMVCCStats"}, {"value": 138, "name": "leaseRequestComplete"}, {"value": 138, "name": "leaseTransferComplete"}, {"value": 253, "name": "subtractMVCCStats"}, {"value": 482, "name": "updateMVCCGaugesLocked"}, {"value": 428, "name": "updateRocksDBStats"}], "name": "(*StoreMetrics)."}, {"children": [{"value": 118, "name": "(github.com/cockroachdb/cockroach/pkg/storage.deadReplicasGossipUpdate)-fm"}, {"value": 87, "name": "(github.com/cockroachdb/cockroach/pkg/storage.getNodeLocalityString)-fm"}, {"value": 118, "name": "(github.com/cockroachdb/cockroach/pkg/storage.storeGossipUpdate)-fm"}, {"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 378, "name": "GetStores"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 2161, "name": "String"}, {"value": 1537, "name": "deadReplicasGossipUpdate"}, {"value": 640, "name": "getLocalities"}, {"value": 324, "name": "getNodeLocalityString"}, {"value": 341, "name": "getStoreDescriptor"}, {"value": 719, "name": "getStoreList"}, {"value": 444, "name": "getStoreListFromIDs"}, {"value": 1551, "name": "getStoreListFromIDsRLocked"}, {"value": 1680, "name": "liveAndDeadReplicas"}, {"value": 1351, "name": "storeGossipUpdate"}, {"value": 1928, "name": "throttle"}], "name": "(*StorePool)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 254, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 136, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1777, "name": "Unmarshal"}], "name": "(*StoreRequestHeader)."}, {"children": [{"value": 1, "name": "ModuleTestingKnobs"}], "name": "(*StoreTestingKnobs)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 817, "name": "AddStore"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 478, "name": "FirstRange"}, {"value": 323, "name": "GetStore"}, {"value": 180, "name": "GetStoreCount"}, {"value": 197, "name": "HasStore"}, {"value": 2222, "name": "LookupReplica"}, {"value": 1956, "name": "ReadBootstrapInfo"}, {"value": 191, "name": "RemoveStore"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 1352, "name": "Send"}, {"value": 17, "name": "SetEventLog"}, {"value": 664, "name": "VisitStores"}, {"value": 553, "name": "WriteBootstrapInfo"}, {"value": 1472, "name": "updateBootstrapInfo"}], "name": "(*Stores)."}, {"children": [{"value": 599, "name": "Error"}, {"value": 1, "name": "purgatoryErrorMarker"}], "name": "(*allocatorError)."}, {"children": [{"value": 18, "name": "AssertHeld"}, {"value": 28, "name": "ExpFloat64"}, {"value": 28, "name": "Float32"}, {"value": 28, "name": "Float64"}, {"value": 28, "name": "Int"}, {"value": 27, "name": "Int31"}, {"value": 27, "name": "Int31n"}, {"value": 28, "name": "Int63"}, {"value": 28, "name": "Int63n"}, {"value": 28, "name": "Intn"}, {"value": 18, "name": "Lock"}, {"value": 28, "name": "NormFloat64"}, {"value": 46, "name": "Perm"}, {"value": 46, "name": "Read"}, {"value": 19, "name": "Seed"}, {"value": 27, "name": "Uint32"}, {"value": 28, "name": "Uint64"}, {"value": 18, "name": "Unlock"}], "name": "(*allocatorRand)."}, {"children": [{"value": 26, "name": "String"}, {"value": 910, "name": "store"}], "name": "(*atomicDescString)."}, {"children": [{"value": 434, "name": "Add"}, {"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 176, "name": "Disabled"}, {"value": 514, "name": "DrainQueue"}, {"value": 17, "name": "FinishEventLog"}, {"value": 181, "name": "Length"}, {"value": 1702, "name": "MaybeAdd"}, {"value": 543, "name": "MaybeRemove"}, {"value": 193, "name": "PurgatoryLength"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 115, "name": "SetDisabled"}, {"value": 17, "name": "SetEventLog"}, {"value": 80, "name": "Start"}, {"value": 234, "name": "add"}, {"value": 1734, "name": "addInternal"}, {"value": 1745, "name": "maybeAddToPurgatory"}, {"children": [{"value": 91, "name": "func1"}, {"value": 2820, "name": "func2"}, {"children": [{"value": 219, "name": "1"}], "name": "func2."}], "name": "maybeAddToPurgatory."}, {"value": 401, "name": "pop"}, {"value": 388, "name": "processLoop"}, {"children": [{"value": 924, "name": "func1"}, {"children": [{"value": 111, "name": "1"}, {"value": 611, "name": "2"}], "name": "func1."}], "name": "processLoop."}, {"value": 2818, "name": "processReplica"}, {"value": 328, "name": "remove"}, {"value": 237, "name": "requiresSplit"}], "name": "(*baseQueue)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 430, "name": "Less"}, {"value": 495, "name": "Swap"}], "name": "(*byScore)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 495, "name": "Swap"}], "name": "(*byScoreAndID)."}, {"children": [{"value": 259, "name": "Less"}, {"value": 548, "name": "size"}], "name": "(*cacheRequest)."}, {"children": [{"value": 252, "name": "String"}], "name": "(*candidate)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*candidateList)."}, {"children": [{"value": 14, "name": "ID"}, {"value": 87, "name": "Range"}, {"value": 1599, "name": "String"}], "name": "(*cmd)."}, {"children": [{"value": 326, "name": "CollectChecksum"}], "name": "(*consistencyClient)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 644, "name": "process"}, {"value": 10, "name": "purgatoryChan"}, {"value": 1002, "name": "shouldQueue"}, {"value": 168, "name": "timer"}], "name": "(*consistencyQueue)."}, {"children": [{"value": 828, "name": "done"}], "name": "(*endCmds)."}, {"children": [{"value": 234, "name": "Compare"}], "name": "(*entryCacheKey)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 3897, "name": "process"}, {"children": [{"value": 124, "name": "func1"}, {"value": 166, "name": "func2"}, {"value": 84, "name": "func3"}, {"value": 734, "name": "func4"}], "name": "process."}, {"value": 10, "name": "purgatoryChan"}, {"value": 257, "name": "shouldQueue"}, {"value": 10, "name": "timer"}], "name": "(*gcQueue)."}, {"children": [{"value": 220, "name": "String"}], "name": "(*gcQueueScore)."}, {"children": [{"value": 59, "name": "(github.com/cockroachdb/cockroach/pkg/storage.start)-fm"}, {"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 281, "name": "Allocate"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 279, "name": "start"}, {"children": [{"value": 1882, "name": "func1"}, {"children": [{"value": 447, "name": "1"}], "name": "func1."}], "name": "start."}], "name": "(*idAllocator)."}, {"children": [{"value": 5909, "name": "maybePushTransactions"}, {"value": 3203, "name": "processIntents"}, {"value": 1286, "name": "processIntentsAsync"}, {"children": [{"value": 147, "name": "func1"}], "name": "processIntentsAsync."}, {"value": 817, "name": "processWriteIntentError"}, {"value": 3146, "name": "resolveIntents"}, {"children": [{"value": 339, "name": "func1"}, {"value": 116, "name": "func2"}, {"value": 389, "name": "func3"}], "name": "resolveIntents."}], "name": "(*intentResolver)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 639, "name": "add"}, {"value": 884, "name": "get"}], "name": "(*leaseHistory)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*lockableGCInfo)."}, {"children": [{"value": 439, "name": "RaftMessageBatch"}, {"value": 444, "name": "RaftSnapshot"}], "name": "(*multiRaftClient)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*multiRaftRaftMessageBatchClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*multiRaftRaftMessageBatchServer)."}, {"children": [{"value": 110, "name": "CloseSend"}, {"value": 110, "name": "Context"}, {"value": 120, "name": "Header"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 133, "name": "SendMsg"}, {"value": 100, "name": "Trailer"}], "name": "(*multiRaftRaftSnapshotClient)."}, {"children": [{"value": 110, "name": "Context"}, {"value": 190, "name": "Recv"}, {"value": 133, "name": "RecvMsg"}, {"value": 110, "name": "Send"}, {"value": 120, "name": "SendHeader"}, {"value": 133, "name": "SendMsg"}, {"value": 120, "name": "SetHeader"}, {"value": 100, "name": "SetTrailer"}], "name": "(*multiRaftRaftSnapshotServer)."}, {"children": [{"value": 104, "name": "Clear"}, {"value": 137, "name": "Init"}, {"value": 163, "name": "Len"}, {"value": 212, "name": "Less"}, {"value": 91, "name": "Pop"}, {"value": 127, "name": "PopOverlap"}, {"value": 109, "name": "Push"}, {"value": 309, "name": "Swap"}], "name": "(*overlapHeap)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 214, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*pendingCmdSlice)."}, {"children": [{"value": 3331, "name": "InitOrJoinRequest"}, {"value": 420, "name": "JoinRequest"}, {"value": 144, "name": "RequestPending"}, {"value": 398, "name": "TransferInProgress"}, {"value": 761, "name": "requestLeaseAsync"}, {"children": [{"value": 2112, "name": "func1"}], "name": "requestLeaseAsync."}], "name": "(*pendingLeaseRequest)."}, {"children": [{"value": 117, "name": "getTxn"}], "name": "(*pendingTxn)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 217, "name": "Less"}, {"value": 264, "name": "Pop"}, {"value": 308, "name": "Push"}, {"value": 349, "name": "Swap"}, {"value": 97, "name": "update"}], "name": "(*priorityQueue)."}, {"children": [{"value": 1271, "name": "Clear"}, {"value": 262, "name": "Enable"}, {"value": 425, "name": "Enqueue"}, {"value": 1289, "name": "GetDependents"}, {"value": 8930, "name": "MaybeWait"}, {"value": 913, "name": "UpdateTxn"}, {"value": 901, "name": "queryTxnStatus"}], "name": "(*pushTxnQueue)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 993, "name": "addEntries"}, {"value": 89, "name": "clearTo"}, {"value": 541, "name": "delEntries"}, {"children": [{"value": 312, "name": "func1"}], "name": "delEntries."}, {"value": 565, "name": "getEntries"}, {"children": [{"value": 701, "name": "func1"}], "name": "getEntries."}], "name": "(*raftEntryCache)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 1091, "name": "process"}, {"value": 10, "name": "purgatoryChan"}, {"value": 300, "name": "shouldQueue"}, {"value": 10, "name": "timer"}], "name": "(*raftLogQueue)."}, {"children": [{"value": 159, "name": "Debug"}, {"value": 161, "name": "Debugf"}, {"value": 132, "name": "Error"}, {"value": 134, "name": "Errorf"}, {"value": 132, "name": "Fatal"}, {"value": 134, "name": "Fatalf"}, {"value": 159, "name": "Info"}, {"value": 161, "name": "Infof"}, {"value": 455, "name": "Panic"}, {"value": 554, "name": "Panicf"}, {"value": 132, "name": "Warning"}, {"value": 134, "name": "Warningf"}], "name": "(*raftLogger)."}, {"children": [{"value": 103, "name": "EnqueueRaftReady"}, {"value": 103, "name": "EnqueueRaftRequest"}, {"value": 123, "name": "EnqueueRaftTick"}, {"value": 579, "name": "Start"}, {"children": [{"value": 177, "name": "func1"}, {"value": 68, "name": "func2"}], "name": "Start."}, {"value": 66, "name": "Wait"}, {"value": 79, "name": "Wait-fm"}, {"value": 149, "name": "enqueue1"}, {"value": 292, "name": "enqueue1Locked"}, {"value": 298, "name": "enqueueN"}, {"value": 137, "name": "signal"}, {"value": 725, "name": "worker"}], "name": "(*raftScheduler)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 591, "name": "process"}, {"value": 642, "name": "processRaftSnapshot"}, {"value": 10, "name": "purgatoryChan"}, {"value": 491, "name": "shouldQueue"}, {"value": 10, "name": "timer"}], "name": "(*raftSnapshotQueue)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 209, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*raftTransportStatsSlice)."}, {"children": [{"value": 213, "name": "Less"}, {"value": 180, "name": "endKey"}], "name": "(*rangeBTreeKey)."}, {"children": [{"value": 30, "name": "Len"}, {"value": 113, "name": "PopFront"}, {"value": 111, "name": "PushBack"}, {"value": 29, "name": "WriteCap"}], "name": "(*rangeIDChunk)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 721, "name": "PopFront"}, {"value": 842, "name": "PushBack"}], "name": "(*rangeIDQueue)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*refreshRaftReason)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 2664, "name": "process"}, {"value": 10, "name": "purgatoryChan"}, {"value": 656, "name": "shouldQueue"}, {"value": 10, "name": "timer"}], "name": "(*replicaGCQueue)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 355, "name": "AddQueues"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 169, "name": "GetDisabled"}, {"value": 99, "name": "RemoveReplica"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 211, "name": "SetDisabled"}, {"value": 17, "name": "SetEventLog"}, {"value": 197, "name": "Start"}, {"value": 256, "name": "paceInterval"}, {"value": 400, "name": "removeReplica"}, {"value": 388, "name": "scanLoop"}, {"children": [{"value": 1462, "name": "func1"}, {"children": [{"value": 183, "name": "1"}, {"value": 443, "name": "2"}], "name": "func1."}], "name": "scanLoop."}, {"value": 1290, "name": "waitAndProcess"}, {"value": 535, "name": "waitEnabled"}], "name": "(*replicaScanner)."}, {"children": [{"value": 146, "name": "AbortCacheKey"}, {"value": 446, "name": "LeaseAppliedIndexKey"}, {"value": 446, "name": "RaftAppliedIndexKey"}, {"value": 446, "name": "RaftHardStateKey"}, {"value": 446, "name": "RaftLastIndexKey"}, {"value": 666, "name": "RaftLogKey"}, {"value": 446, "name": "RaftLogPrefix"}, {"value": 446, "name": "RaftTombstoneKey"}, {"value": 446, "name": "RaftTruncatedStateKey"}, {"value": 446, "name": "RangeFrozenStatusKey"}, {"value": 446, "name": "RangeLastGCKey"}, {"value": 446, "name": "RangeLastReplicaGCTimestampKey"}, {"value": 446, "name": "RangeLastVerificationTimestampKeyDeprecated"}, {"value": 446, "name": "RangeLeaseKey"}, {"value": 446, "name": "RangeReplicaDestroyedErrorKey"}, {"value": 446, "name": "RangeStatsKey"}, {"value": 446, "name": "RangeTxnSpanGCThresholdKey"}], "name": "(*replicaStateLoader)."}, {"children": [{"value": 1189, "name": "getRequestCounts"}, {"value": 373, "name": "maybeRotateLocked"}, {"value": 572, "name": "record"}, {"value": 527, "name": "resetRequestCounts"}], "name": "(*replicaStats)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 161, "name": "addReplica"}, {"value": 189, "name": "canTransferLease"}, {"value": 880, "name": "process"}, {"value": 5284, "name": "processOneChange"}, {"value": 15, "name": "purgatoryChan"}, {"value": 143, "name": "removeReplica"}, {"value": 1925, "name": "shouldQueue"}, {"value": 10, "name": "timer"}, {"value": 1167, "name": "transferLease"}], "name": "(*replicateQueue)."}, {"children": [{"value": 232, "name": "Error"}], "name": "(*snapshotError)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 1903, "name": "process"}, {"value": 10, "name": "purgatoryChan"}, {"value": 443, "name": "shouldQueue"}, {"value": 10, "name": "timer"}], "name": "(*splitQueue)."}, {"children": [{"value": 633, "name": "status"}], "name": "(*storeDetail)."}, {"children": [{"value": 233, "name": "EstimatedCount"}, {"value": 200, "name": "Len"}, {"value": 345, "name": "Swap"}, {"value": 998, "name": "Visit"}], "name": "(*storeReplicaVisitor)."}, {"children": [{"value": 41, "name": "Add"}, {"value": 20, "name": "AddLogTag"}, {"value": 20, "name": "AddLogTagInt"}, {"value": 20, "name": "AddLogTagInt64"}, {"value": 20, "name": "AddLogTagStr"}, {"value": 38, "name": "AnnotateCtx"}, {"value": 56, "name": "AnnotateCtxWithSpan"}, {"value": 23, "name": "Disabled"}, {"value": 18, "name": "DrainQueue"}, {"value": 20, "name": "FinishEventLog"}, {"value": 27, "name": "Length"}, {"value": 18, "name": "MaybeAdd"}, {"value": 18, "name": "MaybeRemove"}, {"value": 27, "name": "PurgatoryLength"}, {"value": 38, "name": "ResetAndAnnotateCtx"}, {"value": 18, "name": "SetDisabled"}, {"value": 20, "name": "SetEventLog"}, {"value": 18, "name": "Start"}, {"value": 818, "name": "process"}, {"value": 10, "name": "purgatoryChan"}, {"value": 583, "name": "shouldQueue"}, {"value": 163, "name": "timer"}], "name": "(*timeSeriesMaintenanceQueue)."}, {"children": [{"value": 134, "name": "AssertHeld"}, {"value": 158, "name": "Lock"}, {"value": 171, "name": "Unlock"}], "name": "(*timedMutex)."}, {"children": [{"value": 247, "name": "(github.com/cockroachdb/cockroach/pkg/storage.shouldEvict)-fm"}, {"value": 1626, "name": "AddRequest"}, {"value": 183, "name": "Clear"}, {"value": 1987, "name": "ExpandRequests"}, {"children": [{"value": 458, "name": "func1"}], "name": "ExpandRequests."}, {"value": 196, "name": "GetMaxRead"}, {"value": 196, "name": "GetMaxWrite"}, {"value": 9151, "name": "add"}, {"children": [{"value": 847, "name": "func1"}, {"value": 287, "name": "func2"}], "name": "add."}, {"value": 957, "name": "getMax"}], "name": "(*timestampCache)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Swap"}], "name": "(*uint64Slice)."}, {"children": [{"value": 1263, "name": "RebalanceTarget"}, {"value": 1363, "name": "RemoveTarget"}, {"value": 3205, "name": "shouldTransferLeaseUsingStats"}, {"value": 592, "name": "shouldTransferLeaseWithoutStats"}], "name": "Allocator."}, {"children": [{"value": 106, "name": "String"}], "name": "AllocatorAction."}, {"value": 890, "name": "ComputeStatsForRange"}, {"value": 439, "name": "DecodeRaftCommand"}, {"value": 886, "name": "DefaultDeclareKeys"}, {"value": 8, "name": "EnableLoadBasedLeaseRebalancing"}, {"value": 16, "name": "ErrIntOverflowApi"}, {"value": 16, "name": "ErrIntOverflowLiveness"}, {"value": 16, "name": "ErrIntOverflowRaft"}, {"value": 16, "name": "ErrInvalidLengthApi"}, {"value": 16, "name": "ErrInvalidLengthLiveness"}, {"value": 16, "name": "ErrInvalidLengthRaft"}, {"value": 16, "name": "ErrNoLivenessRecord"}, {"value": 141, "name": "GossipAddressResolver"}, {"children": [{"value": 109, "name": "func1"}], "name": "GossipAddressResolver."}, {"value": 1327, "name": "IterateRangeDescriptors"}, {"children": [{"value": 838, "name": "func1"}], "name": "IterateRangeDescriptors."}, {"value": 8, "name": "LeaseRebalancingAggressiveness"}, {"value": 414, "name": "MakeAllocator"}, {"value": 141, "name": "MakeStorePoolNodeLivenessFunc"}, {"children": [{"value": 490, "name": "func1"}], "name": "MakeStorePoolNodeLivenessFunc."}, {"value": 8, "name": "MinLeaseTransferStatsDuration"}, {"value": 117, "name": "NewDummyRaftTransport"}, {"value": 2823, "name": "NewNodeLiveness"}, {"value": 1057, "name": "NewRaftTransport"}, {"children": [{"value": 3064, "name": "func1"}], "name": "NewRaftTransport."}, {"value": 161, "name": "NewReplica"}, {"value": 196, "name": "NewReplicaCorruptionError"}, {"value": 463, "name": "NewReplicaDataIterator"}, {"value": 5510, "name": "NewStore"}, {"children": [{"value": 15, "name": "func1"}], "name": "NewStore."}, {"value": 1211, "name": "NewStorePool"}, {"value": 1159, "name": "ReadStoreIdent"}, {"value": 101, "name": "RegisterConsistencyServer"}, {"value": 101, "name": "RegisterMultiRaftServer"}, {"value": 1393, "name": "RelocateRange"}, {"children": [{"value": 15, "name": "AbortCache"}, {"value": 606, "name": "ContainsKey"}, {"value": 19, "name": "DB"}, {"value": 512, "name": "Desc"}, {"value": 34, "name": "Engine"}, {"value": 90, "name": "FirstIndex"}, {"value": 527, "name": "GCThreshold"}, {"value": 396, "name": "GetLastReplicaGCTimestamp"}, {"value": 366, "name": "GetLease"}, {"value": 463, "name": "GetMVCCStats"}, {"value": 80, "name": "GetTempPrefix"}, {"value": 21, "name": "IsFirstRange"}, {"value": 23, "name": "NodeID"}, {"value": 15, "name": "RangeID"}, {"value": 17, "name": "StoreID"}, {"value": 109, "name": "StoreTestingKnobs"}, {"value": 80, "name": "String"}, {"value": 100, "name": "Term"}, {"value": 28, "name": "Tracer"}, {"value": 527, "name": "TxnSpanGCThreshold"}], "name": "ReplicaEvalContext."}, {"children": [{"value": 255, "name": "String"}, {"value": 1818, "name": "WriteTo"}], "name": "ReplicaSnapshotDiffSlice."}, {"value": 6411, "name": "RunGC"}, {"children": [{"value": 265, "name": "func1"}, {"children": [{"value": 128, "name": "1"}], "name": "func1."}, {"value": 152, "name": "func2"}, {"value": 2066, "name": "func3"}, {"value": 171, "name": "func4"}, {"children": [{"value": 95, "name": "1"}], "name": "func4."}], "name": "RunGC."}, {"children": [{"value": 297, "name": "CollectChecksum"}, {"children": [{"value": 896, "name": "func1"}], "name": "CollectChecksum."}, {"value": 396, "name": "execStoreCommand"}], "name": "Server."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "SnapshotRequest_Priority."}, {"value": 8, "name": "SnapshotRequest_Priority_name"}, {"value": 8, "name": "SnapshotRequest_Priority_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "SnapshotResponse_Status."}, {"value": 8, "name": "SnapshotResponse_Status_name"}, {"value": 8, "name": "SnapshotResponse_Status_value"}, {"children": [{"value": 1033, "name": "String"}, {"value": 1907, "name": "filter"}], "name": "StoreList."}, {"value": 777, "name": "_Consistency_CollectChecksum_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_Consistency_CollectChecksum_Handler."}, {"value": 96, "name": "_Consistency_serviceDesc"}, {"value": 249, "name": "_MultiRaft_RaftMessageBatch_Handler"}, {"value": 249, "name": "_MultiRaft_RaftSnapshot_Handler"}, {"value": 96, "name": "_MultiRaft_serviceDesc"}, {"value": 7, "name": "_refreshRaftReason_index"}, {"value": 102, "name": "abortCacheMaxKey"}, {"value": 102, "name": "abortCacheMinKey"}, {"value": 1870, "name": "allocateCandidates"}, {"value": 8, "name": "allocatorActionNames"}, {"children": [{"value": 82, "name": "AssertHeld"}, {"value": 94, "name": "ExpFloat64"}, {"value": 94, "name": "Float32"}, {"value": 94, "name": "Float64"}, {"value": 92, "name": "Int"}, {"value": 90, "name": "Int31"}, {"value": 98, "name": "Int31n"}, {"value": 92, "name": "Int63"}, {"value": 102, "name": "Int63n"}, {"value": 102, "name": "Intn"}, {"value": 82, "name": "Lock"}, {"value": 94, "name": "NormFloat64"}, {"value": 122, "name": "Perm"}, {"value": 148, "name": "Read"}, {"value": 92, "name": "Seed"}, {"value": 90, "name": "Uint32"}, {"value": 92, "name": "Uint64"}, {"value": 82, "name": "Unlock"}], "name": "allocatorRand."}, {"children": [{"value": 11, "name": "Len"}, {"value": 327, "name": "Less"}, {"value": 388, "name": "Swap"}], "name": "byScore."}, {"children": [{"value": 11, "name": "Len"}, {"value": 434, "name": "Less"}, {"value": 388, "name": "Swap"}], "name": "byScoreAndID."}, {"value": 8, "name": "cacheEntryOverhead"}, {"value": 566, "name": "calcGoodReplicas"}, {"value": 1214, "name": "calcReplicaMetrics"}, {"value": 350, "name": "canPushWithPriority"}, {"children": [{"value": 431, "name": "String"}], "name": "candidate."}, {"children": [{"value": 625, "name": "String"}, {"value": 227, "name": "best"}, {"value": 382, "name": "betterThan"}, {"value": 209, "name": "onlyValid"}, {"value": 645, "name": "selectBad"}, {"value": 645, "name": "selectGood"}, {"value": 421, "name": "worst"}], "name": "candidateList."}, {"value": 740, "name": "changeReplicasTrigger"}, {"value": 8, "name": "changeTypeInternalToRaft"}, {"value": 1863, "name": "checkEngineEmpty"}, {"value": 1491, "name": "checkIfTxnAborted"}, {"value": 763, "name": "clearRangeData"}, {"value": 1518, "name": "collectSpans"}, {"value": 8, "name": "commands"}, {"value": 486, "name": "computeTruncatableIndex"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 189, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "consistencyQueue."}, {"value": 543, "name": "constraintCheck"}, {"value": 431, "name": "containsKey"}, {"value": 406, "name": "containsKeyRange"}, {"value": 746, "name": "copySeqCache"}, {"children": [{"value": 2047, "name": "func1"}], "name": "copySeqCache."}, {"value": 363, "name": "declareKeysBeginTransaction"}, {"value": 4471, "name": "declareKeysEndTransaction"}, {"value": 999, "name": "declareKeysGC"}, {"value": 397, "name": "declareKeysHeartbeatTransaction"}, {"value": 186, "name": "declareKeysLeaseInfo"}, {"value": 480, "name": "declareKeysPushTransaction"}, {"value": 727, "name": "declareKeysRequestLease"}, {"value": 444, "name": "declareKeysResolveIntent"}, {"value": 444, "name": "declareKeysResolveIntentRange"}, {"value": 444, "name": "declareKeysTruncateLog"}, {"value": 326, "name": "declareKeysWriteTransaction"}, {"value": 8, "name": "declinedReservationsTimeout"}, {"value": 548, "name": "decodeAbortCacheMVCCKey"}, {"value": 8, "name": "defaultRaftElectionTimeoutTicks"}, {"value": 2189, "name": "defaultSubmitProposalLocked"}, {"children": [{"value": 339, "name": "func1"}, {"value": 561, "name": "func2"}], "name": "defaultSubmitProposalLocked."}, {"value": 189, "name": "delMeta"}, {"value": 1467, "name": "diffRange"}, {"children": [{"value": 476, "name": "func1"}, {"value": 476, "name": "func2"}], "name": "diffRange."}, {"value": 551, "name": "diversityRemovalScore"}, {"value": 323, "name": "diversityScore"}, {"value": 1, "name": "enablePreVote"}, {"value": 1, "name": "enableTimedMutex"}, {"value": 934, "name": "encodeRaftCommand"}, {"value": 122, "name": "encodeVarintApi"}, {"value": 122, "name": "encodeVarintLiveness"}, {"value": 122, "name": "encodeVarintRaft"}, {"value": 2967, "name": "entries"}, {"children": [{"value": 763, "name": "func1"}], "name": "entries."}, {"value": 8, "name": "errDeadlock"}, {"value": 16, "name": "errEpochAlreadyIncremented"}, {"value": 16, "name": "errNodeAlreadyLive"}, {"value": 16, "name": "errNodeDrainingSet"}, {"value": 16, "name": "errPeriodicGossipsDisabled"}, {"value": 16, "name": "errQueueDisabled"}, {"value": 16, "name": "errQueueStopped"}, {"value": 16, "name": "errReplicaNotAddable"}, {"value": 16, "name": "errRetry"}, {"value": 16, "name": "errSkippedHeartbeat"}, {"value": 16, "name": "errSystemConfigIntent"}, {"value": 16, "name": "errTransactionUnsupported"}, {"value": 3514, "name": "evalBeginTransaction"}, {"value": 631, "name": "evalComputeChecksum"}, {"value": 1197, "name": "evalConditionalPut"}, {"value": 434, "name": "evalDelete"}, {"value": 1682, "name": "evalDeleteRange"}, {"value": 7651, "name": "evalEndTransaction"}, {"value": 2490, "name": "evalGC"}, {"value": 1180, "name": "evalGet"}, {"value": 1577, "name": "evalHeartbeatTxn"}, {"value": 527, "name": "evalIncrement"}, {"value": 1015, "name": "evalInitPut"}, {"value": 467, "name": "evalLeaseInfo"}, {"value": 473, "name": "evalMerge"}, {"value": 2891, "name": "evalNewLease"}, {"value": 6047, "name": "evalPushTxn"}, {"value": 1151, "name": "evalPut"}, {"value": 1342, "name": "evalQueryTxn"}, {"value": 8601, "name": "evalRangeLookup"}, {"children": [{"value": 229, "name": "func1"}, {"value": 1064, "name": "func2"}], "name": "evalRangeLookup."}, {"value": 2385, "name": "evalRequestLease"}, {"value": 1088, "name": "evalResolveIntent"}, {"value": 1106, "name": "evalResolveIntentRange"}, {"value": 1406, "name": "evalReverseScan"}, {"value": 1406, "name": "evalScan"}, {"value": 887, "name": "evalTransferLease"}, {"value": 1940, "name": "evalTruncateLog"}, {"value": 3447, "name": "evaluateBatch"}, {"value": 3009, "name": "evaluateCommand"}, {"value": 16, "name": "exportCmd"}, {"value": 8, "name": "failedReservationsTimeout"}, {"value": 24, "name": "fileDescriptorApi"}, {"value": 24, "name": "fileDescriptorLiveness"}, {"value": 24, "name": "fileDescriptorRaft"}, {"value": 119, "name": "fillUUID"}, {"value": 730, "name": "filterBehindReplicas"}, {"value": 8, "name": "gcBatchSize"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 183, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "gcQueue."}, {"children": [{"value": 1150, "name": "String"}], "name": "gcQueueScore."}, {"value": 817, "name": "getQuorumIndex"}, {"value": 1127, "name": "getTruncatableIndexes"}, {"children": [{"value": 268, "name": "func1"}, {"value": 140, "name": "func2"}, {"value": 254, "name": "func3"}, {"value": 306, "name": "func4"}], "name": "glob."}, {"value": 8, "name": "importCmdFn"}, {"value": 9589, "name": "init"}, {"children": [{"value": 191, "name": "1"}, {"value": 210, "name": "2"}, {"value": 92, "name": "3"}, {"value": 210, "name": "4"}, {"value": 250, "name": "5"}, {"value": 565, "name": "6"}, {"value": 210, "name": "7"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 233, "name": "inlineValueIntEncodedSize"}, {"value": 3306, "name": "intersectSpan"}, {"value": 165, "name": "is14231Error"}, {"value": 267, "name": "isExpectedQueueError"}, {"value": 572, "name": "isOnePhaseCommit"}, {"value": 383, "name": "iterateEntries"}, {"value": 8, "name": "leaseHistoryMaxEntries"}, {"value": 199, "name": "loadAppliedIndex"}, {"value": 1224, "name": "loadBasedLeaseRebalanceScore"}, {"value": 297, "name": "loadHardState"}, {"value": 183, "name": "loadLastIndex"}, {"value": 199, "name": "loadTruncatedState"}, {"value": 3046, "name": "logRaftReady"}, {"value": 8, "name": "lowWaterTxnIDMarker"}, {"value": 102, "name": "makeAllKeyRanges"}, {"value": 3175, "name": "makeCacheRequest"}, {"value": 903, "name": "makeGCQueueScore"}, {"value": 1934, "name": "makeGCQueueScoreImpl"}, {"children": [{"value": 35, "name": "func1"}], "name": "makeGCQueueScoreImpl."}, {"value": 136, "name": "makeIDKey"}, {"value": 2612, "name": "makeReplicaKeyRanges"}, {"value": 90, "name": "makeReplicaStateLoader"}, {"value": 102, "name": "makeReplicatedKeyRanges"}, {"value": 617, "name": "makeStoreList"}, {"value": 103, "name": "makeUnimplementedCommand"}, {"children": [{"value": 324, "name": "func1"}], "name": "makeUnimplementedCommand."}, {"value": 8, "name": "maxCommandSize"}, {"value": 180, "name": "mergeRangeAddressing"}, {"value": 5122, "name": "mergeTrigger"}, {"value": 56, "name": "metaAvailable"}, {"value": 56, "name": "metaCapacity"}, {"value": 56, "name": "metaCombinedCommandQueueSize"}, {"value": 56, "name": "metaCombinedCommandReadCount"}, {"value": 56, "name": "metaCombinedCommandWriteCount"}, {"value": 56, "name": "metaConsistencyQueueFailures"}, {"value": 56, "name": "metaConsistencyQueuePending"}, {"value": 56, "name": "metaConsistencyQueueProcessingNanos"}, {"value": 56, "name": "metaConsistencyQueueSuccesses"}, {"value": 56, "name": "metaEpochIncrements"}, {"value": 56, "name": "metaGCAbortSpanConsidered"}, {"value": 56, "name": "metaGCAbortSpanGCNum"}, {"value": 56, "name": "metaGCAbortSpanScanned"}, {"value": 56, "name": "metaGCIntentTxns"}, {"value": 56, "name": "metaGCIntentsConsidered"}, {"value": 56, "name": "metaGCNumKeysAffected"}, {"value": 56, "name": "metaGCPushTxn"}, {"value": 56, "name": "metaGCQueueFailures"}, {"value": 56, "name": "metaGCQueuePending"}, {"value": 56, "name": "metaGCQueueProcessingNanos"}, {"value": 56, "name": "metaGCQueueSuccesses"}, {"value": 56, "name": "metaGCResolveSuccess"}, {"value": 56, "name": "metaGCResolveTotal"}, {"value": 56, "name": "metaGCTransactionSpanGCAborted"}, {"value": 56, "name": "metaGCTransactionSpanGCCommitted"}, {"value": 56, "name": "metaGCTransactionSpanGCPending"}, {"value": 56, "name": "metaGCTransactionSpanScanned"}, {"value": 56, "name": "metaGcBytesAge"}, {"value": 56, "name": "metaHeartbeatFailures"}, {"value": 56, "name": "metaHeartbeatSuccesses"}, {"value": 56, "name": "metaIntentAge"}, {"value": 56, "name": "metaIntentBytes"}, {"value": 56, "name": "metaIntentCount"}, {"value": 56, "name": "metaKeyBytes"}, {"value": 56, "name": "metaKeyCount"}, {"value": 56, "name": "metaLastUpdateNanos"}, {"value": 56, "name": "metaLeaseEpochCount"}, {"value": 56, "name": "metaLeaseExpirationCount"}, {"value": 56, "name": "metaLeaseHolderCount"}, {"value": 56, "name": "metaLeaseRequestErrorCount"}, {"value": 56, "name": "metaLeaseRequestSuccessCount"}, {"value": 56, "name": "metaLeaseTransferErrorCount"}, {"value": 56, "name": "metaLeaseTransferSuccessCount"}, {"value": 56, "name": "metaLiveBytes"}, {"value": 56, "name": "metaLiveCount"}, {"value": 56, "name": "metaLiveNodes"}, {"value": 56, "name": "metaMaxCommandQueueOverlaps"}, {"value": 56, "name": "metaMaxCommandQueueReadCount"}, {"value": 56, "name": "metaMaxCommandQueueSize"}, {"value": 56, "name": "metaMaxCommandQueueTreeSize"}, {"value": 56, "name": "metaMaxCommandQueueWriteCount"}, {"value": 56, "name": "metaQuiescentCount"}, {"value": 56, "name": "metaRaftCoalescedHeartbeatsPending"}, {"value": 56, "name": "metaRaftCommandCommitLatency"}, {"value": 56, "name": "metaRaftCommandsApplied"}, {"value": 56, "name": "metaRaftEnqueuedPending"}, {"value": 56, "name": "metaRaftLeaderCount"}, {"value": 56, "name": "metaRaftLeaderNotLeaseHolderCount"}, {"value": 56, "name": "metaRaftLogCommitLatency"}, {"value": 56, "name": "metaRaftLogFollowerBehindCount"}, {"value": 56, "name": "metaRaftLogQueueFailures"}, {"value": 56, "name": "metaRaftLogQueuePending"}, {"value": 56, "name": "metaRaftLogQueueProcessingNanos"}, {"value": 56, "name": "metaRaftLogQueueSuccesses"}, {"value": 56, "name": "metaRaftLogSelfBehindCount"}, {"value": 56, "name": "metaRaftLogTruncated"}, {"value": 56, "name": "metaRaftRcvdApp"}, {"value": 56, "name": "metaRaftRcvdAppResp"}, {"value": 56, "name": "metaRaftRcvdDropped"}, {"value": 56, "name": "metaRaftRcvdHeartbeat"}, {"value": 56, "name": "metaRaftRcvdHeartbeatResp"}, {"value": 56, "name": "metaRaftRcvdPreVote"}, {"value": 56, "name": "metaRaftRcvdPreVoteResp"}, {"value": 56, "name": "metaRaftRcvdProp"}, {"value": 56, "name": "metaRaftRcvdSnap"}, {"value": 56, "name": "metaRaftRcvdTimeoutNow"}, {"value": 56, "name": "metaRaftRcvdTransferLeader"}, {"value": 56, "name": "metaRaftRcvdVote"}, {"value": 56, "name": "metaRaftRcvdVoteResp"}, {"value": 56, "name": "metaRaftSnapshotQueueFailures"}, {"value": 56, "name": "metaRaftSnapshotQueuePending"}, {"value": 56, "name": "metaRaftSnapshotQueueProcessingNanos"}, {"value": 56, "name": "metaRaftSnapshotQueueSuccesses"}, {"value": 56, "name": "metaRaftTickingDurationNanos"}, {"value": 56, "name": "metaRaftTicks"}, {"value": 56, "name": "metaRaftWorkingDurationNanos"}, {"value": 56, "name": "metaRangeAdds"}, {"value": 56, "name": "metaRangeCount"}, {"value": 56, "name": "metaRangeRaftLeaderTransfers"}, {"value": 56, "name": "metaRangeRemoves"}, {"value": 56, "name": "metaRangeSnapshotsGenerated"}, {"value": 56, "name": "metaRangeSnapshotsNormalApplied"}, {"value": 56, "name": "metaRangeSnapshotsPreemptiveApplied"}, {"value": 56, "name": "metaRangeSplits"}, {"value": 56, "name": "metaRdbBlockCacheHits"}, {"value": 56, "name": "metaRdbBlockCacheMisses"}, {"value": 56, "name": "metaRdbBlockCachePinnedUsage"}, {"value": 56, "name": "metaRdbBlockCacheUsage"}, {"value": 56, "name": "metaRdbBloomFilterPrefixChecked"}, {"value": 56, "name": "metaRdbBloomFilterPrefixUseful"}, {"value": 56, "name": "metaRdbCompactions"}, {"value": 56, "name": "metaRdbFlushes"}, {"value": 56, "name": "metaRdbMemtableHits"}, {"value": 56, "name": "metaRdbMemtableMisses"}, {"value": 56, "name": "metaRdbMemtableTotalSize"}, {"value": 56, "name": "metaRdbNumSSTables"}, {"value": 56, "name": "metaRdbReadAmplification"}, {"value": 56, "name": "metaRdbTableReadersMemEstimate"}, {"value": 56, "name": "metaReplicaCount"}, {"value": 56, "name": "metaReplicaGCQueueFailures"}, {"value": 56, "name": "metaReplicaGCQueuePending"}, {"value": 56, "name": "metaReplicaGCQueueProcessingNanos"}, {"value": 56, "name": "metaReplicaGCQueueRemoveReplicaCount"}, {"value": 56, "name": "metaReplicaGCQueueSuccesses"}, {"value": 56, "name": "metaReplicateQueueAddReplicaCount"}, {"value": 56, "name": "metaReplicateQueueFailures"}, {"value": 56, "name": "metaReplicateQueuePending"}, {"value": 56, "name": "metaReplicateQueueProcessingNanos"}, {"value": 56, "name": "metaReplicateQueuePurgatory"}, {"value": 56, "name": "metaReplicateQueueRebalanceReplicaCount"}, {"value": 56, "name": "metaReplicateQueueRemoveDeadReplicaCount"}, {"value": 56, "name": "metaReplicateQueueRemoveReplicaCount"}, {"value": 56, "name": "metaReplicateQueueSuccesses"}, {"value": 56, "name": "metaReplicateQueueTransferLeaseCount"}, {"value": 56, "name": "metaReserved"}, {"value": 56, "name": "metaReservedReplicaCount"}, {"value": 56, "name": "metaSlowCommandQueueRequests"}, {"value": 56, "name": "metaSlowLeaseRequests"}, {"value": 56, "name": "metaSlowRaftRequests"}, {"value": 56, "name": "metaSplitQueueFailures"}, {"value": 56, "name": "metaSplitQueuePending"}, {"value": 56, "name": "metaSplitQueueProcessingNanos"}, {"value": 56, "name": "metaSplitQueueSuccesses"}, {"value": 56, "name": "metaSysBytes"}, {"value": 56, "name": "metaSysCount"}, {"value": 56, "name": "metaTimeSeriesMaintenanceQueueFailures"}, {"value": 56, "name": "metaTimeSeriesMaintenanceQueuePending"}, {"value": 56, "name": "metaTimeSeriesMaintenanceQueueProcessingNanos"}, {"value": 56, "name": "metaTimeSeriesMaintenanceQueueSuccesses"}, {"value": 56, "name": "metaUnavailableRangeCount"}, {"value": 56, "name": "metaUnderReplicatedRangeCount"}, {"value": 56, "name": "metaValBytes"}, {"value": 56, "name": "metaValCount"}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "multiRaftRaftMessageBatchClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "multiRaftRaftMessageBatchServer."}, {"children": [{"value": 108, "name": "CloseSend"}, {"value": 108, "name": "Context"}, {"value": 118, "name": "Header"}, {"value": 128, "name": "RecvMsg"}, {"value": 128, "name": "SendMsg"}, {"value": 98, "name": "Trailer"}], "name": "multiRaftRaftSnapshotClient."}, {"children": [{"value": 108, "name": "Context"}, {"value": 128, "name": "RecvMsg"}, {"value": 118, "name": "SendHeader"}, {"value": 128, "name": "SendMsg"}, {"value": 118, "name": "SetHeader"}, {"value": 98, "name": "SetTrailer"}], "name": "multiRaftRaftSnapshotServer."}, {"value": 1189, "name": "newBaseQueue"}, {"value": 606, "name": "newConsistencyQueue"}, {"value": 382, "name": "newGCQueue"}, {"value": 984, "name": "newIDAllocator"}, {"value": 464, "name": "newNotLeaseHolderError"}, {"value": 519, "name": "newRaftEntryCache"}, {"children": [{"value": 38, "name": "func1"}, {"value": 148, "name": "func2"}], "name": "newRaftEntryCache."}, {"value": 457, "name": "newRaftLogQueue"}, {"value": 178, "name": "newRaftMessageResponse"}, {"value": 457, "name": "newRaftSnapshotQueue"}, {"value": 1751, "name": "newReplica"}, {"children": [{"value": 181, "name": "func1"}], "name": "newReplica."}, {"value": 1056, "name": "newReplicaGCQueue"}, {"value": 633, "name": "newReplicaScanner"}, {"value": 549, "name": "newReplicaStats"}, {"value": 3925, "name": "newReplicateQueue"}, {"children": [{"value": 94, "name": "func1"}, {"value": 52, "name": "func2"}, {"value": 52, "name": "func3"}], "name": "newReplicateQueue."}, {"value": 457, "name": "newSplitQueue"}, {"value": 65238, "name": "newStoreMetrics"}, {"value": 689, "name": "newTimeSeriesMaintenanceQueue"}, {"value": 840, "name": "newTimestampCache"}, {"children": [{"value": 564, "name": "func1"}], "name": "newTimestampCache."}, {"value": 4005, "name": "optimizePuts"}, {"children": [{"value": 626, "name": "func1"}], "name": "optimizePuts."}, {"children": [{"value": 11, "name": "Len"}, {"value": 82, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "overlapHeap."}, {"children": [{"value": 11, "name": "Len"}, {"value": 84, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "pendingCmdSlice."}, {"value": 51, "name": "preexistingReplicaCheck"}, {"value": 678, "name": "prepareSpans"}, {"children": [{"value": 11, "name": "Len"}, {"value": 87, "name": "Less"}, {"value": 242, "name": "Swap"}], "name": "priorityQueue."}, {"value": 454, "name": "processAbortCache"}, {"children": [{"value": 486, "name": "func1"}], "name": "processAbortCache."}, {"value": 1499, "name": "processLocalKeyRange"}, {"children": [{"value": 1686, "name": "func1"}, {"children": [{"value": 353, "name": "1"}, {"value": 269, "name": "2"}], "name": "func1."}, {"value": 510, "name": "func2"}, {"value": 666, "name": "func3"}, {"value": 116, "name": "func4"}], "name": "processLocalKeyRange."}, {"value": 929, "name": "pushTxn"}, {"value": 165, "name": "putMeta"}, {"value": 1994, "name": "raftDescribeMessage"}, {"value": 387, "name": "raftEntryFormatter"}, {"value": 8, "name": "raftLogMaxSize"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 186, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "raftLogQueue."}, {"value": 8, "name": "raftMaxInflightMsgs"}, {"value": 8, "name": "raftMaxSizePerMsg"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 186, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "raftSnapshotQueue."}, {"children": [{"value": 11, "name": "Len"}, {"value": 79, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "raftTransportStatsSlice."}, {"value": 1369, "name": "rangeAddressing"}, {"children": [{"value": 182, "name": "Less"}, {"value": 31, "name": "endKey"}], "name": "rangeBTreeKey."}, {"value": 1074, "name": "rangeRaftProgress"}, {"value": 6597, "name": "rebalanceCandidates"}, {"value": 8, "name": "rebalanceSnapshotRate"}, {"value": 8, "name": "recoverySnapshotRate"}, {"children": [{"value": 305, "name": "String"}], "name": "refreshRaftReason."}, {"value": 2782, "name": "removeCandidates"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 189, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "replicaGCQueue."}, {"value": 763, "name": "replicaSetsEqual"}, {"children": [{"value": 151, "name": "AbortCacheKey"}, {"value": 451, "name": "LeaseAppliedIndexKey"}, {"value": 451, "name": "RaftAppliedIndexKey"}, {"value": 451, "name": "RaftHardStateKey"}, {"value": 451, "name": "RaftLastIndexKey"}, {"value": 657, "name": "RaftLogKey"}, {"value": 451, "name": "RaftLogPrefix"}, {"value": 451, "name": "RaftTombstoneKey"}, {"value": 451, "name": "RaftTruncatedStateKey"}, {"value": 451, "name": "RangeFrozenStatusKey"}, {"value": 451, "name": "RangeLastGCKey"}, {"value": 451, "name": "RangeLastReplicaGCTimestampKey"}, {"value": 451, "name": "RangeLastVerificationTimestampKeyDeprecated"}, {"value": 451, "name": "RangeLeaseKey"}, {"value": 451, "name": "RangeReplicaDestroyedErrorKey"}, {"value": 451, "name": "RangeStatsKey"}, {"value": 451, "name": "RangeTxnSpanGCThresholdKey"}, {"value": 1675, "name": "calcAppliedIndexSysBytes"}, {"value": 1891, "name": "load"}, {"value": 1599, "name": "loadAppliedIndex"}, {"value": 716, "name": "loadGCThreshold"}, {"value": 830, "name": "loadHardState"}, {"value": 977, "name": "loadLastIndex"}, {"value": 742, "name": "loadLease"}, {"value": 742, "name": "loadMVCCStats"}, {"value": 807, "name": "loadReplicaDestroyedError"}, {"value": 794, "name": "loadTruncatedState"}, {"value": 716, "name": "loadTxnSpanGCThreshold"}, {"value": 1449, "name": "save"}, {"value": 1440, "name": "setAppliedIndex"}, {"value": 1510, "name": "setAppliedIndexBlind"}, {"value": 727, "name": "setGCThreshold"}, {"value": 740, "name": "setHardState"}, {"value": 756, "name": "setLastIndex"}, {"value": 727, "name": "setLease"}, {"value": 631, "name": "setMVCCStats"}, {"value": 631, "name": "setReplicaDestroyedError"}, {"value": 739, "name": "setTruncatedState"}, {"value": 727, "name": "setTxnSpanGCThreshold"}, {"value": 872, "name": "synthesizeHardState"}], "name": "replicaStateLoader."}, {"children": [{"value": 151, "name": "Add"}, {"value": 139, "name": "AddLogTag"}, {"value": 123, "name": "AddLogTagInt"}, {"value": 123, "name": "AddLogTagInt64"}, {"value": 139, "name": "AddLogTagStr"}, {"value": 139, "name": "AnnotateCtx"}, {"value": 195, "name": "AnnotateCtxWithSpan"}, {"value": 94, "name": "Disabled"}, {"value": 95, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 95, "name": "Length"}, {"value": 119, "name": "MaybeAdd"}, {"value": 95, "name": "MaybeRemove"}, {"value": 95, "name": "PurgatoryLength"}, {"value": 139, "name": "ResetAndAnnotateCtx"}, {"value": 94, "name": "SetDisabled"}, {"value": 139, "name": "SetEventLog"}, {"value": 108, "name": "Start"}], "name": "replicateQueue."}, {"value": 1227, "name": "resolveLocalIntents"}, {"children": [{"value": 2113, "name": "func1"}], "name": "resolveLocalIntents."}, {"value": 2216, "name": "runCommitTrigger"}, {"value": 239, "name": "selectEventTimestamp"}, {"value": 264, "name": "sendBatch"}, {"value": 7064, "name": "sendSnapshot"}, {"children": [{"value": 463, "name": "func1"}], "name": "sendSnapshot."}, {"value": 601, "name": "setAbortCache"}, {"value": 481, "name": "shouldQueueAgain"}, {"value": 1167, "name": "shouldRebalance"}, {"value": 1621, "name": "skipApi"}, {"value": 1621, "name": "skipLiveness"}, {"value": 1621, "name": "skipRaft"}, {"value": 2844, "name": "snapshot"}, {"value": 351, "name": "snapshotRateLimit"}, {"value": 34, "name": "sovApi"}, {"value": 34, "name": "sovLiveness"}, {"value": 34, "name": "sovRaft"}, {"value": 1431, "name": "splitPostApply"}, {"children": [{"value": 136, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 186, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "splitQueue."}, {"value": 180, "name": "splitRangeAddressing"}, {"value": 6939, "name": "splitTrigger"}, {"value": 112, "name": "statictmp_10202"}, {"value": 16, "name": "statictmp_1024"}, {"value": 64, "name": "statictmp_10247"}, {"value": 72, "name": "statictmp_10282"}, {"value": 112, "name": "statictmp_10293"}, {"value": 48, "name": "statictmp_10387"}, {"value": 16, "name": "statictmp_10514"}, {"value": 24, "name": "statictmp_10515"}, {"value": 24, "name": "statictmp_10517"}, {"value": 168, "name": "statictmp_10546"}, {"value": 16, "name": "statictmp_10631"}, {"value": 16, "name": "statictmp_10651"}, {"value": 16, "name": "statictmp_10670"}, {"value": 16, "name": "statictmp_10671"}, {"value": 16, "name": "statictmp_10672"}, {"value": 12, "name": "statictmp_10785"}, {"value": 16, "name": "statictmp_10790"}, {"value": 48, "name": "statictmp_10816"}, {"value": 88, "name": "statictmp_11282"}, {"value": 280, "name": "statictmp_11315"}, {"value": 368, "name": "statictmp_11316"}, {"value": 88, "name": "statictmp_11342"}, {"value": 64, "name": "statictmp_1146"}, {"value": 88, "name": "statictmp_11608"}, {"value": 88, "name": "statictmp_11637"}, {"value": 16, "name": "statictmp_11749"}, {"value": 24, "name": "statictmp_1184"}, {"value": 144, "name": "statictmp_11983"}, {"value": 24, "name": "statictmp_12179"}, {"value": 12, "name": "statictmp_12261"}, {"value": 12, "name": "statictmp_12262"}, {"value": 12, "name": "statictmp_12265"}, {"value": 12, "name": "statictmp_12268"}, {"value": 16, "name": "statictmp_12297"}, {"value": 16, "name": "statictmp_12336"}, {"value": 64, "name": "statictmp_1236"}, {"value": 24, "name": "statictmp_12415"}, {"value": 24, "name": "statictmp_12416"}, {"value": 88, "name": "statictmp_1266"}, {"value": 64, "name": "statictmp_12720"}, {"value": 488, "name": "statictmp_12744"}, {"value": 48, "name": "statictmp_12940"}, {"value": 16, "name": "statictmp_1306"}, {"value": 64, "name": "statictmp_13197"}, {"value": 80, "name": "statictmp_13330"}, {"value": 80, "name": "statictmp_13332"}, {"value": 80, "name": "statictmp_13335"}, {"value": 48, "name": "statictmp_13470"}, {"value": 488, "name": "statictmp_13617"}, {"value": 80, "name": "statictmp_13836"}, {"value": 80, "name": "statictmp_13868"}, {"value": 48, "name": "statictmp_13950"}, {"value": 160, "name": "statictmp_1401"}, {"value": 160, "name": "statictmp_1410"}, {"value": 24, "name": "statictmp_14182"}, {"value": 16, "name": "statictmp_14184"}, {"value": 476, "name": "statictmp_14185"}, {"value": 294, "name": "statictmp_14186"}, {"value": 64, "name": "statictmp_14188"}, {"value": 16, "name": "statictmp_14189"}, {"value": 1073, "name": "statictmp_14190"}, {"value": 32, "name": "statictmp_14195"}, {"value": 64, "name": "statictmp_14196"}, {"value": 12, "name": "statictmp_14200"}, {"value": 48, "name": "statictmp_14201"}, {"value": 48, "name": "statictmp_14205"}, {"value": 12, "name": "statictmp_14206"}, {"value": 160, "name": "statictmp_1421"}, {"value": 20, "name": "statictmp_14210"}, {"value": 80, "name": "statictmp_14211"}, {"value": 80, "name": "statictmp_14215"}, {"value": 20, "name": "statictmp_14216"}, {"value": 8, "name": "statictmp_14250"}, {"value": 8, "name": "statictmp_14251"}, {"value": 16, "name": "statictmp_14364"}, {"value": 16, "name": "statictmp_14372"}, {"value": 8, "name": "statictmp_1702"}, {"value": 72, "name": "statictmp_1851"}, {"value": 72, "name": "statictmp_1865"}, {"value": 16, "name": "statictmp_199"}, {"value": 16, "name": "statictmp_202"}, {"value": 16, "name": "statictmp_223"}, {"value": 16, "name": "statictmp_226"}, {"value": 16, "name": "statictmp_237"}, {"value": 48, "name": "statictmp_2780"}, {"value": 48, "name": "statictmp_2804"}, {"value": 40, "name": "statictmp_2903"}, {"value": 248, "name": "statictmp_3296"}, {"value": 16, "name": "statictmp_3615"}, {"value": 16, "name": "statictmp_3619"}, {"value": 8, "name": "statictmp_3624"}, {"value": 8, "name": "statictmp_3630"}, {"value": 24, "name": "statictmp_3632"}, {"value": 8, "name": "statictmp_3636"}, {"value": 8, "name": "statictmp_3638"}, {"value": 8, "name": "statictmp_3642"}, {"value": 8, "name": "statictmp_3648"}, {"value": 8, "name": "statictmp_3654"}, {"value": 16, "name": "statictmp_3660"}, {"value": 24, "name": "statictmp_3662"}, {"value": 8, "name": "statictmp_3666"}, {"value": 8, "name": "statictmp_3672"}, {"value": 12, "name": "statictmp_375"}, {"value": 12, "name": "statictmp_389"}, {"value": 40, "name": "statictmp_4194"}, {"value": 40, "name": "statictmp_4198"}, {"value": 368, "name": "statictmp_4227"}, {"value": 12, "name": "statictmp_430"}, {"value": 12, "name": "statictmp_432"}, {"value": 12, "name": "statictmp_433"}, {"value": 12, "name": "statictmp_442"}, {"value": 64, "name": "statictmp_4576"}, {"value": 64, "name": "statictmp_4642"}, {"value": 48, "name": "statictmp_4666"}, {"value": 12, "name": "statictmp_493"}, {"value": 16, "name": "statictmp_4937"}, {"value": 12, "name": "statictmp_494"}, {"value": 12, "name": "statictmp_495"}, {"value": 80, "name": "statictmp_4969"}, {"value": 40, "name": "statictmp_4996"}, {"value": 80, "name": "statictmp_5001"}, {"value": 80, "name": "statictmp_5003"}, {"value": 40, "name": "statictmp_5005"}, {"value": 40, "name": "statictmp_5008"}, {"value": 40, "name": "statictmp_5009"}, {"value": 12, "name": "statictmp_5044"}, {"value": 16, "name": "statictmp_5057"}, {"value": 16, "name": "statictmp_5058"}, {"value": 16, "name": "statictmp_5061"}, {"value": 16, "name": "statictmp_5064"}, {"value": 16, "name": "statictmp_5065"}, {"value": 280, "name": "statictmp_5809"}, {"value": 8, "name": "statictmp_586"}, {"value": 48, "name": "statictmp_5866"}, {"value": 48, "name": "statictmp_5867"}, {"value": 12, "name": "statictmp_5900"}, {"value": 40, "name": "statictmp_5908"}, {"value": 8, "name": "statictmp_592"}, {"value": 32, "name": "statictmp_594"}, {"value": 8, "name": "statictmp_600"}, {"value": 112, "name": "statictmp_6100"}, {"value": 112, "name": "statictmp_6101"}, {"value": 112, "name": "statictmp_6102"}, {"value": 112, "name": "statictmp_6104"}, {"value": 112, "name": "statictmp_6105"}, {"value": 488, "name": "statictmp_6200"}, {"value": 488, "name": "statictmp_6203"}, {"value": 488, "name": "statictmp_6291"}, {"value": 24, "name": "statictmp_6478"}, {"value": 24, "name": "statictmp_6479"}, {"value": 488, "name": "statictmp_6565"}, {"value": 152, "name": "statictmp_6567"}, {"value": 488, "name": "statictmp_6570"}, {"value": 136, "name": "statictmp_6572"}, {"value": 488, "name": "statictmp_6576"}, {"value": 488, "name": "statictmp_6577"}, {"value": 488, "name": "statictmp_6614"}, {"value": 488, "name": "statictmp_6616"}, {"value": 488, "name": "statictmp_6624"}, {"value": 488, "name": "statictmp_6627"}, {"value": 488, "name": "statictmp_6633"}, {"value": 488, "name": "statictmp_6635"}, {"value": 488, "name": "statictmp_6638"}, {"value": 488, "name": "statictmp_6640"}, {"value": 488, "name": "statictmp_6655"}, {"value": 488, "name": "statictmp_6723"}, {"value": 16, "name": "statictmp_6732"}, {"value": 488, "name": "statictmp_6733"}, {"value": 488, "name": "statictmp_6737"}, {"value": 488, "name": "statictmp_6741"}, {"value": 488, "name": "statictmp_6747"}, {"value": 488, "name": "statictmp_6753"}, {"value": 488, "name": "statictmp_6754"}, {"value": 488, "name": "statictmp_6759"}, {"value": 16, "name": "statictmp_6760"}, {"value": 488, "name": "statictmp_6761"}, {"value": 488, "name": "statictmp_6852"}, {"value": 488, "name": "statictmp_6855"}, {"value": 16, "name": "statictmp_6857"}, {"value": 488, "name": "statictmp_6858"}, {"value": 488, "name": "statictmp_6861"}, {"value": 488, "name": "statictmp_6865"}, {"value": 488, "name": "statictmp_6866"}, {"value": 488, "name": "statictmp_6869"}, {"value": 488, "name": "statictmp_6886"}, {"value": 488, "name": "statictmp_6893"}, {"value": 488, "name": "statictmp_6898"}, {"value": 488, "name": "statictmp_6905"}, {"value": 488, "name": "statictmp_6910"}, {"value": 488, "name": "statictmp_6911"}, {"value": 488, "name": "statictmp_6914"}, {"value": 488, "name": "statictmp_6916"}, {"value": 488, "name": "statictmp_6921"}, {"value": 16, "name": "statictmp_6962"}, {"value": 16, "name": "statictmp_6965"}, {"value": 488, "name": "statictmp_7005"}, {"value": 488, "name": "statictmp_7009"}, {"value": 488, "name": "statictmp_7010"}, {"value": 488, "name": "statictmp_7011"}, {"value": 488, "name": "statictmp_7013"}, {"value": 488, "name": "statictmp_7016"}, {"value": 488, "name": "statictmp_7045"}, {"value": 488, "name": "statictmp_7049"}, {"value": 488, "name": "statictmp_7055"}, {"value": 488, "name": "statictmp_7056"}, {"value": 488, "name": "statictmp_7057"}, {"value": 488, "name": "statictmp_7059"}, {"value": 488, "name": "statictmp_7060"}, {"value": 488, "name": "statictmp_7061"}, {"value": 488, "name": "statictmp_7062"}, {"value": 488, "name": "statictmp_7081"}, {"value": 488, "name": "statictmp_7088"}, {"value": 488, "name": "statictmp_7089"}, {"value": 488, "name": "statictmp_7125"}, {"value": 16, "name": "statictmp_7127"}, {"value": 488, "name": "statictmp_7128"}, {"value": 488, "name": "statictmp_7131"}, {"value": 16, "name": "statictmp_7133"}, {"value": 488, "name": "statictmp_7134"}, {"value": 488, "name": "statictmp_7135"}, {"value": 488, "name": "statictmp_7168"}, {"value": 488, "name": "statictmp_7169"}, {"value": 488, "name": "statictmp_7170"}, {"value": 488, "name": "statictmp_7172"}, {"value": 488, "name": "statictmp_7174"}, {"value": 488, "name": "statictmp_7175"}, {"value": 488, "name": "statictmp_7218"}, {"value": 488, "name": "statictmp_7219"}, {"value": 488, "name": "statictmp_7220"}, {"value": 488, "name": "statictmp_7226"}, {"value": 16, "name": "statictmp_7229"}, {"value": 488, "name": "statictmp_7230"}, {"value": 16, "name": "statictmp_7231"}, {"value": 488, "name": "statictmp_7239"}, {"value": 488, "name": "statictmp_7241"}, {"value": 488, "name": "statictmp_7273"}, {"value": 16, "name": "statictmp_7278"}, {"value": 488, "name": "statictmp_7279"}, {"value": 488, "name": "statictmp_7297"}, {"value": 488, "name": "statictmp_7303"}, {"value": 16, "name": "statictmp_7305"}, {"value": 488, "name": "statictmp_7306"}, {"value": 488, "name": "statictmp_7307"}, {"value": 488, "name": "statictmp_7317"}, {"value": 488, "name": "statictmp_7318"}, {"value": 488, "name": "statictmp_7320"}, {"value": 488, "name": "statictmp_7321"}, {"value": 488, "name": "statictmp_7327"}, {"value": 488, "name": "statictmp_7328"}, {"value": 488, "name": "statictmp_7330"}, {"value": 488, "name": "statictmp_7331"}, {"value": 488, "name": "statictmp_7336"}, {"value": 488, "name": "statictmp_7350"}, {"value": 488, "name": "statictmp_7351"}, {"value": 488, "name": "statictmp_7356"}, {"value": 488, "name": "statictmp_7357"}, {"value": 16, "name": "statictmp_7358"}, {"value": 488, "name": "statictmp_7359"}, {"value": 488, "name": "statictmp_7385"}, {"value": 488, "name": "statictmp_7401"}, {"value": 488, "name": "statictmp_7422"}, {"value": 48, "name": "statictmp_7453"}, {"value": 48, "name": "statictmp_7458"}, {"value": 48, "name": "statictmp_7459"}, {"value": 48, "name": "statictmp_7480"}, {"value": 72, "name": "statictmp_7520"}, {"value": 72, "name": "statictmp_7524"}, {"value": 72, "name": "statictmp_7532"}, {"value": 72, "name": "statictmp_7536"}, {"value": 488, "name": "statictmp_7565"}, {"value": 48, "name": "statictmp_7662"}, {"value": 48, "name": "statictmp_7663"}, {"value": 48, "name": "statictmp_7664"}, {"value": 112, "name": "statictmp_7754"}, {"value": 488, "name": "statictmp_7755"}, {"value": 112, "name": "statictmp_7765"}, {"value": 488, "name": "statictmp_7766"}, {"value": 112, "name": "statictmp_7767"}, {"value": 488, "name": "statictmp_7768"}, {"value": 112, "name": "statictmp_7770"}, {"value": 488, "name": "statictmp_7771"}, {"value": 112, "name": "statictmp_7773"}, {"value": 488, "name": "statictmp_7774"}, {"value": 16, "name": "statictmp_7775"}, {"value": 112, "name": "statictmp_7776"}, {"value": 488, "name": "statictmp_7777"}, {"value": 112, "name": "statictmp_7780"}, {"value": 488, "name": "statictmp_7781"}, {"value": 112, "name": "statictmp_7787"}, {"value": 488, "name": "statictmp_7788"}, {"value": 112, "name": "statictmp_7791"}, {"value": 488, "name": "statictmp_7792"}, {"value": 112, "name": "statictmp_7795"}, {"value": 488, "name": "statictmp_7796"}, {"value": 112, "name": "statictmp_7798"}, {"value": 488, "name": "statictmp_7799"}, {"value": 112, "name": "statictmp_7806"}, {"value": 488, "name": "statictmp_7807"}, {"value": 112, "name": "statictmp_7812"}, {"value": 488, "name": "statictmp_7813"}, {"value": 112, "name": "statictmp_7815"}, {"value": 488, "name": "statictmp_7816"}, {"value": 488, "name": "statictmp_7867"}, {"value": 488, "name": "statictmp_7873"}, {"value": 488, "name": "statictmp_7879"}, {"value": 488, "name": "statictmp_7883"}, {"value": 488, "name": "statictmp_7885"}, {"value": 488, "name": "statictmp_7887"}, {"value": 488, "name": "statictmp_7893"}, {"value": 16, "name": "statictmp_7894"}, {"value": 488, "name": "statictmp_7899"}, {"value": 488, "name": "statictmp_7906"}, {"value": 488, "name": "statictmp_7912"}, {"value": 488, "name": "statictmp_7914"}, {"value": 568, "name": "statictmp_8004"}, {"value": 488, "name": "statictmp_8048"}, {"value": 488, "name": "statictmp_8049"}, {"value": 64, "name": "statictmp_8171"}, {"value": 2, "name": "statictmp_8348"}, {"value": 48, "name": "statictmp_8501"}, {"value": 48, "name": "statictmp_8502"}, {"value": 16, "name": "statictmp_8545"}, {"value": 136, "name": "statictmp_8564"}, {"value": 360, "name": "statictmp_8610"}, {"value": 360, "name": "statictmp_8611"}, {"value": 360, "name": "statictmp_8612"}, {"value": 360, "name": "statictmp_8623"}, {"value": 360, "name": "statictmp_8624"}, {"value": 360, "name": "statictmp_8632"}, {"value": 16, "name": "statictmp_8668"}, {"value": 16, "name": "statictmp_8669"}, {"value": 16, "name": "statictmp_8688"}, {"value": 80, "name": "statictmp_8810"}, {"value": 80, "name": "statictmp_8826"}, {"value": 80, "name": "statictmp_8863"}, {"value": 80, "name": "statictmp_8865"}, {"value": 80, "name": "statictmp_8883"}, {"value": 80, "name": "statictmp_8885"}, {"value": 184, "name": "statictmp_8900"}, {"value": 184, "name": "statictmp_8901"}, {"value": 184, "name": "statictmp_8902"}, {"value": 184, "name": "statictmp_8903"}, {"value": 184, "name": "statictmp_8904"}, {"value": 184, "name": "statictmp_8906"}, {"value": 112, "name": "statictmp_8907"}, {"value": 112, "name": "statictmp_8909"}, {"value": 112, "name": "statictmp_8910"}, {"value": 112, "name": "statictmp_8911"}, {"value": 112, "name": "statictmp_8912"}, {"value": 112, "name": "statictmp_8913"}, {"value": 16, "name": "statictmp_8925"}, {"value": 16, "name": "statictmp_8939"}, {"value": 16, "name": "statictmp_8955"}, {"value": 16, "name": "statictmp_8964"}, {"value": 16, "name": "statictmp_8978"}, {"value": 16, "name": "statictmp_8987"}, {"value": 16, "name": "statictmp_9002"}, {"value": 16, "name": "statictmp_9011"}, {"value": 16, "name": "statictmp_9062"}, {"value": 16, "name": "statictmp_9063"}, {"value": 16, "name": "statictmp_9078"}, {"value": 16, "name": "statictmp_9090"}, {"value": 16, "name": "statictmp_9104"}, {"value": 16, "name": "statictmp_9116"}, {"value": 16, "name": "statictmp_9130"}, {"value": 16, "name": "statictmp_9142"}, {"value": 16, "name": "statictmp_9155"}, {"value": 16, "name": "statictmp_9168"}, {"value": 16, "name": "statictmp_9180"}, {"value": 16, "name": "statictmp_9192"}, {"value": 16, "name": "statictmp_9205"}, {"value": 16, "name": "statictmp_9219"}, {"value": 48, "name": "statictmp_9220"}, {"value": 16, "name": "statictmp_9233"}, {"value": 112, "name": "statictmp_9254"}, {"value": 112, "name": "statictmp_9260"}, {"value": 112, "name": "statictmp_9261"}, {"value": 112, "name": "statictmp_9262"}, {"value": 112, "name": "statictmp_9280"}, {"value": 16, "name": "statictmp_9283"}, {"value": 16, "name": "statictmp_9287"}, {"value": 16, "name": "statictmp_9293"}, {"value": 40, "name": "statictmp_9446"}, {"value": 64, "name": "statictmp_9451"}, {"value": 184, "name": "statictmp_9718"}, {"value": 184, "name": "statictmp_9756"}, {"value": 184, "name": "statictmp_9830"}, {"value": 184, "name": "statictmp_9838"}, {"value": 683, "name": "storeHasConstraint"}, {"children": [{"value": 11, "name": "Len"}, {"value": 198, "name": "Swap"}], "name": "storeReplicaVisitor."}, {"value": 8, "name": "storeSchedulerConcurrency"}, {"value": 8, "name": "syncRaftLog"}, {"value": 724, "name": "term"}, {"value": 212, "name": "thresholdLogger"}, {"children": [{"value": 768, "name": "func1"}], "name": "thresholdLogger."}, {"value": 1, "name": "tickQuiesced"}, {"children": [{"value": 142, "name": "Add"}, {"value": 124, "name": "AddLogTag"}, {"value": 114, "name": "AddLogTagInt"}, {"value": 114, "name": "AddLogTagInt64"}, {"value": 124, "name": "AddLogTagStr"}, {"value": 124, "name": "AnnotateCtx"}, {"value": 195, "name": "AnnotateCtxWithSpan"}, {"value": 91, "name": "Disabled"}, {"value": 92, "name": "DrainQueue"}, {"value": 84, "name": "FinishEventLog"}, {"value": 92, "name": "Length"}, {"value": 110, "name": "MaybeAdd"}, {"value": 92, "name": "MaybeRemove"}, {"value": 92, "name": "PurgatoryLength"}, {"value": 124, "name": "ResetAndAnnotateCtx"}, {"value": 91, "name": "SetDisabled"}, {"value": 124, "name": "SetEventLog"}, {"value": 102, "name": "Start"}], "name": "timeSeriesMaintenanceQueue."}, {"value": 1, "name": "txnAutoGC"}, {"value": 16, "name": "txnIDMax"}, {"value": 16, "name": "txnIDMin"}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 74, "name": "Swap"}], "name": "uint64Slice."}, {"value": 102, "name": "updateRangeAddressing"}, {"value": 827, "name": "updateRangeDescriptor"}, {"value": 1237, "name": "updateTxnWithExternalIntents"}, {"value": 2484, "name": "verifyKeys"}, {"value": 746, "name": "verifyTransaction"}, {"value": 16, "name": "writeBatchCmd"}, {"value": 1764, "name": "writeInitialState"}, {"value": 56, "name": "go.itab.*CollectChecksumRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*CollectChecksumResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ConfChangeContext,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Liveness,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*NotBootstrappedError,error"}, {"value": 56, "name": "go.itab.*RaftHeartbeat,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftMessageRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftMessageRequestBatch,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftMessageResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftMessageResponseUnion,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*RaftTransport,github.com/cockroachdb/cockroach/pkg/storage.MultiRaftServer"}, {"value": 80, "name": "go.itab.*Replica,github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.Storage"}, {"value": 40, "name": "go.itab.*Replica,github.com/cockroachdb/cockroach/vendor/github.com/google/btree.Item"}, {"value": 40, "name": "go.itab.*ReplicaPlaceholder,github.com/cockroachdb/cockroach/vendor/github.com/google/btree.Item"}, {"value": 56, "name": "go.itab.*SnapshotRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SnapshotRequest_Header,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SnapshotResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 64, "name": "go.itab.*Store,github.com/cockroachdb/cockroach/pkg/server/status.storeMetrics"}, {"value": 56, "name": "go.itab.*Store,github.com/cockroachdb/cockroach/pkg/storage.RaftMessageHandler"}, {"value": 56, "name": "go.itab.*Store,github.com/cockroachdb/cockroach/pkg/storage.raftProcessor"}, {"value": 40, "name": "go.itab.*StorePool,github.com/cockroachdb/cockroach/pkg/storage.SnapshotStorePool"}, {"value": 56, "name": "go.itab.*StoreRequestHeader,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*Stores,github.com/cockroachdb/cockroach/pkg/gossip.Storage"}, {"value": 40, "name": "go.itab.*Stores,github.com/cockroachdb/cockroach/pkg/internal/client.Sender"}, {"value": 40, "name": "go.itab.*allocatorError,error"}, {"value": 40, "name": "go.itab.*cacheRequest,github.com/cockroachdb/cockroach/vendor/github.com/google/btree.Item"}, {"value": 48, "name": "go.itab.*cmd,github.com/cockroachdb/cockroach/pkg/util/interval.Interface"}, {"value": 40, "name": "go.itab.*consistencyClient,github.com/cockroachdb/cockroach/pkg/storage.ConsistencyClient"}, {"value": 64, "name": "go.itab.*consistencyQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*consistencyQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 64, "name": "go.itab.*gcQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*gcQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 48, "name": "go.itab.*multiRaftClient,github.com/cockroachdb/cockroach/pkg/storage.MultiRaftClient"}, {"value": 96, "name": "go.itab.*multiRaftRaftMessageBatchClient,github.com/cockroachdb/cockroach/pkg/storage.MultiRaft_RaftMessageBatchClient"}, {"value": 96, "name": "go.itab.*multiRaftRaftMessageBatchServer,github.com/cockroachdb/cockroach/pkg/storage.MultiRaft_RaftMessageBatchServer"}, {"value": 96, "name": "go.itab.*multiRaftRaftSnapshotClient,github.com/cockroachdb/cockroach/pkg/storage.MultiRaft_RaftSnapshotClient"}, {"value": 96, "name": "go.itab.*multiRaftRaftSnapshotServer,github.com/cockroachdb/cockroach/pkg/storage.MultiRaft_RaftSnapshotServer"}, {"value": 72, "name": "go.itab.*overlapHeap,container/heap.Interface"}, {"value": 72, "name": "go.itab.*priorityQueue,container/heap.Interface"}, {"value": 64, "name": "go.itab.*raftLogQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*raftLogQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 128, "name": "go.itab.*raftLogger,github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.Logger"}, {"value": 64, "name": "go.itab.*raftSnapshotQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*raftSnapshotQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 64, "name": "go.itab.*replicaGCQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*replicaGCQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 64, "name": "go.itab.*replicateQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*replicateQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 40, "name": "go.itab.*snapshotError,error"}, {"value": 64, "name": "go.itab.*splitQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*splitQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 48, "name": "go.itab.*storeReplicaVisitor,github.com/cockroachdb/cockroach/pkg/storage.replicaSet"}, {"value": 48, "name": "go.itab.*storeReplicaVisitor,github.com/cockroachdb/cockroach/pkg/util/shuffle.Interface"}, {"value": 64, "name": "go.itab.*timeSeriesMaintenanceQueue,github.com/cockroachdb/cockroach/pkg/storage.queueImpl"}, {"value": 56, "name": "go.itab.*timeSeriesMaintenanceQueue,github.com/cockroachdb/cockroach/pkg/storage.replicaQueue"}, {"value": 40, "name": "go.itab.Server,github.com/cockroachdb/cockroach/pkg/storage.ConsistencyServer"}, {"value": 56, "name": "go.itab.byScore,sort.Interface"}, {"value": 56, "name": "go.itab.byScoreAndID,sort.Interface"}, {"value": 56, "name": "go.itab.pendingCmdSlice,sort.Interface"}, {"value": 56, "name": "go.itab.raftTransportStatsSlice,sort.Interface"}, {"value": 40, "name": "go.itab.rangeBTreeKey,github.com/cockroachdb/cockroach/vendor/github.com/google/btree.Item"}, {"value": 56, "name": "go.itab.uint64Slice,sort.Interface"}], "name": "storage."}, {"children": [{"children": [{"children": [{"value": 280, "name": "Filter"}], "name": "(*GarbageCollector)."}, {"children": [{"value": 36, "name": "ApplyBatchRepr"}, {"value": 45, "name": "Attrs"}, {"value": 63, "name": "Capacity"}, {"value": 36, "name": "Clear"}, {"value": 36, "name": "ClearIterRange"}, {"value": 36, "name": "ClearRange"}, {"value": 18, "name": "Close"}, {"value": 23, "name": "Closed"}, {"value": 36, "name": "Compact"}, {"value": 36, "name": "Destroy"}, {"value": 36, "name": "Flush"}, {"value": 63, "name": "Get"}, {"value": 59, "name": "GetProto"}, {"value": 45, "name": "GetSSTables"}, {"value": 45, "name": "GetStats"}, {"value": 36, "name": "GetTempDir"}, {"value": 36, "name": "Iterate"}, {"value": 36, "name": "Merge"}, {"value": 36, "name": "NewBatch"}, {"value": 36, "name": "NewIterator"}, {"value": 36, "name": "NewSnapshot"}, {"value": 36, "name": "NewWriteOnlyBatch"}, {"value": 36, "name": "Put"}, {"value": 36, "name": "SetTempDir"}, {"value": 36, "name": "String"}], "name": "(*InMem)."}, {"children": [{"value": 184, "name": "Cleanup"}], "name": "(*IterAndBuf)."}, {"children": [{"value": 315, "name": "EncodedSize"}, {"value": 245, "name": "Equal"}, {"value": 220, "name": "IsValue"}, {"value": 245, "name": "Less"}, {"value": 354, "name": "Next"}, {"value": 214, "name": "String"}], "name": "(*MVCCKey)."}, {"children": [{"value": 122, "name": "ApplyBatchRepr"}, {"value": 33, "name": "Attrs"}, {"value": 1638, "name": "Capacity"}, {"children": [{"value": 205, "name": "func1"}], "name": "Capacity."}, {"value": 128, "name": "Clear"}, {"value": 221, "name": "ClearIterRange"}, {"value": 186, "name": "ClearRange"}, {"value": 656, "name": "Close"}, {"children": [{"value": 113, "name": "func1"}], "name": "Close."}, {"value": 22, "name": "Closed"}, {"value": 107, "name": "Compact"}, {"children": [{"value": 158, "name": "func1"}], "name": "Compact."}, {"value": 234, "name": "Destroy"}, {"value": 107, "name": "Flush"}, {"children": [{"value": 158, "name": "func1"}], "name": "Flush."}, {"value": 174, "name": "Get"}, {"value": 205, "name": "GetProto"}, {"value": 2096, "name": "GetSSTables"}, {"children": [{"value": 136, "name": "func1"}, {"value": 101, "name": "func2"}, {"value": 113, "name": "func3"}, {"value": 113, "name": "func4"}, {"value": 113, "name": "func5"}], "name": "GetSSTables."}, {"value": 312, "name": "GetStats"}, {"children": [{"value": 168, "name": "func1"}], "name": "GetStats."}, {"value": 24, "name": "GetTempDir"}, {"value": 239, "name": "Iterate"}, {"value": 174, "name": "Merge"}, {"value": 87, "name": "NewBatch"}, {"value": 109, "name": "NewIterator"}, {"value": 300, "name": "NewSnapshot"}, {"children": [{"value": 123, "name": "func1"}], "name": "NewSnapshot."}, {"value": 87, "name": "NewWriteOnlyBatch"}, {"value": 174, "name": "Put"}, {"value": 196, "name": "SetTempDir"}, {"value": 266, "name": "String"}, {"value": 1991, "name": "open"}, {"children": [{"value": 490, "name": "func1"}, {"value": 85, "name": "func2"}], "name": "open."}], "name": "(*RocksDB)."}, {"children": [{"value": 280, "name": "Clear"}, {"value": 287, "name": "Finish"}, {"value": 15, "name": "Len"}, {"value": 146, "name": "Merge"}, {"value": 146, "name": "Put"}, {"value": 887, "name": "encodeKey"}, {"value": 547, "name": "encodeKeyValue"}, {"value": 298, "name": "grow"}], "name": "(*RocksDBBatchBuilder)."}, {"children": [{"value": 14, "name": "BatchType"}, {"value": 14, "name": "Count"}, {"value": 24, "name": "Error"}, {"value": 1984, "name": "Next"}, {"value": 33, "name": "UnsafeKey"}, {"value": 166, "name": "UnsafeValue"}, {"value": 1099, "name": "varstring"}], "name": "(*RocksDBBatchReader)."}, {"children": [{"value": 166, "name": "Release"}], "name": "(*RocksDBCache)."}, {"children": [{"value": 334, "name": "AddFile"}, {"children": [{"value": 168, "name": "func1"}], "name": "AddFile."}, {"value": 125, "name": "Close"}, {"value": 272, "name": "Iterate"}, {"value": 114, "name": "NewIterator"}], "name": "(*RocksDBSstFileReader)."}, {"children": [{"value": 725, "name": "Add"}, {"children": [{"value": 209, "name": "func1"}], "name": "Add."}, {"value": 218, "name": "Close"}, {"children": [{"value": 158, "name": "func1"}], "name": "Close."}, {"value": 325, "name": "Open"}, {"children": [{"value": 168, "name": "func1"}], "name": "Open."}], "name": "(*RocksDBSstFileWriter)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 194, "name": "ReadAmplification"}, {"value": 204, "name": "String"}, {"value": 434, "name": "Swap"}], "name": "(*SSTableInfos)."}, {"children": [{"value": 36, "name": "ApplyBatchRepr"}, {"value": 128, "name": "Clear"}, {"value": 259, "name": "ClearIterRange"}, {"value": 321, "name": "ClearRange"}, {"value": 148, "name": "Close"}, {"value": 23, "name": "Closed"}, {"value": 36, "name": "Commit"}, {"value": 36, "name": "Distinct"}, {"value": 322, "name": "Get"}, {"value": 384, "name": "GetProto"}, {"value": 243, "name": "Iterate"}, {"value": 180, "name": "Merge"}, {"value": 300, "name": "NewIterator"}, {"value": 180, "name": "Put"}, {"value": 45, "name": "Repr"}, {"value": 111, "name": "close"}], "name": "(*distinctBatch)."}, {"children": [{"value": 218, "name": "release"}], "name": "(*getBuffer)."}, {"children": [{"value": 502, "name": "marshalMeta"}, {"value": 557, "name": "putMeta"}, {"value": 286, "name": "release"}], "name": "(*putBuffer)."}, {"children": [{"value": 139, "name": "Close"}, {"value": 72, "name": "ComputeStats"}, {"value": 62, "name": "Key"}, {"value": 22, "name": "Less"}, {"value": 17, "name": "Next"}, {"value": 17, "name": "NextKey"}, {"value": 17, "name": "Prev"}, {"value": 17, "name": "PrevKey"}, {"value": 17, "name": "Seek"}, {"value": 17, "name": "SeekReverse"}, {"value": 62, "name": "UnsafeKey"}, {"value": 44, "name": "UnsafeValue"}, {"value": 40, "name": "Valid"}, {"value": 44, "name": "Value"}, {"value": 35, "name": "ValueProto"}, {"value": 26, "name": "getIter"}], "name": "(*reusableIterator)."}, {"children": [{"value": 245, "name": "ApplyBatchRepr"}, {"value": 227, "name": "Clear"}, {"value": 355, "name": "ClearIterRange"}, {"value": 417, "name": "ClearRange"}, {"value": 219, "name": "Close"}, {"children": [{"value": 113, "name": "func1"}], "name": "Close."}, {"value": 23, "name": "Closed"}, {"value": 1930, "name": "Commit"}, {"value": 202, "name": "Distinct"}, {"value": 383, "name": "Get"}, {"value": 425, "name": "GetProto"}, {"value": 451, "name": "Iterate"}, {"value": 270, "name": "Merge"}, {"value": 470, "name": "NewIterator"}, {"value": 270, "name": "Put"}, {"value": 412, "name": "Repr"}, {"children": [{"value": 158, "name": "func1"}], "name": "Repr."}, {"value": 1301, "name": "commitInternal"}, {"children": [{"value": 167, "name": "func1"}, {"value": 113, "name": "func2"}], "name": "commitInternal."}, {"value": 252, "name": "flushMutations"}], "name": "(*rocksDBBatch)."}, {"children": [{"value": 182, "name": "Close"}, {"value": 352, "name": "ComputeStats"}, {"value": 806, "name": "Key"}, {"value": 110, "name": "Less"}, {"value": 80, "name": "Next"}, {"value": 80, "name": "NextKey"}, {"value": 80, "name": "Prev"}, {"value": 80, "name": "PrevKey"}, {"value": 119, "name": "Seek"}, {"value": 119, "name": "SeekReverse"}, {"value": 613, "name": "UnsafeKey"}, {"value": 94, "name": "UnsafeValue"}, {"value": 32, "name": "Valid"}, {"value": 92, "name": "Value"}, {"value": 102, "name": "ValueProto"}, {"value": 15, "name": "getIter"}], "name": "(*rocksDBBatchIterator)."}, {"children": [{"value": 98, "name": "Close"}, {"value": 1121, "name": "ComputeStats"}, {"children": [{"value": 368, "name": "func1"}], "name": "ComputeStats."}, {"value": 639, "name": "Key"}, {"value": 668, "name": "Less"}, {"value": 211, "name": "Next"}, {"children": [{"value": 284, "name": "func1"}], "name": "Next."}, {"value": 211, "name": "NextKey"}, {"children": [{"value": 284, "name": "func1"}], "name": "NextKey."}, {"value": 211, "name": "Prev"}, {"children": [{"value": 284, "name": "func1"}], "name": "Prev."}, {"value": 211, "name": "PrevKey"}, {"children": [{"value": 284, "name": "func1"}], "name": "PrevKey."}, {"value": 1394, "name": "Seek"}, {"children": [{"value": 272, "name": "func1"}, {"value": 304, "name": "func2"}], "name": "Seek."}, {"value": 2206, "name": "SeekReverse"}, {"children": [{"value": 272, "name": "func1"}, {"value": 304, "name": "func2"}, {"value": 272, "name": "func3"}], "name": "SeekReverse."}, {"value": 440, "name": "UnsafeKey"}, {"value": 94, "name": "UnsafeValue"}, {"value": 32, "name": "Valid"}, {"value": 94, "name": "Value"}, {"value": 204, "name": "ValueProto"}, {"value": 157, "name": "checkEngineOpen"}, {"value": 188, "name": "destroy"}, {"children": [{"value": 113, "name": "func1"}], "name": "destroy."}, {"value": 15, "name": "getIter"}, {"value": 268, "name": "init"}, {"children": [{"value": 135, "name": "func1"}], "name": "init."}, {"value": 283, "name": "setState"}], "name": "(*rocksDBIterator)."}, {"children": [{"value": 113, "name": "Close"}, {"children": [{"value": 113, "name": "func1"}], "name": "Close."}, {"value": 23, "name": "Closed"}, {"value": 175, "name": "Get"}, {"value": 206, "name": "GetProto"}, {"value": 240, "name": "Iterate"}, {"value": 110, "name": "NewIterator"}], "name": "(*rocksDBSnapshot)."}, {"children": [{"value": 87, "name": "NewBatch-fm"}], "name": "(Engine)."}, {"value": 884, "name": "AccountForSelf"}, {"value": 586, "name": "AllocIterKeyValue"}, {"value": 1085, "name": "DecodeKey"}, {"children": [{"value": 944, "name": "Filter"}], "name": "GarbageCollector."}, {"value": 115, "name": "GetIterAndBuf"}, {"children": [{"value": 144, "name": "ApplyBatchRepr"}, {"value": 64, "name": "Attrs"}, {"value": 141, "name": "Capacity"}, {"value": 150, "name": "Clear"}, {"value": 243, "name": "ClearIterRange"}, {"value": 205, "name": "ClearRange"}, {"value": 82, "name": "Close"}, {"value": 53, "name": "Closed"}, {"value": 102, "name": "Compact"}, {"value": 102, "name": "Destroy"}, {"value": 102, "name": "Flush"}, {"value": 193, "name": "Get"}, {"value": 224, "name": "GetProto"}, {"value": 112, "name": "GetSSTables"}, {"value": 112, "name": "GetStats"}, {"value": 55, "name": "GetTempDir"}, {"value": 224, "name": "Iterate"}, {"value": 193, "name": "Merge"}, {"value": 102, "name": "NewBatch"}, {"value": 111, "name": "NewIterator"}, {"value": 102, "name": "NewSnapshot"}, {"value": 102, "name": "NewWriteOnlyBatch"}, {"value": 193, "name": "Put"}, {"value": 122, "name": "SetTempDir"}, {"value": 102, "name": "String"}], "name": "InMem."}, {"value": 538, "name": "IsValidSplitKey"}, {"children": [{"value": 80, "name": "Cleanup"}], "name": "IterAndBuf."}, {"value": 332, "name": "MVCCBlindConditionalPut"}, {"value": 316, "name": "MVCCBlindInitPut"}, {"value": 328, "name": "MVCCBlindPut"}, {"value": 521, "name": "MVCCConditionalPut"}, {"value": 515, "name": "MVCCDelete"}, {"value": 2470, "name": "MVCCDeleteRange"}, {"children": [{"value": 1205, "name": "func1"}], "name": "MVCCDeleteRange."}, {"value": 3198, "name": "MVCCFindSplitKey"}, {"children": [{"value": 1507, "name": "func1"}], "name": "MVCCFindSplitKey."}, {"value": 3569, "name": "MVCCGarbageCollect"}, {"value": 491, "name": "MVCCGet"}, {"value": 442, "name": "MVCCGetAsTxn"}, {"value": 451, "name": "MVCCGetProto"}, {"value": 361, "name": "MVCCGetRangeStats"}, {"value": 688, "name": "MVCCIncrement"}, {"children": [{"value": 1114, "name": "func1"}], "name": "MVCCIncrement."}, {"value": 469, "name": "MVCCInitPut"}, {"value": 6634, "name": "MVCCIterate"}, {"children": [{"value": 115, "name": "EncodedSize"}, {"value": 179, "name": "Equal"}, {"value": 31, "name": "IsValue"}, {"value": 319, "name": "Less"}, {"value": 710, "name": "Next"}, {"value": 457, "name": "String"}], "name": "MVCCKey."}, {"value": 40, "name": "MVCCKeyMax"}, {"value": 1175, "name": "MVCCMerge"}, {"value": 619, "name": "MVCCPut"}, {"value": 501, "name": "MVCCPutProto"}, {"value": 397, "name": "MVCCResolveWriteIntent"}, {"value": 509, "name": "MVCCResolveWriteIntentRange"}, {"value": 2484, "name": "MVCCResolveWriteIntentRangeUsingIter"}, {"value": 261, "name": "MVCCResolveWriteIntentUsingIter"}, {"value": 418, "name": "MVCCReverseScan"}, {"value": 418, "name": "MVCCScan"}, {"value": 180, "name": "MakeMVCCMetadataKey"}, {"value": 241, "name": "MakeRocksDBSstFileReader"}, {"value": 69, "name": "MakeRocksDBSstFileWriter"}, {"value": 241, "name": "NewInMem"}, {"value": 968, "name": "NewRocksDB"}, {"value": 993, "name": "NewRocksDBBatchReader"}, {"value": 70, "name": "NewRocksDBCache"}, {"value": 40, "name": "NilKey"}, {"value": 557, "name": "PutProto"}, {"children": [{"value": 67, "name": "Release"}, {"children": [{"value": 113, "name": "func1"}], "name": "Release."}, {"value": 77, "name": "ref"}, {"children": [{"value": 123, "name": "func1"}], "name": "ref."}], "name": "RocksDBCache."}, {"value": 686, "name": "RunLDB"}, {"children": [{"value": 104, "name": "func1"}, {"children": [{"value": 113, "name": "1"}], "name": "func1."}, {"value": 263, "name": "func2"}], "name": "RunLDB."}, {"children": [{"value": 11, "name": "Len"}, {"value": 419, "name": "Less"}, {"value": 501, "name": "ReadAmplification"}, {"value": 2082, "name": "String"}, {"children": [{"value": 86, "name": "func1"}, {"value": 877, "name": "func2"}, {"value": 457, "name": "func3"}, {"value": 636, "name": "func4"}], "name": "String."}, {"value": 332, "name": "Swap"}], "name": "SSTableInfos."}, {"value": 420, "name": "Scan"}, {"children": [{"value": 381, "name": "func1"}], "name": "Scan."}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 268, "name": "_Cfunc_DBApplyBatchRepr"}, {"value": 142, "name": "_Cfunc_DBBatchRepr"}, {"value": 121, "name": "_Cfunc_DBClose"}, {"value": 205, "name": "_Cfunc_DBCommitAndCloseBatch"}, {"value": 142, "name": "_Cfunc_DBCompact"}, {"value": 231, "name": "_Cfunc_DBDelete"}, {"value": 348, "name": "_Cfunc_DBDeleteIterRange"}, {"value": 319, "name": "_Cfunc_DBDeleteRange"}, {"value": 180, "name": "_Cfunc_DBDestroy"}, {"value": 206, "name": "_Cfunc_DBEngineAddFile"}, {"value": 142, "name": "_Cfunc_DBFlush"}, {"value": 263, "name": "_Cfunc_DBGet"}, {"value": 163, "name": "_Cfunc_DBGetSSTables"}, {"value": 172, "name": "_Cfunc_DBGetStats"}, {"value": 121, "name": "_Cfunc_DBIterDestroy"}, {"value": 223, "name": "_Cfunc_DBIterNext"}, {"value": 223, "name": "_Cfunc_DBIterPrev"}, {"value": 249, "name": "_Cfunc_DBIterSeek"}, {"value": 164, "name": "_Cfunc_DBIterSeekToFirst"}, {"value": 164, "name": "_Cfunc_DBIterSeekToLast"}, {"value": 297, "name": "_Cfunc_DBMerge"}, {"value": 196, "name": "_Cfunc_DBNewBatch"}, {"value": 171, "name": "_Cfunc_DBNewCache"}, {"value": 196, "name": "_Cfunc_DBNewIter"}, {"value": 133, "name": "_Cfunc_DBNewSnapshot"}, {"value": 310, "name": "_Cfunc_DBOpen"}, {"value": 297, "name": "_Cfunc_DBPut"}, {"value": 133, "name": "_Cfunc_DBRefCache"}, {"value": 121, "name": "_Cfunc_DBReleaseCache"}, {"value": 186, "name": "_Cfunc_DBRunLDB"}, {"value": 297, "name": "_Cfunc_DBSstFileWriterAdd"}, {"value": 142, "name": "_Cfunc_DBSstFileWriterClose"}, {"value": 91, "name": "_Cfunc_DBSstFileWriterNew"}, {"value": 206, "name": "_Cfunc_DBSstFileWriterOpen"}, {"value": 102, "name": "_Cfunc_GoBytes"}, {"value": 92, "name": "_Cfunc_GoStringN"}, {"value": 410, "name": "_Cfunc_MVCCComputeStats"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBApplyBatchRepr"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBBatchRepr"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBClose"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBCommitAndCloseBatch"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBCompact"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBDelete"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBDeleteIterRange"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBDeleteRange"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBDestroy"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBEngineAddFile"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBFlush"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBGet"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBGetSSTables"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBGetStats"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterDestroy"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterNext"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterPrev"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeek"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeekToFirst"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeekToLast"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBMerge"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewBatch"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewCache"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewIter"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewSnapshot"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBOpen"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBPut"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBRefCache"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBReleaseCache"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBRunLDB"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterAdd"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterClose"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterNew"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterOpen"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_MVCCComputeStats"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_free"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 164, "name": "_cgoexpwrap_c2c02754d5b2_prettyPrintKey"}, {"children": [{"value": 75, "name": "func1"}], "name": "_cgoexpwrap_c2c02754d5b2_prettyPrintKey."}, {"value": 68, "name": "_cgoexpwrap_c2c02754d5b2_rocksDBLog"}, {"value": 143, "name": "cSliceToGoBytes"}, {"children": [{"value": 158, "name": "func1"}], "name": "cSliceToGoBytes."}, {"value": 467, "name": "cStatsToGoStats"}, {"value": 191, "name": "cStringToGoBytes"}, {"children": [{"value": 158, "name": "func1"}, {"value": 113, "name": "func2"}], "name": "cStringToGoBytes."}, {"value": 162, "name": "cStringToGoString"}, {"children": [{"value": 113, "name": "func1"}], "name": "cStringToGoString."}, {"value": 229, "name": "dbApplyBatchRepr"}, {"children": [{"value": 177, "name": "func1"}], "name": "dbApplyBatchRepr."}, {"value": 542, "name": "dbClear"}, {"children": [{"value": 196, "name": "func1"}], "name": "dbClear."}, {"value": 1135, "name": "dbClearIterRange"}, {"children": [{"value": 306, "name": "func1"}], "name": "dbClearIterRange."}, {"value": 878, "name": "dbClearRange"}, {"children": [{"value": 231, "name": "func1"}], "name": "dbClearRange."}, {"value": 752, "name": "dbGet"}, {"children": [{"value": 382, "name": "func1"}], "name": "dbGet."}, {"value": 1204, "name": "dbGetProto"}, {"children": [{"value": 382, "name": "func1"}, {"value": 113, "name": "func2"}], "name": "dbGetProto."}, {"value": 1024, "name": "dbIterate"}, {"value": 679, "name": "dbMerge"}, {"children": [{"value": 209, "name": "func1"}], "name": "dbMerge."}, {"value": 679, "name": "dbPut"}, {"children": [{"value": 209, "name": "func1"}], "name": "dbPut."}, {"children": [{"value": 166, "name": "ApplyBatchRepr"}, {"value": 57, "name": "Closed"}, {"value": 120, "name": "Commit"}, {"value": 108, "name": "Distinct"}, {"value": 121, "name": "Repr"}], "name": "distinctBatch."}, {"value": 118, "name": "emptyKeyError"}, {"value": 16, "name": "errInitPutValueMatchesExisting"}, {"value": 24, "name": "getBufferPool"}, {"value": 1746, "name": "getReverseScanMeta"}, {"value": 1062, "name": "getScanMeta"}, {"value": 755, "name": "getVersion"}, {"value": 152, "name": "getVersionFilename"}, {"children": [{"value": 84, "name": "func1"}, {"value": 84, "name": "func2"}, {"value": 84, "name": "func3"}], "name": "glob."}, {"value": 554, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 134, "name": "isSysLocal"}, {"value": 24, "name": "iterPool"}, {"value": 776, "name": "maybeGetValue"}, {"value": 466, "name": "mvccConditionalPutUsingIter"}, {"children": [{"value": 759, "name": "func1"}], "name": "mvccConditionalPutUsingIter."}, {"value": 5344, "name": "mvccGetInternal"}, {"value": 1506, "name": "mvccGetMetadata"}, {"value": 1499, "name": "mvccGetUsingIter"}, {"value": 574, "name": "mvccInitPutUsingIter"}, {"children": [{"value": 495, "name": "func1"}], "name": "mvccInitPutUsingIter."}, {"value": 6445, "name": "mvccPutInternal"}, {"value": 600, "name": "mvccPutUsingIter"}, {"value": 5510, "name": "mvccResolveWriteIntent"}, {"value": 1100, "name": "mvccScanInternal"}, {"children": [{"value": 1154, "name": "func1"}], "name": "mvccScanInternal."}, {"value": 125, "name": "newGetBuffer"}, {"value": 521, "name": "newMemRocksDB"}, {"value": 117, "name": "newPutBuffer"}, {"value": 278, "name": "newRocksDBBatch"}, {"children": [{"value": 135, "name": "func1"}], "name": "newRocksDBBatch."}, {"value": 194, "name": "newRocksDBIterator"}, {"value": 40, "name": "noValue"}, {"value": 254, "name": "prettyPrintKey"}, {"children": [{"value": 158, "name": "func1"}], "name": "prettyPrintKey."}, {"value": 24, "name": "putBufferPool"}, {"value": 105, "name": "putUvarint32"}, {"value": 271, "name": "rocksDBLog"}, {"value": 32, "name": "statictmp_1074"}, {"value": 40, "name": "statictmp_108"}, {"value": 16, "name": "statictmp_1116"}, {"value": 40, "name": "statictmp_1120"}, {"value": 24, "name": "statictmp_1161"}, {"value": 24, "name": "statictmp_1166"}, {"value": 24, "name": "statictmp_1171"}, {"value": 24, "name": "statictmp_1174"}, {"value": 16, "name": "statictmp_1185"}, {"value": 16, "name": "statictmp_1423"}, {"value": 16, "name": "statictmp_1444"}, {"value": 16, "name": "statictmp_1495"}, {"value": 16, "name": "statictmp_1499"}, {"value": 16, "name": "statictmp_1561"}, {"value": 16, "name": "statictmp_1564"}, {"value": 16, "name": "statictmp_1575"}, {"value": 16, "name": "statictmp_1578"}, {"value": 16, "name": "statictmp_1584"}, {"value": 16, "name": "statictmp_1593"}, {"value": 16, "name": "statictmp_1607"}, {"value": 16, "name": "statictmp_1621"}, {"value": 16, "name": "statictmp_1631"}, {"value": 16, "name": "statictmp_1635"}, {"value": 16, "name": "statictmp_1653"}, {"value": 16, "name": "statictmp_1657"}, {"value": 24, "name": "statictmp_1667"}, {"value": 8, "name": "statictmp_1668"}, {"value": 16, "name": "statictmp_1676"}, {"value": 16, "name": "statictmp_1690"}, {"value": 16, "name": "statictmp_1703"}, {"value": 16, "name": "statictmp_1706"}, {"value": 16, "name": "statictmp_1713"}, {"value": 16, "name": "statictmp_192"}, {"value": 16, "name": "statictmp_193"}, {"value": 16, "name": "statictmp_203"}, {"value": 16, "name": "statictmp_397"}, {"value": 136, "name": "statictmp_471"}, {"value": 136, "name": "statictmp_564"}, {"value": 32, "name": "statictmp_854"}, {"value": 32, "name": "statictmp_871"}, {"value": 40, "name": "statictmp_99"}, {"value": 145, "name": "statusToError"}, {"value": 365, "name": "updateStatsForInline"}, {"value": 1491, "name": "updateStatsOnAbort"}, {"value": 835, "name": "updateStatsOnGC"}, {"value": 520, "name": "updateStatsOnMerge"}, {"value": 1362, "name": "updateStatsOnPut"}, {"value": 866, "name": "updateStatsOnResolve"}, {"value": 1, "name": "useDirectWrites"}, {"value": 530, "name": "writeVersionFile"}, {"value": 200, "name": "go.itab.*RocksDB,github.com/cockroachdb/cockroach/pkg/storage/engine.Engine"}, {"value": 80, "name": "go.itab.*RocksDB,github.com/cockroachdb/cockroach/pkg/storage/engine.Reader"}, {"value": 40, "name": "go.itab.*RocksDB,github.com/cockroachdb/cockroach/pkg/util/stop.Closer"}, {"value": 128, "name": "go.itab.*distinctBatch,github.com/cockroachdb/cockroach/pkg/storage/engine.ReadWriter"}, {"value": 80, "name": "go.itab.*distinctBatch,github.com/cockroachdb/cockroach/pkg/storage/engine.Reader"}, {"value": 152, "name": "go.itab.*reusableIterator,github.com/cockroachdb/cockroach/pkg/storage/engine.Iterator"}, {"value": 152, "name": "go.itab.*rocksDBBatch,github.com/cockroachdb/cockroach/pkg/storage/engine.Batch"}, {"value": 80, "name": "go.itab.*rocksDBBatch,github.com/cockroachdb/cockroach/pkg/storage/engine.Reader"}, {"value": 152, "name": "go.itab.*rocksDBBatchIterator,github.com/cockroachdb/cockroach/pkg/storage/engine.Iterator"}, {"value": 152, "name": "go.itab.*rocksDBIterator,github.com/cockroachdb/cockroach/pkg/storage/engine.Iterator"}, {"value": 80, "name": "go.itab.*rocksDBSnapshot,github.com/cockroachdb/cockroach/pkg/storage/engine.Reader"}, {"value": 200, "name": "go.itab.InMem,github.com/cockroachdb/cockroach/pkg/storage/engine.Engine"}, {"value": 56, "name": "go.itab.SSTableInfos,sort.Interface"}], "name": "engine."}, {"children": [{"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*IsolationType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 222, "name": "IsInline"}, {"value": 280, "name": "Marshal"}, {"value": 1415, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 400, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5409, "name": "Unmarshal"}], "name": "(*MVCCMetadata)."}, {"children": [{"value": 732, "name": "Add"}, {"value": 238, "name": "AgeTo"}, {"value": 478, "name": "AvgIntentAge"}, {"value": 141, "name": "Descriptor"}, {"value": 416, "name": "GCByteAge"}, {"value": 233, "name": "GCBytes"}, {"value": 269, "name": "Marshal"}, {"value": 2518, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 54, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 732, "name": "Subtract"}, {"value": 225, "name": "Total"}, {"value": 8610, "name": "Unmarshal"}], "name": "(*MVCCStats)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 886, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 203, "name": "Reset"}, {"value": 259, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3269, "name": "Unmarshal"}], "name": "(*SSTUserProperties)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 763, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 304, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2774, "name": "Unmarshal"}], "name": "(*SSTUserPropertiesCollection)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1417, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 204, "name": "Short"}, {"value": 435, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5350, "name": "Unmarshal"}], "name": "(*TxnMeta)."}, {"value": 16, "name": "ErrIntOverflowMvcc"}, {"value": 16, "name": "ErrIntOverflowRocksdb"}, {"value": 16, "name": "ErrInvalidLengthMvcc"}, {"value": 16, "name": "ErrInvalidLengthRocksdb"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "IsolationType."}, {"value": 8, "name": "IsolationType_name"}, {"value": 8, "name": "IsolationType_value"}, {"children": [{"value": 16, "name": "IsInline"}], "name": "MVCCMetadata."}, {"children": [{"value": 337, "name": "AvgIntentAge"}, {"value": 269, "name": "GCByteAge"}, {"value": 27, "name": "GCBytes"}, {"value": 19, "name": "Total"}], "name": "MVCCStats."}, {"children": [{"value": 134, "name": "Short"}], "name": "TxnMeta."}, {"value": 122, "name": "encodeVarintMvcc"}, {"value": 122, "name": "encodeVarintRocksdb"}, {"value": 24, "name": "fileDescriptorMvcc"}, {"value": 24, "name": "fileDescriptorRocksdb"}, {"value": 1053, "name": "init"}, {"children": [{"value": 240, "name": "1"}, {"value": 210, "name": "2"}, {"value": 141, "name": "3"}, {"value": 210, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipMvcc"}, {"value": 1621, "name": "skipRocksdb"}, {"value": 34, "name": "sovMvcc"}, {"value": 34, "name": "sovRocksdb"}, {"value": 32, "name": "statictmp_1105"}, {"value": 760, "name": "statictmp_1149"}, {"value": 304, "name": "statictmp_1150"}, {"value": 8, "name": "statictmp_1152"}, {"value": 32, "name": "statictmp_1153"}, {"value": 32, "name": "statictmp_1157"}, {"value": 8, "name": "statictmp_1158"}, {"value": 8, "name": "statictmp_1166"}, {"value": 8, "name": "statictmp_56"}, {"value": 8, "name": "statictmp_62"}, {"value": 8, "name": "statictmp_68"}, {"value": 8, "name": "statictmp_73"}, {"value": 32, "name": "statictmp_923"}, {"value": 8, "name": "statictmp_931"}, {"value": 8, "name": "statictmp_937"}, {"value": 56, "name": "go.itab.*MVCCMetadata,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MVCCStats,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SSTUserProperties,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SSTUserPropertiesCollection,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TxnMeta,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "engine/enginepb."}, {"children": [{"children": [{"value": 71, "name": "Descriptor"}, {"value": 62, "name": "Marshal"}, {"value": 44, "name": "MarshalTo"}, {"value": 17, "name": "ProtoMessage"}, {"value": 17, "name": "Reset"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 35, "name": "Unmarshal"}], "name": "(*ApplyFilterArgs)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}], "name": "(*ChangeReplicas)."}, {"children": [{"value": 20, "name": "InRaftCmd"}], "name": "(*FilterArgs)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 331, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1619, "name": "Unmarshal"}], "name": "(*Merge)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1586, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 451, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 5232, "name": "Unmarshal"}], "name": "(*RaftCommand)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 730, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 310, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3245, "name": "Unmarshal"}], "name": "(*RangeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1954, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 555, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 6321, "name": "Unmarshal"}], "name": "(*ReplicaState)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 3205, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 731, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 10567, "name": "Unmarshal"}], "name": "(*ReplicatedEvalResult)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 570, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 144, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2278, "name": "Unmarshal"}], "name": "(*Split)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 294, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 101, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1940, "name": "Unmarshal"}], "name": "(*WriteBatch)."}, {"value": 16, "name": "ErrIntOverflowProposerKv"}, {"value": 16, "name": "ErrIntOverflowState"}, {"value": 16, "name": "ErrInvalidLengthProposerKv"}, {"value": 16, "name": "ErrInvalidLengthState"}, {"value": 122, "name": "encodeVarintProposerKv"}, {"value": 122, "name": "encodeVarintState"}, {"value": 24, "name": "fileDescriptorProposerKv"}, {"value": 24, "name": "fileDescriptorState"}, {"value": 614, "name": "init"}, {"children": [{"value": 329, "name": "1"}, {"value": 210, "name": "2"}, {"value": 141, "name": "3"}, {"value": 210, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipProposerKv"}, {"value": 1621, "name": "skipState"}, {"value": 34, "name": "sovProposerKv"}, {"value": 34, "name": "sovState"}, {"value": 917, "name": "statictmp_1011"}, {"value": 597, "name": "statictmp_1012"}, {"value": 8, "name": "statictmp_11"}, {"value": 8, "name": "statictmp_17"}, {"value": 8, "name": "statictmp_23"}, {"value": 24, "name": "statictmp_25"}, {"value": 8, "name": "statictmp_29"}, {"value": 8, "name": "statictmp_35"}, {"value": 8, "name": "statictmp_5"}, {"value": 8, "name": "statictmp_695"}, {"value": 8, "name": "statictmp_701"}, {"value": 56, "name": "go.itab.*ChangeReplicas,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Merge,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RaftCommand,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*RangeInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReplicaState,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReplicatedEvalResult,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Split,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*WriteBatch,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "storagebase."}], "name": "storage/"}, {"children": [{"children": [{"value": 221, "name": "ContainsTimeSeries"}, {"value": 456, "name": "PollSource"}, {"value": 358, "name": "PruneTimeSeries"}, {"value": 6132, "name": "Query"}, {"value": 1987, "name": "StoreData"}], "name": "(*DB)."}, {"children": [{"value": 176, "name": "PruneThreshold"}, {"value": 176, "name": "SampleDuration"}, {"value": 176, "name": "SlabDuration"}, {"value": 186, "name": "String"}], "name": "(*Resolution)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 1625, "name": "Query"}, {"children": [{"value": 1188, "name": "func1"}, {"children": [{"value": 1030, "name": "1"}], "name": "func1."}], "name": "Query."}, {"value": 110, "name": "RegisterGateway"}, {"value": 82, "name": "RegisterService"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}], "name": "(*Server)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 294, "name": "Pop"}, {"value": 429, "name": "Push"}, {"value": 435, "name": "Swap"}, {"value": 184, "name": "init"}], "name": "(*aggregatingIterator)."}, {"children": [{"value": 71, "name": "Descriptor"}, {"value": 62, "name": "Marshal"}, {"value": 44, "name": "MarshalTo"}, {"value": 17, "name": "ProtoMessage"}, {"value": 17, "name": "Reset"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 35, "name": "Unmarshal"}], "name": "(*calibratedData)."}, {"children": [{"value": 1058, "name": "addData"}], "name": "(*dataSpan)."}, {"children": [{"value": 417, "name": "advance"}, {"value": 398, "name": "computeEnd"}, {"value": 137, "name": "offset"}, {"value": 1269, "name": "retreat"}, {"value": 1294, "name": "value"}], "name": "(*downsamplingIterator)."}, {"children": [{"value": 207, "name": "advanceTo"}, {"value": 326, "name": "midTimestamp"}, {"value": 497, "name": "value"}], "name": "(*interpolatingIterator)."}, {"children": [{"value": 17, "name": "AddLogTag"}, {"value": 17, "name": "AddLogTagInt"}, {"value": 17, "name": "AddLogTagInt64"}, {"value": 17, "name": "AddLogTagStr"}, {"value": 35, "name": "AnnotateCtx"}, {"value": 53, "name": "AnnotateCtxWithSpan"}, {"value": 17, "name": "FinishEventLog"}, {"value": 35, "name": "ResetAndAnnotateCtx"}, {"value": 17, "name": "SetEventLog"}, {"value": 314, "name": "poll"}, {"children": [{"value": 521, "name": "func1"}], "name": "poll."}, {"value": 243, "name": "start"}, {"children": [{"value": 408, "name": "func1"}], "name": "start."}], "name": "(*poller)."}, {"children": [{"value": 95, "name": "(github.com/cockroachdb/cockroach/pkg/ts.avg)-fm"}, {"value": 95, "name": "(github.com/cockroachdb/cockroach/pkg/ts.max)-fm"}, {"value": 95, "name": "(github.com/cockroachdb/cockroach/pkg/ts.min)-fm"}, {"value": 95, "name": "(github.com/cockroachdb/cockroach/pkg/ts.sum)-fm"}], "name": "(aggregatingIterator)."}, {"value": 629, "name": "DecodeDataKey"}, {"value": 436, "name": "MakeDataKey"}, {"value": 350, "name": "MakeServer"}, {"children": [{"value": 312, "name": "PruneThreshold"}, {"value": 312, "name": "SampleDuration"}, {"value": 312, "name": "SlabDuration"}, {"value": 280, "name": "String"}], "name": "Resolution."}, {"children": [{"value": 11, "name": "Len"}, {"value": 423, "name": "Less"}, {"value": 333, "name": "Swap"}, {"value": 505, "name": "advance"}, {"value": 109, "name": "avg"}, {"value": 284, "name": "init"}, {"value": 226, "name": "max"}, {"value": 226, "name": "min"}, {"value": 128, "name": "sum"}, {"value": 137, "name": "timestamp"}], "name": "aggregatingIterator."}, {"value": 345, "name": "computeThresholds"}, {"children": [{"value": 461, "name": "offset"}, {"value": 498, "name": "sample"}, {"value": 459, "name": "value"}], "name": "dataSpanIterator."}, {"value": 954, "name": "decodeDataKeySuffix"}, {"value": 189, "name": "downsampleAvg"}, {"value": 544, "name": "downsampleMax"}, {"value": 544, "name": "downsampleMin"}, {"value": 165, "name": "downsampleSum"}, {"value": 3145, "name": "findTimeSeries"}, {"value": 24, "name": "firstTSRKey"}, {"value": 448, "name": "getDownsampleFunction"}, {"value": 448, "name": "getExtractionFunction"}, {"value": 1052, "name": "init"}, {"children": [{"value": 100, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "lastTSRKey"}, {"value": 424, "name": "makeDataKeySeriesPrefix"}, {"value": 1108, "name": "makeDataSpans"}, {"value": 902, "name": "newDataSpanIterator"}, {"children": [{"value": 140, "name": "func1"}, {"value": 78, "name": "func2"}], "name": "newDataSpanIterator."}, {"value": 740, "name": "newDownsamplingIterator"}, {"value": 539, "name": "newInterpolatingIterator"}, {"value": 828, "name": "prettyPrintKey"}, {"value": 8, "name": "pruneThresholdByResolution"}, {"value": 860, "name": "pruneTimeSeries"}, {"value": 8, "name": "sampleDurationByResolution"}, {"value": 8, "name": "slabDurationByResolution"}, {"value": 72, "name": "statictmp_177"}, {"value": 72, "name": "statictmp_180"}, {"value": 72, "name": "statictmp_183"}, {"value": 432, "name": "statictmp_271"}, {"value": 16, "name": "statictmp_579"}, {"value": 16, "name": "statictmp_580"}, {"value": 16, "name": "statictmp_584"}, {"value": 16, "name": "statictmp_585"}, {"value": 48, "name": "go.itab.*DB,github.com/cockroachdb/cockroach/pkg/storage.TimeSeriesDataStore"}, {"value": 48, "name": "go.itab.*Server,github.com/cockroachdb/cockroach/pkg/server.grpcGatewayServer"}, {"value": 40, "name": "go.itab.*Server,github.com/cockroachdb/cockroach/pkg/ts/tspb.TimeSeriesServer"}, {"value": 72, "name": "go.itab.*aggregatingIterator,container/heap.Interface"}], "name": "ts."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 35, "name": "GetDerivative"}, {"value": 35, "name": "GetDownsampler"}, {"value": 47, "name": "GetName"}, {"value": 35, "name": "GetSourceAggregator"}, {"value": 66, "name": "GetSources"}, {"value": 280, "name": "Marshal"}, {"value": 936, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 368, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4140, "name": "Unmarshal"}], "name": "(*Query)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 935, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 292, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 295, "name": "ToInternal"}, {"value": 3276, "name": "Unmarshal"}], "name": "(*TimeSeriesData)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 389, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 21, "name": "Reset"}, {"value": 77, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1841, "name": "Unmarshal"}], "name": "(*TimeSeriesDatapoint)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TimeSeriesQueryAggregator)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*TimeSeriesQueryDerivative)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 848, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 409, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3281, "name": "Unmarshal"}], "name": "(*TimeSeriesQueryRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 576, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 313, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2029, "name": "Unmarshal"}], "name": "(*TimeSeriesQueryResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 25, "name": "GetDerivative"}, {"value": 25, "name": "GetDownsampler"}, {"value": 35, "name": "GetName"}, {"value": 25, "name": "GetSourceAggregator"}, {"value": 44, "name": "GetSources"}, {"value": 280, "name": "Marshal"}, {"value": 756, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 253, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2581, "name": "Unmarshal"}], "name": "(*TimeSeriesQueryResponse_Result)."}, {"children": [{"value": 326, "name": "Query"}], "name": "(*timeSeriesClient)."}, {"value": 16, "name": "ErrIntOverflowTimeseries"}, {"value": 16, "name": "ErrInvalidLengthTimeseries"}, {"value": 938, "name": "RegisterTimeSeriesHandler"}, {"children": [{"value": 1306, "name": "func1"}, {"children": [{"value": 252, "name": "1"}], "name": "func1."}], "name": "RegisterTimeSeriesHandler."}, {"value": 101, "name": "RegisterTimeSeriesServer"}, {"children": [{"value": 2369, "name": "ToInternal"}], "name": "TimeSeriesData."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TimeSeriesQueryAggregator."}, {"value": 8, "name": "TimeSeriesQueryAggregator_name"}, {"value": 8, "name": "TimeSeriesQueryAggregator_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "TimeSeriesQueryDerivative."}, {"value": 8, "name": "TimeSeriesQueryDerivative_name"}, {"value": 8, "name": "TimeSeriesQueryDerivative_value"}, {"value": 777, "name": "_TimeSeries_Query_Handler"}, {"children": [{"value": 227, "name": "func1"}], "name": "_TimeSeries_Query_Handler."}, {"value": 96, "name": "_TimeSeries_serviceDesc"}, {"value": 122, "name": "encodeVarintTimeseries"}, {"value": 24, "name": "fileDescriptorTimeseries"}, {"value": 8, "name": "forward_TimeSeries_Query_0"}, {"value": 1934, "name": "init"}, {"children": [{"value": 427, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 104, "name": "pattern_TimeSeries_Query_0"}, {"value": 941, "name": "request_TimeSeries_Query_0"}, {"value": 1621, "name": "skipTimeseries"}, {"value": 34, "name": "sovTimeseries"}, {"value": 16, "name": "statictmp_433"}, {"value": 8, "name": "statictmp_45"}, {"value": 8, "name": "statictmp_49"}, {"value": 8, "name": "statictmp_54"}, {"value": 64, "name": "statictmp_553"}, {"value": 88, "name": "statictmp_585"}, {"value": 8, "name": "statictmp_60"}, {"value": 16, "name": "statictmp_623"}, {"value": 8, "name": "statictmp_66"}, {"value": 8, "name": "statictmp_72"}, {"value": 24, "name": "statictmp_725"}, {"value": 16, "name": "statictmp_727"}, {"value": 662, "name": "statictmp_728"}, {"value": 16, "name": "statictmp_733"}, {"value": 64, "name": "statictmp_734"}, {"value": 64, "name": "statictmp_738"}, {"value": 16, "name": "statictmp_739"}, {"value": 24, "name": "statictmp_74"}, {"value": 12, "name": "statictmp_743"}, {"value": 48, "name": "statictmp_744"}, {"value": 48, "name": "statictmp_748"}, {"value": 12, "name": "statictmp_749"}, {"value": 32, "name": "statictmp_753"}, {"value": 32, "name": "statictmp_756"}, {"value": 8, "name": "statictmp_775"}, {"value": 8, "name": "statictmp_779"}, {"value": 8, "name": "statictmp_78"}, {"value": 16, "name": "statictmp_84"}, {"value": 56, "name": "go.itab.*Query,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesData,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesDatapoint,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesQueryRequest,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesQueryResponse,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesQueryResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TimeSeriesQueryResponse_Result,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*timeSeriesClient,github.com/cockroachdb/cockroach/pkg/ts/tspb.TimeSeriesClient"}], "name": "ts/tspb."}, {"children": [{"children": [{"value": 198, "name": "IsDir"}, {"value": 227, "name": "ModTime"}, {"value": 201, "name": "Mode"}, {"value": 216, "name": "Name"}, {"value": 203, "name": "Size"}, {"value": 214, "name": "Sys"}], "name": "(*bindataFileInfo)."}, {"children": [{"value": 179232, "name": "1"}, {"value": 181515, "name": "10"}, {"value": 280462, "name": "11"}, {"value": 10961, "name": "12"}, {"value": 11847, "name": "13"}, {"value": 15877, "name": "14"}, {"value": 17201, "name": "15"}, {"value": 19868, "name": "16"}, {"value": 22249, "name": "17"}, {"value": 3589, "name": "18"}, {"value": 3843, "name": "19"}, {"value": 279903, "name": "2"}, {"value": 4824, "name": "20"}, {"value": 5664, "name": "21"}, {"value": 22249, "name": "22"}, {"value": 22249, "name": "23"}, {"value": 627, "name": "24"}, {"value": 32692, "name": "25"}, {"value": 1495, "name": "26"}, {"value": 8294, "name": "27"}, {"value": 9542, "name": "28"}, {"value": 635, "name": "29"}, {"value": 280374, "name": "3"}, {"value": 22255, "name": "4"}, {"value": 12540, "name": "5"}, {"value": 277131, "name": "6"}, {"value": 179593, "name": "7"}, {"value": 651456, "name": "8"}, {"value": 181025, "name": "9"}], "name": ".gobytes."}, {"value": 848, "name": "Asset"}, {"value": 1358, "name": "AssetDir"}, {"value": 813, "name": "AssetInfo"}, {"value": 542, "name": "_0996d39c4cf5d223a14559dfa37047fdWoff2"}, {"value": 167, "name": "_0996d39c4cf5d223a14559dfa37047fdWoff2Bytes"}, {"value": 542, "name": "_27bd77b9162d388cb8d4c4217c7c5e2aWoff"}, {"value": 167, "name": "_27bd77b9162d388cb8d4c4217c7c5e2aWoffBytes"}, {"value": 542, "name": "_2ce4d82354fdf1be1788c526d94eefc1Woff"}, {"value": 167, "name": "_2ce4d82354fdf1be1788c526d94eefc1WoffBytes"}, {"value": 542, "name": "_554f370d0fd6e0b022c36689cfd8190bGif"}, {"value": 167, "name": "_554f370d0fd6e0b022c36689cfd8190bGifBytes"}, {"value": 542, "name": "_5d4981a99e52bb068c3d6d1311b134b6Woff"}, {"value": 167, "name": "_5d4981a99e52bb068c3d6d1311b134b6WoffBytes"}, {"value": 24, "name": "__0996d39c4cf5d223a14559dfa37047fdWoff2"}, {"value": 24, "name": "__27bd77b9162d388cb8d4c4217c7c5e2aWoff"}, {"value": 24, "name": "__2ce4d82354fdf1be1788c526d94eefc1Woff"}, {"value": 24, "name": "__554f370d0fd6e0b022c36689cfd8190bGif"}, {"value": 24, "name": "__5d4981a99e52bb068c3d6d1311b134b6Woff"}, {"value": 24, "name": "_acbd6ecc97c80340e9bf00ea80063234Woff"}, {"value": 24, "name": "_bd03a2cc277bbbc338d464e679fe9942Woff2"}, {"value": 8, "name": "_bindata"}, {"value": 8, "name": "_bintree"}, {"value": 24, "name": "_bundleJs"}, {"value": 24, "name": "_c9cbbdc3762c340d5d37073a54971487Woff2"}, {"value": 24, "name": "_cccb897485813c7c256901dbca54ecf2Woff2"}, {"value": 24, "name": "_d878b6c29b10beca227e9eef4246111bWoff"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon114x114Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon120x120Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon144x144Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon152x152Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon167x167Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon180x180Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon57x57Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon60x60Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon72x72Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon76x76Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPng"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPrecomposedPng"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon16x16Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon230x230Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon32x32Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon96x96Png"}, {"value": 24, "name": "_iconsE8dcce30740fbed4f01aaaa32c58fdbdFaviconIco"}, {"value": 24, "name": "_indexHtml"}, {"value": 542, "name": "acbd6ecc97c80340e9bf00ea80063234Woff"}, {"value": 167, "name": "acbd6ecc97c80340e9bf00ea80063234WoffBytes"}, {"value": 542, "name": "bd03a2cc277bbbc338d464e679fe9942Woff2"}, {"value": 167, "name": "bd03a2cc277bbbc338d464e679fe9942Woff2Bytes"}, {"children": [{"value": 6, "name": "IsDir"}, {"value": 29, "name": "ModTime"}, {"value": 9, "name": "Mode"}, {"value": 21, "name": "Name"}, {"value": 11, "name": "Size"}, {"value": 19, "name": "Sys"}], "name": "bindataFileInfo."}, {"value": 1160, "name": "bindataRead"}, {"value": 542, "name": "bundleJs"}, {"value": 167, "name": "bundleJsBytes"}, {"value": 542, "name": "c9cbbdc3762c340d5d37073a54971487Woff2"}, {"value": 167, "name": "c9cbbdc3762c340d5d37073a54971487Woff2Bytes"}, {"value": 542, "name": "cccb897485813c7c256901dbca54ecf2Woff2"}, {"value": 167, "name": "cccb897485813c7c256901dbca54ecf2Woff2Bytes"}, {"value": 542, "name": "d878b6c29b10beca227e9eef4246111bWoff"}, {"value": 167, "name": "d878b6c29b10beca227e9eef4246111bWoffBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon114x114Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon114x114PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon120x120Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon120x120PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon144x144Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon144x144PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon152x152Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon152x152PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon167x167Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon167x167PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon180x180Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon180x180PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon57x57Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon57x57PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon60x60Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon60x60PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon72x72Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon72x72PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon76x76Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIcon76x76PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPng"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPrecomposedPng"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdAppleTouchIconPrecomposedPngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon16x16Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon16x16PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon230x230Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon230x230PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon32x32Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon32x32PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon96x96Png"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFavicon96x96PngBytes"}, {"value": 542, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFaviconIco"}, {"value": 167, "name": "iconsE8dcce30740fbed4f01aaaa32c58fdbdFaviconIcoBytes"}, {"value": 542, "name": "indexHtml"}, {"value": 167, "name": "indexHtmlBytes"}, {"value": 12444, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "statictmp_387"}, {"value": 80, "name": "go.itab.bindataFileInfo,os.FileInfo"}], "name": "ui."}, {"children": [{"children": [{"value": 1, "name": "Lock"}], "name": "(*NoCopy)."}, {"children": [{"value": 204, "name": "Error"}], "name": "(*UnimplementedWithIssueError)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 297, "name": "IsEmpty"}, {"value": 280, "name": "Marshal"}, {"value": 494, "name": "MarshalTo"}, {"value": 23, "name": "Network"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 233, "name": "Resolve"}, {"value": 143, "name": "Size"}, {"value": 24, "name": "String"}, {"value": 2305, "name": "Unmarshal"}], "name": "(*UnresolvedAddr)."}, {"value": 16, "name": "ErrIntOverflowUnresolvedAddr"}, {"value": 16, "name": "ErrInvalidLengthUnresolvedAddr"}, {"value": 1119, "name": "GetSmallTrace"}, {"value": 8, "name": "IsolatedTestAddr"}, {"value": 195, "name": "NewUnresolvedAddr"}, {"value": 8, "name": "TestAddr"}, {"value": 173, "name": "TruncateDuration"}, {"children": [{"value": 435, "name": "Error"}], "name": "UnimplementedWithIssueError."}, {"value": 213, "name": "UnimplementedWithIssueErrorf"}, {"children": [{"value": 177, "name": "IsEmpty"}, {"value": 1914, "name": "Resolve"}], "name": "UnresolvedAddr."}, {"value": 122, "name": "encodeVarintUnresolvedAddr"}, {"value": 24, "name": "fileDescriptorUnresolvedAddr"}, {"value": 500, "name": "init"}, {"children": [{"value": 650, "name": "1"}, {"value": 92, "name": "2"}, {"value": 210, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipUnresolvedAddr"}, {"value": 34, "name": "sovUnresolvedAddr"}, {"value": 32, "name": "statictmp_163"}, {"value": 8, "name": "statictmp_167"}, {"value": 187, "name": "statictmp_284"}, {"value": 56, "name": "go.itab.*UnresolvedAddr,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*UnresolvedAddr,net.Addr"}, {"value": 40, "name": "go.itab.UnimplementedWithIssueError,error"}], "name": "util."}, {"children": [{"children": [{"children": [{"value": 286, "name": "Alloc"}, {"value": 318, "name": "Copy"}], "name": "(*ByteAllocator)."}, {"children": [{"value": 321, "name": "Alloc"}, {"value": 326, "name": "Copy"}], "name": "ByteAllocator."}], "name": "bufalloc."}, {"children": [{"children": [{"value": 253, "name": "Compare"}, {"value": 107, "name": "ID"}, {"value": 162, "name": "Range"}, {"value": 201, "name": "String"}], "name": "(*Entry)."}, {"children": [{"value": 226, "name": "(github.com/cockroachdb/cockroach/pkg/util/cache.doGet)-fm"}, {"value": 88, "name": "(github.com/cockroachdb/cockroach/pkg/util/cache.doOverlaps)-fm"}, {"value": 17, "name": "Add"}, {"value": 17, "name": "AddEntry"}, {"value": 17, "name": "AddEntryAfter"}, {"value": 17, "name": "Clear"}, {"value": 17, "name": "Del"}, {"value": 17, "name": "DelEntry"}, {"value": 40, "name": "Get"}, {"value": 434, "name": "GetOverlaps"}, {"value": 26, "name": "Len"}, {"value": 787, "name": "MakeKey"}, {"value": 17, "name": "MoveToEnd"}, {"value": 341, "name": "NewKey"}, {"value": 269, "name": "add"}, {"value": 343, "name": "del"}, {"value": 378, "name": "doOverlaps"}, {"value": 269, "name": "get"}, {"value": 150, "name": "init"}, {"value": 21, "name": "length"}], "name": "(*IntervalCache)."}, {"children": [{"value": 149, "name": "Equal"}, {"value": 149, "name": "OverlapExclusive"}, {"value": 149, "name": "OverlapInclusive"}, {"value": 214, "name": "String"}], "name": "(*IntervalKey)."}, {"children": [{"value": 17, "name": "Add"}, {"value": 17, "name": "AddEntry"}, {"value": 17, "name": "AddEntryAfter"}, {"value": 313, "name": "Ceil"}, {"value": 17, "name": "Clear"}, {"value": 17, "name": "Del"}, {"value": 17, "name": "DelEntry"}, {"value": 107, "name": "Do"}, {"children": [{"value": 214, "name": "func1"}], "name": "Do."}, {"value": 349, "name": "DoRange"}, {"children": [{"value": 218, "name": "func1"}], "name": "DoRange."}, {"value": 313, "name": "Floor"}, {"value": 40, "name": "Get"}, {"value": 26, "name": "Len"}, {"value": 17, "name": "MoveToEnd"}, {"value": 88, "name": "add"}, {"value": 173, "name": "del"}, {"value": 242, "name": "get"}, {"value": 103, "name": "init"}, {"value": 21, "name": "length"}], "name": "(*OrderedCache)."}, {"children": [{"value": 17, "name": "Add"}, {"value": 17, "name": "AddEntry"}, {"value": 17, "name": "AddEntryAfter"}, {"value": 17, "name": "Clear"}, {"value": 17, "name": "Del"}, {"value": 17, "name": "DelEntry"}, {"value": 40, "name": "Get"}, {"value": 26, "name": "Len"}, {"value": 17, "name": "MoveToEnd"}, {"value": 150, "name": "add"}, {"value": 106, "name": "del"}, {"value": 172, "name": "get"}, {"value": 138, "name": "init"}, {"value": 27, "name": "length"}], "name": "(*UnorderedCache)."}, {"children": [{"value": 118, "name": "Add"}, {"value": 114, "name": "AddEntry"}, {"value": 115, "name": "AddEntryAfter"}, {"value": 278, "name": "Clear"}, {"value": 113, "name": "Del"}, {"value": 77, "name": "DelEntry"}, {"value": 191, "name": "Get"}, {"value": 79, "name": "Len"}, {"value": 76, "name": "MoveToEnd"}, {"value": 84, "name": "access"}, {"value": 925, "name": "add"}, {"value": 242, "name": "evict"}, {"value": 241, "name": "init"}, {"value": 188, "name": "removeElement"}], "name": "(*baseCache)."}, {"children": [{"value": 126, "name": "init"}, {"value": 316, "name": "moveToFront"}, {"value": 359, "name": "remove"}], "name": "(*entryList)."}, {"children": [{"value": 170, "name": "String"}], "name": "Entry."}, {"children": [{"value": 147, "name": "Equal"}, {"value": 147, "name": "OverlapExclusive"}, {"value": 147, "name": "OverlapInclusive"}, {"value": 307, "name": "String"}], "name": "IntervalKey."}, {"value": 448, "name": "NewIntervalCache"}, {"value": 448, "name": "NewOrderedCache"}, {"value": 448, "name": "NewUnorderedCache"}, {"value": 116, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "intervalAlloc"}, {"value": 16, "name": "statictmp_46"}, {"value": 48, "name": "go.itab.*Entry,github.com/cockroachdb/cockroach/pkg/util/interval.Interface"}, {"value": 40, "name": "go.itab.*Entry,github.com/cockroachdb/cockroach/vendor/github.com/biogo/store/llrb.Comparable"}, {"value": 72, "name": "go.itab.*IntervalCache,github.com/cockroachdb/cockroach/pkg/util/cache.cacheStore"}, {"value": 72, "name": "go.itab.*OrderedCache,github.com/cockroachdb/cockroach/pkg/util/cache.cacheStore"}, {"value": 72, "name": "go.itab.*UnorderedCache,github.com/cockroachdb/cockroach/pkg/util/cache.cacheStore"}], "name": "cache."}, {"children": [{"children": [{"value": 1327, "name": "Lookup"}], "name": "(*CallResolver)."}, {"value": 125, "name": "Lookup"}, {"value": 267, "name": "NewCallResolver"}, {"value": 8, "name": "defaultCallResolver"}, {"value": 8, "name": "defaultRE"}, {"value": 40, "name": "dummyLookup"}, {"children": [{"value": 1503, "name": "func1"}], "name": "glob."}, {"value": 309, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "reStripNothing"}, {"value": 48, "name": "statictmp_53"}], "name": "caller."}, {"children": [{"children": [{"value": 204, "name": "Add"}, {"value": 224, "name": "Compare"}, {"value": 276, "name": "Div"}, {"value": 237, "name": "DivFloat"}, {"value": 423, "name": "Encode"}, {"value": 214, "name": "EncodeBigInt"}, {"value": 194, "name": "Format"}, {"value": 197, "name": "Mul"}, {"value": 237, "name": "MulFloat"}, {"value": 204, "name": "String"}, {"value": 204, "name": "Sub"}], "name": "(*Duration)."}, {"value": 243, "name": "Add"}, {"value": 350, "name": "AddMicros"}, {"value": 491, "name": "DiffMicros"}, {"children": [{"value": 55, "name": "Add"}, {"value": 357, "name": "Compare"}, {"value": 134, "name": "Div"}, {"value": 88, "name": "DivFloat"}, {"value": 297, "name": "Encode"}, {"value": 309, "name": "EncodeBigInt"}, {"value": 2516, "name": "Format"}, {"value": 48, "name": "Mul"}, {"value": 88, "name": "MulFloat"}, {"value": 243, "name": "String"}, {"value": 55, "name": "Sub"}, {"value": 642, "name": "normalize"}], "name": "Duration."}, {"value": 16, "name": "ErrEncodeOverflow"}, {"value": 204, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "duration."}, {"children": [{"children": [{"value": 176, "name": "Reverse"}], "name": "(*Direction)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Type)."}, {"value": 814, "name": "DecodeBoolValue"}, {"value": 271, "name": "DecodeBytesAscending"}, {"value": 466, "name": "DecodeBytesDescending"}, {"value": 463, "name": "DecodeBytesValue"}, {"value": 215, "name": "DecodeDecimalAscending"}, {"value": 215, "name": "DecodeDecimalDescending"}, {"value": 513, "name": "DecodeDecimalValue"}, {"value": 1076, "name": "DecodeDurationAscending"}, {"value": 910, "name": "DecodeDurationDescending"}, {"value": 775, "name": "DecodeDurationValue"}, {"value": 1313, "name": "DecodeFloatAscending"}, {"value": 173, "name": "DecodeFloatDescending"}, {"value": 553, "name": "DecodeFloatValue"}, {"value": 217, "name": "DecodeIfNotNull"}, {"value": 217, "name": "DecodeIfNull"}, {"value": 279, "name": "DecodeIntValue"}, {"value": 1803, "name": "DecodeNonsortingDecimal"}, {"value": 305, "name": "DecodeNonsortingStdlibUvarint"}, {"value": 429, "name": "DecodeNonsortingStdlibVarint"}, {"value": 189, "name": "DecodeNonsortingUvarint"}, {"value": 402, "name": "DecodeTimeAscending"}, {"value": 408, "name": "DecodeTimeDescending"}, {"value": 732, "name": "DecodeTimeValue"}, {"value": 297, "name": "DecodeUint32Ascending"}, {"value": 355, "name": "DecodeUint64Ascending"}, {"value": 279, "name": "DecodeUnsafeStringAscending"}, {"value": 279, "name": "DecodeUnsafeStringDescending"}, {"value": 934, "name": "DecodeUvarintAscending"}, {"value": 854, "name": "DecodeUvarintDescending"}, {"value": 574, "name": "DecodeValueTag"}, {"value": 1119, "name": "DecodeVarintAscending"}, {"value": 162, "name": "DecodeVarintDescending"}, {"children": [{"value": 296, "name": "Reverse"}], "name": "Direction."}, {"value": 240, "name": "EncodeBoolValue"}, {"value": 924, "name": "EncodeBytesAscending"}, {"value": 271, "name": "EncodeBytesDescending"}, {"value": 356, "name": "EncodeBytesValue"}, {"value": 128, "name": "EncodeDecimalAscending"}, {"value": 128, "name": "EncodeDecimalDescending"}, {"value": 554, "name": "EncodeDecimalValue"}, {"value": 700, "name": "EncodeDurationAscending"}, {"value": 700, "name": "EncodeDurationDescending"}, {"value": 278, "name": "EncodeDurationValue"}, {"value": 818, "name": "EncodeFloatAscending"}, {"value": 277, "name": "EncodeFloatDescending"}, {"value": 339, "name": "EncodeFloatValue"}, {"value": 184, "name": "EncodeIntValue"}, {"value": 4223, "name": "EncodeNonsortingDecimal"}, {"value": 339, "name": "EncodeNonsortingStdlibVarint"}, {"value": 2175, "name": "EncodeNonsortingUvarint"}, {"value": 133, "name": "EncodeNullValue"}, {"value": 283, "name": "EncodeStringAscending"}, {"value": 283, "name": "EncodeStringDescending"}, {"value": 161, "name": "EncodeTimeAscending"}, {"value": 167, "name": "EncodeTimeDescending"}, {"value": 246, "name": "EncodeTimeValue"}, {"value": 1693, "name": "EncodeUvarintAscending"}, {"value": 1705, "name": "EncodeUvarintDescending"}, {"value": 1649, "name": "EncodeVarintAscending"}, {"value": 123, "name": "EncodeVarintDescending"}, {"value": 267, "name": "GetMultiVarintLen"}, {"value": 1261, "name": "PeekLength"}, {"value": 182, "name": "PeekType"}, {"value": 1256, "name": "PeekValueLength"}, {"value": 829, "name": "PrettyPrintValue"}, {"value": 3271, "name": "PrettyPrintValueEncoded"}, {"children": [{"value": 342, "name": "String"}], "name": "Type."}, {"value": 13, "name": "_Type_index_0"}, {"value": 5, "name": "ascendingEscapes"}, {"value": 386, "name": "copyWords"}, {"value": 913, "name": "decimalEandM"}, {"value": 2555, "name": "decodeBytesInternal"}, {"value": 3287, "name": "decodeDecimal"}, {"value": 1278, "name": "decodeLargeNumber"}, {"value": 980, "name": "decodeMediumNumber"}, {"value": 271, "name": "decodeNonsortingDecimalValue"}, {"value": 133, "name": "decodeNonsortingDecimalValueWithoutExp"}, {"value": 1281, "name": "decodeSmallNumber"}, {"value": 630, "name": "decodeTime"}, {"value": 639, "name": "decodeValueTypeAssert"}, {"value": 5, "name": "descendingEscapes"}, {"value": 1318, "name": "encodeDecimal"}, {"value": 1271, "name": "encodeEandM"}, {"value": 386, "name": "encodeLargeNumber"}, {"value": 506, "name": "encodeMediumNumber"}, {"value": 206, "name": "encodeNonsortingDecimalValue"}, {"value": 159, "name": "encodeNonsortingDecimalValueWithoutExp"}, {"value": 392, "name": "encodeSmallNumber"}, {"value": 264, "name": "encodeTime"}, {"value": 437, "name": "encodeValueTag"}, {"value": 797, "name": "encodeVarExpNumber"}, {"value": 430, "name": "findDecimalTerminator"}, {"value": 832, "name": "getBytesLength"}, {"value": 677, "name": "getDecimalLen"}, {"value": 281, "name": "getMultiNonsortingVarintLen"}, {"value": 459, "name": "getVarintLen"}, {"value": 158, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 980, "name": "makeDecimalFromMandE"}, {"value": 140, "name": "onesComplement"}, {"value": 3053, "name": "prettyPrintFirstValue"}, {"value": 24, "name": "statictmp_1001"}, {"value": 24, "name": "statictmp_687"}, {"value": 24, "name": "statictmp_693"}, {"value": 24, "name": "statictmp_725"}, {"value": 24, "name": "statictmp_726"}, {"value": 24, "name": "statictmp_727"}, {"value": 24, "name": "statictmp_728"}, {"value": 24, "name": "statictmp_734"}, {"value": 24, "name": "statictmp_735"}, {"value": 24, "name": "statictmp_736"}, {"value": 24, "name": "statictmp_737"}, {"value": 24, "name": "statictmp_983"}, {"value": 24, "name": "statictmp_985"}, {"value": 24, "name": "statictmp_987"}, {"value": 24, "name": "statictmp_995"}, {"value": 24, "name": "statictmp_997"}, {"value": 24, "name": "statictmp_999"}], "name": "encoding."}, {"children": [{"value": 219, "name": "ClearEnvCache"}, {"value": 1569, "name": "EnvOrDefaultBool"}, {"value": 492, "name": "EnvOrDefaultBytes"}, {"value": 492, "name": "EnvOrDefaultDuration"}, {"value": 510, "name": "EnvOrDefaultInt"}, {"value": 510, "name": "EnvOrDefaultInt64"}, {"value": 141, "name": "EnvOrDefaultString"}, {"value": 112, "name": "EnvString"}, {"value": 1153, "name": "GetEnvReport"}, {"value": 1343, "name": "GetEnvVarsUsed"}, {"value": 546, "name": "GetShellCommand"}, {"value": 229, "name": "HomeDir"}, {"value": 346, "name": "checkVarName"}, {"value": 24, "name": "envVarRegistry"}, {"value": 1072, "name": "getEnv"}, {"value": 144, "name": "init"}, {"children": [{"value": 48, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 64, "name": "statictmp_44"}, {"value": 48, "name": "statictmp_66"}, {"value": 48, "name": "statictmp_69"}], "name": "envutil."}, {"children": [{"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "fileutil."}, {"children": [{"children": [{"value": 174, "name": "Fatal"}, {"value": 176, "name": "Fatalf"}, {"value": 174, "name": "Fatalln"}, {"value": 174, "name": "Print"}, {"value": 289, "name": "Printf"}, {"value": 174, "name": "Println"}], "name": "(*logger)."}, {"value": 1167, "name": "IsClosedConnection"}, {"value": 140, "name": "IsLocalRequestContext"}, {"value": 209, "name": "NewLocalRequestContext"}, {"value": 8, "name": "connectionRefusedRe"}, {"value": 781, "name": "init"}, {"children": [{"value": 121, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 655, "name": "shouldPrint"}, {"value": 24, "name": "spamMu"}, {"value": 8, "name": "transportFailedRe"}, {"value": 80, "name": "go.itab.*logger,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/grpclog.Logger"}], "name": "grpcutil."}, {"children": [{"children": [{"value": 15, "name": "MaxOffset"}, {"value": 232, "name": "Now"}, {"value": 77, "name": "Now-fm"}, {"value": 178, "name": "PhysicalNow"}, {"value": 209, "name": "PhysicalTime"}, {"value": 649, "name": "Update"}, {"value": 418, "name": "getPhysicalClockLocked"}], "name": "(*Clock)."}, {"children": [{"value": 183, "name": "Add"}, {"value": 65, "name": "Backward"}, {"value": 141, "name": "Descriptor"}, {"value": 76, "name": "Forward"}, {"value": 267, "name": "GoTime"}, {"value": 199, "name": "Less"}, {"value": 280, "name": "Marshal"}, {"value": 233, "name": "MarshalTo"}, {"value": 191, "name": "Next"}, {"value": 191, "name": "Prev"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 111, "name": "Size"}, {"value": 193, "name": "String"}, {"value": 1778, "name": "Unmarshal"}], "name": "(*Timestamp)."}, {"value": 16, "name": "ErrIntOverflowTimestamp"}, {"value": 16, "name": "ErrInvalidLengthTimestamp"}, {"value": 16, "name": "MaxTimestamp"}, {"children": [{"value": 33, "name": "Add"}, {"value": 118, "name": "GoTime"}, {"value": 49, "name": "Less"}, {"value": 200, "name": "Next"}, {"value": 186, "name": "Prev"}, {"value": 397, "name": "String"}], "name": "Timestamp."}, {"value": 91, "name": "UnixNano"}, {"value": 122, "name": "encodeVarintTimestamp"}, {"value": 24, "name": "fileDescriptorTimestamp"}, {"value": 377, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipTimestamp"}, {"value": 34, "name": "sovTimestamp"}, {"value": 188, "name": "statictmp_214"}, {"value": 8, "name": "statictmp_62"}, {"value": 56, "name": "go.itab.*Timestamp,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "hlc."}, {"children": [{"value": 121, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "httputil."}, {"children": [{"children": [{"value": 146, "name": "Set"}, {"value": 137, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*BytesValue)."}, {"value": 275, "name": "IBytes"}, {"value": 587, "name": "ParseBytes"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "go.itab.*BytesValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}], "name": "humanizeutil."}, {"children": [{"children": [{"value": 224, "name": "Compare"}, {"value": 223, "name": "Equal"}], "name": "(*Comparable)."}, {"children": [{"value": 340, "name": "adjustRange"}, {"value": 110, "name": "adjustRanges"}, {"value": 677, "name": "ceil"}, {"value": 1556, "name": "delete"}, {"value": 512, "name": "deleteMax"}, {"value": 472, "name": "deleteMin"}, {"value": 212, "name": "do"}, {"value": 774, "name": "doMatch"}, {"value": 774, "name": "doMatchReverse"}, {"value": 212, "name": "doReverse"}, {"value": 306, "name": "fixUp"}, {"value": 677, "name": "floor"}, {"value": 2081, "name": "insert"}, {"value": 32, "name": "max"}, {"value": 32, "name": "min"}, {"value": 256, "name": "moveRedLeft"}, {"value": 191, "name": "moveRedRight"}, {"value": 602, "name": "rotateLeft"}, {"value": 610, "name": "rotateRight"}], "name": "(*Node)."}, {"children": [{"value": 225, "name": "Equal"}, {"value": 225, "name": "OverlapExclusive"}, {"value": 225, "name": "OverlapInclusive"}, {"value": 201, "name": "String"}], "name": "(*Range)."}, {"children": [{"value": 78, "name": "AdjustRanges"}, {"value": 381, "name": "Ceil"}, {"value": 119, "name": "Ceil-fm"}, {"value": 606, "name": "Delete"}, {"value": 191, "name": "DeleteMax"}, {"value": 68, "name": "DeleteMax-fm"}, {"value": 191, "name": "DeleteMin"}, {"value": 68, "name": "DeleteMin-fm"}, {"value": 102, "name": "Do"}, {"value": 245, "name": "DoMatching"}, {"value": 245, "name": "DoMatchingReverse"}, {"value": 110, "name": "DoMatchingReverse-fm"}, {"value": 102, "name": "DoReverse"}, {"value": 78, "name": "DoReverse-fm"}, {"value": 381, "name": "Floor"}, {"value": 119, "name": "Floor-fm"}, {"value": 140, "name": "Get"}, {"value": 331, "name": "GetWithOverlapper"}, {"children": [{"value": 272, "name": "func1"}], "name": "GetWithOverlapper."}, {"value": 444, "name": "Insert"}, {"value": 276, "name": "Iterator"}, {"value": 15, "name": "Len"}, {"value": 118, "name": "Max"}, {"value": 79, "name": "Max-fm"}, {"value": 118, "name": "Min"}, {"value": 79, "name": "Min-fm"}], "name": "(*Tree)."}, {"children": [{"value": 424, "name": "Next"}], "name": "(*TreeIterator)."}, {"children": [{"value": 203, "name": "ID"}, {"value": 346, "name": "Range"}, {"value": 214, "name": "String"}], "name": "(*rangeKey)."}, {"children": [{"value": 2489, "name": "Add"}, {"value": 137, "name": "Clear"}, {"value": 617, "name": "Encloses"}, {"value": 904, "name": "ForEach"}, {"value": 166, "name": "Iterator"}, {"value": 15, "name": "Len"}, {"value": 617, "name": "Overlaps"}, {"value": 92, "name": "String"}, {"value": 2880, "name": "Sub"}], "name": "(*rangeList)."}, {"children": [{"value": 306, "name": "Next"}], "name": "(*rangeListIterator)."}, {"children": [{"value": 1720, "name": "Add"}, {"value": 145, "name": "Clear"}, {"value": 356, "name": "Encloses"}, {"value": 158, "name": "ForEach"}, {"children": [{"value": 256, "name": "func1"}], "name": "ForEach."}, {"value": 204, "name": "Iterator"}, {"value": 15, "name": "Len"}, {"value": 197, "name": "Overlaps"}, {"value": 92, "name": "String"}, {"value": 1606, "name": "Sub"}], "name": "(*rangeTree)."}, {"children": [{"value": 253, "name": "Next"}], "name": "(*rangeTreeIterator)."}, {"children": [{"value": 122, "name": "Equal-fm"}], "name": "(Comparable)."}, {"children": [{"value": 120, "name": "Equal-fm"}], "name": "(Range)."}, {"children": [{"value": 120, "name": "Compare"}, {"value": 119, "name": "Equal"}], "name": "Comparable."}, {"value": 16, "name": "ErrEmptyRange"}, {"value": 16, "name": "ErrInvertedRange"}, {"children": [{"value": 221, "name": "Equal"}, {"value": 228, "name": "OverlapExclusive"}, {"value": 228, "name": "OverlapInclusive"}, {"value": 263, "name": "String"}], "name": "Range."}, {"value": 714, "name": "RangeGroupsOverlap"}, {"value": 228, "name": "contains"}, {"value": 1064, "name": "init"}, {"children": [{"value": 1, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 425, "name": "maxRange"}, {"value": 549, "name": "merge"}, {"value": 228, "name": "rangeError"}, {"children": [{"value": 11, "name": "ID"}, {"value": 81, "name": "Range"}, {"value": 307, "name": "String"}], "name": "rangeKey."}, {"value": 493, "name": "rgString"}, {"children": [{"value": 208, "name": "func1"}], "name": "rgString."}, {"value": 48, "name": "statictmp_259"}, {"value": 48, "name": "go.itab.*rangeKey,github.com/cockroachdb/cockroach/pkg/util/interval.Interface"}, {"value": 104, "name": "go.itab.*rangeList,github.com/cockroachdb/cockroach/pkg/util/interval.RangeGroup"}, {"value": 40, "name": "go.itab.*rangeListIterator,github.com/cockroachdb/cockroach/pkg/util/interval.RangeGroupIterator"}, {"value": 104, "name": "go.itab.*rangeTree,github.com/cockroachdb/cockroach/pkg/util/interval.RangeGroup"}, {"value": 40, "name": "go.itab.*rangeTreeIterator,github.com/cockroachdb/cockroach/pkg/util/interval.RangeGroupIterator"}], "name": "interval."}, {"children": [{"children": [{"value": 298, "name": "AddLogTag"}, {"value": 282, "name": "AddLogTagInt"}, {"value": 282, "name": "AddLogTagInt64"}, {"value": 298, "name": "AddLogTagStr"}, {"value": 390, "name": "AnnotateCtx"}, {"value": 1068, "name": "AnnotateCtxWithSpan"}, {"value": 64, "name": "FinishEventLog"}, {"value": 59, "name": "FinishEventLog-fm"}, {"value": 656, "name": "ResetAndAnnotateCtx"}, {"value": 286, "name": "SetEventLog"}, {"value": 293, "name": "addTag"}, {"value": 270, "name": "annotateCtxInternal"}, {"value": 180, "name": "refreshCache"}], "name": "(*AmbientContext)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 230, "name": "Format"}, {"value": 280, "name": "Marshal"}, {"value": 894, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 369, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3960, "name": "Unmarshal"}], "name": "(*Entry)."}, {"children": [{"value": 186, "name": "(github.com/cockroachdb/cockroach/pkg/util/log.split)-fm"}, {"value": 1250, "name": "Decode"}, {"value": 519, "name": "split"}], "name": "(*EntryDecoder)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 1027, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 381, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4171, "name": "Unmarshal"}], "name": "(*FileDetails)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 772, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 270, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3108, "name": "Unmarshal"}], "name": "(*FileInfo)."}, {"children": [{"value": 195, "name": "String"}], "name": "(*Safe)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 81, "name": "Name"}, {"value": 192, "name": "Set"}, {"value": 184, "name": "String"}, {"value": 12, "name": "get"}, {"value": 12, "name": "set"}], "name": "(*Severity)."}, {"children": [{"value": 44, "name": "Bytes"}, {"value": 26, "name": "Cap"}, {"value": 17, "name": "Grow"}, {"value": 26, "name": "Len"}, {"value": 44, "name": "Next"}, {"value": 44, "name": "Read"}, {"value": 40, "name": "ReadByte"}, {"value": 62, "name": "ReadBytes"}, {"value": 44, "name": "ReadFrom"}, {"value": 52, "name": "ReadRune"}, {"value": 53, "name": "ReadString"}, {"value": 17, "name": "Reset"}, {"value": 35, "name": "String"}, {"value": 17, "name": "Truncate"}, {"value": 35, "name": "UnreadByte"}, {"value": 35, "name": "UnreadRune"}, {"value": 44, "name": "Write"}, {"value": 35, "name": "WriteByte"}, {"value": 44, "name": "WriteRune"}, {"value": 44, "name": "WriteString"}, {"value": 44, "name": "WriteTo"}, {"value": 197, "name": "nDigits"}, {"value": 295, "name": "someDigits"}], "name": "(*buffer)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 168, "name": "finish"}], "name": "(*ctxEventLog)."}, {"children": [{"value": 312, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 12, "name": "get"}, {"value": 12, "name": "set"}], "name": "(*level)."}, {"children": [{"value": 224, "name": "Write"}], "name": "(*logBridge)."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 551, "name": "Set"}, {"value": 172, "name": "String"}, {"value": 22, "name": "Type"}, {"value": 17, "name": "Unlock"}, {"value": 271, "name": "get"}, {"value": 100, "name": "isSet"}], "name": "(*logDirName)."}, {"children": [{"value": 104, "name": "Key"}, {"value": 122, "name": "Marshal"}, {"value": 122, "name": "String"}, {"value": 732, "name": "Value"}], "name": "(*logTag)."}, {"children": [{"value": 339, "name": "createFile"}, {"value": 531, "name": "exitLocked"}, {"value": 99, "name": "flushAll"}, {"value": 252, "name": "flushDaemon"}, {"value": 205, "name": "gcDaemon"}, {"value": 946, "name": "gcOldFiles"}, {"value": 269, "name": "getBuffer"}, {"value": 771, "name": "getTermColorProfile"}, {"value": 106, "name": "lockAndFlushAll"}, {"value": 100, "name": "lockAndSetSync"}, {"value": 1636, "name": "outputLogEntry"}, {"children": [{"value": 1, "name": "func1"}], "name": "outputLogEntry."}, {"value": 308, "name": "outputToStderr"}, {"value": 145, "name": "processForFile"}, {"value": 164, "name": "processForStderr"}, {"value": 229, "name": "putBuffer"}, {"value": 803, "name": "setV"}, {"value": 316, "name": "setVState"}], "name": "(*loggingT)."}, {"children": [{"value": 185, "name": "match"}], "name": "(*modulePat)."}, {"children": [{"value": 1202, "name": "Set"}, {"value": 761, "name": "String"}], "name": "(*moduleSpec)."}, {"children": [{"value": 44, "name": "Bytes"}, {"value": 26, "name": "Cap"}, {"value": 157, "name": "EmitBool"}, {"value": 171, "name": "EmitFloat32"}, {"value": 167, "name": "EmitFloat64"}, {"value": 138, "name": "EmitInt"}, {"value": 140, "name": "EmitInt32"}, {"value": 147, "name": "EmitInt64"}, {"value": 109, "name": "EmitLazyLogger"}, {"value": 313, "name": "EmitObject"}, {"value": 134, "name": "EmitString"}, {"value": 148, "name": "EmitUint32"}, {"value": 147, "name": "EmitUint64"}, {"value": 17, "name": "Grow"}, {"value": 26, "name": "Len"}, {"value": 44, "name": "Next"}, {"value": 44, "name": "Read"}, {"value": 40, "name": "ReadByte"}, {"value": 62, "name": "ReadBytes"}, {"value": 44, "name": "ReadFrom"}, {"value": 52, "name": "ReadRune"}, {"value": 53, "name": "ReadString"}, {"value": 17, "name": "Reset"}, {"value": 35, "name": "String"}, {"value": 17, "name": "Truncate"}, {"value": 35, "name": "UnreadByte"}, {"value": 35, "name": "UnreadRune"}, {"value": 44, "name": "Write"}, {"value": 35, "name": "WriteByte"}, {"value": 44, "name": "WriteRune"}, {"value": 44, "name": "WriteString"}, {"value": 44, "name": "WriteTo"}, {"value": 123, "name": "writeKey"}], "name": "(*msgBuf)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 216, "name": "Less"}, {"value": 486, "name": "Swap"}], "name": "(*sortableFileInfoSlice)."}, {"children": [{"value": 28, "name": "Available"}, {"value": 28, "name": "Buffered"}, {"value": 37, "name": "Flush"}, {"value": 46, "name": "ReadFrom"}, {"value": 19, "name": "Reset"}, {"value": 84, "name": "Sync"}, {"value": 343, "name": "Write"}, {"value": 37, "name": "WriteByte"}, {"value": 46, "name": "WriteRune"}, {"value": 46, "name": "WriteString"}, {"value": 3103, "name": "rotateFile"}], "name": "(*syncBuffer)."}, {"children": [{"value": 886, "name": "Set"}, {"value": 362, "name": "String"}, {"value": 258, "name": "match"}], "name": "(*traceLocation)."}, {"children": [{"value": 4, "name": "1"}, {"value": 10, "name": "2"}, {"value": 10, "name": "3"}, {"value": 10, "name": "4"}, {"value": 10, "name": "5"}, {"value": 10, "name": "6"}, {"value": 11, "name": "7"}, {"value": 11, "name": "8"}, {"value": 11, "name": "9"}], "name": ".gobytes."}, {"value": 8, "name": "DiagnosticsReportingEnabled"}, {"value": 71, "name": "DirSet"}, {"children": [{"value": 352, "name": "Format"}], "name": "Entry."}, {"value": 124, "name": "ErrEvent"}, {"value": 133, "name": "ErrEventf"}, {"value": 16, "name": "ErrIntOverflowLog"}, {"value": 16, "name": "ErrInvalidLengthLog"}, {"value": 138, "name": "Error"}, {"value": 146, "name": "Errorf"}, {"value": 157, "name": "ErrorfDepth"}, {"value": 124, "name": "Event"}, {"value": 133, "name": "Eventf"}, {"value": 138, "name": "Fatal"}, {"value": 248, "name": "FatalOnPanic"}, {"value": 146, "name": "Fatalf"}, {"value": 157, "name": "FatalfDepth"}, {"value": 1148, "name": "FetchEntriesFromFiles"}, {"value": 62, "name": "Flush"}, {"value": 3674, "name": "GetLogReader"}, {"value": 79, "name": "HasSpanOrEvent"}, {"value": 138, "name": "Info"}, {"value": 146, "name": "Infof"}, {"value": 157, "name": "InfofDepth"}, {"value": 1220, "name": "ListLogFiles"}, {"value": 8, "name": "LogFileMaxSize"}, {"value": 8, "name": "LogFilesCombinedMaxSize"}, {"value": 79, "name": "LoggingToStderr"}, {"value": 406, "name": "MakeMessage"}, {"value": 409, "name": "NewEntryDecoder"}, {"value": 259, "name": "NewStdLogger"}, {"value": 8, "name": "OrigStderr"}, {"value": 161, "name": "RecoverAndReportPanic"}, {"value": 1156, "name": "ReportPanic"}, {"children": [{"value": 164, "name": "String"}], "name": "Safe."}, {"value": 87, "name": "SetSync"}, {"value": 1678, "name": "SetupCrashReporter"}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "Severity."}, {"value": 340, "name": "SeverityByName"}, {"value": 8, "name": "Severity_name"}, {"value": 8, "name": "Severity_value"}, {"value": 630, "name": "Shout"}, {"value": 82, "name": "StartGCDaemon"}, {"value": 76, "name": "V"}, {"value": 412, "name": "VDepth"}, {"value": 359, "name": "VEvent"}, {"value": 275, "name": "VEventf"}, {"value": 138, "name": "Warning"}, {"value": 146, "name": "Warningf"}, {"value": 157, "name": "WarningfDepth"}, {"value": 428, "name": "WithLogTag"}, {"value": 412, "name": "WithLogTagInt"}, {"value": 428, "name": "WithLogTagStr"}, {"value": 270, "name": "addLogTagChain"}, {"value": 1375, "name": "addStructured"}, {"value": 433, "name": "augmentTagChain"}, {"value": 217, "name": "chainContains"}, {"value": 8, "name": "colorProfile256"}, {"value": 8, "name": "colorProfile8"}, {"value": 24, "name": "colorReset"}, {"value": 208, "name": "contextBottomTag"}, {"value": 436, "name": "contextLogTags"}, {"value": 399, "name": "copyChain"}, {"value": 386, "name": "copyStandardLogTo"}, {"value": 8, "name": "crashReports"}, {"value": 24, "name": "crdbPaths"}, {"value": 1602, "name": "create"}, {"value": 90, "name": "dupFD"}, {"value": 165, "name": "embedCtxEventLog"}, {"value": 122, "name": "encodeVarintLog"}, {"value": 8, "name": "entryRE"}, {"value": 16, "name": "errDirectoryNotSet"}, {"value": 16, "name": "errMalformedName"}, {"value": 16, "name": "errTraceSyntax"}, {"value": 16, "name": "errVmoduleSyntax"}, {"value": 1417, "name": "eventInternal"}, {"value": 208, "name": "eventLogFromCtx"}, {"value": 4, "name": "fatalNoStacks"}, {"value": 24, "name": "fileDescriptorLog"}, {"value": 576, "name": "format"}, {"value": 2426, "name": "formatHeader"}, {"value": 477, "name": "formatLogEntry"}, {"value": 407, "name": "formatTags"}, {"value": 331, "name": "getSpanOrEventLog"}, {"value": 342, "name": "getStacks"}, {"children": [{"value": 239, "name": "func1"}, {"value": 178, "name": "func2"}], "name": "glob."}, {"value": 819, "name": "handleVModule"}, {"value": 87, "name": "hijackStderr"}, {"value": 16, "name": "host"}, {"value": 1909, "name": "init"}, {"children": [{"value": 293, "name": "1"}, {"value": 382, "name": "2"}, {"value": 353, "name": "3"}, {"value": 120, "name": "4"}, {"value": 240, "name": "5"}, {"value": 210, "name": "6"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 103, "name": "isLiteral"}, {"children": [{"value": 1050, "name": "Write"}], "name": "logBridge."}, {"value": 160, "name": "logDepth"}, {"value": 32, "name": "logDir"}, {"value": 8, "name": "logExitFunc"}, {"value": 8, "name": "logFileRE"}, {"value": 921, "name": "logName"}, {"children": [{"value": 108, "name": "Key"}, {"value": 126, "name": "Marshal"}, {"value": 126, "name": "String"}, {"value": 730, "name": "Value"}], "name": "logTag."}, {"value": 192, "name": "logging"}, {"value": 222, "name": "mergeChains"}, {"value": 194, "name": "osStat"}, {"value": 888, "name": "parseLogFilename"}, {"value": 8, "name": "pid"}, {"value": 16, "name": "program"}, {"value": 1605, "name": "readAllEntriesFromFile"}, {"value": 112, "name": "redirectStderr"}, {"value": 141, "name": "removePeriods"}, {"value": 787, "name": "selectFiles"}, {"value": 1443, "name": "sendCrashReport"}, {"value": 170, "name": "shortHostname"}, {"value": 1, "name": "showLogs"}, {"value": 1621, "name": "skipLog"}, {"children": [{"value": 11, "name": "Len"}, {"value": 86, "name": "Less"}, {"value": 382, "name": "Swap"}], "name": "sortableFileInfoSlice."}, {"value": 34, "name": "sovLog"}, {"value": 96, "name": "statictmp_1411"}, {"value": 96, "name": "statictmp_1412"}, {"value": 16, "name": "statictmp_1413"}, {"value": 484, "name": "statictmp_1414"}, {"value": 28, "name": "statictmp_1416"}, {"value": 112, "name": "statictmp_1417"}, {"value": 112, "name": "statictmp_1421"}, {"value": 28, "name": "statictmp_1422"}, {"value": 8, "name": "statictmp_1484"}, {"value": 64, "name": "statictmp_238"}, {"value": 136, "name": "statictmp_323"}, {"value": 64, "name": "statictmp_339"}, {"value": 1, "name": "statictmp_414"}, {"value": 136, "name": "statictmp_503"}, {"value": 72, "name": "statictmp_575"}, {"value": 72, "name": "statictmp_576"}, {"value": 72, "name": "statictmp_577"}, {"value": 72, "name": "statictmp_580"}, {"value": 8, "name": "statictmp_790"}, {"value": 8, "name": "statictmp_796"}, {"value": 8, "name": "statictmp_802"}, {"value": 8, "name": "statictmp_808"}, {"value": 1, "name": "stderrRedirected"}, {"value": 554, "name": "subtractChain"}, {"children": [{"value": 53, "name": "Available"}, {"value": 46, "name": "Buffered"}, {"value": 102, "name": "Flush"}, {"value": 141, "name": "ReadFrom"}, {"value": 200, "name": "Reset"}, {"value": 111, "name": "WriteByte"}, {"value": 120, "name": "WriteRune"}, {"value": 141, "name": "WriteString"}], "name": "syncBuffer."}, {"value": 573, "name": "timeoutFlush"}, {"children": [{"value": 92, "name": "func1"}], "name": "timeoutFlush."}, {"value": 8, "name": "traceback"}, {"value": 16, "name": "userName"}, {"value": 56, "name": "go.itab.*Entry,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FileDetails,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FileInfo,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 48, "name": "go.itab.*Severity,flag.Value"}, {"value": 48, "name": "go.itab.*level,flag.Value"}, {"value": 48, "name": "go.itab.*logDirName,flag.Value"}, {"value": 48, "name": "go.itab.*moduleSpec,flag.Value"}, {"value": 120, "name": "go.itab.*msgBuf,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go/log.Encoder"}, {"value": 40, "name": "go.itab.*msgBuf,io.Writer"}, {"value": 56, "name": "go.itab.*syncBuffer,github.com/cockroachdb/cockroach/pkg/util/log.flushSyncWriter"}, {"value": 48, "name": "go.itab.*traceLocation,flag.Value"}, {"value": 40, "name": "go.itab.logBridge,io.Writer"}, {"value": 56, "name": "go.itab.sortableFileInfoSlice,sort.Interface"}], "name": "log."}, {"children": [{"value": 904, "name": "InitFlags"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "log/logflags."}, {"children": [{"children": [{"value": 17, "name": "AddLabel"}, {"value": 91, "name": "Clear"}, {"value": 101, "name": "Count"}, {"value": 101, "name": "Dec"}, {"value": 35, "name": "GetHelp"}, {"value": 44, "name": "GetLabels"}, {"value": 35, "name": "GetName"}, {"value": 78, "name": "GetType"}, {"value": 101, "name": "Inc"}, {"value": 77, "name": "Inspect"}, {"value": 186, "name": "MarshalJSON"}, {"value": 111, "name": "Snapshot"}, {"value": 304, "name": "ToPrometheusMetric"}], "name": "(*Counter)."}, {"children": [{"value": 20, "name": "AddLabel"}, {"value": 94, "name": "Clear"}, {"value": 104, "name": "Count"}, {"value": 104, "name": "Dec"}, {"value": 38, "name": "GetHelp"}, {"value": 47, "name": "GetLabels"}, {"value": 38, "name": "GetName"}, {"value": 27, "name": "GetType"}, {"value": 248, "name": "Inc"}, {"value": 18, "name": "Inspect"}, {"value": 63, "name": "MarshalJSON"}, {"value": 114, "name": "Snapshot"}, {"value": 27, "name": "ToPrometheusMetric"}], "name": "(*CounterWithRates)."}, {"children": [{"value": 17, "name": "AddLabel"}, {"value": 23, "name": "Dec"}, {"value": 35, "name": "GetHelp"}, {"value": 44, "name": "GetLabels"}, {"value": 35, "name": "GetName"}, {"value": 78, "name": "GetType"}, {"value": 20, "name": "Inc"}, {"value": 77, "name": "Inspect"}, {"value": 177, "name": "MarshalJSON"}, {"value": 116, "name": "Snapshot"}, {"value": 295, "name": "ToPrometheusMetric"}, {"value": 18, "name": "Update"}, {"value": 96, "name": "Value"}], "name": "(*Gauge)."}, {"children": [{"value": 17, "name": "AddLabel"}, {"value": 35, "name": "GetHelp"}, {"value": 44, "name": "GetLabels"}, {"value": 35, "name": "GetName"}, {"value": 78, "name": "GetType"}, {"value": 77, "name": "Inspect"}, {"value": 188, "name": "MarshalJSON"}, {"value": 111, "name": "Snapshot"}, {"value": 297, "name": "ToPrometheusMetric"}, {"value": 103, "name": "Update"}, {"value": 103, "name": "Value"}], "name": "(*GaugeFloat64)."}, {"children": [{"value": 17, "name": "AddLabel"}, {"value": 35, "name": "GetHelp"}, {"value": 44, "name": "GetLabels"}, {"value": 35, "name": "GetName"}, {"value": 78, "name": "GetType"}, {"value": 160, "name": "Inspect"}, {"value": 182, "name": "Min"}, {"value": 283, "name": "RecordValue"}, {"value": 182, "name": "Snapshot"}, {"value": 1220, "name": "ToPrometheusMetric"}, {"value": 172, "name": "TotalCount"}, {"value": 223, "name": "Windowed"}], "name": "(*Histogram)."}, {"children": [{"value": 611, "name": "AddLabel"}, {"value": 24, "name": "GetHelp"}, {"value": 33, "name": "GetLabels"}, {"value": 23, "name": "GetName"}], "name": "(*Metadata)."}, {"children": [{"value": 387, "name": "PrintAsText"}, {"value": 453, "name": "ScrapeRegistry"}, {"children": [{"value": 822, "name": "func1"}], "name": "ScrapeRegistry."}, {"value": 760, "name": "findOrCreateFamily"}], "name": "(*PrometheusExporter)."}, {"children": [{"value": 124, "name": "Add"}, {"value": 201, "name": "Value"}, {"value": 31, "name": "nextTick"}, {"value": 251, "name": "tick"}], "name": "(*Rate)."}, {"children": [{"value": 693, "name": "AddLabel"}, {"value": 792, "name": "AddMetric"}, {"value": 1434, "name": "AddMetricStruct"}, {"value": 17, "name": "AssertHeld"}, {"value": 512, "name": "Each"}, {"children": [{"value": 125, "name": "func1"}], "name": "Each."}, {"value": 17, "name": "Lock"}, {"value": 581, "name": "MarshalJSON"}, {"children": [{"value": 196, "name": "func1"}], "name": "MarshalJSON."}, {"value": 17, "name": "Unlock"}, {"value": 190, "name": "getLabels"}], "name": "(*Registry)."}, {"children": [{"value": 99, "name": "Current"}, {"value": 97, "name": "RecordValue"}, {"value": 31, "name": "nextTick"}, {"value": 234, "name": "tick"}], "name": "(*slidingHistogram)."}, {"children": [{"value": 88, "name": "Clear"}, {"value": 98, "name": "Count"}, {"value": 98, "name": "Dec"}, {"value": 98, "name": "Inc"}, {"value": 108, "name": "Snapshot"}], "name": "Counter."}, {"children": [{"value": 124, "name": "AddLabel"}, {"value": 91, "name": "Clear"}, {"value": 101, "name": "Count"}, {"value": 101, "name": "Dec"}, {"value": 55, "name": "GetHelp"}, {"value": 64, "name": "GetLabels"}, {"value": 54, "name": "GetName"}, {"value": 100, "name": "GetType"}, {"value": 92, "name": "Inspect"}, {"value": 135, "name": "MarshalJSON"}, {"value": 111, "name": "Snapshot"}, {"value": 92, "name": "ToPrometheusMetric"}], "name": "CounterWithRates."}, {"value": 24, "name": "DefaultTimeScales"}, {"children": [{"value": 108, "name": "Snapshot"}, {"value": 100, "name": "Update"}, {"value": 100, "name": "Value"}], "name": "GaugeFloat64."}, {"value": 1028, "name": "NewCounterWithRates"}, {"value": 416, "name": "NewHistogram"}, {"value": 142, "name": "NewLatency"}, {"value": 604, "name": "NewRate"}, {"value": 24, "name": "Scale1M"}, {"value": 370, "name": "cloneHistogram"}, {"value": 123, "name": "exportedLabel"}, {"value": 123, "name": "exportedName"}, {"value": 317, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 169, "name": "maybeTick"}, {"value": 388, "name": "newSlidingHistogram"}, {"value": 8, "name": "now"}, {"value": 8, "name": "prometheusLabelReplaceRE"}, {"value": 8, "name": "prometheusNameReplaceRE"}, {"value": 72, "name": "statictmp_330"}, {"value": 56, "name": "go.itab.*Counter,github.com/cockroachdb/cockroach/pkg/util/metric.Iterable"}, {"value": 56, "name": "go.itab.*Gauge,github.com/cockroachdb/cockroach/pkg/util/metric.Iterable"}, {"value": 56, "name": "go.itab.*Histogram,github.com/cockroachdb/cockroach/pkg/util/metric.Iterable"}, {"value": 48, "name": "go.itab.*Rate,github.com/cockroachdb/cockroach/pkg/util/metric.periodic"}, {"value": 48, "name": "go.itab.*slidingHistogram,github.com/cockroachdb/cockroach/pkg/util/metric.periodic"}], "name": "metric."}, {"children": [{"children": [{"value": 36, "name": "Close"}, {"value": 36, "name": "ListenAndServe"}, {"value": 36, "name": "ListenAndServeTLS"}, {"value": 36, "name": "Serve"}, {"value": 632, "name": "ServeWith"}, {"children": [{"value": 256, "name": "func1"}], "name": "ServeWith."}, {"value": 18, "name": "SetKeepAlivesEnabled"}, {"value": 36, "name": "Shutdown"}, {"children": [{"value": 23, "name": "doKeepAlives"}, {"value": 27, "name": "getDoneChan"}], "name": "net/http."}], "name": "(*Server)."}, {"value": 237, "name": "FatalIfUnexpected"}, {"value": 447, "name": "IsClosedConnection"}, {"value": 1055, "name": "MakeServer"}, {"children": [{"value": 236, "name": "func1"}, {"value": 291, "name": "func2"}], "name": "MakeServer."}, {"children": [{"value": 102, "name": "Close"}, {"value": 102, "name": "ListenAndServe"}, {"value": 145, "name": "ListenAndServeTLS"}, {"value": 122, "name": "Serve"}, {"value": 91, "name": "SetKeepAlivesEnabled"}, {"value": 122, "name": "Shutdown"}, {"children": [{"value": 91, "name": "doKeepAlives"}, {"value": 92, "name": "getDoneChan"}], "name": "net/http."}], "name": "Server."}, {"value": 8, "name": "httpLogger"}, {"value": 219, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "netutil."}, {"children": [{"children": [{"value": 22, "name": "ContentType"}, {"value": 139, "name": "Marshal"}, {"value": 164, "name": "NewDecoder"}, {"children": [{"value": 374, "name": "func1"}], "name": "NewDecoder."}, {"value": 215, "name": "NewEncoder"}, {"children": [{"value": 453, "name": "func1"}], "name": "NewEncoder."}, {"value": 495, "name": "Unmarshal"}, {"value": 529, "name": "marshal"}, {"value": 1872, "name": "marshalNonProtoField"}], "name": "(*JSONPb)."}, {"children": [{"value": 22, "name": "ContentType"}, {"value": 405, "name": "Marshal"}, {"value": 149, "name": "NewDecoder"}, {"value": 149, "name": "NewEncoder"}, {"value": 375, "name": "Unmarshal"}], "name": "(*ProtoPb)."}, {"children": [{"value": 435, "name": "Decode"}], "name": "(*protoDecoder)."}, {"children": [{"value": 399, "name": "Encode"}], "name": "(*protoEncoder)."}, {"value": 568, "name": "Clone"}, {"value": 8, "name": "Interceptor"}, {"value": 158, "name": "Marshal"}, {"children": [{"value": 1, "name": "func1"}], "name": "glob."}, {"value": 264, "name": "init"}, {"children": [{"value": 137, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 203, "name": "typeIsOrContainsVerboten"}, {"value": 891, "name": "typeIsOrContainsVerbotenImpl"}, {"value": 378, "name": "typeIsOrContainsVerbotenLocked"}, {"value": 16, "name": "typeProtoMessage"}, {"value": 24, "name": "types"}, {"value": 8, "name": "verbotenKinds"}, {"value": 72, "name": "go.itab.*JSONPb,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Marshaler"}, {"value": 72, "name": "go.itab.*ProtoPb,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Marshaler"}, {"value": 40, "name": "go.itab.*protoDecoder,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Decoder"}, {"value": 40, "name": "go.itab.*protoEncoder,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Encoder"}], "name": "protoutil."}, {"children": [{"value": 298, "name": "NewPseudoRand"}, {"value": 371, "name": "NewPseudoSeed"}, {"value": 116, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "randutil."}, {"children": [{"children": [{"value": 552, "name": "Next"}, {"value": 178, "name": "NextCh"}, {"value": 349, "name": "Reset"}], "name": "(*Retry)."}, {"children": [{"value": 228, "name": "retryIn"}], "name": "Retry."}, {"value": 265, "name": "Start"}, {"value": 368, "name": "StartWithCtx"}, {"value": 356, "name": "WithMaxAttempts"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "retry."}, {"children": [{"value": 80, "name": "Exec"}, {"value": 70, "name": "Ready"}, {"value": 1833, "name": "bgExec"}, {"children": [{"value": 89, "name": "func1"}, {"value": 148, "name": "func2"}, {"value": 116, "name": "func3"}], "name": "bgExec."}, {"value": 121, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 879, "name": "listen"}, {"children": [{"value": 108, "name": "close"}, {"value": 245, "name": "wait"}], "name": "listener."}, {"value": 506, "name": "notify"}, {"value": 179, "name": "notifyEnv"}, {"value": 91, "name": "ready"}, {"value": 40, "name": "statictmp_41"}, {"value": 32, "name": "statictmp_43"}, {"value": 40, "name": "statictmp_46"}], "name": "sdnotify."}, {"children": [{"value": 178, "name": "Shuffle"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "shuffle."}, {"children": [{"children": [{"value": 166, "name": "Close"}], "name": "(*CloserFn)."}, {"children": [{"value": 376, "name": "AddCloser"}, {"value": 30, "name": "IsStopped"}, {"value": 168, "name": "NumTasks"}, {"value": 543, "name": "Quiesce"}, {"value": 199, "name": "Recover"}, {"value": 455, "name": "RunAsyncTask"}, {"children": [{"value": 317, "name": "func1"}], "name": "RunAsyncTask."}, {"value": 1867, "name": "RunLimitedAsyncTask"}, {"children": [{"value": 378, "name": "func1"}, {"children": [{"value": 81, "name": "1"}], "name": "func1."}], "name": "RunLimitedAsyncTask."}, {"value": 463, "name": "RunTask"}, {"value": 465, "name": "RunTaskWithErr"}, {"value": 219, "name": "RunWorker"}, {"children": [{"value": 329, "name": "func1"}], "name": "RunWorker."}, {"value": 178, "name": "RunningTasks"}, {"value": 29, "name": "ShouldQuiesce"}, {"value": 30, "name": "ShouldStop"}, {"value": 1179, "name": "Stop"}, {"value": 495, "name": "WithCancel"}, {"value": 318, "name": "runPostlude"}, {"value": 348, "name": "runPrelude"}, {"value": 567, "name": "runningTasksLocked"}], "name": "(*Stopper)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*TaskMap)."}, {"children": [{"value": 165, "name": "apply"}], "name": "(*optionTrackTasks)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*taskKey)."}, {"children": [{"value": 53, "name": "Close"}], "name": "CloserFn."}, {"value": 16, "name": "ErrThrottled"}, {"value": 675, "name": "NewStopper"}, {"children": [{"value": 958, "name": "String"}], "name": "TaskMap."}, {"value": 8, "name": "errUnavailable"}, {"value": 652, "name": "handleDebug"}, {"value": 244, "name": "init"}, {"children": [{"value": 95, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"children": [{"value": 14, "name": "apply"}], "name": "optionTrackTasks."}, {"value": 290, "name": "register"}, {"children": [{"value": 260, "name": "String"}], "name": "taskKey."}, {"value": 40, "name": "trackedStoppers"}, {"value": 488, "name": "unregister"}, {"value": 40, "name": "go.itab.CloserFn,github.com/cockroachdb/cockroach/pkg/util/stop.Closer"}, {"value": 40, "name": "go.itab.optionTrackTasks,github.com/cockroachdb/cockroach/pkg/util/stop.Option"}], "name": "stop."}, {"children": [{"children": [{"value": 134, "name": "AssertHeld"}, {"value": 75, "name": "Lock"}, {"value": 67, "name": "Unlock"}], "name": "(*Mutex)."}, {"children": [{"value": 134, "name": "AssertHeld"}, {"value": 75, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 67, "name": "Unlock"}], "name": "(*RWMutex)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "go.itab.*Mutex,sync.Locker"}], "name": "syncutil."}, {"children": [{"children": [{"value": 438, "name": "Reset"}, {"value": 309, "name": "Stop"}], "name": "(*Timer)."}, {"value": 411, "name": "LoadLocation"}, {"value": 117, "name": "NewTimer"}, {"value": 85, "name": "Now"}, {"value": 120, "name": "Since"}, {"value": 16, "name": "errTZDataNotFound"}, {"children": [{"value": 103, "name": "func1"}], "name": "glob."}, {"value": 199, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "nowFunc"}, {"value": 24, "name": "statictmp_9"}, {"value": 24, "name": "timeTimerPool"}, {"value": 24, "name": "timerPool"}], "name": "timeutil."}, {"children": [{"children": [{"value": 237, "name": "RecordSpan"}], "name": "(*CallbackRecorder)."}, {"children": [{"value": 124, "name": "(github.com/cockroachdb/cockroach/pkg/util/tracing.addSpan)-fm"}, {"value": 128, "name": "AddDummySpan"}, {"value": 17, "name": "AssertHeld"}, {"value": 194, "name": "ClearSpans"}, {"value": 136, "name": "Done"}, {"value": 190, "name": "GetSpans"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}, {"value": 417, "name": "addSpan"}], "name": "(*RecordedTrace)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 232, "name": "GetBaggage"}, {"value": 280, "name": "Marshal"}, {"value": 1748, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 123, "name": "Reset"}, {"value": 275, "name": "SetBaggageItem"}, {"value": 31, "name": "SetState"}, {"value": 498, "name": "Size"}, {"value": 31, "name": "State"}, {"value": 92, "name": "String"}, {"value": 4280, "name": "Unmarshal"}], "name": "(*SpanContextCarrier)."}, {"children": [{"value": 128, "name": "BaggageItem"}, {"value": 413, "name": "Context"}, {"value": 149, "name": "Finish"}, {"value": 188, "name": "FinishWithOptions"}, {"value": 109, "name": "Log"}, {"value": 109, "name": "LogEvent"}, {"value": 109, "name": "LogEventWithPayload"}, {"value": 173, "name": "LogFields"}, {"value": 173, "name": "LogKV"}, {"value": 214, "name": "SetBaggageItem"}, {"value": 185, "name": "SetOperationName"}, {"value": 214, "name": "SetTag"}, {"value": 26, "name": "Tracer"}], "name": "(*TeeSpan)."}, {"children": [{"value": 194, "name": "ForeachBaggageItem"}], "name": "(*TeeSpanContext)."}, {"children": [{"value": 1015, "name": "CreateSpanFrom"}, {"value": 1286, "name": "Extract"}, {"value": 404, "name": "Inject"}, {"value": 1539, "name": "StartSpan"}], "name": "(*TeeTracer)."}, {"children": [{"value": 180, "name": "Apply"}], "name": "(*option)."}, {"children": [{"value": 133, "name": "BaggageItem"}, {"value": 110, "name": "Context"}, {"value": 90, "name": "Finish"}, {"value": 132, "name": "FinishWithOptions"}, {"value": 132, "name": "Log"}, {"value": 110, "name": "LogEvent"}, {"value": 133, "name": "LogEventWithPayload"}, {"value": 120, "name": "LogFields"}, {"value": 120, "name": "LogKV"}, {"value": 157, "name": "SetBaggageItem"}, {"value": 133, "name": "SetOperationName"}, {"value": 157, "name": "SetTag"}, {"value": 113, "name": "Tracer"}], "name": "(*spanWithOpt)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 242, "name": "Less"}, {"value": 486, "name": "Swap"}], "name": "(*traceLogs)."}, {"value": 61, "name": "AnnotateTrace"}, {"children": [{"value": 116, "name": "RecordSpan"}], "name": "CallbackRecorder."}, {"value": 589, "name": "ChildSpan"}, {"value": 2620, "name": "DecodeRawSpan"}, {"children": [{"value": 157, "name": "func1"}], "name": "DecodeRawSpan."}, {"value": 2373, "name": "EncodeRawSpan"}, {"children": [{"value": 157, "name": "func1"}], "name": "EncodeRawSpan."}, {"value": 439, "name": "EnsureContext"}, {"children": [{"value": 1, "name": "func1"}], "name": "EnsureContext."}, {"value": 16, "name": "ErrIntOverflowSpanContextCarrier"}, {"value": 16, "name": "ErrInvalidLengthSpanContextCarrier"}, {"value": 73, "name": "FinishSpan"}, {"value": 589, "name": "ForkCtxSpan"}, {"value": 4172, "name": "FormatRawSpans"}, {"children": [{"value": 163, "name": "func1"}], "name": "FormatRawSpans."}, {"value": 543, "name": "IngestRemoteSpans"}, {"value": 2282, "name": "JoinRemoteTrace"}, {"children": [{"value": 62, "name": "func1"}, {"value": 188, "name": "func2"}], "name": "JoinRemoteTrace."}, {"value": 843, "name": "NewRecordingTracer"}, {"children": [{"value": 6, "name": "func1"}], "name": "NewRecordingTracer."}, {"value": 142, "name": "NewTeeTracer"}, {"value": 2025, "name": "NewTracer"}, {"value": 766, "name": "NewTracerAndSpanFor7881"}, {"value": 973, "name": "StartSnowballTrace"}, {"children": [{"value": 95, "name": "ForeachBaggageItem"}], "name": "TeeSpanContext."}, {"value": 82, "name": "_Cfunc_annotateTrace"}, {"value": 8, "name": "_cgo_9013a5f030ac_Cfunc_annotateTrace"}, {"value": 1, "name": "annotationEnabled"}, {"value": 268, "name": "basictracerOptions"}, {"children": [{"value": 6, "name": "func1"}], "name": "basictracerOptions."}, {"value": 847, "name": "createTeeSpanWithRecorder"}, {"value": 16, "name": "dummyExtractTracer"}, {"value": 1, "name": "enableTracing"}, {"value": 122, "name": "encodeVarintSpanContextCarrier"}, {"value": 24, "name": "fileDescriptorSpanContextCarrier"}, {"value": 753, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1, "name": "lightstepOnly"}, {"value": 16, "name": "lightstepToken"}, {"value": 186, "name": "netTraceIntegrator"}, {"children": [{"value": 4507, "name": "func1"}], "name": "netTraceIntegrator."}, {"value": 208, "name": "recorderFromCtx"}, {"value": 1621, "name": "skipSpanContextCarrier"}, {"value": 34, "name": "sovSpanContextCarrier"}, {"children": [{"value": 128, "name": "BaggageItem"}, {"value": 108, "name": "Context"}, {"value": 88, "name": "Finish"}, {"value": 133, "name": "FinishWithOptions"}, {"value": 127, "name": "Log"}, {"value": 108, "name": "LogEvent"}, {"value": 128, "name": "LogEventWithPayload"}, {"value": 118, "name": "LogFields"}, {"value": 118, "name": "LogKV"}, {"value": 161, "name": "SetBaggageItem"}, {"value": 128, "name": "SetOperationName"}, {"value": 161, "name": "SetTag"}, {"value": 111, "name": "Tracer"}], "name": "spanWithOpt."}, {"value": 32, "name": "statictmp_111"}, {"value": 8, "name": "statictmp_115"}, {"value": 307, "name": "statictmp_772"}, {"children": [{"value": 11, "name": "Len"}, {"value": 112, "name": "Less"}, {"value": 356, "name": "Swap"}], "name": "traceLogs."}, {"value": 165, "name": "withRecorder"}, {"value": 56, "name": "go.itab.*SpanContextCarrier,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 136, "name": "go.itab.*TeeSpan,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Span"}, {"value": 56, "name": "go.itab.*TeeTracer,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Tracer"}, {"value": 40, "name": "go.itab.*option,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.StartSpanOption"}, {"value": 40, "name": "go.itab.CallbackRecorder,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/basictracer-go.SpanRecorder"}, {"value": 40, "name": "go.itab.TeeSpanContext,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.SpanContext"}, {"value": 56, "name": "go.itab.traceLogs,sort.Interface"}], "name": "tracing."}, {"children": [{"children": [{"value": 166, "name": "Bytes"}, {"value": 216, "name": "GetBytes"}, {"value": 160, "name": "MarshalBinary"}, {"value": 138, "name": "MarshalText"}, {"value": 261, "name": "MarshalTo"}, {"value": 35, "name": "Scan"}, {"value": 17, "name": "SetVariant"}, {"value": 17, "name": "SetVersion"}, {"value": 186, "name": "Short"}, {"value": 171, "name": "Size"}, {"value": 105, "name": "String"}, {"value": 112, "name": "Unmarshal"}, {"value": 35, "name": "UnmarshalBinary"}, {"value": 35, "name": "UnmarshalText"}, {"value": 125, "name": "Value"}, {"value": 133, "name": "Variant"}, {"value": 83, "name": "Version"}], "name": "(*UUID)."}, {"value": 188, "name": "FromBytes"}, {"value": 169, "name": "FromString"}, {"value": 116, "name": "MakeV4"}, {"children": [{"value": 109, "name": "Bytes"}, {"value": 100, "name": "GetBytes"}, {"value": 157, "name": "MarshalBinary"}, {"value": 135, "name": "MarshalText"}, {"value": 139, "name": "MarshalTo"}, {"value": 97, "name": "Short"}, {"value": 10, "name": "Size"}, {"value": 102, "name": "String"}, {"value": 122, "name": "Value"}, {"value": 130, "name": "Variant"}, {"value": 80, "name": "Version"}], "name": "UUID."}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "uuid."}], "name": "util/"}], "name": "pkg/"}, {"children": [{"children": [{"children": [{"children": [{"value": 195, "name": "Error"}], "name": "(*NotDefinedError)."}, {"children": [{"value": 466, "name": "get"}], "name": "(*cachedValue)."}, {"value": 125, "name": "Get"}, {"children": [{"value": 213, "name": "Error"}], "name": "NotDefinedError."}, {"value": 85, "name": "OnGCE"}, {"value": 102, "name": "ProjectID"}, {"value": 1677, "name": "getETag"}, {"value": 161, "name": "getTrimmed"}, {"value": 524, "name": "init"}, {"value": 61, "name": "initOnGCE"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "metaClient"}, {"value": 1, "name": "onGCE"}, {"value": 12, "name": "onGCEOnce"}, {"value": 8, "name": "projID"}, {"value": 48, "name": "statictmp_89"}, {"value": 48, "name": "statictmp_92"}, {"value": 232, "name": "statictmp_93"}, {"value": 232, "name": "statictmp_95"}, {"value": 186, "name": "strsContains"}, {"value": 276, "name": "systemInfoSuggestsGCE"}, {"value": 888, "name": "testOnGCE"}, {"children": [{"value": 552, "name": "func1"}, {"value": 246, "name": "func2"}], "name": "testOnGCE."}, {"value": 40, "name": "go.itab.NotDefinedError,error"}], "name": "compute/metadata."}, {"children": [{"children": [{"value": 272, "name": "Policy"}, {"value": 142, "name": "SetPolicy"}, {"value": 223, "name": "TestPermissions"}], "name": "(*Handle)."}, {"children": [{"value": 1009, "name": "Add"}, {"value": 132, "name": "HasRole"}, {"value": 161, "name": "Members"}, {"value": 728, "name": "Remove"}, {"value": 435, "name": "Roles"}, {"value": 149, "name": "binding"}, {"value": 250, "name": "bindingIndex"}], "name": "(*Policy)."}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 244, "name": "memberIndex"}], "name": "iam."}, {"children": [{"value": 176, "name": "Retry"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 679, "name": "retry"}], "name": "internal."}, {"children": [{"children": [{"value": 172, "name": "ToString"}, {"value": 400, "name": "doPanic"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "optional."}, {"children": [{"value": 25, "name": "Go"}, {"value": 1035, "name": "goVer"}, {"value": 16, "name": "goVersion"}, {"value": 197, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 94, "name": "notSemverRune"}], "name": "version."}], "name": "internal/"}, {"children": [{"children": [{"value": 306, "name": "Delete"}, {"value": 354, "name": "List"}, {"value": 402, "name": "Set"}, {"value": 564, "name": "bucketDefaultDelete"}, {"children": [{"value": 482, "name": "func1"}], "name": "bucketDefaultDelete."}, {"value": 635, "name": "bucketDefaultList"}, {"children": [{"value": 596, "name": "func1"}], "name": "bucketDefaultList."}, {"value": 861, "name": "bucketDefaultSet"}, {"children": [{"value": 505, "name": "func1"}], "name": "bucketDefaultSet."}, {"value": 564, "name": "bucketDelete"}, {"children": [{"value": 482, "name": "func1"}], "name": "bucketDelete."}, {"value": 997, "name": "bucketList"}, {"children": [{"value": 596, "name": "func1"}], "name": "bucketList."}, {"value": 861, "name": "bucketSet"}, {"children": [{"value": 505, "name": "func1"}], "name": "bucketSet."}, {"value": 621, "name": "objectDelete"}, {"children": [{"value": 539, "name": "func1"}], "name": "objectDelete."}, {"value": 691, "name": "objectList"}, {"children": [{"value": 662, "name": "func1"}], "name": "objectList."}, {"value": 913, "name": "objectSet"}, {"children": [{"value": 564, "name": "func1"}], "name": "objectSet."}], "name": "(*ACLHandle)."}, {"children": [{"value": 1084, "name": "toRawBucket"}], "name": "(*BucketAttrs)."}, {"children": [{"value": 13, "name": "ACL"}, {"value": 995, "name": "Attrs"}, {"children": [{"value": 322, "name": "func1"}], "name": "Attrs."}, {"value": 775, "name": "Create"}, {"children": [{"value": 169, "name": "func1"}], "name": "Create."}, {"value": 17, "name": "DefaultObjectACL"}, {"value": 453, "name": "Delete"}, {"children": [{"value": 169, "name": "func1"}], "name": "Delete."}, {"value": 304, "name": "IAM"}, {"value": 459, "name": "Object"}, {"value": 757, "name": "Objects"}, {"children": [{"value": 14, "name": "func1"}, {"value": 218, "name": "func2"}], "name": "Objects."}], "name": "(*BucketHandle)."}, {"children": [{"value": 135, "name": "(github.com/cockroachdb/cockroach/vendor/cloud.google.com/go/storage.fetch)-fm"}, {"value": 247, "name": "Next"}, {"value": 15, "name": "PageInfo"}, {"value": 2069, "name": "fetch"}, {"children": [{"value": 326, "name": "func1"}], "name": "fetch."}], "name": "(*BucketIterator)."}, {"children": [{"value": 438, "name": "Bucket"}, {"value": 714, "name": "Buckets"}, {"children": [{"value": 14, "name": "func1"}, {"value": 218, "name": "func2"}], "name": "Buckets."}, {"value": 108, "name": "Close"}], "name": "(*Client)."}, {"children": [{"value": 3142, "name": "Run"}, {"children": [{"value": 249, "name": "func1"}], "name": "Run."}], "name": "(*Composer)."}, {"children": [{"value": 877, "name": "validate"}], "name": "(*Conditions)."}, {"children": [{"value": 468, "name": "Run"}, {"value": 2536, "name": "callRewrite"}, {"children": [{"value": 249, "name": "func1"}], "name": "callRewrite."}], "name": "(*Copier)."}, {"children": [{"value": 816, "name": "toRawObject"}], "name": "(*ObjectAttrs)."}, {"children": [{"value": 17, "name": "ACL"}, {"value": 1767, "name": "Attrs"}, {"children": [{"value": 249, "name": "func1"}], "name": "Attrs."}, {"value": 218, "name": "ComposerFrom"}, {"value": 196, "name": "CopierFrom"}, {"value": 1126, "name": "Delete"}, {"children": [{"value": 106, "name": "func1"}], "name": "Delete."}, {"value": 162, "name": "Generation"}, {"value": 264, "name": "If"}, {"value": 220, "name": "Key"}, {"value": 3511, "name": "NewRangeReader"}, {"children": [{"value": 1003, "name": "func1"}], "name": "NewRangeReader."}, {"value": 128, "name": "NewReader"}, {"value": 384, "name": "NewWriter"}, {"value": 4793, "name": "Update"}, {"children": [{"value": 249, "name": "func1"}], "name": "Update."}, {"value": 494, "name": "validate"}], "name": "(*ObjectHandle)."}, {"children": [{"value": 135, "name": "(github.com/cockroachdb/cockroach/vendor/cloud.google.com/go/storage.fetch)-fm"}, {"value": 247, "name": "Next"}, {"value": 15, "name": "PageInfo"}, {"value": 2739, "name": "fetch"}, {"children": [{"value": 325, "name": "func1"}], "name": "fetch."}], "name": "(*ObjectIterator)."}, {"children": [{"value": 88, "name": "Close"}, {"value": 24, "name": "ContentType"}, {"value": 557, "name": "Read"}, {"value": 15, "name": "Remain"}, {"value": 15, "name": "Size"}], "name": "(*Reader)."}, {"children": [{"value": 18, "name": "Attrs"}, {"value": 249, "name": "Close"}, {"value": 149, "name": "CloseWithError"}, {"value": 257, "name": "Write"}, {"value": 1834, "name": "open"}, {"children": [{"value": 2029, "name": "func1"}], "name": "open."}], "name": "(*Writer)."}, {"children": [{"value": 165, "name": "Generation"}, {"value": 232, "name": "IfGenerationMatch"}], "name": "(*composeSourceObj)."}, {"children": [{"value": 601, "name": "Get"}, {"children": [{"value": 322, "name": "func1"}], "name": "Get."}, {"value": 460, "name": "Set"}, {"children": [{"value": 169, "name": "func1"}], "name": "Set."}, {"value": 185, "name": "Test"}], "name": "(*iamClient)."}, {"value": 16, "name": "ErrBucketNotExist"}, {"value": 16, "name": "ErrObjectNotExist"}, {"value": 1324, "name": "NewClient"}, {"value": 2358, "name": "applyConds"}, {"value": 402, "name": "applySourceConds"}, {"children": [{"value": 14, "name": "Generation"}, {"value": 116, "name": "IfGenerationMatch"}], "name": "composeSourceObj."}, {"value": 604, "name": "conditionsQuery"}, {"children": [{"value": 563, "name": "func1"}], "name": "conditionsQuery."}, {"value": 135, "name": "convertTime"}, {"value": 8, "name": "crc32cTable"}, {"value": 413, "name": "decodeUint32"}, {"value": 16, "name": "emptyBody"}, {"value": 128, "name": "encodeUint32"}, {"value": 521, "name": "iamFromStorageBindings"}, {"value": 352, "name": "iamFromStoragePolicy"}, {"value": 521, "name": "iamToStorageBindings"}, {"value": 318, "name": "iamToStoragePolicy"}, {"value": 958, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1350, "name": "newBucket"}, {"value": 2273, "name": "newObject"}, {"value": 381, "name": "parseCRC32c"}, {"value": 194, "name": "runWithRetry"}, {"children": [{"value": 258, "name": "func1"}], "name": "runWithRetry."}, {"value": 105, "name": "setClientHeader"}, {"value": 327, "name": "setConditionField"}, {"value": 958, "name": "setEncryptionHeaders"}, {"value": 32, "name": "statictmp_478"}, {"value": 16, "name": "statictmp_498"}, {"value": 526, "name": "toACLRules"}, {"value": 519, "name": "toRawObjectACL"}, {"value": 16, "name": "xGoogHeader"}, {"value": 48, "name": "go.itab.*Reader,io.ReadCloser"}, {"value": 40, "name": "go.itab.*Writer,io.Writer"}, {"value": 56, "name": "go.itab.*iamClient,github.com/cockroachdb/cockroach/vendor/cloud.google.com/go/iam.client"}], "name": "storage."}], "name": "cloud.google.com/go/"}, {"children": [{"children": [{"children": [{"children": [{"value": 249, "name": "Error"}], "name": "(*AzureStorageServiceError)."}, {"children": [{"value": 244, "name": "MarshalXML"}, {"value": 677, "name": "UnmarshalXML"}], "name": "(*BlobMetadata)."}, {"children": [{"value": 397, "name": "AbortBlobCopy"}, {"value": 397, "name": "AcquireLease"}, {"value": 381, "name": "AppendBlock"}, {"value": 332, "name": "BlobExists"}, {"value": 333, "name": "BreakLease"}, {"value": 349, "name": "BreakLeaseWithBreakPeriod"}, {"value": 413, "name": "ChangeLease"}, {"value": 349, "name": "CopyBlob"}, {"value": 317, "name": "CreateBlockBlob"}, {"value": 381, "name": "CreateBlockBlobFromReader"}, {"value": 333, "name": "DeleteBlob"}, {"value": 348, "name": "DeleteBlobIfExists"}, {"value": 349, "name": "GetBlob"}, {"value": 333, "name": "GetBlobMetadata"}, {"value": 333, "name": "GetBlobProperties"}, {"value": 397, "name": "GetBlobRange"}, {"value": 427, "name": "GetBlobSASURI"}, {"value": 474, "name": "GetBlobSASURIWithSignedIPAndProtocol"}, {"value": 317, "name": "GetBlobURL"}, {"value": 456, "name": "GetBlockList"}, {"value": 565, "name": "GetContainerReference"}, {"value": 468, "name": "GetPageRanges"}, {"value": 265, "name": "GetServiceProperties"}, {"value": 304, "name": "ListContainers"}, {"value": 333, "name": "PutAppendBlob"}, {"value": 397, "name": "PutBlock"}, {"value": 365, "name": "PutBlockList"}, {"value": 413, "name": "PutBlockWithLength"}, {"value": 445, "name": "PutPage"}, {"value": 349, "name": "PutPageBlob"}, {"value": 349, "name": "ReleaseLease"}, {"value": 349, "name": "RenewLease"}, {"value": 349, "name": "SetBlobMetadata"}, {"value": 352, "name": "SetBlobProperties"}, {"value": 313, "name": "SetServiceProperties"}, {"value": 365, "name": "SnapshotBlob"}, {"value": 381, "name": "StartBlobCopy"}, {"value": 349, "name": "WaitForBlobCopy"}], "name": "(*BlobStorageClient)."}, {"children": [{"value": 552, "name": "AddToUserAgent"}, {"value": 369, "name": "GetBlobService"}, {"value": 369, "name": "GetFileService"}, {"value": 369, "name": "GetQueueService"}, {"value": 369, "name": "GetTableService"}, {"value": 417, "name": "addAuthorizationHeader"}, {"value": 2941, "name": "buildCanonicalizedResource"}, {"value": 1288, "name": "createAuthorizationHeader"}, {"value": 446, "name": "getSharedKey"}, {"value": 214, "name": "protectUserAgent"}], "name": "(*Client)."}, {"children": [{"value": 301, "name": "Create"}, {"value": 306, "name": "CreateIfNotExists"}, {"value": 301, "name": "Delete"}, {"value": 306, "name": "DeleteIfExists"}, {"value": 1127, "name": "Exists"}, {"value": 2182, "name": "GetPermissions"}, {"value": 1623, "name": "ListBlobs"}, {"value": 2512, "name": "SetPermissions"}, {"value": 196, "name": "buildPath"}, {"value": 888, "name": "create"}, {"value": 888, "name": "delete"}], "name": "(*Container)."}, {"children": [{"value": 519, "name": "Create"}, {"value": 690, "name": "CreateIfNotExists"}, {"value": 223, "name": "Delete"}, {"value": 478, "name": "DeleteIfExists"}, {"value": 327, "name": "Exists"}, {"value": 421, "name": "FetchAttributes"}, {"value": 291, "name": "GetDirectoryReference"}, {"value": 297, "name": "GetFileReference"}, {"value": 1194, "name": "ListDirsAndFiles"}, {"value": 400, "name": "SetMetadata"}, {"value": 305, "name": "URL"}, {"value": 259, "name": "buildPath"}, {"value": 234, "name": "updateEtagAndLastModified"}], "name": "(*Directory)."}, {"children": [{"value": 191, "name": "ClearRange"}, {"value": 858, "name": "CopyFile"}, {"value": 985, "name": "Create"}, {"value": 220, "name": "Delete"}, {"value": 475, "name": "DeleteIfExists"}, {"value": 1384, "name": "DownloadRangeToStream"}, {"value": 356, "name": "Exists"}, {"value": 452, "name": "FetchAttributes"}, {"value": 1737, "name": "ListRanges"}, {"value": 397, "name": "SetMetadata"}, {"value": 426, "name": "SetProperties"}, {"value": 305, "name": "URL"}, {"value": 336, "name": "WriteRange"}, {"value": 168, "name": "buildPath"}, {"value": 2501, "name": "modifyRange"}, {"value": 237, "name": "updateEtagAndLastModified"}, {"value": 455, "name": "updateEtagLastModifiedAndCopyHeaders"}, {"value": 789, "name": "updateProperties"}], "name": "(*File)."}, {"children": [{"value": 195, "name": "String"}], "name": "(*FileRange)."}, {"children": [{"value": 265, "name": "GetServiceProperties"}, {"value": 562, "name": "GetShareReference"}, {"value": 304, "name": "ListShares"}, {"value": 313, "name": "SetServiceProperties"}], "name": "(*FileServiceClient)."}, {"children": [{"value": 281, "name": "ClearMessages"}, {"value": 281, "name": "CreateQueue"}, {"value": 349, "name": "DeleteMessage"}, {"value": 281, "name": "DeleteQueue"}, {"value": 468, "name": "GetMessages"}, {"value": 317, "name": "GetMetadata"}, {"value": 265, "name": "GetServiceProperties"}, {"value": 452, "name": "PeekMessages"}, {"value": 349, "name": "PutMessage"}, {"value": 300, "name": "QueueExists"}, {"value": 301, "name": "SetMetadata"}, {"value": 313, "name": "SetServiceProperties"}, {"value": 397, "name": "UpdateMessage"}], "name": "(*QueueServiceClient)."}, {"children": [{"value": 466, "name": "Create"}, {"value": 629, "name": "CreateIfNotExists"}, {"value": 223, "name": "Delete"}, {"value": 478, "name": "DeleteIfExists"}, {"value": 359, "name": "Exists"}, {"value": 455, "name": "FetchAttributes"}, {"value": 172, "name": "GetRootDirectoryReference"}, {"value": 14, "name": "ServiceClient"}, {"value": 400, "name": "SetMetadata"}, {"value": 802, "name": "SetProperties"}, {"value": 305, "name": "URL"}, {"value": 196, "name": "buildPath"}, {"value": 234, "name": "updateEtagAndLastModified"}, {"value": 134, "name": "updateQuota"}], "name": "(*Share)."}, {"children": [{"value": 1439, "name": "CreateTable"}, {"value": 1625, "name": "DeleteEntity"}, {"value": 150, "name": "DeleteEntityWithoutCheck"}, {"value": 1233, "name": "DeleteTable"}, {"value": 265, "name": "GetServiceProperties"}, {"value": 2125, "name": "GetTablePermissions"}, {"value": 292, "name": "InsertEntity"}, {"value": 292, "name": "InsertOrMergeEntity"}, {"value": 292, "name": "InsertOrReplaceEntity"}, {"value": 292, "name": "MergeEntity"}, {"value": 2667, "name": "QueryTableEntities"}, {"value": 1954, "name": "QueryTables"}, {"value": 313, "name": "SetServiceProperties"}, {"value": 2198, "name": "SetTablePermissions"}, {"value": 292, "name": "UpdateEntity"}, {"value": 1761, "name": "execTable"}, {"value": 542, "name": "getStandardHeaders"}], "name": "(*TableServiceClient)."}, {"children": [{"value": 213, "name": "Error"}, {"value": 163, "name": "Got"}], "name": "(*UnexpectedStatusCodeError)."}, {"children": [{"value": 171, "name": "String"}], "name": "(*compType)."}, {"children": [{"value": 171, "name": "String"}], "name": "(*resourceType)."}, {"children": [{"value": 486, "name": "Error"}], "name": "AzureStorageServiceError."}, {"children": [{"value": 892, "name": "MarshalXML"}], "name": "BlobMetadata."}, {"children": [{"value": 2146, "name": "AbortBlobCopy"}, {"value": 1225, "name": "AcquireLease"}, {"value": 2246, "name": "AppendBlock"}, {"value": 863, "name": "BlobExists"}, {"value": 433, "name": "BreakLease"}, {"value": 614, "name": "BreakLeaseWithBreakPeriod"}, {"value": 1045, "name": "ChangeLease"}, {"value": 453, "name": "CopyBlob"}, {"value": 263, "name": "CreateBlockBlob"}, {"value": 1875, "name": "CreateBlockBlobFromReader"}, {"value": 478, "name": "DeleteBlob"}, {"value": 486, "name": "DeleteBlobIfExists"}, {"value": 519, "name": "GetBlob"}, {"value": 1765, "name": "GetBlobMetadata"}, {"value": 3753, "name": "GetBlobProperties"}, {"value": 531, "name": "GetBlobRange"}, {"value": 357, "name": "GetBlobSASURI"}, {"value": 3539, "name": "GetBlobSASURIWithSignedIPAndProtocol"}, {"value": 370, "name": "GetBlobURL"}, {"value": 1481, "name": "GetBlockList"}, {"value": 358, "name": "GetContainerReference"}, {"value": 1711, "name": "GetPageRanges"}, {"value": 1571, "name": "ListContainers"}, {"value": 1552, "name": "PutAppendBlob"}, {"value": 427, "name": "PutBlock"}, {"value": 1622, "name": "PutBlockList"}, {"value": 2149, "name": "PutBlockWithLength"}, {"value": 3045, "name": "PutPage"}, {"value": 1867, "name": "PutPageBlob"}, {"value": 612, "name": "ReleaseLease"}, {"value": 612, "name": "RenewLease"}, {"value": 1814, "name": "SetBlobMetadata"}, {"value": 1467, "name": "SetBlobProperties"}, {"value": 2483, "name": "SnapshotBlob"}, {"value": 1366, "name": "StartBlobCopy"}, {"value": 1391, "name": "WaitForBlobCopy"}, {"value": 487, "name": "breakLeaseCommon"}, {"value": 975, "name": "deleteBlob"}, {"value": 1370, "name": "getBlobRange"}, {"value": 1102, "name": "leaseCommonPut"}], "name": "BlobStorageClient."}, {"children": [{"value": 347, "name": "GetBlobService"}, {"value": 347, "name": "GetFileService"}, {"value": 347, "name": "GetQueueService"}, {"value": 347, "name": "GetTableService"}, {"value": 330, "name": "computeHmac256"}, {"value": 2499, "name": "exec"}, {"value": 1461, "name": "execInternalJSON"}, {"value": 919, "name": "getBaseURL"}, {"value": 502, "name": "getDefaultUserAgent"}, {"value": 1032, "name": "getEndpoint"}, {"value": 1577, "name": "getServiceProperties"}, {"value": 534, "name": "getStandardHeaders"}, {"value": 1808, "name": "setServiceProperties"}], "name": "Client."}, {"children": [{"value": 257, "name": "String"}], "name": "FileRange."}, {"children": [{"value": 495, "name": "getParameters"}], "name": "FileRequestOptions."}, {"children": [{"value": 333, "name": "GetShareReference"}, {"value": 1238, "name": "ListShares"}, {"value": 227, "name": "checkForStorageEmulator"}, {"value": 521, "name": "createResource"}, {"value": 1015, "name": "createResourceNoClose"}, {"value": 462, "name": "deleteResource"}, {"value": 918, "name": "deleteResourceNoClose"}, {"value": 649, "name": "getResourceHeaders"}, {"value": 1246, "name": "getResourceNoClose"}, {"value": 958, "name": "listContent"}, {"value": 1209, "name": "resourceExists"}, {"value": 1526, "name": "setResourceHeaders"}], "name": "FileServiceClient."}, {"children": [{"value": 641, "name": "getParameters"}], "name": "GetMessagesParameters."}, {"value": 91, "name": "IsValidStorageAccount"}, {"children": [{"value": 1989, "name": "getParameters"}], "name": "ListBlobsParameters."}, {"children": [{"value": 1721, "name": "getParameters"}], "name": "ListContainersParameters."}, {"children": [{"value": 1182, "name": "getParameters"}], "name": "ListDirsAndFilesParameters."}, {"children": [{"value": 1721, "name": "getParameters"}], "name": "ListSharesParameters."}, {"value": 570, "name": "NewBasicClient"}, {"value": 1392, "name": "NewClient"}, {"value": 343, "name": "NewEmulatorClient"}, {"children": [{"value": 584, "name": "getParameters"}], "name": "PeekMessagesParameters."}, {"children": [{"value": 641, "name": "getParameters"}], "name": "PutMessageParameters."}, {"children": [{"value": 826, "name": "ClearMessages"}, {"value": 826, "name": "CreateQueue"}, {"value": 1116, "name": "DeleteMessage"}, {"value": 826, "name": "DeleteQueue"}, {"value": 1004, "name": "GetMessages"}, {"value": 2711, "name": "GetMetadata"}, {"value": 991, "name": "PeekMessages"}, {"value": 1271, "name": "PutMessage"}, {"value": 923, "name": "QueueExists"}, {"value": 1485, "name": "SetMetadata"}, {"value": 1444, "name": "UpdateMessage"}], "name": "QueueServiceClient."}, {"children": [{"value": 796, "name": "Error"}, {"children": [{"value": 328, "name": "func1"}], "name": "Error."}, {"value": 11, "name": "Got"}], "name": "UnexpectedStatusCodeError."}, {"children": [{"value": 599, "name": "getParameters"}], "name": "UpdateMessageParameters."}, {"value": 2759, "name": "blobSASStringToSign"}, {"value": 1201, "name": "buildAccessPolicy"}, {"value": 1793, "name": "buildCanonicalizedHeader"}, {"value": 3173, "name": "buildCanonicalizedString"}, {"value": 224, "name": "checkRespCode"}, {"children": [{"value": 21, "name": "String"}], "name": "compType."}, {"value": 488, "name": "convertAccessPolicyToXMLStructs"}, {"value": 128, "name": "currentTimeRfc1123Formatted"}, {"value": 2964, "name": "deserializeEntity"}, {"value": 16, "name": "errBlobCopyAborted"}, {"value": 16, "name": "errBlobCopyIDMismatch"}, {"value": 325, "name": "extractContinuationTokenFromHeaders"}, {"value": 1337, "name": "generateContainerACLpayload"}, {"value": 1470, "name": "generateTableACLPayload"}, {"value": 641, "name": "getMetadataFromHeaders"}, {"value": 765, "name": "headersFromStruct"}, {"value": 433, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1966, "name": "injectPartitionAndRowKeys"}, {"value": 332, "name": "mergeHeaders"}, {"value": 527, "name": "mergeMDIntoExtraHeaders"}, {"value": 1206, "name": "mergeParams"}, {"value": 318, "name": "pathForBlob"}, {"value": 318, "name": "pathForMessage"}, {"value": 213, "name": "pathForQueue"}, {"value": 213, "name": "pathForQueueMessages"}, {"value": 544, "name": "pathForResource"}, {"value": 213, "name": "pathForTable"}, {"value": 574, "name": "prepareBlockListRequest"}, {"value": 441, "name": "readAndCloseBody"}, {"children": [{"value": 21, "name": "String"}], "name": "resourceType."}, {"value": 16, "name": "sdkVersion"}, {"value": 406, "name": "serviceErrFromXML"}, {"value": 104, "name": "statictmp_1060"}, {"value": 8, "name": "statictmp_1238"}, {"value": 16, "name": "statictmp_1246"}, {"value": 16, "name": "statictmp_1259"}, {"value": 16, "name": "statictmp_1280"}, {"value": 16, "name": "statictmp_1283"}, {"value": 8, "name": "statictmp_1292"}, {"value": 16, "name": "statictmp_1315"}, {"value": 16, "name": "statictmp_1318"}, {"value": 8, "name": "statictmp_1349"}, {"value": 16, "name": "statictmp_1357"}, {"value": 16, "name": "statictmp_1372"}, {"value": 16, "name": "statictmp_1375"}, {"value": 8, "name": "statictmp_1409"}, {"value": 16, "name": "statictmp_1478"}, {"value": 16, "name": "statictmp_1479"}, {"value": 8, "name": "statictmp_1486"}, {"value": 16, "name": "statictmp_1494"}, {"value": 16, "name": "statictmp_1495"}, {"value": 8, "name": "statictmp_1502"}, {"value": 16, "name": "statictmp_1520"}, {"value": 16, "name": "statictmp_1537"}, {"value": 16, "name": "statictmp_1561"}, {"value": 8, "name": "statictmp_1572"}, {"value": 16, "name": "statictmp_1699"}, {"value": 8, "name": "statictmp_1715"}, {"value": 8, "name": "statictmp_1753"}, {"value": 8, "name": "statictmp_1776"}, {"value": 8, "name": "statictmp_1821"}, {"value": 16, "name": "statictmp_1895"}, {"value": 16, "name": "statictmp_1924"}, {"value": 8, "name": "statictmp_1930"}, {"value": 16, "name": "statictmp_1965"}, {"value": 8, "name": "statictmp_1981"}, {"value": 8, "name": "statictmp_1992"}, {"value": 8, "name": "statictmp_2002"}, {"value": 16, "name": "statictmp_2012"}, {"value": 8, "name": "statictmp_2028"}, {"value": 8, "name": "statictmp_2038"}, {"value": 8, "name": "statictmp_2066"}, {"value": 8, "name": "statictmp_2086"}, {"value": 8, "name": "statictmp_2104"}, {"value": 16, "name": "statictmp_2159"}, {"value": 16, "name": "statictmp_2162"}, {"value": 8, "name": "statictmp_2166"}, {"value": 16, "name": "statictmp_2179"}, {"value": 16, "name": "statictmp_2182"}, {"value": 8, "name": "statictmp_2190"}, {"value": 64, "name": "statictmp_2205"}, {"value": 64, "name": "statictmp_2206"}, {"value": 8, "name": "statictmp_2228"}, {"value": 8, "name": "statictmp_2259"}, {"value": 8, "name": "statictmp_2277"}, {"value": 16, "name": "statictmp_2293"}, {"value": 8, "name": "statictmp_2306"}, {"value": 16, "name": "statictmp_2342"}, {"value": 8, "name": "statictmp_2348"}, {"value": 8, "name": "statictmp_2408"}, {"value": 8, "name": "statictmp_2416"}, {"value": 8, "name": "statictmp_2449"}, {"value": 8, "name": "statictmp_2453"}, {"value": 8, "name": "statictmp_2475"}, {"value": 8, "name": "statictmp_2483"}, {"value": 8, "name": "statictmp_2487"}, {"value": 8, "name": "statictmp_251"}, {"value": 8, "name": "statictmp_254"}, {"value": 16, "name": "statictmp_277"}, {"value": 16, "name": "statictmp_296"}, {"value": 8, "name": "statictmp_303"}, {"value": 8, "name": "statictmp_384"}, {"value": 16, "name": "statictmp_429"}, {"value": 8, "name": "statictmp_435"}, {"value": 16, "name": "statictmp_449"}, {"value": 8, "name": "statictmp_457"}, {"value": 16, "name": "statictmp_474"}, {"value": 8, "name": "statictmp_478"}, {"value": 8, "name": "statictmp_511"}, {"value": 16, "name": "statictmp_534"}, {"value": 8, "name": "statictmp_547"}, {"value": 16, "name": "statictmp_565"}, {"value": 8, "name": "statictmp_575"}, {"value": 16, "name": "statictmp_586"}, {"value": 8, "name": "statictmp_619"}, {"value": 16, "name": "statictmp_652"}, {"value": 8, "name": "statictmp_675"}, {"value": 16, "name": "statictmp_694"}, {"value": 8, "name": "statictmp_698"}, {"value": 8, "name": "statictmp_720"}, {"value": 16, "name": "statictmp_743"}, {"value": 8, "name": "statictmp_756"}, {"value": 16, "name": "statictmp_771"}, {"value": 16, "name": "statictmp_788"}, {"value": 8, "name": "statictmp_797"}, {"value": 8, "name": "statictmp_822"}, {"value": 16, "name": "statictmp_962"}, {"value": 119, "name": "timeRfc1123Formatted"}, {"value": 99, "name": "updatePermissions"}, {"value": 918, "name": "updateTableAccessPolicy"}, {"value": 8, "name": "validStorageAccount"}, {"value": 346, "name": "xmlMarshal"}, {"value": 186, "name": "xmlUnmarshal"}, {"value": 40, "name": "go.itab.AzureStorageServiceError,error"}, {"value": 40, "name": "go.itab.UnexpectedStatusCodeError,error"}], "name": "azure-sdk-for-go/storage."}, {"children": [{"children": [{"value": 98, "name": "Version"}, {"children": [{"value": 379, "name": "func1"}], "name": "Version."}, {"value": 16, "name": "defaultUserAgent"}, {"value": 797, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "version"}, {"value": 12, "name": "versionLock"}], "name": "autorest."}, {"children": [{"children": [{"children": [{"value": 290, "name": "OAuthConfigForTenant"}], "name": "(*Environment)."}, {"value": 272, "name": "ChinaCloud"}, {"children": [{"value": 144, "name": "OAuthConfigForTenant"}], "name": "Environment."}, {"value": 16, "name": "ErrDeviceAccessDenied"}, {"value": 16, "name": "ErrDeviceAuthorizationPending"}, {"value": 16, "name": "ErrDeviceCodeExpired"}, {"value": 16, "name": "ErrDeviceGeneric"}, {"value": 16, "name": "ErrDeviceSlowDown"}, {"value": 272, "name": "GermanCloud"}, {"value": 1800, "name": "OAuthConfigForTenant"}, {"value": 272, "name": "PublicCloud"}, {"value": 272, "name": "USGovernmentCloud"}, {"value": 8, "name": "environments"}, {"value": 24, "name": "expirationBase"}, {"value": 2313, "name": "init"}, {"children": [{"value": 166, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}], "name": "azure."}, {"children": [{"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "date."}], "name": "autorest/"}], "name": "go-autorest/"}], "name": "Azure/"}, {"children": [{"children": [{"value": 71, "name": "Add"}, {"value": 16, "name": "Set"}, {"value": 16, "name": "Value"}], "name": "(*SimpleEWMA)."}, {"children": [{"value": 156, "name": "Add"}, {"value": 30, "name": "Set"}, {"value": 36, "name": "Value"}], "name": "(*VariableEWMA)."}, {"value": 229, "name": "NewMovingAverage"}, {"value": 56, "name": "go.itab.*SimpleEWMA,github.com/cockroachdb/cockroach/vendor/github.com/VividCortex/ewma.MovingAverage"}, {"value": 56, "name": "go.itab.*VariableEWMA,github.com/cockroachdb/cockroach/vendor/github.com/VividCortex/ewma.MovingAverage"}], "name": "VividCortex/ewma."}, {"children": [{"value": 188, "name": "init"}, {"children": [{"value": 194, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "state"}, {"value": 48, "name": "statictmp_2"}, {"value": 8, "name": "traceLock"}], "name": "backtrace-labs/go-bcd."}, {"children": [{"children": [{"value": 201, "name": "String"}], "name": "(*Color)."}, {"children": [{"value": 290, "name": "ceil"}, {"value": 1020, "name": "delete"}, {"value": 434, "name": "deleteMax"}, {"value": 272, "name": "deleteMin"}, {"value": 212, "name": "do"}, {"value": 369, "name": "doMatch"}, {"value": 494, "name": "doRange"}, {"value": 495, "name": "doRangeReverse"}, {"value": 212, "name": "doReverse"}, {"value": 523, "name": "fixUp"}, {"value": 290, "name": "floor"}, {"value": 1160, "name": "insert"}, {"value": 32, "name": "max"}, {"value": 32, "name": "min"}, {"value": 494, "name": "moveRedLeft"}, {"value": 298, "name": "moveRedRight"}, {"value": 172, "name": "search"}], "name": "(*Node)."}, {"children": [{"value": 178, "name": "Ceil"}, {"value": 206, "name": "Delete"}, {"value": 182, "name": "DeleteMax"}, {"value": 182, "name": "DeleteMin"}, {"value": 102, "name": "Do"}, {"value": 122, "name": "DoMatching"}, {"value": 292, "name": "DoRange"}, {"value": 292, "name": "DoRangeReverse"}, {"value": 102, "name": "DoReverse"}, {"value": 178, "name": "Floor"}, {"value": 178, "name": "Get"}, {"value": 169, "name": "Insert"}, {"value": 15, "name": "Len"}, {"value": 118, "name": "Max"}, {"value": 118, "name": "Min"}], "name": "(*Tree)."}, {"children": [{"value": 53, "name": "String"}], "name": "Color."}, {"value": 91, "name": "init"}, {"children": [{"value": 1, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}], "name": "biogo/store/llrb."}, {"children": [{"children": [{"value": 144, "name": "GetElapsedTime"}, {"value": 277, "name": "NextBackOff"}, {"value": 139, "name": "Reset"}, {"value": 64, "name": "incrementCurrentInterval"}], "name": "(*ExponentialBackOff)."}, {"children": [{"value": 186, "name": "Now"}], "name": "(*systemClock)."}, {"value": 245, "name": "NewExponentialBackOff"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 78, "name": "Now"}], "name": "systemClock."}, {"value": 48, "name": "go.itab.*ExponentialBackOff,github.com/cockroachdb/cockroach/vendor/github.com/cenk/backoff.BackOff"}, {"value": 40, "name": "go.itab.systemClock,github.com/cockroachdb/cockroach/vendor/github.com/cenk/backoff.Clock"}], "name": "cenk/backoff."}, {"children": [{"value": 452, "name": "CACerts"}, {"value": 16, "name": "ErrParseFailed"}, {"value": 184, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "certifi/gocertifi."}, {"children": [{"children": [{"value": 103, "name": "Close"}, {"value": 957, "name": "Read"}, {"value": 595, "name": "ioloop"}], "name": "(*CancelableStdin)."}, {"children": [{"value": 371, "name": "Clone"}, {"value": 1586, "name": "Init"}, {"value": 173, "name": "SetListener"}, {"value": 97, "name": "useInteractive"}], "name": "(*Config)."}, {"children": [{"value": 184, "name": "OnChange"}], "name": "(*DumpListener)."}, {"children": [{"value": 64, "name": "Clean"}, {"value": 138, "name": "Close"}, {"value": 407, "name": "GenPasswordConfig"}, {"value": 25, "name": "IsVimMode"}, {"value": 249, "name": "Line"}, {"value": 143, "name": "ReadPassword"}, {"value": 179, "name": "ReadPasswordEx"}, {"value": 124, "name": "ReadPasswordWithConfig"}, {"value": 114, "name": "ReadSlice"}, {"value": 104, "name": "Readline"}, {"value": 145, "name": "ReadlineWithDefault"}, {"value": 64, "name": "Refresh"}, {"value": 275, "name": "ResetHistory"}, {"value": 104, "name": "SaveHistory"}, {"value": 191, "name": "SetConfig"}, {"value": 84, "name": "SetHistoryPath"}, {"value": 72, "name": "SetMaskRune"}, {"value": 84, "name": "SetPrompt"}, {"value": 65, "name": "SetVimMode"}, {"value": 267, "name": "Stderr"}, {"value": 267, "name": "Stdout"}, {"value": 340, "name": "Write"}], "name": "(*Instance)."}, {"children": [{"value": 22, "name": "Error"}], "name": "(*InterruptError)."}, {"children": [{"value": 64, "name": "Clean"}, {"value": 64, "name": "Close"}, {"value": 19, "name": "CompleteRefresh"}, {"value": 19, "name": "EnterCompleteMode"}, {"value": 19, "name": "EnterCompleteSelectMode"}, {"value": 37, "name": "EnterPasswordMode"}, {"value": 19, "name": "EnterVimInsertMode"}, {"value": 19, "name": "ExitCompleteMode"}, {"value": 19, "name": "ExitCompleteSelectMode"}, {"value": 19, "name": "ExitPasswordMode"}, {"value": 19, "name": "ExitSearchMode"}, {"value": 19, "name": "ExitVimInsertMode"}, {"value": 19, "name": "ExitVimMode"}, {"value": 403, "name": "GenPasswordConfig"}, {"value": 24, "name": "HandleCompleteSelect"}, {"value": 27, "name": "HandleVim"}, {"value": 27, "name": "HandleVimNormal"}, {"value": 24, "name": "IsEnableVimMode"}, {"value": 24, "name": "IsInCompleteMode"}, {"value": 24, "name": "IsInCompleteSelectMode"}, {"value": 36, "name": "IsNormalMode"}, {"value": 24, "name": "IsSearchMode"}, {"value": 24, "name": "OnComplete"}, {"value": 167, "name": "Password"}, {"value": 28, "name": "PasswordConfig"}, {"value": 614, "name": "PasswordEx"}, {"value": 326, "name": "PasswordWithConfig"}, {"value": 102, "name": "Refresh"}, {"value": 271, "name": "ResetHistory"}, {"value": 929, "name": "Runes"}, {"value": 150, "name": "SaveHistory"}, {"value": 19, "name": "SearchBackspace"}, {"value": 19, "name": "SearchChar"}, {"value": 24, "name": "SearchMode"}, {"value": 19, "name": "SearchRefresh"}, {"value": 127, "name": "SetBuffer"}, {"value": 1310, "name": "SetConfig"}, {"value": 449, "name": "SetHistoryPath"}, {"value": 72, "name": "SetMaskRune"}, {"value": 84, "name": "SetPrompt"}, {"value": 221, "name": "SetTitle"}, {"value": 19, "name": "SetVimMode"}, {"value": 266, "name": "Slice"}, {"value": 253, "name": "Stderr"}, {"value": 253, "name": "Stdout"}, {"value": 170, "name": "String"}, {"value": 7158, "name": "ioloop"}], "name": "(*Operation)."}, {"children": [{"value": 146, "name": "Enter"}, {"value": 79, "name": "Enter-fm"}, {"value": 128, "name": "Exit"}, {"value": 79, "name": "Exit-fm"}], "name": "(*RawMode)."}, {"children": [{"value": 165, "name": "CanBreak"}, {"value": 138, "name": "CanContinue"}], "name": "(*Result)."}, {"children": [{"value": 96, "name": "BackEscapeWord"}, {"children": [{"value": 588, "name": "func1"}], "name": "BackEscapeWord."}, {"value": 96, "name": "Backspace"}, {"children": [{"value": 374, "name": "func1"}], "name": "Backspace."}, {"value": 223, "name": "Backup"}, {"value": 106, "name": "Clean"}, {"value": 212, "name": "CurrentWidth"}, {"value": 120, "name": "CursorLineCount"}, {"value": 111, "name": "Delete"}, {"children": [{"value": 406, "name": "func1"}], "name": "Delete."}, {"value": 405, "name": "DeleteWord"}, {"children": [{"value": 356, "name": "func1"}], "name": "DeleteWord."}, {"value": 96, "name": "Erase"}, {"children": [{"value": 21, "name": "func1"}], "name": "Erase."}, {"value": 188, "name": "IdxLine"}, {"value": 173, "name": "IsCursorInEnd"}, {"value": 96, "name": "Kill"}, {"children": [{"value": 49, "name": "func1"}], "name": "Kill."}, {"value": 96, "name": "KillFront"}, {"children": [{"value": 210, "name": "func1"}], "name": "KillFront."}, {"value": 168, "name": "Len"}, {"value": 212, "name": "LineCount"}, {"value": 21, "name": "Lock"}, {"value": 96, "name": "MoveBackward"}, {"children": [{"value": 22, "name": "func1"}], "name": "MoveBackward."}, {"value": 96, "name": "MoveForward"}, {"children": [{"value": 26, "name": "func1"}], "name": "MoveForward."}, {"value": 180, "name": "MoveTo"}, {"children": [{"value": 207, "name": "func1"}], "name": "MoveTo."}, {"value": 96, "name": "MoveToEndWord"}, {"children": [{"value": 344, "name": "func1"}], "name": "MoveToEndWord."}, {"value": 96, "name": "MoveToLineEnd"}, {"children": [{"value": 23, "name": "func1"}], "name": "MoveToLineEnd."}, {"value": 96, "name": "MoveToLineStart"}, {"children": [{"value": 23, "name": "func1"}], "name": "MoveToLineStart."}, {"value": 96, "name": "MoveToNextWord"}, {"children": [{"value": 178, "name": "func1"}], "name": "MoveToNextWord."}, {"value": 111, "name": "MoveToPrevWord"}, {"children": [{"value": 213, "name": "func1"}], "name": "MoveToPrevWord."}, {"value": 101, "name": "OnWidthChange"}, {"value": 168, "name": "Pos"}, {"value": 126, "name": "PromptLen"}, {"value": 231, "name": "Refresh"}, {"value": 104, "name": "Replace"}, {"children": [{"value": 54, "name": "func1"}], "name": "Replace."}, {"value": 228, "name": "Reset"}, {"value": 96, "name": "Restore"}, {"children": [{"value": 142, "name": "func1"}], "name": "Restore."}, {"value": 619, "name": "RuneSlice"}, {"value": 232, "name": "Runes"}, {"value": 95, "name": "Set"}, {"value": 175, "name": "SetConfig"}, {"value": 106, "name": "SetMask"}, {"value": 146, "name": "SetOffset"}, {"value": 187, "name": "SetPrompt"}, {"value": 1066, "name": "SetStyle"}, {"value": 165, "name": "SetWithIdx"}, {"children": [{"value": 127, "name": "func1"}], "name": "SetWithIdx."}, {"value": 96, "name": "Transpose"}, {"children": [{"value": 153, "name": "func1"}], "name": "Transpose."}, {"value": 21, "name": "Unlock"}, {"value": 104, "name": "WriteRune"}, {"value": 169, "name": "WriteRunes"}, {"children": [{"value": 581, "name": "func1"}], "name": "WriteRunes."}, {"value": 156, "name": "WriteString"}, {"value": 260, "name": "calWidth"}, {"value": 93, "name": "clean"}, {"value": 891, "name": "cleanOutput"}, {"value": 120, "name": "cleanWithIdxLine"}, {"value": 158, "name": "getSplitByLine"}, {"value": 143, "name": "idxLine"}, {"value": 164, "name": "isInLineEdge"}, {"value": 1342, "name": "output"}, {"value": 122, "name": "print"}, {"value": 126, "name": "promptLen"}], "name": "(*RuneBuffer)."}, {"children": [{"value": 231, "name": "Aggregate"}, {"value": 218, "name": "Backspace"}, {"value": 218, "name": "ColorFilter"}, {"value": 298, "name": "Copy"}, {"value": 230, "name": "Equal"}, {"value": 230, "name": "EqualFold"}, {"value": 235, "name": "EqualRune"}, {"value": 220, "name": "EqualRuneFold"}, {"value": 230, "name": "HasPrefix"}, {"value": 230, "name": "HasPrefixFold"}, {"value": 206, "name": "Index"}, {"value": 231, "name": "IndexAll"}, {"value": 231, "name": "IndexAllBck"}, {"value": 246, "name": "IndexAllBckEx"}, {"value": 246, "name": "IndexAllEx"}, {"value": 218, "name": "TrimSpaceLeft"}, {"value": 176, "name": "Width"}, {"value": 198, "name": "WidthAll"}], "name": "(*Runes)."}, {"children": [{"value": 197, "name": "Do"}], "name": "(*TabCompleter)."}, {"children": [{"value": 201, "name": "Bell"}, {"value": 247, "name": "Close"}, {"value": 86, "name": "EnterRawMode"}, {"value": 86, "name": "ExitRawMode"}, {"value": 187, "name": "GetConfig"}, {"value": 175, "name": "GetOffset"}, {"children": [{"value": 136, "name": "func1"}], "name": "GetOffset."}, {"value": 19, "name": "IsReading"}, {"value": 95, "name": "KickRead"}, {"value": 232, "name": "Print"}, {"value": 214, "name": "PrintRune"}, {"value": 121, "name": "ReadRune"}, {"value": 106, "name": "ReadRune-fm"}, {"value": 79, "name": "Readline"}, {"value": 201, "name": "SetConfig"}, {"value": 246, "name": "SleepToResume"}, {"value": 142, "name": "Write"}, {"value": 126, "name": "getStdin"}, {"value": 1703, "name": "ioloop"}, {"children": [{"value": 84, "name": "func1"}], "name": "ioloop."}], "name": "(*Terminal)."}, {"children": [{"value": 327, "name": "Get2"}], "name": "(*escapeKeyPair)."}, {"children": [{"value": 174, "name": "Clean"}], "name": "(*hisItem)."}, {"children": [{"value": 2329, "name": "CompleteRefresh"}, {"value": 143, "name": "EnterCompleteMode"}, {"value": 72, "name": "EnterCompleteSelectMode"}, {"value": 203, "name": "ExitCompleteMode"}, {"value": 199, "name": "ExitCompleteSelectMode"}, {"value": 1529, "name": "HandleCompleteSelect"}, {"value": 14, "name": "IsInCompleteMode"}, {"value": 14, "name": "IsInCompleteSelectMode"}, {"value": 1594, "name": "OnComplete"}, {"value": 15, "name": "OnWidthChange"}, {"value": 351, "name": "doSelect"}], "name": "(*opCompleter)."}, {"children": [{"value": 170, "name": "Close"}, {"value": 422, "name": "Compact"}, {"value": 474, "name": "FindBck"}, {"value": 536, "name": "FindFwd"}, {"value": 85, "name": "Init"}, {"value": 190, "name": "IsHistoryClosed"}, {"value": 1588, "name": "New"}, {"value": 515, "name": "Next"}, {"value": 489, "name": "Prev"}, {"value": 333, "name": "Push"}, {"value": 257, "name": "Reset"}, {"value": 117, "name": "Revert"}, {"value": 159, "name": "Rewrite"}, {"value": 1199, "name": "Update"}, {"value": 1014, "name": "historyUpdatePath"}, {"value": 88, "name": "initHistory"}, {"value": 953, "name": "rewriteLocked"}], "name": "(*opHistory)."}, {"children": [{"value": 166, "name": "EnterPasswordMode"}, {"value": 121, "name": "ExitPasswordMode"}, {"value": 389, "name": "PasswordConfig"}], "name": "(*opPassword)."}, {"children": [{"value": 395, "name": "ExitSearchMode"}, {"value": 13, "name": "IsSearchMode"}, {"value": 15, "name": "OnWidthChange"}, {"value": 97, "name": "SearchBackspace"}, {"value": 245, "name": "SearchChar"}, {"value": 196, "name": "SearchMode"}, {"value": 1467, "name": "SearchRefresh"}, {"value": 241, "name": "findHistoryBy"}, {"value": 487, "name": "search"}], "name": "(*opSearch)."}, {"children": [{"value": 14, "name": "EnterVimInsertMode"}, {"value": 14, "name": "ExitVimInsertMode"}, {"value": 14, "name": "ExitVimMode"}, {"value": 171, "name": "HandleVim"}, {"value": 240, "name": "HandleVimNormal"}, {"value": 17, "name": "IsEnableVimMode"}, {"value": 57, "name": "SetVimMode"}, {"value": 357, "name": "handleVimNormalEnterInsert"}, {"value": 692, "name": "handleVimNormalMovement"}], "name": "(*opVim)."}, {"children": [{"value": 522, "name": "Write"}, {"children": [{"value": 186, "name": "func1"}], "name": "Write."}], "name": "(*wrapWriter)."}, {"value": 167, "name": "ClearScreen"}, {"children": [{"value": 272, "name": "Clone"}], "name": "Config."}, {"value": 135, "name": "DefaultIsTerminal"}, {"value": 124, "name": "DefaultOnWidthChanged"}, {"children": [{"value": 208, "name": "func1"}, {"children": [{"value": 123, "name": "1"}], "name": "func1."}], "name": "DefaultOnWidthChanged."}, {"value": 16, "name": "ErrInterrupt"}, {"value": 100, "name": "GetScreenWidth"}, {"value": 292, "name": "GetSize"}, {"value": 78, "name": "IsTerminal"}, {"value": 352, "name": "MakeRaw"}, {"value": 352, "name": "NewCancelableStdin"}, {"value": 344, "name": "NewEx"}, {"value": 1437, "name": "NewOperation"}, {"children": [{"value": 111, "name": "func1"}], "name": "NewOperation."}, {"value": 270, "name": "NewRuneBuffer"}, {"value": 609, "name": "NewTerminal"}, {"children": [{"value": 82, "name": "CompleteRefresh"}, {"value": 140, "name": "EnterCompleteMode"}, {"value": 82, "name": "EnterCompleteSelectMode"}, {"value": 124, "name": "EnterPasswordMode"}, {"value": 45, "name": "EnterVimInsertMode"}, {"value": 230, "name": "ExitCompleteMode"}, {"value": 226, "name": "ExitCompleteSelectMode"}, {"value": 82, "name": "ExitPasswordMode"}, {"value": 94, "name": "ExitSearchMode"}, {"value": 45, "name": "ExitVimInsertMode"}, {"value": 45, "name": "ExitVimMode"}, {"value": 105, "name": "HandleCompleteSelect"}, {"value": 120, "name": "HandleVim"}, {"value": 120, "name": "HandleVimNormal"}, {"value": 48, "name": "IsEnableVimMode"}, {"value": 45, "name": "IsInCompleteMode"}, {"value": 45, "name": "IsInCompleteSelectMode"}, {"value": 44, "name": "IsSearchMode"}, {"value": 94, "name": "OnComplete"}, {"value": 427, "name": "PasswordConfig"}, {"value": 82, "name": "SearchBackspace"}, {"value": 93, "name": "SearchChar"}, {"value": 107, "name": "SearchMode"}, {"value": 95, "name": "SearchRefresh"}, {"value": 88, "name": "SetVimMode"}], "name": "Operation."}, {"value": 254, "name": "Restore"}, {"children": [{"value": 939, "name": "Aggregate"}, {"value": 170, "name": "Backspace"}, {"value": 518, "name": "ColorFilter"}, {"value": 190, "name": "Copy"}, {"value": 118, "name": "Equal"}, {"value": 186, "name": "EqualFold"}, {"value": 81, "name": "EqualRune"}, {"value": 67, "name": "EqualRuneFold"}, {"value": 158, "name": "HasPrefix"}, {"value": 158, "name": "HasPrefixFold"}, {"value": 52, "name": "Index"}, {"value": 128, "name": "IndexAll"}, {"value": 128, "name": "IndexAllBck"}, {"value": 202, "name": "IndexAllBckEx"}, {"value": 230, "name": "IndexAllEx"}, {"value": 202, "name": "TrimSpaceLeft"}, {"value": 245, "name": "Width"}, {"value": 115, "name": "WidthAll"}], "name": "Runes."}, {"value": 1135, "name": "SplitByLine"}, {"value": 16, "name": "Stderr"}, {"value": 16, "name": "Stdin"}, {"value": 16, "name": "Stdout"}, {"value": 179, "name": "SuspendMe"}, {"value": 8, "name": "TabWidth"}, {"value": 200, "name": "WaitForResume"}, {"children": [{"value": 397, "name": "func1"}], "name": "WaitForResume."}, {"value": 24, "name": "doubleWidth"}, {"value": 261, "name": "escapeKey"}, {"value": 279, "name": "getTermios"}, {"value": 99, "name": "getWidth"}, {"value": 832, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1, "name": "isWindows"}, {"value": 503, "name": "readEscKey"}, {"value": 92, "name": "restoreTerm"}, {"value": 233, "name": "setTermios"}, {"value": 1, "name": "statictmp_1023"}, {"value": 24, "name": "statictmp_1256"}, {"value": 4, "name": "statictmp_13"}, {"value": 32, "name": "statictmp_1490"}, {"value": 32, "name": "statictmp_1491"}, {"value": 1, "name": "statictmp_904"}, {"value": 12, "name": "widthChange"}, {"value": 8, "name": "widthChangeCallback"}, {"value": 24, "name": "zeroWidth"}, {"value": 40, "name": "go.itab.*CancelableStdin,io.Reader"}, {"value": 40, "name": "go.itab.*DumpListener,github.com/cockroachdb/cockroach/vendor/github.com/chzyer/readline.Listener"}, {"value": 40, "name": "go.itab.*InterruptError,error"}, {"value": 40, "name": "go.itab.*TabCompleter,github.com/cockroachdb/cockroach/vendor/github.com/chzyer/readline.AutoCompleter"}, {"value": 40, "name": "go.itab.*Terminal,io.Writer"}, {"value": 40, "name": "go.itab.*wrapWriter,io.Writer"}], "name": "chzyer/readline."}, {"children": [{"children": [{"children": [{"value": 165, "name": "Any"}, {"value": 168, "name": "Clamped"}, {"value": 168, "name": "DivisionByZero"}, {"value": 168, "name": "DivisionImpossible"}, {"value": 168, "name": "DivisionUndefined"}, {"value": 200, "name": "GoError"}, {"value": 168, "name": "Inexact"}, {"value": 168, "name": "InvalidOperation"}, {"value": 168, "name": "Overflow"}, {"value": 168, "name": "Rounded"}, {"value": 184, "name": "String"}, {"value": 168, "name": "Subnormal"}, {"value": 168, "name": "SystemOverflow"}, {"value": 168, "name": "SystemUnderflow"}, {"value": 168, "name": "Underflow"}], "name": "(*Condition)."}, {"children": [{"value": 610, "name": "Abs"}, {"value": 107, "name": "Abs-fm"}, {"value": 126, "name": "Add"}, {"value": 117, "name": "Add-fm"}, {"value": 4435, "name": "Cbrt"}, {"value": 381, "name": "Ceil"}, {"value": 107, "name": "Ceil-fm"}, {"value": 282, "name": "Cmp"}, {"value": 5700, "name": "Exp"}, {"value": 107, "name": "Exp-fm"}, {"value": 381, "name": "Floor"}, {"value": 107, "name": "Floor-fm"}, {"value": 4638, "name": "Ln"}, {"value": 107, "name": "Ln-fm"}, {"value": 587, "name": "Log10"}, {"value": 107, "name": "Log10-fm"}, {"value": 1674, "name": "Mul"}, {"value": 117, "name": "Mul-fm"}, {"value": 1080, "name": "Neg"}, {"value": 107, "name": "Neg-fm"}, {"value": 150, "name": "NewFromString"}, {"value": 6836, "name": "Pow"}, {"value": 117, "name": "Pow-fm"}, {"value": 1686, "name": "Quantize"}, {"value": 3311, "name": "Quo"}, {"value": 117, "name": "Quo-fm"}, {"value": 901, "name": "QuoInteger"}, {"value": 117, "name": "QuoInteger-fm"}, {"value": 321, "name": "Reduce"}, {"value": 2684, "name": "Rem"}, {"value": 117, "name": "Rem-fm"}, {"value": 133, "name": "Round"}, {"value": 107, "name": "Round-fm"}, {"value": 268, "name": "SetString"}, {"value": 2394, "name": "Sqrt"}, {"value": 107, "name": "Sqrt-fm"}, {"value": 126, "name": "Sub"}, {"value": 117, "name": "Sub-fm"}, {"value": 221, "name": "ToIntegral"}, {"value": 107, "name": "ToIntegral-fm"}, {"value": 218, "name": "ToIntegralX"}, {"value": 107, "name": "ToIntegralX-fm"}, {"value": 173, "name": "WithPrecision"}, {"value": 2103, "name": "add"}, {"value": 98, "name": "goError"}, {"value": 1836, "name": "integerPower"}, {"value": 2198, "name": "logSpecials"}, {"value": 1058, "name": "quantize"}, {"value": 2496, "name": "quoSpecials"}, {"value": 2230, "name": "rootSpecials"}, {"value": 635, "name": "round"}, {"value": 620, "name": "setIfNaN"}, {"value": 96, "name": "toIntegral"}, {"value": 638, "name": "toIntegralSpecials"}], "name": "(*Context)."}, {"children": [{"value": 386, "name": "Abs"}, {"value": 1682, "name": "Cmp"}, {"value": 362, "name": "CmpTotal"}, {"value": 125, "name": "Float64"}, {"value": 1344, "name": "Int64"}, {"value": 100, "name": "IsZero"}, {"value": 1034, "name": "Modf"}, {"value": 392, "name": "Neg"}, {"value": 76, "name": "NumDigits"}, {"value": 2343, "name": "Reduce"}, {"value": 397, "name": "Set"}, {"value": 118, "name": "SetCoefficient"}, {"value": 18, "name": "SetExponent"}, {"value": 152, "name": "SetFloat64"}, {"value": 87, "name": "SetInt64"}, {"value": 136, "name": "SetString"}, {"value": 99, "name": "Sign"}, {"value": 80, "name": "String"}, {"value": 1142, "name": "ToSci"}, {"value": 757, "name": "ToStandard"}, {"value": 1853, "name": "setExponent"}, {"value": 3293, "name": "setString"}], "name": "(*Decimal)."}, {"children": [{"value": 142, "name": "Abs"}, {"value": 152, "name": "Add"}, {"value": 142, "name": "Ceil"}, {"value": 221, "name": "Err"}, {"value": 142, "name": "Exp"}, {"value": 142, "name": "Floor"}, {"value": 182, "name": "Int64"}, {"value": 142, "name": "Ln"}, {"value": 142, "name": "Log10"}, {"value": 152, "name": "Mul"}, {"value": 142, "name": "Neg"}, {"value": 152, "name": "Pow"}, {"value": 221, "name": "Quantize"}, {"value": 152, "name": "Quo"}, {"value": 152, "name": "QuoInteger"}, {"value": 242, "name": "Reduce"}, {"value": 152, "name": "Rem"}, {"value": 142, "name": "Round"}, {"value": 142, "name": "Sqrt"}, {"value": 152, "name": "Sub"}, {"value": 142, "name": "ToIntegral"}, {"value": 142, "name": "ToIntegralX"}, {"value": 200, "name": "op2"}, {"value": 210, "name": "op3"}], "name": "(*ErrDecimal)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Form)."}, {"children": [{"value": 204, "name": "Round"}], "name": "(*Rounder)."}, {"children": [{"value": 124, "name": "get"}], "name": "(*constWithPrecision)."}, {"children": [{"value": 1423, "name": "done"}], "name": "(*loop)."}, {"value": 40, "name": "BaseContext"}, {"children": [{"value": 14, "name": "Any"}, {"value": 17, "name": "Clamped"}, {"value": 17, "name": "DivisionByZero"}, {"value": 17, "name": "DivisionImpossible"}, {"value": 17, "name": "DivisionUndefined"}, {"value": 184, "name": "GoError"}, {"value": 17, "name": "Inexact"}, {"value": 17, "name": "InvalidOperation"}, {"value": 17, "name": "Overflow"}, {"value": 17, "name": "Rounded"}, {"value": 858, "name": "String"}, {"value": 17, "name": "Subnormal"}, {"value": 17, "name": "SystemOverflow"}, {"value": 17, "name": "SystemUnderflow"}, {"value": 17, "name": "Underflow"}], "name": "Condition."}, {"children": [{"value": 305, "name": "String"}], "name": "Form."}, {"value": 210, "name": "New"}, {"value": 120, "name": "NewFromString"}, {"value": 901, "name": "NumDigits"}, {"children": [{"value": 1521, "name": "Round"}], "name": "Rounder."}, {"value": 8, "name": "Roundings"}, {"value": 5, "name": "_Form_index"}, {"value": 8, "name": "bigFive"}, {"value": 8, "name": "bigOne"}, {"value": 8, "name": "bigTen"}, {"value": 8, "name": "bigTwo"}, {"value": 8, "name": "decimalCbrtC1"}, {"value": 8, "name": "decimalCbrtC2"}, {"value": 8, "name": "decimalCbrtC3"}, {"value": 8, "name": "decimalE"}, {"value": 8, "name": "decimalEight"}, {"value": 8, "name": "decimalHalf"}, {"value": 8, "name": "decimalInfinity"}, {"value": 8, "name": "decimalInvLn10"}, {"value": 8, "name": "decimalLn10"}, {"value": 8, "name": "decimalNaN"}, {"value": 8, "name": "decimalOne"}, {"value": 8, "name": "decimalOneEighth"}, {"value": 8, "name": "decimalOnePtOne"}, {"value": 8, "name": "decimalThree"}, {"value": 8, "name": "decimalTwo"}, {"value": 8, "name": "decimalZero"}, {"value": 8, "name": "decimalZeroPtNine"}, {"value": 9288, "name": "digitsLookupTable"}, {"value": 184, "name": "exp10"}, {"value": 2519, "name": "init"}, {"children": [{"value": 796, "name": "1"}, {"value": 177, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 151, "name": "makeConst"}, {"value": 733, "name": "makeConstWithPrecision"}, {"value": 4128, "name": "pow10LookupTable"}, {"value": 271, "name": "round05Up"}, {"value": 312, "name": "roundAddOne"}, {"value": 13, "name": "roundCeiling"}, {"value": 6, "name": "roundDown"}, {"value": 10, "name": "roundFloor"}, {"value": 16, "name": "roundHalfDown"}, {"value": 127, "name": "roundHalfEven"}, {"value": 16, "name": "roundHalfUp"}, {"value": 6, "name": "roundUp"}, {"value": 179, "name": "setBigWithPow"}, {"value": 56, "name": "statictmp_1779"}, {"value": 56, "name": "statictmp_1780"}, {"value": 175, "name": "tableExp10"}, {"value": 428, "name": "upscale"}], "name": "apd."}, {"children": [{"children": [{"value": 195, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*ErrNotMatched)."}, {"children": [{"value": 110, "name": "Close"}, {"value": 110, "name": "LocalAddr"}, {"value": 334, "name": "Read"}, {"value": 110, "name": "RemoteAddr"}, {"value": 141, "name": "SetDeadline"}, {"value": 141, "name": "SetReadDeadline"}, {"value": 141, "name": "SetWriteDeadline"}, {"value": 157, "name": "Write"}], "name": "(*MuxConn)."}, {"children": [{"value": 545, "name": "Read"}], "name": "(*bufferedReader)."}, {"children": [{"value": 97, "name": "HandleError"}, {"value": 607, "name": "Match"}, {"value": 395, "name": "Serve"}, {"children": [{"value": 394, "name": "func1"}], "name": "Serve."}, {"value": 199, "name": "handleErr"}, {"value": 1317, "name": "serve"}], "name": "(*cMux)."}, {"children": [{"value": 171, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*errListenerClosed)."}, {"children": [{"value": 298, "name": "Accept"}, {"value": 110, "name": "Addr"}, {"value": 110, "name": "Close"}], "name": "(*muxListener)."}, {"value": 13, "name": "Any"}, {"children": [{"value": 6, "name": "func1"}], "name": "Any."}, {"value": 16, "name": "ErrListenerClosed"}, {"children": [{"value": 193, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "ErrNotMatched."}, {"value": 13, "name": "HTTP1"}, {"children": [{"value": 778, "name": "func1"}], "name": "HTTP1."}, {"children": [{"value": 114, "name": "Close"}, {"value": 114, "name": "LocalAddr"}, {"value": 114, "name": "RemoteAddr"}, {"value": 158, "name": "SetDeadline"}, {"value": 158, "name": "SetReadDeadline"}, {"value": 158, "name": "SetWriteDeadline"}, {"value": 173, "name": "Write"}], "name": "MuxConn."}, {"value": 307, "name": "New"}, {"children": [{"value": 6, "name": "func1"}], "name": "New."}, {"children": [{"value": 21, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "errListenerClosed."}, {"value": 144, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 230, "name": "Accept"}, {"value": 108, "name": "Addr"}, {"value": 108, "name": "Close"}], "name": "muxListener."}, {"value": 427, "name": "parseRequestLine"}, {"value": 96, "name": "go.itab.*MuxConn,net.Conn"}, {"value": 40, "name": "go.itab.*bufferedReader,io.Reader"}, {"value": 56, "name": "go.itab.*cMux,github.com/cockroachdb/cockroach/vendor/github.com/cockroachdb/cmux.CMux"}, {"value": 40, "name": "go.itab.ErrNotMatched,error"}, {"value": 40, "name": "go.itab.errListenerClosed,error"}, {"value": 56, "name": "go.itab.muxListener,net.Listener"}], "name": "cmux."}], "name": "cockroachdb/"}, {"children": [{"children": [{"value": 204, "name": "String"}], "name": "(*Bar)."}, {"children": [{"value": 23, "name": "ByteSize"}, {"value": 411, "name": "CumulativeDistribution"}, {"value": 425, "name": "Distribution"}, {"value": 277, "name": "Equals"}, {"value": 344, "name": "Export"}, {"value": 15, "name": "HighestTrackableValue"}, {"value": 14, "name": "LowestTrackableValue"}, {"value": 198, "name": "Max"}, {"value": 277, "name": "Mean"}, {"value": 231, "name": "Merge"}, {"value": 180, "name": "Min"}, {"value": 272, "name": "RecordCorrectedValue"}, {"value": 99, "name": "RecordValue"}, {"value": 337, "name": "RecordValues"}, {"value": 92, "name": "Reset"}, {"value": 15, "name": "SignificantFigures"}, {"value": 341, "name": "StdDev"}, {"value": 15, "name": "TotalCount"}, {"value": 303, "name": "ValueAtQuantile"}, {"value": 157, "name": "countsIndexFor"}, {"value": 104, "name": "getBucketIndex"}, {"value": 83, "name": "highestEquivalentValue"}, {"value": 137, "name": "lowestEquivalentValue"}, {"value": 125, "name": "medianEquivalentValue"}, {"value": 122, "name": "nextNonEquivalentValue"}, {"value": 164, "name": "sizeOfEquivalentValueRange"}], "name": "(*Histogram)."}, {"children": [{"value": 285, "name": "Merge"}, {"value": 184, "name": "Rotate"}], "name": "(*WindowedHistogram)."}, {"children": [{"value": 298, "name": "next"}], "name": "(*iterator)."}, {"children": [{"value": 472, "name": "next"}], "name": "(*pIterator)."}, {"children": [{"value": 111, "name": "next"}], "name": "(*rIterator)."}, {"children": [{"value": 307, "name": "String"}], "name": "Bar."}, {"value": 226, "name": "Import"}, {"value": 836, "name": "New"}, {"value": 608, "name": "NewWindowed"}, {"value": 96, "name": "bitLen"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "codahale/hdrhistogram."}, {"children": [{"children": [{"children": [{"value": 196, "name": "Debug"}, {"value": 216, "name": "Debugf"}, {"value": 10, "name": "EnableDebug"}, {"value": 98, "name": "EnableTimestamps"}, {"value": 178, "name": "Error"}, {"value": 198, "name": "Errorf"}, {"value": 191, "name": "Fatal"}, {"value": 211, "name": "Fatalf"}, {"value": 18, "name": "Fatalln"}, {"value": 27, "name": "Flags"}, {"value": 178, "name": "Info"}, {"value": 198, "name": "Infof"}, {"value": 36, "name": "Output"}, {"value": 192, "name": "Panic"}, {"value": 113, "name": "Panicf"}, {"value": 18, "name": "Panicln"}, {"value": 36, "name": "Prefix"}, {"value": 18, "name": "Print"}, {"value": 18, "name": "Printf"}, {"value": 18, "name": "Println"}, {"value": 18, "name": "SetFlags"}, {"value": 18, "name": "SetOutput"}, {"value": 18, "name": "SetPrefix"}, {"value": 178, "name": "Warning"}, {"value": 198, "name": "Warningf"}], "name": "(*DefaultLogger)."}, {"children": [{"value": 211, "name": "IsPaused"}, {"value": 477, "name": "String"}, {"value": 133, "name": "becomeProbe"}], "name": "(*Progress)."}, {"children": [{"value": 200, "name": "String"}], "name": "(*ProgressStateType)."}, {"children": [{"value": 134, "name": "Advance"}, {"value": 530, "name": "ApplyConfChange"}, {"value": 171, "name": "Campaign"}, {"value": 1012, "name": "HasReady"}, {"value": 404, "name": "Propose"}, {"value": 587, "name": "ProposeConfChange"}, {"value": 346, "name": "ReadIndex"}, {"value": 304, "name": "Ready"}, {"value": 236, "name": "ReportSnapshot"}, {"value": 214, "name": "ReportUnreachable"}, {"value": 260, "name": "Status"}, {"value": 477, "name": "Step"}, {"value": 63, "name": "Tick"}, {"value": 26, "name": "TickQuiesced"}, {"value": 214, "name": "TransferLeader"}, {"value": 907, "name": "commitReady"}, {"value": 275, "name": "newReady"}], "name": "(*RawNode)."}, {"children": [{"value": 75, "name": "Descriptor"}, {"value": 66, "name": "Marshal"}, {"value": 48, "name": "MarshalTo"}, {"value": 21, "name": "ProtoMessage"}, {"value": 21, "name": "Reset"}, {"value": 30, "name": "Size"}, {"value": 39, "name": "String"}, {"value": 39, "name": "Unmarshal"}], "name": "(*Ready)."}, {"children": [{"value": 216, "name": "MarshalJSON"}, {"value": 200, "name": "String"}], "name": "(*StateType)."}, {"children": [{"value": 75, "name": "Descriptor"}, {"value": 66, "name": "Marshal"}, {"value": 285, "name": "MarshalJSON"}, {"value": 48, "name": "MarshalTo"}, {"value": 21, "name": "ProtoMessage"}, {"value": 21, "name": "Reset"}, {"value": 30, "name": "Size"}, {"value": 220, "name": "String"}, {"value": 39, "name": "Unmarshal"}], "name": "(*Status)."}, {"children": [{"value": 454, "name": "add"}, {"value": 92, "name": "freeFirstOne"}, {"value": 158, "name": "freeTo"}], "name": "(*inflights)."}, {"children": [{"value": 126, "name": "Intn"}], "name": "(*lockedRand)."}, {"children": [{"value": 59, "name": "(github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.tickElection)-fm"}, {"value": 59, "name": "(github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.tickHeartbeat)-fm"}, {"value": 7409, "name": "Step"}, {"value": 385, "name": "addNode"}, {"value": 285, "name": "appendEntry"}, {"value": 210, "name": "bcastAppend"}, {"value": 230, "name": "bcastHeartbeat"}, {"value": 263, "name": "bcastHeartbeatWithCtx"}, {"value": 675, "name": "becomeCandidate"}, {"value": 590, "name": "becomeFollower"}, {"value": 1225, "name": "becomeLeader"}, {"value": 647, "name": "becomePreCandidate"}, {"value": 1942, "name": "campaign"}, {"value": 423, "name": "checkQuorumActive"}, {"value": 1500, "name": "handleAppendEntries"}, {"value": 293, "name": "handleHeartbeat"}, {"value": 1607, "name": "handleSnapshot"}, {"value": 645, "name": "loadState"}, {"value": 786, "name": "maybeCommit"}, {"value": 535, "name": "nodes"}, {"value": 1367, "name": "poll"}, {"value": 216, "name": "removeNode"}, {"value": 1009, "name": "reset"}, {"value": 106, "name": "resetRandomizedElectionTimeout"}, {"value": 2924, "name": "restore"}, {"value": 930, "name": "send"}, {"value": 3372, "name": "sendAppend"}, {"value": 349, "name": "sendHeartbeat"}, {"value": 211, "name": "sendTimeoutNow"}, {"value": 308, "name": "tickElection"}, {"value": 511, "name": "tickHeartbeat"}], "name": "(*raft)."}, {"children": [{"value": 399, "name": "String"}, {"value": 480, "name": "append"}, {"value": 494, "name": "appliedTo"}, {"value": 413, "name": "commitTo"}, {"value": 266, "name": "entries"}, {"value": 789, "name": "findConflict"}, {"value": 173, "name": "firstIndex"}, {"value": 104, "name": "hasNextEnts"}, {"value": 152, "name": "isUpToDate"}, {"value": 196, "name": "lastIndex"}, {"value": 298, "name": "lastTerm"}, {"value": 115, "name": "matchTerm"}, {"value": 672, "name": "maybeAppend"}, {"value": 191, "name": "maybeCommit"}, {"value": 1052, "name": "mustCheckOutOfBounds"}, {"value": 472, "name": "nextEnts"}, {"value": 672, "name": "restore"}, {"value": 1942, "name": "slice"}, {"value": 362, "name": "snapshot"}, {"value": 86, "name": "stableTo"}, {"value": 541, "name": "term"}, {"value": 362, "name": "zeroTermOnErrCompacted"}], "name": "(*raftLog)."}, {"children": [{"value": 1296, "name": "advance"}], "name": "(*readOnly)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Swap"}], "name": "(*uint64Slice)."}, {"children": [{"value": 263, "name": "maybeTerm"}, {"value": 879, "name": "mustCheckOutOfBounds"}, {"value": 184, "name": "slice"}, {"value": 572, "name": "stableTo"}, {"value": 1657, "name": "truncateAndAppend"}], "name": "(*unstable)."}, {"children": [{"value": 112, "name": "Fatalln"}, {"value": 92, "name": "Flags"}, {"value": 135, "name": "Output"}, {"value": 112, "name": "Panicln"}, {"value": 102, "name": "Prefix"}, {"value": 112, "name": "Print"}, {"value": 135, "name": "Printf"}, {"value": 112, "name": "Println"}, {"value": 92, "name": "SetFlags"}, {"value": 102, "name": "SetOutput"}, {"value": 102, "name": "SetPrefix"}], "name": "DefaultLogger."}, {"value": 607, "name": "DescribeEntry"}, {"value": 16, "name": "ErrCompacted"}, {"value": 16, "name": "ErrSnapOutOfDate"}, {"value": 16, "name": "ErrSnapshotTemporarilyUnavailable"}, {"value": 16, "name": "ErrStepLocalMsg"}, {"value": 16, "name": "ErrStepPeerNotFound"}, {"value": 16, "name": "ErrStopped"}, {"value": 16, "name": "ErrUnavailable"}, {"value": 1673, "name": "NewRawNode"}, {"children": [{"value": 69, "name": "String"}], "name": "ProgressStateType."}, {"children": [{"value": 312, "name": "MarshalJSON"}, {"value": 69, "name": "String"}], "name": "StateType."}, {"children": [{"value": 1422, "name": "MarshalJSON"}, {"value": 455, "name": "String"}], "name": "Status."}, {"value": 48, "name": "emptyState"}, {"value": 822, "name": "getStatus"}, {"value": 8, "name": "globalRand"}, {"value": 318, "name": "header"}, {"value": 1114, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 248, "name": "limitSize"}, {"value": 598, "name": "newLog"}, {"value": 4152, "name": "newRaft"}, {"value": 1130, "name": "newReady"}, {"value": 54, "name": "numOfPendingConf"}, {"value": 48, "name": "prstmap"}, {"value": 16, "name": "raftLogger"}, {"value": 280, "name": "statictmp_1255"}, {"value": 280, "name": "statictmp_1413"}, {"value": 72, "name": "statictmp_1422"}, {"value": 16, "name": "statictmp_1724"}, {"value": 16, "name": "statictmp_1725"}, {"value": 16, "name": "statictmp_1726"}, {"value": 72, "name": "statictmp_841"}, {"value": 280, "name": "statictmp_874"}, {"value": 2261, "name": "stepCandidate"}, {"value": 3244, "name": "stepFollower"}, {"value": 12167, "name": "stepLeader"}, {"value": 64, "name": "stmap"}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 74, "name": "Swap"}], "name": "uint64Slice."}, {"value": 290, "name": "voteRespMsgType"}, {"value": 128, "name": "go.itab.*DefaultLogger,github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.Logger"}, {"value": 56, "name": "go.itab.uint64Slice,sort.Interface"}], "name": "raft."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 667, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 239, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3553, "name": "Unmarshal"}], "name": "(*ConfChange)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*ConfChangeType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 380, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 186, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 1967, "name": "Unmarshal"}], "name": "(*ConfState)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 667, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 239, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 3553, "name": "Unmarshal"}], "name": "(*Entry)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*EntryType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 441, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 177, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2556, "name": "Unmarshal"}], "name": "(*HardState)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 2157, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 826, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 7821, "name": "Unmarshal"}], "name": "(*Message)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*MessageType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 715, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 198, "name": "Reset"}, {"value": 194, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2968, "name": "Unmarshal"}], "name": "(*Snapshot)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 280, "name": "Marshal"}, {"value": 626, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 205, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 2786, "name": "Unmarshal"}], "name": "(*SnapshotMetadata)."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "ConfChangeType."}, {"value": 8, "name": "ConfChangeType_name"}, {"value": 8, "name": "ConfChangeType_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "EntryType."}, {"value": 8, "name": "EntryType_name"}, {"value": 8, "name": "EntryType_value"}, {"value": 16, "name": "ErrIntOverflowRaft"}, {"value": 16, "name": "ErrInvalidLengthRaft"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "MessageType."}, {"value": 8, "name": "MessageType_name"}, {"value": 8, "name": "MessageType_value"}, {"value": 122, "name": "encodeVarintRaft"}, {"value": 24, "name": "fileDescriptorRaft"}, {"value": 1699, "name": "init"}, {"children": [{"value": 522, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipRaft"}, {"value": 34, "name": "sovRaft"}, {"value": 8, "name": "statictmp_10"}, {"value": 8, "name": "statictmp_16"}, {"value": 8, "name": "statictmp_2"}, {"value": 8, "name": "statictmp_22"}, {"value": 8, "name": "statictmp_28"}, {"value": 8, "name": "statictmp_34"}, {"value": 8, "name": "statictmp_40"}, {"value": 8, "name": "statictmp_46"}, {"value": 8, "name": "statictmp_52"}, {"value": 8, "name": "statictmp_6"}, {"value": 72, "name": "statictmp_643"}, {"value": 790, "name": "statictmp_871"}, {"value": 8, "name": "statictmp_873"}, {"value": 32, "name": "statictmp_874"}, {"value": 32, "name": "statictmp_878"}, {"value": 8, "name": "statictmp_879"}, {"value": 76, "name": "statictmp_883"}, {"value": 304, "name": "statictmp_884"}, {"value": 304, "name": "statictmp_888"}, {"value": 76, "name": "statictmp_889"}, {"value": 12, "name": "statictmp_893"}, {"value": 48, "name": "statictmp_894"}, {"value": 48, "name": "statictmp_898"}, {"value": 12, "name": "statictmp_899"}, {"value": 8, "name": "statictmp_911"}, {"value": 8, "name": "statictmp_915"}, {"value": 8, "name": "statictmp_919"}, {"value": 56, "name": "go.itab.*ConfChange,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ConfState,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Entry,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Entry,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HardState,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HardState,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Message,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Snapshot,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SnapshotMetadata,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "raft/raftpb."}], "name": "coreos/etcd/"}, {"children": [{"children": [{"children": [{"value": 167, "name": "AutoLink"}, {"value": 167, "name": "BlockCode"}, {"value": 90, "name": "BlockHtml"}, {"value": 167, "name": "BlockQuote"}, {"value": 167, "name": "CodeSpan"}, {"value": 1, "name": "DocumentFooter"}, {"value": 1, "name": "DocumentHeader"}, {"value": 167, "name": "DoubleEmphasis"}, {"value": 167, "name": "Emphasis"}, {"value": 150, "name": "Entity"}, {"value": 1, "name": "FootnoteItem"}, {"value": 1, "name": "FootnoteRef"}, {"value": 1, "name": "Footnotes"}, {"value": 10, "name": "GetFlags"}, {"value": 81, "name": "HRule"}, {"value": 285, "name": "Header"}, {"value": 1, "name": "Image"}, {"value": 81, "name": "LineBreak"}, {"value": 169, "name": "Link"}, {"value": 147, "name": "List"}, {"value": 359, "name": "ListItem"}, {"value": 90, "name": "NormalText"}, {"value": 208, "name": "Paragraph"}, {"value": 90, "name": "RawHtmlTag"}, {"value": 1, "name": "StrikeThrough"}, {"value": 214, "name": "Table"}, {"value": 185, "name": "TableCell"}, {"value": 185, "name": "TableHeaderCell"}, {"value": 185, "name": "TableRow"}, {"value": 1654, "name": "TitleBlock"}, {"value": 167, "name": "TripleEmphasis"}], "name": "(*roffRenderer)."}, {"value": 167, "name": "Render"}, {"value": 470, "name": "escapeSpecialChars"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "listCounter"}, {"value": 51, "name": "needsBackslash"}, {"value": 280, "name": "go.itab.*roffRenderer,github.com/cockroachdb/cockroach/vendor/github.com/cpuguy83/go-md2man/vendor/github.com/russross/blackfriday.Renderer"}], "name": "md2man."}, {"children": [{"children": [{"children": [{"value": 2399, "name": "block"}, {"value": 862, "name": "code"}, {"value": 124, "name": "dliPrefix"}, {"value": 889, "name": "fencedCodeBlock"}, {"value": 789, "name": "getRef"}, {"value": 1128, "name": "html"}, {"value": 539, "name": "htmlCDATA"}, {"value": 193, "name": "htmlComment"}, {"value": 691, "name": "htmlFindEnd"}, {"value": 325, "name": "htmlFindTag"}, {"value": 374, "name": "htmlHr"}, {"value": 456, "name": "inline"}, {"value": 228, "name": "inlineHTMLComment"}, {"value": 79, "name": "isEmpty"}, {"value": 191, "name": "isHRule"}, {"value": 167, "name": "isPrefixHeader"}, {"value": 429, "name": "isUnderlinedHeader"}, {"value": 570, "name": "list"}, {"children": [{"value": 270, "name": "func1"}], "name": "list."}, {"value": 3159, "name": "listItem"}, {"value": 174, "name": "oliPrefix"}, {"value": 2867, "name": "paragraph"}, {"children": [{"value": 268, "name": "func1"}, {"children": [{"value": 100, "name": "1"}], "name": "func1."}], "name": "paragraph."}, {"value": 1615, "name": "prefixHeader"}, {"children": [{"value": 148, "name": "func1"}], "name": "prefixHeader."}, {"value": 922, "name": "quote"}, {"value": 156, "name": "quotePrefix"}, {"value": 324, "name": "renderHTMLBlock"}, {"value": 475, "name": "renderParagraph"}, {"children": [{"value": 148, "name": "func1"}], "name": "renderParagraph."}, {"value": 758, "name": "table"}, {"value": 2008, "name": "tableHeader"}, {"value": 1396, "name": "tableRow"}, {"value": 378, "name": "terminateBlockquote"}, {"value": 759, "name": "titleBlock"}, {"value": 154, "name": "uliPrefix"}], "name": "(*parser)."}, {"children": [{"value": 457, "name": "String"}], "name": "(*reference)."}, {"children": [{"value": 21, "name": "1"}, {"value": 7, "name": "2"}, {"value": 8, "name": "3"}, {"value": 6, "name": "4"}, {"value": 9, "name": "5"}, {"value": 1, "name": "6"}, {"value": 2, "name": "7"}, {"value": 3, "name": "8"}], "name": ".gobytes."}, {"value": 171, "name": "Markdown"}, {"value": 1371, "name": "MarkdownOptions"}, {"value": 8, "name": "anchorRe"}, {"value": 1686, "name": "autoLink"}, {"value": 8, "name": "blockTags"}, {"value": 448, "name": "codeSpan"}, {"value": 965, "name": "emphasis"}, {"value": 370, "name": "entity"}, {"value": 315, "name": "escape"}, {"value": 24, "name": "escapeChars"}, {"value": 689, "name": "expandTabs"}, {"value": 1062, "name": "firstPass"}, {"value": 800, "name": "helperDoubleEmphasis"}, {"value": 939, "name": "helperEmphasis"}, {"value": 677, "name": "helperFindEmphChar"}, {"value": 1235, "name": "helperTripleEmphasis"}, {"value": 8, "name": "htmlEntity"}, {"value": 2960, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 97, "name": "isBackslashEscaped"}, {"value": 1711, "name": "isFenceLine"}, {"value": 172, "name": "isIndented"}, {"value": 172, "name": "isMailtoAutoLink"}, {"value": 2029, "name": "isReference"}, {"value": 733, "name": "isSafeLink"}, {"value": 51, "name": "ispunct"}, {"value": 636, "name": "leftAngle"}, {"value": 515, "name": "lineBreak"}, {"value": 7180, "name": "link"}, {"value": 198, "name": "linkEndsWithEntity"}, {"value": 1081, "name": "scanFootnote"}, {"value": 1018, "name": "scanLinkRef"}, {"value": 585, "name": "secondPass"}, {"children": [{"value": 472, "name": "func1"}], "name": "secondPass."}, {"value": 77, "name": "skipChar"}, {"value": 77, "name": "skipUntilChar"}, {"value": 653, "name": "slugify"}, {"value": 96, "name": "statictmp_1277"}, {"value": 72, "name": "statictmp_1278"}, {"value": 929, "name": "tagLength"}, {"value": 299, "name": "unescapeText"}, {"value": 16, "name": "urlRe"}, {"value": 24, "name": "validPaths"}, {"value": 24, "name": "validUris"}], "name": "russross/blackfriday."}, {"children": [{"value": 674, "name": "Create"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "shurcooL/sanitized_anchor_name."}], "name": "vendor/github.com/"}], "name": "cpuguy83/go-md2man/"}, {"children": [{"children": [{"value": 23, "name": "Alg"}, {"value": 1591, "name": "Sign"}, {"value": 990, "name": "Verify"}], "name": "(*SigningMethodECDSA)."}, {"children": [{"value": 23, "name": "Alg"}, {"value": 634, "name": "Sign"}, {"value": 836, "name": "Verify"}], "name": "(*SigningMethodHMAC)."}, {"children": [{"value": 23, "name": "Alg"}, {"value": 727, "name": "Sign"}, {"value": 693, "name": "Verify"}], "name": "(*SigningMethodRSA)."}, {"children": [{"value": 36, "name": "Alg"}, {"value": 789, "name": "Sign"}, {"value": 741, "name": "Verify"}], "name": "(*SigningMethodRSAPSS)."}, {"children": [{"value": 214, "name": "Error"}], "name": "(*ValidationError)."}, {"children": [{"value": 22, "name": "Alg"}, {"value": 97, "name": "Sign"}, {"value": 257, "name": "Verify"}], "name": "(*signingMethodNone)."}, {"value": 274, "name": "DecodeSegment"}, {"value": 164, "name": "EncodeSegment"}, {"value": 16, "name": "ErrECDSAVerification"}, {"value": 16, "name": "ErrHashUnavailable"}, {"value": 16, "name": "ErrInvalidKey"}, {"value": 16, "name": "ErrInvalidKeyType"}, {"value": 16, "name": "ErrKeyMustBePEMEncoded"}, {"value": 16, "name": "ErrNotECPrivateKey"}, {"value": 16, "name": "ErrNotECPublicKey"}, {"value": 16, "name": "ErrNotRSAPrivateKey"}, {"value": 16, "name": "ErrNotRSAPublicKey"}, {"value": 16, "name": "ErrSignatureInvalid"}, {"value": 16, "name": "NoneSignatureTypeDisallowedError"}, {"value": 235, "name": "RegisterSigningMethod"}, {"value": 8, "name": "SigningMethodES256"}, {"value": 8, "name": "SigningMethodES384"}, {"value": 8, "name": "SigningMethodES512"}, {"value": 8, "name": "SigningMethodHS256"}, {"value": 8, "name": "SigningMethodHS384"}, {"value": 8, "name": "SigningMethodHS512"}, {"value": 8, "name": "SigningMethodNone"}, {"value": 8, "name": "SigningMethodPS256"}, {"value": 8, "name": "SigningMethodPS384"}, {"value": 8, "name": "SigningMethodPS512"}, {"value": 8, "name": "SigningMethodRS256"}, {"value": 8, "name": "SigningMethodRS384"}, {"value": 8, "name": "SigningMethodRS512"}, {"children": [{"value": 54, "name": "Alg"}], "name": "SigningMethodRSAPSS."}, {"children": [{"value": 164, "name": "Error"}], "name": "ValidationError."}, {"value": 1236, "name": "init"}, {"children": [{"value": 642, "name": "1"}, {"children": [{"value": 25, "name": "func1"}, {"value": 25, "name": "func2"}, {"value": 25, "name": "func3"}], "name": "1."}, {"value": 591, "name": "2"}, {"children": [{"value": 25, "name": "func1"}, {"value": 25, "name": "func2"}, {"value": 25, "name": "func3"}], "name": "2."}, {"value": 309, "name": "3"}, {"children": [{"value": 25, "name": "func1"}], "name": "3."}, {"value": 591, "name": "4"}, {"children": [{"value": 25, "name": "func1"}, {"value": 25, "name": "func2"}, {"value": 25, "name": "func3"}], "name": "4."}, {"value": 1083, "name": "5"}, {"children": [{"value": 25, "name": "func1"}, {"value": 25, "name": "func2"}, {"value": 25, "name": "func3"}], "name": "5."}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "signingMethodLock"}, {"value": 8, "name": "signingMethods"}, {"value": 56, "name": "go.itab.*SigningMethodECDSA,github.com/cockroachdb/cockroach/vendor/github.com/dgrijalva/jwt-go.SigningMethod"}, {"value": 56, "name": "go.itab.*SigningMethodHMAC,github.com/cockroachdb/cockroach/vendor/github.com/dgrijalva/jwt-go.SigningMethod"}, {"value": 56, "name": "go.itab.*SigningMethodRSA,github.com/cockroachdb/cockroach/vendor/github.com/dgrijalva/jwt-go.SigningMethod"}, {"value": 56, "name": "go.itab.*SigningMethodRSAPSS,github.com/cockroachdb/cockroach/vendor/github.com/dgrijalva/jwt-go.SigningMethod"}, {"value": 40, "name": "go.itab.*ValidationError,error"}, {"value": 56, "name": "go.itab.*signingMethodNone,github.com/cockroachdb/cockroach/vendor/github.com/dgrijalva/jwt-go.SigningMethod"}], "name": "dgrijalva/jwt-go."}, {"children": [{"value": 8, "name": "BigByte"}, {"value": 8, "name": "BigEByte"}, {"value": 8, "name": "BigEiByte"}, {"value": 8, "name": "BigGByte"}, {"value": 8, "name": "BigGiByte"}, {"value": 8, "name": "BigKByte"}, {"value": 8, "name": "BigKiByte"}, {"value": 8, "name": "BigMByte"}, {"value": 8, "name": "BigMiByte"}, {"value": 8, "name": "BigPByte"}, {"value": 8, "name": "BigPiByte"}, {"value": 8, "name": "BigSIByte"}, {"value": 8, "name": "BigTByte"}, {"value": 8, "name": "BigTiByte"}, {"value": 8, "name": "BigYByte"}, {"value": 8, "name": "BigYiByte"}, {"value": 8, "name": "BigZByte"}, {"value": 8, "name": "BigZiByte"}, {"value": 189, "name": "Bytes"}, {"value": 132, "name": "Ftoa"}, {"value": 189, "name": "IBytes"}, {"value": 1249, "name": "ParseBytes"}, {"value": 8, "name": "bigBytesSizeTable"}, {"value": 8, "name": "bigIECExp"}, {"value": 8, "name": "bigSIExp"}, {"value": 8, "name": "bytesSizeTable"}, {"value": 16, "name": "errInvalid"}, {"value": 849, "name": "humanateBytes"}, {"value": 7449, "name": "init"}, {"children": [{"value": 378, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 112, "name": "logn"}, {"value": 8, "name": "revSIPrefixTable"}, {"value": 364, "name": "revfmap"}, {"value": 8, "name": "riParseRegex"}, {"value": 8, "name": "siPrefixTable"}, {"value": 112, "name": "statictmp_127"}, {"value": 112, "name": "statictmp_131"}, {"value": 416, "name": "statictmp_418"}, {"value": 208, "name": "statictmp_419"}, {"value": 136, "name": "statictmp_423"}, {"value": 272, "name": "statictmp_424"}, {"value": 104, "name": "stripTrailingZeros"}, {"value": 8, "name": "ten"}], "name": "dustin/go-humanize."}, {"children": [{"children": [{"value": 225, "name": "Error"}], "name": "(*ErrNotImplemented)."}, {"children": [{"value": 317, "name": "Get"}, {"value": 125, "name": "UsePercent"}], "name": "(*FileSystemUsage)."}, {"children": [{"value": 760, "name": "Get"}], "name": "(*Mem)."}, {"children": [{"value": 317, "name": "Get"}, {"children": [{"value": 329, "name": "func1"}], "name": "Get."}], "name": "(*ProcFDUsage)."}, {"children": [{"value": 716, "name": "Get"}], "name": "(*ProcMem)."}, {"children": [{"value": 350, "name": "FormatStartTime"}, {"value": 472, "name": "FormatTotal"}, {"value": 590, "name": "Get"}], "name": "(*ProcTime)."}, {"children": [{"value": 120, "name": "Error"}], "name": "ErrNotImplemented."}, {"value": 16, "name": "Procd"}, {"value": 143, "name": "getLinuxBootTime"}, {"children": [{"value": 216, "name": "func1"}], "name": "getLinuxBootTime."}, {"value": 158, "name": "init"}, {"children": [{"value": 127, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 196, "name": "parseMeminfo"}, {"children": [{"value": 379, "name": "func1"}], "name": "parseMeminfo."}, {"value": 218, "name": "procFileName"}, {"value": 909, "name": "readFile"}, {"value": 374, "name": "readProcFile"}, {"value": 118, "name": "strtoull"}, {"value": 16, "name": "system"}], "name": "elastic/gosigar."}, {"children": [{"children": [{"value": 111, "name": "Close"}, {"value": 26, "name": "IsDir"}, {"value": 47, "name": "ModTime"}, {"value": 29, "name": "Mode"}, {"value": 39, "name": "Name"}, {"value": 45, "name": "Read"}, {"value": 45, "name": "ReadAt"}, {"value": 41, "name": "ReadByte"}, {"value": 53, "name": "ReadRune"}, {"value": 216, "name": "Readdir"}, {"value": 18, "name": "Reset"}, {"value": 45, "name": "Seek"}, {"value": 26, "name": "Size"}, {"value": 41, "name": "Stat"}, {"value": 39, "name": "Sys"}, {"value": 36, "name": "UnreadByte"}, {"value": 36, "name": "UnreadRune"}, {"value": 45, "name": "WriteTo"}], "name": "(*AssetDirectory)."}, {"children": [{"value": 1640, "name": "Open"}], "name": "(*AssetFS)."}, {"children": [{"value": 111, "name": "Close"}, {"value": 26, "name": "IsDir"}, {"value": 47, "name": "ModTime"}, {"value": 29, "name": "Mode"}, {"value": 39, "name": "Name"}, {"value": 45, "name": "Read"}, {"value": 45, "name": "ReadAt"}, {"value": 41, "name": "ReadByte"}, {"value": 53, "name": "ReadRune"}, {"value": 179, "name": "Readdir"}, {"value": 18, "name": "Reset"}, {"value": 45, "name": "Seek"}, {"value": 21, "name": "Size"}, {"value": 41, "name": "Stat"}, {"value": 39, "name": "Sys"}, {"value": 36, "name": "UnreadByte"}, {"value": 36, "name": "UnreadRune"}, {"value": 45, "name": "WriteTo"}], "name": "(*AssetFile)."}, {"children": [{"value": 38, "name": "IsDir"}, {"value": 31, "name": "ModTime"}, {"value": 31, "name": "Mode"}, {"value": 92, "name": "Name"}, {"value": 15, "name": "Size"}, {"value": 19, "name": "Sys"}], "name": "(*FakeFile)."}, {"children": [{"value": 114, "name": "Close"}, {"value": 277, "name": "Read"}, {"value": 381, "name": "ReadAt"}, {"value": 148, "name": "ReadByte"}, {"value": 135, "name": "ReadRune"}, {"value": 263, "name": "Reset"}, {"value": 394, "name": "Seek"}, {"value": 221, "name": "UnreadByte"}, {"value": 218, "name": "UnreadRune"}, {"value": 150, "name": "WriteTo"}], "name": "AssetDirectory."}, {"children": [{"value": 111, "name": "Close"}, {"value": 277, "name": "Read"}, {"value": 381, "name": "ReadAt"}, {"value": 139, "name": "ReadByte"}, {"value": 135, "name": "ReadRune"}, {"value": 263, "name": "Reset"}, {"value": 385, "name": "Seek"}, {"value": 218, "name": "UnreadByte"}, {"value": 215, "name": "UnreadRune"}, {"value": 150, "name": "WriteTo"}], "name": "AssetFile."}, {"value": 1331, "name": "NewAssetDirectory"}, {"value": 24, "name": "defaultFileTimestamp"}, {"value": 213, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "go.itab.*AssetDirectory,net/http.File"}, {"value": 80, "name": "go.itab.*AssetDirectory,os.FileInfo"}, {"value": 40, "name": "go.itab.*AssetFS,net/http.FileSystem"}, {"value": 72, "name": "go.itab.*AssetFile,net/http.File"}, {"value": 80, "name": "go.itab.*AssetFile,os.FileInfo"}, {"value": 80, "name": "go.itab.*FakeFile,os.FileInfo"}], "name": "elazarl/go-bindata-assetfs."}, {"children": [{"children": [{"value": 351, "name": "Add"}, {"value": 170, "name": "After"}, {"value": 269, "name": "AfterFunc"}, {"value": 248, "name": "Now"}, {"value": 183, "name": "Sleep"}, {"value": 170, "name": "Tick"}, {"value": 944, "name": "Ticker"}, {"value": 929, "name": "Timer"}, {"value": 798, "name": "Wait"}, {"value": 968, "name": "inc"}, {"value": 610, "name": "removeClockTimer"}, {"value": 438, "name": "runNextTimer"}], "name": "(*Mock)."}, {"children": [{"value": 101, "name": "Stop"}], "name": "(*Ticker)."}, {"children": [{"value": 101, "name": "Stop"}], "name": "(*Timer)."}, {"children": [{"value": 70, "name": "After"}, {"value": 167, "name": "AfterFunc"}, {"value": 78, "name": "Now"}, {"value": 60, "name": "Sleep"}, {"value": 70, "name": "Tick"}, {"value": 196, "name": "Ticker"}, {"value": 196, "name": "Timer"}], "name": "(*clock)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 346, "name": "Swap"}], "name": "(*clockTimers)."}, {"children": [{"value": 31, "name": "Next"}, {"value": 497, "name": "Tick"}], "name": "(*internalTicker)."}, {"children": [{"value": 31, "name": "Next"}, {"value": 177, "name": "Tick"}], "name": "(*internalTimer)."}, {"children": [{"value": 11, "name": "Len"}, {"value": 216, "name": "Less"}, {"value": 241, "name": "Swap"}], "name": "clockTimers."}, {"value": 48, "name": "gosched"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 88, "name": "go.itab.*clock,github.com/cockroachdb/cockroach/vendor/github.com/facebookgo/clock.Clock"}, {"value": 48, "name": "go.itab.*internalTicker,github.com/cockroachdb/cockroach/vendor/github.com/facebookgo/clock.clockTimer"}, {"value": 48, "name": "go.itab.*internalTimer,github.com/cockroachdb/cockroach/vendor/github.com/facebookgo/clock.clockTimer"}, {"value": 56, "name": "go.itab.clockTimers,sort.Interface"}], "name": "facebookgo/clock."}, {"children": [{"children": [{"value": 1311, "name": "Capture"}, {"children": [{"value": 79, "name": "func1"}], "name": "Capture."}, {"value": 1288, "name": "CaptureError"}, {"value": 1360, "name": "CaptureErrorAndWait"}, {"value": 1309, "name": "CaptureMessage"}, {"value": 1383, "name": "CaptureMessageAndWait"}, {"value": 264, "name": "CapturePanic"}, {"children": [{"value": 2691, "name": "func1"}], "name": "CapturePanic."}, {"value": 264, "name": "CapturePanicAndWait"}, {"children": [{"value": 2742, "name": "func1"}], "name": "CapturePanicAndWait."}, {"value": 200, "name": "ClearContext"}, {"value": 67, "name": "Close"}, {"value": 213, "name": "IncludePaths"}, {"value": 186, "name": "ProjectID"}, {"value": 186, "name": "Release"}, {"value": 1486, "name": "SetDSN"}, {"value": 212, "name": "SetEnvironment"}, {"value": 101, "name": "SetHttpContext"}, {"value": 669, "name": "SetIgnoreErrors"}, {"value": 224, "name": "SetIncludePaths"}, {"value": 203, "name": "SetRelease"}, {"value": 74, "name": "SetTagsContext"}, {"value": 96, "name": "SetUserContext"}, {"value": 186, "name": "URL"}, {"value": 68, "name": "Wait"}, {"value": 209, "name": "shouldExcludeErr"}, {"value": 439, "name": "worker"}], "name": "(*Client)."}, {"children": [{"value": 22, "name": "Class"}, {"value": 117, "name": "Culprit"}], "name": "(*Exception)."}, {"children": [{"value": 45, "name": "Do"}, {"value": 45, "name": "Get"}, {"value": 45, "name": "Head"}, {"value": 45, "name": "Post"}, {"value": 45, "name": "PostForm"}, {"value": 1156, "name": "Send"}], "name": "(*HTTPTransport)."}, {"children": [{"value": 22, "name": "Class"}], "name": "(*Http)."}, {"children": [{"value": 22, "name": "Class"}], "name": "(*Message)."}, {"children": [{"value": 554, "name": "AddTags"}, {"value": 964, "name": "Init"}, {"value": 986, "name": "JSON"}], "name": "(*Packet)."}, {"children": [{"value": 22, "name": "Class"}, {"value": 243, "name": "Culprit"}], "name": "(*Stacktrace)."}, {"children": [{"value": 238, "name": "MarshalJSON"}, {"value": 303, "name": "UnmarshalJSON"}], "name": "(*Tag)."}, {"children": [{"value": 1085, "name": "UnmarshalJSON"}], "name": "(*Tags)."}, {"children": [{"value": 232, "name": "MarshalJSON"}, {"value": 259, "name": "UnmarshalJSON"}], "name": "(*Timestamp)."}, {"children": [{"value": 22, "name": "Class"}], "name": "(*User)."}, {"children": [{"value": 191, "name": "Clear"}, {"value": 97, "name": "SetHttp"}, {"value": 447, "name": "SetTags"}, {"value": 92, "name": "SetUser"}], "name": "(*context)."}, {"value": 8, "name": "DefaultClient"}, {"value": 16, "name": "ErrMissingPrivateKey"}, {"value": 16, "name": "ErrMissingProjectID"}, {"value": 16, "name": "ErrMissingUser"}, {"value": 16, "name": "ErrPacketDropped"}, {"value": 16, "name": "ErrUnableToUnmarshalJSON"}, {"children": [{"value": 122, "name": "Do"}, {"value": 135, "name": "Get"}, {"value": 135, "name": "Head"}, {"value": 197, "name": "Post"}, {"value": 145, "name": "PostForm"}], "name": "HTTPTransport."}, {"value": 8, "name": "MaxQueueBuffer"}, {"value": 624, "name": "NewException"}, {"value": 1113, "name": "NewPacket"}, {"value": 997, "name": "NewStacktrace"}, {"value": 2175, "name": "NewStacktraceFrame"}, {"value": 102, "name": "SetDSN"}, {"value": 82, "name": "SetEnvironment"}, {"value": 82, "name": "SetRelease"}, {"value": 72, "name": "SetTagsContext"}, {"children": [{"value": 225, "name": "MarshalJSON"}], "name": "Timestamp."}, {"value": 8, "name": "errorMsgPattern"}, {"value": 8, "name": "fileCache"}, {"value": 8, "name": "fileCacheLock"}, {"value": 1087, "name": "fileContext"}, {"value": 419, "name": "functionName"}, {"value": 16, "name": "hostname"}, {"value": 888, "name": "init"}, {"children": [{"value": 107, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 478, "name": "newClient"}, {"value": 651, "name": "newTransport"}, {"value": 1005, "name": "serializedPacket"}, {"value": 1, "name": "statictmp_435"}, {"value": 196, "name": "trimPath"}, {"value": 347, "name": "uuid"}, {"value": 40, "name": "go.itab.*Exception,github.com/cockroachdb/cockroach/vendor/github.com/getsentry/raven-go.Interface"}, {"value": 40, "name": "go.itab.*HTTPTransport,github.com/cockroachdb/cockroach/vendor/github.com/getsentry/raven-go.Transport"}, {"value": 40, "name": "go.itab.*Http,github.com/cockroachdb/cockroach/vendor/github.com/getsentry/raven-go.Interface"}, {"value": 40, "name": "go.itab.*Message,github.com/cockroachdb/cockroach/vendor/github.com/getsentry/raven-go.Interface"}, {"value": 40, "name": "go.itab.*User,github.com/cockroachdb/cockroach/vendor/github.com/getsentry/raven-go.Interface"}], "name": "getsentry/raven-go."}, {"children": [{"children": [{"children": [{"value": 248, "name": "Marshal"}, {"value": 119, "name": "Marshal-fm"}, {"value": 340, "name": "MarshalToString"}, {"value": 2067, "name": "marshalAny"}, {"value": 484, "name": "marshalField"}, {"value": 9117, "name": "marshalObject"}, {"value": 493, "name": "marshalTypeURL"}, {"value": 7292, "name": "marshalValue"}, {"value": 135, "name": "writeSep"}], "name": "(*Marshaler)."}, {"children": [{"value": 195, "name": "Unmarshal"}, {"value": 418, "name": "UnmarshalNext"}, {"value": 11974, "name": "unmarshalValue"}, {"children": [{"value": 600, "name": "func1"}], "name": "unmarshalValue."}], "name": "(*Unmarshaler)."}, {"children": [{"value": 219, "name": "write"}], "name": "(*errWriter)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*int32Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 469, "name": "Swap"}], "name": "(*mapKeys)."}, {"value": 125, "name": "Unmarshal"}, {"value": 144, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "int32Slice."}, {"value": 309, "name": "jsonProperties"}, {"children": [{"value": 11, "name": "Len"}, {"value": 695, "name": "Less"}, {"value": 350, "name": "Swap"}], "name": "mapKeys."}, {"value": 56, "name": "go.itab.int32Slice,sort.Interface"}, {"value": 56, "name": "go.itab.mapKeys,sort.Interface"}], "name": "jsonpb."}, {"children": [{"children": [{"value": 32, "name": "Bytes"}, {"value": 5314, "name": "DebugPrint"}, {"value": 224, "name": "DecodeFixed32"}, {"value": 260, "name": "DecodeFixed64"}, {"value": 313, "name": "DecodeGroup"}, {"value": 290, "name": "DecodeMessage"}, {"value": 877, "name": "DecodeRawBytes"}, {"value": 206, "name": "DecodeStringBytes"}, {"value": 835, "name": "DecodeVarint"}, {"value": 142, "name": "DecodeZigzag32"}, {"value": 144, "name": "DecodeZigzag64"}, {"value": 233, "name": "EncodeFixed32"}, {"value": 234, "name": "EncodeFixed64"}, {"value": 282, "name": "EncodeMessage"}, {"value": 327, "name": "EncodeRawBytes"}, {"value": 327, "name": "EncodeStringBytes"}, {"value": 448, "name": "EncodeVarint"}, {"value": 102, "name": "EncodeZigzag32"}, {"value": 103, "name": "EncodeZigzag64"}, {"value": 763, "name": "Marshal"}, {"value": 22, "name": "Reset"}, {"value": 121, "name": "SetBuf"}, {"value": 508, "name": "Unmarshal"}, {"value": 338, "name": "decDuration"}, {"value": 424, "name": "decTimestamp"}, {"value": 488, "name": "dec_bool"}, {"value": 458, "name": "dec_custom_bytes"}, {"value": 440, "name": "dec_custom_ref_bytes"}, {"value": 509, "name": "dec_custom_slice_bytes"}, {"value": 489, "name": "dec_duration"}, {"value": 501, "name": "dec_int32"}, {"value": 501, "name": "dec_int64"}, {"value": 2814, "name": "dec_new_map"}, {"value": 169, "name": "dec_proto3_bool"}, {"value": 163, "name": "dec_proto3_int32"}, {"value": 164, "name": "dec_proto3_int64"}, {"value": 188, "name": "dec_proto3_string"}, {"value": 148, "name": "dec_ref_duration"}, {"value": 589, "name": "dec_ref_struct_message"}, {"value": 281, "name": "dec_ref_time"}, {"value": 387, "name": "dec_slice_bool"}, {"value": 203, "name": "dec_slice_byte"}, {"value": 307, "name": "dec_slice_duration"}, {"value": 384, "name": "dec_slice_int32"}, {"value": 385, "name": "dec_slice_int64"}, {"value": 589, "name": "dec_slice_packed_bool"}, {"value": 586, "name": "dec_slice_packed_int32"}, {"value": 586, "name": "dec_slice_packed_int64"}, {"value": 373, "name": "dec_slice_ref_duration"}, {"value": 755, "name": "dec_slice_ref_struct"}, {"value": 105, "name": "dec_slice_ref_struct_message"}, {"value": 361, "name": "dec_slice_ref_time"}, {"value": 455, "name": "dec_slice_slice_byte"}, {"value": 427, "name": "dec_slice_string"}, {"value": 1251, "name": "dec_slice_struct"}, {"value": 105, "name": "dec_slice_struct_group"}, {"value": 105, "name": "dec_slice_struct_message"}, {"value": 385, "name": "dec_slice_time"}, {"value": 275, "name": "dec_string"}, {"value": 308, "name": "dec_struct_group"}, {"value": 907, "name": "dec_struct_message"}, {"value": 281, "name": "dec_time"}, {"value": 219, "name": "decodeVarintSlow"}, {"value": 480, "name": "enc_bool"}, {"value": 733, "name": "enc_custom_bytes"}, {"value": 678, "name": "enc_custom_ref_bytes"}, {"value": 925, "name": "enc_custom_slice_bytes"}, {"value": 785, "name": "enc_duration"}, {"value": 395, "name": "enc_ext_slice_byte"}, {"value": 360, "name": "enc_exts"}, {"value": 480, "name": "enc_int32"}, {"value": 480, "name": "enc_int64"}, {"value": 152, "name": "enc_len_struct"}, {"children": [{"value": 97, "name": "func1"}], "name": "enc_len_struct."}, {"value": 1580, "name": "enc_len_thing"}, {"value": 182, "name": "enc_map"}, {"value": 1430, "name": "enc_map_body"}, {"value": 1640, "name": "enc_new_map"}, {"children": [{"value": 340, "name": "func1"}], "name": "enc_new_map."}, {"value": 453, "name": "enc_proto3_bool"}, {"value": 475, "name": "enc_proto3_int32"}, {"value": 477, "name": "enc_proto3_int64"}, {"value": 530, "name": "enc_proto3_slice_byte"}, {"value": 488, "name": "enc_proto3_string"}, {"value": 474, "name": "enc_proto3_uint32"}, {"value": 429, "name": "enc_ref_bool"}, {"value": 725, "name": "enc_ref_duration"}, {"value": 427, "name": "enc_ref_int32"}, {"value": 428, "name": "enc_ref_int64"}, {"value": 436, "name": "enc_ref_string"}, {"value": 1508, "name": "enc_ref_struct_message"}, {"value": 726, "name": "enc_ref_time"}, {"value": 428, "name": "enc_ref_uint32"}, {"value": 622, "name": "enc_slice_bool"}, {"value": 530, "name": "enc_slice_byte"}, {"value": 937, "name": "enc_slice_duration"}, {"value": 640, "name": "enc_slice_int32"}, {"value": 637, "name": "enc_slice_int64"}, {"value": 596, "name": "enc_slice_packed_bool"}, {"value": 969, "name": "enc_slice_packed_int32"}, {"value": 966, "name": "enc_slice_packed_int64"}, {"value": 966, "name": "enc_slice_packed_uint32"}, {"value": 855, "name": "enc_slice_ref_duration"}, {"value": 2299, "name": "enc_slice_ref_struct_message"}, {"value": 865, "name": "enc_slice_ref_time"}, {"value": 605, "name": "enc_slice_slice_byte"}, {"value": 540, "name": "enc_slice_string"}, {"value": 972, "name": "enc_slice_struct_group"}, {"value": 2233, "name": "enc_slice_struct_message"}, {"value": 934, "name": "enc_slice_time"}, {"value": 637, "name": "enc_slice_uint32"}, {"value": 490, "name": "enc_string"}, {"value": 2030, "name": "enc_struct"}, {"value": 689, "name": "enc_struct_group"}, {"value": 1518, "name": "enc_struct_message"}, {"value": 786, "name": "enc_time"}, {"value": 479, "name": "enc_uint32"}, {"value": 668, "name": "skip"}, {"value": 894, "name": "skipAndSave"}, {"value": 5524, "name": "unmarshalType"}], "name": "(*Buffer)."}, {"children": [{"value": 124, "name": "Compare"}, {"value": 123, "name": "Equal"}, {"value": 201, "name": "GoString"}], "name": "(*Extension)."}, {"children": [{"value": 197, "name": "repeated"}], "name": "(*ExtensionDesc)."}, {"children": [{"value": 147, "name": "Init"}, {"value": 5462, "name": "Parse"}, {"value": 1035, "name": "String"}, {"value": 296, "name": "init"}, {"value": 745, "name": "setCustomEncAndDec"}, {"value": 926, "name": "setDurationEncAndDec"}, {"value": 13577, "name": "setEncAndDec"}, {"value": 865, "name": "setSliceOfNonPointerStructs"}, {"value": 419, "name": "setTag"}, {"value": 926, "name": "setTimeEncAndDec"}], "name": "(*Properties)."}, {"children": [{"value": 192, "name": "Error"}], "name": "(*RequiredNotSetError)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 112, "name": "Less"}, {"value": 77, "name": "Swap"}], "name": "(*StructProperties)."}, {"children": [{"value": 1443, "name": "Marshal"}, {"value": 255, "name": "Text"}, {"value": 3232, "name": "writeAny"}, {"value": 782, "name": "writeEnum"}, {"value": 581, "name": "writeExtension"}, {"value": 2487, "name": "writeExtensions"}, {"value": 1986, "name": "writeProto3Any"}, {"value": 6435, "name": "writeStruct"}], "name": "(*TextMarshaler)."}, {"children": [{"value": 68, "name": "extensionsRead"}, {"value": 251, "name": "extensionsWrite"}], "name": "(*XXX_InternalExtensions)."}, {"children": [{"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 22, "name": "String"}], "name": "(*duration)."}, {"children": [{"value": 100, "name": "ExtensionMap"}, {"value": 120, "name": "ExtensionRangeArray"}, {"value": 90, "name": "ProtoMessage"}, {"value": 90, "name": "Reset"}, {"value": 110, "name": "String"}, {"value": 205, "name": "extensionsRead"}, {"value": 185, "name": "extensionsWrite"}], "name": "(*extensionAdapter)."}, {"children": [{"value": 168, "name": "IsValid"}], "name": "(*field)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*int32Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 222, "name": "Less"}, {"value": 469, "name": "Swap"}], "name": "(*mapKeySorter)."}, {"children": [{"value": 150, "name": "Lock"}, {"value": 150, "name": "Unlock"}], "name": "(*notLocker)."}, {"children": [{"value": 45, "name": "Index"}, {"value": 29, "name": "Len"}], "name": "(*structRefSlice)."}, {"children": [{"value": 456, "name": "put"}], "name": "(*tagMap)."}, {"children": [{"value": 1456, "name": "Write"}, {"value": 198, "name": "WriteByte"}, {"value": 385, "name": "WriteString"}, {"value": 199, "name": "unindent"}, {"value": 210, "name": "writeIndent"}], "name": "(*textWriter)."}, {"children": [{"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 22, "name": "String"}], "name": "(*timestamp)."}, {"children": [{"value": 1, "name": "1"}, {"value": 40, "name": "2"}, {"value": 2, "name": "4"}, {"value": 3, "name": "5"}, {"value": 4, "name": "6"}, {"value": 3, "name": "7"}], "name": ".gobytes."}, {"value": 846, "name": "BytesToExtensionsMap"}, {"value": 564, "name": "Clone"}, {"value": 102, "name": "CompactTextString"}, {"value": 173, "name": "DecodeVarint"}, {"value": 164, "name": "EnumName"}, {"value": 940, "name": "Equal"}, {"value": 16, "name": "ErrInternalBadWireType"}, {"value": 16, "name": "ErrMissingExtension"}, {"value": 16, "name": "ErrNil"}, {"value": 16, "name": "ErrTooLarge"}, {"children": [{"value": 266, "name": "GoString"}], "name": "Extension."}, {"value": 2543, "name": "GetExtension"}, {"value": 381, "name": "GetProperties"}, {"value": 942, "name": "HasExtension"}, {"value": 437, "name": "Marshal"}, {"value": 788, "name": "Merge"}, {"value": 696, "name": "RegisterEnum"}, {"value": 637, "name": "RegisterType"}, {"value": 187, "name": "RegisteredExtensions"}, {"value": 292, "name": "Size"}, {"value": 70, "name": "SizeVarint"}, {"value": 143, "name": "Unmarshal"}, {"value": 1179, "name": "UnmarshalJSONEnum"}, {"value": 319, "name": "UnmarshalMerge"}, {"value": 597, "name": "appendStructPointer"}, {"value": 24, "name": "backslashBS"}, {"value": 24, "name": "backslashDQ"}, {"value": 24, "name": "backslashN"}, {"value": 24, "name": "backslashR"}, {"value": 24, "name": "backslashT"}, {"value": 965, "name": "checkExtensionTypes"}, {"value": 2, "name": "compactTextMarshaler"}, {"value": 728, "name": "decodeExtension"}, {"value": 1074, "name": "defaultExtensionValue"}, {"value": 8, "name": "defaults"}, {"value": 501, "name": "durationFromProto"}, {"value": 16, "name": "durationType"}, {"value": 735, "name": "encodeExtension"}, {"value": 1074, "name": "encodeExtensionsMap"}, {"value": 24, "name": "endBraceNewline"}, {"value": 8, "name": "enumStringMaps"}, {"value": 8, "name": "enumValueMaps"}, {"value": 4687, "name": "equalAny"}, {"value": 1866, "name": "equalExtMap"}, {"value": 125, "name": "equalExtensions"}, {"value": 3123, "name": "equalStruct"}, {"value": 16, "name": "errBadHex"}, {"value": 16, "name": "errBadUTF8"}, {"value": 16, "name": "errNoMessageTypeID"}, {"value": 16, "name": "errOneofHasNil"}, {"value": 16, "name": "errOverflow"}, {"value": 16, "name": "errRepeatedHasNil"}, {"value": 32, "name": "extProp"}, {"value": 16, "name": "extendableBytesType"}, {"value": 16, "name": "extendableProtoType"}, {"value": 16, "name": "extendableProtoV1Type"}, {"children": [{"value": 98, "name": "ExtensionMap"}, {"value": 118, "name": "ExtensionRangeArray"}, {"value": 88, "name": "ProtoMessage"}, {"value": 88, "name": "Reset"}, {"value": 108, "name": "String"}, {"value": 135, "name": "extensionsRead"}, {"value": 76, "name": "extensionsWrite"}], "name": "extensionAdapter."}, {"value": 8, "name": "extensionMaps"}, {"value": 859, "name": "extensionProperties"}, {"value": 16, "name": "extensionRangeType"}, {"value": 742, "name": "extensionsMapSize"}, {"value": 245, "name": "extensionsSize"}, {"children": [{"value": 17, "name": "IsValid"}], "name": "field."}, {"value": 5805, "name": "fieldDefault"}, {"value": 5641, "name": "getPropertiesLocked"}, {"value": 331, "name": "getbase"}, {"value": 3080, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 92, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "int32PtrType"}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "int32Slice."}, {"value": 248, "name": "isAny"}, {"value": 135, "name": "isExtensionField"}, {"value": 102, "name": "isMarshaler"}, {"value": 408, "name": "isProto3Zero"}, {"value": 102, "name": "isUnmarshaler"}, {"value": 236, "name": "logNoSliceEnc"}, {"value": 1509, "name": "mapEncodeScratch"}, {"children": [{"value": 11, "name": "Len"}, {"value": 174, "name": "Less"}, {"value": 353, "name": "Swap"}], "name": "mapKeySorter."}, {"value": 307, "name": "mapKeys"}, {"children": [{"value": 352, "name": "func1"}, {"value": 147, "name": "func2"}, {"value": 147, "name": "func3"}], "name": "mapKeys."}, {"value": 16, "name": "marshalerType"}, {"value": 5824, "name": "mergeAny"}, {"value": 948, "name": "mergeExtension"}, {"value": 2785, "name": "mergeStruct"}, {"value": 8, "name": "messageSetMap"}, {"value": 24, "name": "nan"}, {"value": 24, "name": "negInf"}, {"value": 24, "name": "newline"}, {"children": [{"value": 1, "name": "Lock"}, {"value": 1, "name": "Unlock"}], "name": "notLocker."}, {"value": 24, "name": "posInf"}, {"value": 8, "name": "propertiesMap"}, {"value": 24, "name": "propertiesMu"}, {"value": 8, "name": "protoFiles"}, {"value": 16, "name": "protoMessageType"}, {"value": 8, "name": "protoTypes"}, {"value": 194, "name": "requiresQuotes"}, {"value": 8, "name": "revProtoTypes"}, {"value": 1151, "name": "setCustomType"}, {"value": 177, "name": "setPtrCustomType"}, {"value": 884, "name": "size"}, {"value": 10, "name": "sizeFixed32"}, {"value": 10, "name": "sizeFixed64"}, {"value": 78, "name": "sizeRawBytes"}, {"value": 78, "name": "sizeStringBytes"}, {"value": 34, "name": "sizeVarint"}, {"value": 82, "name": "sizeZigzag32"}, {"value": 83, "name": "sizeZigzag64"}, {"value": 58, "name": "size_bool"}, {"value": 252, "name": "size_custom_bytes"}, {"value": 252, "name": "size_custom_ref_bytes"}, {"value": 479, "name": "size_custom_slice_bytes"}, {"value": 345, "name": "size_duration"}, {"value": 53, "name": "size_ext_slice_byte"}, {"value": 85, "name": "size_exts"}, {"value": 149, "name": "size_int32"}, {"value": 149, "name": "size_int64"}, {"value": 92, "name": "size_map"}, {"value": 949, "name": "size_new_map"}, {"value": 67, "name": "size_proto3_bool"}, {"value": 159, "name": "size_proto3_int32"}, {"value": 158, "name": "size_proto3_int64"}, {"value": 171, "name": "size_proto3_slice_byte"}, {"value": 161, "name": "size_proto3_string"}, {"value": 158, "name": "size_proto3_uint32"}, {"value": 21, "name": "size_ref_bool"}, {"value": 312, "name": "size_ref_duration"}, {"value": 115, "name": "size_ref_int32"}, {"value": 119, "name": "size_ref_int64"}, {"value": 122, "name": "size_ref_string"}, {"value": 362, "name": "size_ref_struct_message"}, {"value": 297, "name": "size_ref_time"}, {"value": 118, "name": "size_ref_uint32"}, {"value": 63, "name": "size_slice_bool"}, {"value": 173, "name": "size_slice_byte"}, {"value": 499, "name": "size_slice_duration"}, {"value": 254, "name": "size_slice_int32"}, {"value": 251, "name": "size_slice_int64"}, {"value": 157, "name": "size_slice_packed_bool"}, {"value": 295, "name": "size_slice_packed_int32"}, {"value": 292, "name": "size_slice_packed_int64"}, {"value": 292, "name": "size_slice_packed_uint32"}, {"value": 441, "name": "size_slice_ref_duration"}, {"value": 553, "name": "size_slice_ref_struct_message"}, {"value": 440, "name": "size_slice_ref_time"}, {"value": 236, "name": "size_slice_slice_byte"}, {"value": 202, "name": "size_slice_string"}, {"value": 319, "name": "size_slice_struct_group"}, {"value": 451, "name": "size_slice_struct_message"}, {"value": 488, "name": "size_slice_time"}, {"value": 251, "name": "size_slice_uint32"}, {"value": 151, "name": "size_string"}, {"value": 393, "name": "size_struct"}, {"value": 237, "name": "size_struct_group"}, {"value": 369, "name": "size_struct_message"}, {"value": 330, "name": "size_time"}, {"value": 148, "name": "size_uint32"}, {"value": 24, "name": "spaces"}, {"value": 24, "name": "statictmp_4719"}, {"value": 24, "name": "statictmp_4721"}, {"value": 2, "name": "statictmp_4842"}, {"value": 2, "name": "statictmp_4843"}, {"value": 2, "name": "statictmp_4844"}, {"value": 2, "name": "statictmp_4845"}, {"value": 2, "name": "statictmp_4846"}, {"value": 137, "name": "structPointer_Interface"}, {"value": 145, "name": "structPointer_InterfaceAt"}, {"value": 309, "name": "structPointer_InterfaceRef"}, {"value": 118, "name": "structPointer_NewAt"}, {"value": 16, "name": "timeType"}, {"value": 355, "name": "timestampFromProto"}, {"value": 286, "name": "timestampProto"}, {"value": 90, "name": "toStructPointer"}, {"value": 16, "name": "unmarshalerType"}, {"value": 663, "name": "validateDuration"}, {"value": 633, "name": "validateTimestamp"}, {"value": 256, "name": "writeName"}, {"value": 356, "name": "writeRaw"}, {"value": 947, "name": "writeString"}, {"value": 371, "name": "writeUnknownInt"}, {"value": 2403, "name": "writeUnknownStruct"}, {"value": 20, "name": "zeroes"}, {"value": 40, "name": "go.itab.*RequiredNotSetError,error"}, {"value": 56, "name": "go.itab.*StructProperties,sort.Interface"}, {"value": 56, "name": "go.itab.*duration,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*textWriter,io.Writer"}, {"value": 56, "name": "go.itab.*timestamp,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 80, "name": "go.itab.extensionAdapter,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.extendableProto"}, {"value": 56, "name": "go.itab.int32Slice,sort.Interface"}, {"value": 56, "name": "go.itab.mapKeySorter,sort.Interface"}, {"value": 48, "name": "go.itab.notLocker,sync.Locker"}], "name": "proto."}, {"children": [{"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*Int32Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Swap"}], "name": "(*Int64Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Swap"}], "name": "(*Uint64Slice)."}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "Int32Slice."}, {"value": 126, "name": "Int32s"}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 74, "name": "Swap"}], "name": "Int64Slice."}, {"value": 126, "name": "Int64s"}, {"value": 80, "name": "Strings"}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 74, "name": "Swap"}], "name": "Uint64Slice."}, {"value": 126, "name": "Uint64s"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 56, "name": "go.itab.Int32Slice,sort.Interface"}, {"value": 56, "name": "go.itab.Int64Slice,sort.Interface"}, {"value": 56, "name": "go.itab.Uint64Slice,sort.Interface"}], "name": "sortkeys."}, {"children": [{"children": [{"value": 947, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 822, "name": "Equal"}, {"value": 47, "name": "GetTypeUrl"}, {"value": 66, "name": "GetValue"}, {"value": 958, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 524, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 163, "name": "Size"}, {"value": 730, "name": "String"}, {"value": 2631, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Any)."}, {"children": [{"value": 330, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 271, "name": "Equal"}, {"value": 24, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 237, "name": "Marshal"}, {"value": 135, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 9, "name": "Reset"}, {"value": 29, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1390, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*BoolValue)."}, {"children": [{"value": 440, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 403, "name": "Equal"}, {"value": 65, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1940, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*BytesValue)."}, {"children": [{"value": 339, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 276, "name": "Equal"}, {"value": 31, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 299, "name": "Marshal"}, {"value": 257, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 37, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1454, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*DoubleValue)."}, {"children": [{"value": 396, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 314, "name": "Equal"}, {"value": 27, "name": "GetNanos"}, {"value": 29, "name": "GetSeconds"}, {"value": 958, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 256, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 135, "name": "Size"}, {"value": 238, "name": "String"}, {"value": 1778, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Duration)."}, {"children": [{"value": 161, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 133, "name": "Equal"}, {"value": 261, "name": "GoString"}, {"value": 127, "name": "Marshal"}, {"value": 28, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 8, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 195, "name": "String"}, {"value": 921, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Empty)."}, {"children": [{"value": 771, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 563, "name": "Equal"}, {"value": 65, "name": "GetPaths"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 408, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 174, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1859, "name": "Unmarshal"}], "name": "(*FieldMask)."}, {"children": [{"value": 339, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 277, "name": "Equal"}, {"value": 31, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 298, "name": "Marshal"}, {"value": 176, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 36, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1366, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*FloatValue)."}, {"children": [{"value": 325, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 268, "name": "Equal"}, {"value": 26, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 162, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 86, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1382, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Int32Value)."}, {"children": [{"value": 330, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 273, "name": "Equal"}, {"value": 29, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 164, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 85, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1383, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Int64Value)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 512, "name": "Equal"}, {"value": 65, "name": "GetValues"}, {"value": 688, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 455, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 187, "name": "Size"}, {"value": 522, "name": "String"}, {"value": 1971, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*ListValue)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 175, "name": "XXX_WellKnownType"}], "name": "(*NullValue)."}, {"children": [{"value": 500, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 375, "name": "Equal"}, {"value": 47, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 295, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 98, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1641, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*StringValue)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 768, "name": "Equal"}, {"value": 29, "name": "GetFields"}, {"value": 1538, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 1063, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 89, "name": "Reset"}, {"value": 410, "name": "Size"}, {"value": 1259, "name": "String"}, {"value": 3146, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Struct)."}, {"children": [{"value": 396, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 314, "name": "Equal"}, {"value": 27, "name": "GetNanos"}, {"value": 29, "name": "GetSeconds"}, {"value": 958, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 256, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 135, "name": "Size"}, {"value": 80, "name": "String"}, {"value": 1778, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Timestamp)."}, {"children": [{"value": 325, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 268, "name": "Equal"}, {"value": 26, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 161, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 12, "name": "Reset"}, {"value": 85, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1382, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*UInt32Value)."}, {"children": [{"value": 330, "name": "Compare"}, {"value": 141, "name": "Descriptor"}, {"value": 273, "name": "Equal"}, {"value": 29, "name": "GetValue"}, {"value": 553, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 164, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 13, "name": "Reset"}, {"value": 85, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1383, "name": "Unmarshal"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*UInt64Value)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 427, "name": "Equal"}, {"value": 70, "name": "GetBoolValue"}, {"value": 47, "name": "GetKind"}, {"value": 75, "name": "GetListValue"}, {"value": 72, "name": "GetNullValue"}, {"value": 77, "name": "GetNumberValue"}, {"value": 92, "name": "GetStringValue"}, {"value": 75, "name": "GetStructValue"}, {"value": 670, "name": "GoString"}, {"value": 280, "name": "Marshal"}, {"value": 189, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 102, "name": "Reset"}, {"value": 87, "name": "Size"}, {"value": 432, "name": "String"}, {"value": 5218, "name": "Unmarshal"}, {"value": 520, "name": "XXX_OneofFuncs"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Value)."}, {"children": [{"value": 271, "name": "Equal"}, {"value": 408, "name": "GoString"}, {"value": 121, "name": "MarshalTo"}, {"value": 10, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_BoolValue)."}, {"children": [{"value": 342, "name": "Equal"}, {"value": 387, "name": "GoString"}, {"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 501, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_ListValue)."}, {"children": [{"value": 268, "name": "Equal"}, {"value": 408, "name": "GoString"}, {"value": 148, "name": "MarshalTo"}, {"value": 76, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_NullValue)."}, {"children": [{"value": 276, "name": "Equal"}, {"value": 408, "name": "GoString"}, {"value": 231, "name": "MarshalTo"}, {"value": 10, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_NumberValue)."}, {"children": [{"value": 375, "name": "Equal"}, {"value": 408, "name": "GoString"}, {"value": 278, "name": "MarshalTo"}, {"value": 89, "name": "Size"}, {"value": 447, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_StringValue)."}, {"children": [{"value": 342, "name": "Equal"}, {"value": 387, "name": "GoString"}, {"value": 351, "name": "MarshalTo"}, {"value": 111, "name": "Size"}, {"value": 501, "name": "String"}, {"value": 1, "name": "isValue_Kind"}], "name": "(*Value_StructValue)."}, {"value": 501, "name": "DurationFromProto"}, {"value": 16, "name": "ErrIntOverflowAny"}, {"value": 16, "name": "ErrIntOverflowDuration"}, {"value": 16, "name": "ErrIntOverflowEmpty"}, {"value": 16, "name": "ErrIntOverflowFieldMask"}, {"value": 16, "name": "ErrIntOverflowStruct"}, {"value": 16, "name": "ErrIntOverflowTimestamp"}, {"value": 16, "name": "ErrIntOverflowWrappers"}, {"value": 16, "name": "ErrInvalidLengthAny"}, {"value": 16, "name": "ErrInvalidLengthDuration"}, {"value": 16, "name": "ErrInvalidLengthEmpty"}, {"value": 16, "name": "ErrInvalidLengthFieldMask"}, {"value": 16, "name": "ErrInvalidLengthStruct"}, {"value": 16, "name": "ErrInvalidLengthTimestamp"}, {"value": 16, "name": "ErrInvalidLengthWrappers"}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 166, "name": "String"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "NullValue."}, {"value": 8, "name": "NullValue_name"}, {"value": 8, "name": "NullValue_value"}, {"value": 134, "name": "SizeOfStdTime"}, {"value": 215, "name": "StdTimeMarshalTo"}, {"value": 297, "name": "StdTimeUnmarshal"}, {"value": 355, "name": "TimestampFromProto"}, {"value": 286, "name": "TimestampProto"}, {"value": 277, "name": "TimestampString"}, {"value": 1538, "name": "_Value_OneofMarshaler"}, {"value": 1178, "name": "_Value_OneofSizer"}, {"value": 2049, "name": "_Value_OneofUnmarshaler"}, {"value": 122, "name": "encodeVarintAny"}, {"value": 122, "name": "encodeVarintDuration"}, {"value": 122, "name": "encodeVarintStruct"}, {"value": 122, "name": "encodeVarintTimestamp"}, {"value": 122, "name": "encodeVarintWrappers"}, {"value": 24, "name": "fileDescriptorAny"}, {"value": 24, "name": "fileDescriptorDuration"}, {"value": 24, "name": "fileDescriptorEmpty"}, {"value": 24, "name": "fileDescriptorFieldMask"}, {"value": 24, "name": "fileDescriptorStruct"}, {"value": 24, "name": "fileDescriptorTimestamp"}, {"value": 24, "name": "fileDescriptorWrappers"}, {"value": 2259, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "10"}, {"value": 92, "name": "11"}, {"value": 210, "name": "12"}, {"value": 467, "name": "13"}, {"value": 210, "name": "14"}, {"value": 210, "name": "2"}, {"value": 92, "name": "3"}, {"value": 210, "name": "4"}, {"value": 92, "name": "5"}, {"value": 210, "name": "6"}, {"value": 92, "name": "7"}, {"value": 210, "name": "8"}, {"value": 240, "name": "9"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipAny"}, {"value": 1621, "name": "skipDuration"}, {"value": 1621, "name": "skipEmpty"}, {"value": 1621, "name": "skipFieldMask"}, {"value": 1621, "name": "skipStruct"}, {"value": 1621, "name": "skipTimestamp"}, {"value": 1621, "name": "skipWrappers"}, {"value": 34, "name": "sovAny"}, {"value": 34, "name": "sovDuration"}, {"value": 34, "name": "sovFieldMask"}, {"value": 34, "name": "sovStruct"}, {"value": 34, "name": "sovTimestamp"}, {"value": 34, "name": "sovWrappers"}, {"value": 48, "name": "statictmp_1356"}, {"value": 48, "name": "statictmp_1370"}, {"value": 48, "name": "statictmp_1379"}, {"value": 48, "name": "statictmp_1388"}, {"value": 48, "name": "statictmp_1397"}, {"value": 48, "name": "statictmp_1406"}, {"value": 48, "name": "statictmp_1415"}, {"value": 48, "name": "statictmp_1424"}, {"value": 48, "name": "statictmp_1434"}, {"value": 8, "name": "statictmp_1700"}, {"value": 8, "name": "statictmp_1833"}, {"value": 8, "name": "statictmp_1836"}, {"value": 8, "name": "statictmp_1839"}, {"value": 8, "name": "statictmp_1842"}, {"value": 8, "name": "statictmp_1845"}, {"value": 8, "name": "statictmp_1848"}, {"value": 8, "name": "statictmp_1851"}, {"value": 16, "name": "statictmp_1853"}, {"value": 8, "name": "statictmp_1855"}, {"value": 24, "name": "statictmp_1857"}, {"value": 8, "name": "statictmp_1859"}, {"value": 64, "name": "statictmp_192"}, {"value": 48, "name": "statictmp_2198"}, {"value": 48, "name": "statictmp_2207"}, {"value": 48, "name": "statictmp_2216"}, {"value": 48, "name": "statictmp_2225"}, {"value": 48, "name": "statictmp_2234"}, {"value": 48, "name": "statictmp_2243"}, {"value": 48, "name": "statictmp_2252"}, {"value": 48, "name": "statictmp_2261"}, {"value": 48, "name": "statictmp_2270"}, {"value": 208, "name": "statictmp_2550"}, {"value": 203, "name": "statictmp_2551"}, {"value": 172, "name": "statictmp_2552"}, {"value": 196, "name": "statictmp_2553"}, {"value": 432, "name": "statictmp_2554"}, {"value": 208, "name": "statictmp_2555"}, {"value": 281, "name": "statictmp_2556"}, {"value": 4, "name": "statictmp_2558"}, {"value": 16, "name": "statictmp_2559"}, {"value": 16, "name": "statictmp_2563"}, {"value": 4, "name": "statictmp_2564"}, {"value": 8, "name": "statictmp_2638"}, {"value": 8, "name": "statictmp_320"}, {"value": 8, "name": "statictmp_41"}, {"value": 8, "name": "statictmp_473"}, {"value": 32, "name": "statictmp_560"}, {"value": 24, "name": "statictmp_619"}, {"value": 8, "name": "statictmp_621"}, {"value": 48, "name": "statictmp_774"}, {"value": 8, "name": "statictmp_848"}, {"value": 8, "name": "statictmp_850"}, {"value": 8, "name": "statictmp_852"}, {"value": 16, "name": "statictmp_854"}, {"value": 8, "name": "statictmp_856"}, {"value": 24, "name": "statictmp_951"}, {"value": 8, "name": "statictmp_953"}, {"value": 663, "name": "validateDuration"}, {"value": 633, "name": "validateTimestamp"}, {"value": 56, "name": "go.itab.*Any,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BoolValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BytesValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DoubleValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Duration,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Empty,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FieldMask,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FloatValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Int32Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Int64Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ListValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*StringValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Struct,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Timestamp,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UInt32Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UInt64Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Value,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}, {"value": 64, "name": "go.itab.*Value_BoolValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}, {"value": 64, "name": "go.itab.*Value_ListValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}, {"value": 64, "name": "go.itab.*Value_NullValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}, {"value": 64, "name": "go.itab.*Value_NumberValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}, {"value": 64, "name": "go.itab.*Value_StringValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}, {"value": 64, "name": "go.itab.*Value_StructValue,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/types.isValue_Kind"}], "name": "types."}], "name": "gogo/protobuf/"}, {"children": [{"children": [{"children": [{"children": [{"value": 248, "name": "Marshal"}, {"value": 340, "name": "MarshalToString"}, {"value": 2067, "name": "marshalAny"}, {"value": 484, "name": "marshalField"}, {"value": 8471, "name": "marshalObject"}, {"value": 493, "name": "marshalTypeURL"}, {"value": 4678, "name": "marshalValue"}, {"value": 135, "name": "writeSep"}], "name": "(*Marshaler)."}, {"children": [{"value": 195, "name": "Unmarshal"}, {"value": 418, "name": "UnmarshalNext"}, {"value": 9700, "name": "unmarshalValue"}, {"children": [{"value": 600, "name": "func1"}], "name": "unmarshalValue."}], "name": "(*Unmarshaler)."}, {"children": [{"value": 219, "name": "write"}], "name": "(*errWriter)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*int32Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 469, "name": "Swap"}], "name": "(*mapKeys)."}, {"value": 139, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "int32Slice."}, {"value": 309, "name": "jsonProperties"}, {"children": [{"value": 11, "name": "Len"}, {"value": 695, "name": "Less"}, {"value": 350, "name": "Swap"}], "name": "mapKeys."}, {"value": 56, "name": "go.itab.int32Slice,sort.Interface"}, {"value": 56, "name": "go.itab.mapKeys,sort.Interface"}], "name": "jsonpb."}, {"children": [{"children": [{"value": 32, "name": "Bytes"}, {"value": 5314, "name": "DebugPrint"}, {"value": 224, "name": "DecodeFixed32"}, {"value": 260, "name": "DecodeFixed64"}, {"value": 313, "name": "DecodeGroup"}, {"value": 290, "name": "DecodeMessage"}, {"value": 877, "name": "DecodeRawBytes"}, {"value": 206, "name": "DecodeStringBytes"}, {"value": 835, "name": "DecodeVarint"}, {"value": 142, "name": "DecodeZigzag32"}, {"value": 144, "name": "DecodeZigzag64"}, {"value": 233, "name": "EncodeFixed32"}, {"value": 234, "name": "EncodeFixed64"}, {"value": 282, "name": "EncodeMessage"}, {"value": 327, "name": "EncodeRawBytes"}, {"value": 327, "name": "EncodeStringBytes"}, {"value": 448, "name": "EncodeVarint"}, {"value": 102, "name": "EncodeZigzag32"}, {"value": 103, "name": "EncodeZigzag64"}, {"value": 763, "name": "Marshal"}, {"value": 22, "name": "Reset"}, {"value": 121, "name": "SetBuf"}, {"value": 508, "name": "Unmarshal"}, {"value": 488, "name": "dec_bool"}, {"value": 501, "name": "dec_int32"}, {"value": 501, "name": "dec_int64"}, {"value": 2814, "name": "dec_new_map"}, {"value": 169, "name": "dec_proto3_bool"}, {"value": 163, "name": "dec_proto3_int32"}, {"value": 164, "name": "dec_proto3_int64"}, {"value": 188, "name": "dec_proto3_string"}, {"value": 387, "name": "dec_slice_bool"}, {"value": 203, "name": "dec_slice_byte"}, {"value": 384, "name": "dec_slice_int32"}, {"value": 385, "name": "dec_slice_int64"}, {"value": 589, "name": "dec_slice_packed_bool"}, {"value": 586, "name": "dec_slice_packed_int32"}, {"value": 586, "name": "dec_slice_packed_int64"}, {"value": 455, "name": "dec_slice_slice_byte"}, {"value": 427, "name": "dec_slice_string"}, {"value": 1251, "name": "dec_slice_struct"}, {"value": 105, "name": "dec_slice_struct_group"}, {"value": 105, "name": "dec_slice_struct_message"}, {"value": 275, "name": "dec_string"}, {"value": 308, "name": "dec_struct_group"}, {"value": 907, "name": "dec_struct_message"}, {"value": 219, "name": "decodeVarintSlow"}, {"value": 480, "name": "enc_bool"}, {"value": 360, "name": "enc_exts"}, {"value": 480, "name": "enc_int32"}, {"value": 480, "name": "enc_int64"}, {"value": 152, "name": "enc_len_struct"}, {"children": [{"value": 97, "name": "func1"}], "name": "enc_len_struct."}, {"value": 1580, "name": "enc_len_thing"}, {"value": 182, "name": "enc_map"}, {"value": 1430, "name": "enc_map_body"}, {"value": 1640, "name": "enc_new_map"}, {"children": [{"value": 340, "name": "func1"}], "name": "enc_new_map."}, {"value": 453, "name": "enc_proto3_bool"}, {"value": 475, "name": "enc_proto3_int32"}, {"value": 477, "name": "enc_proto3_int64"}, {"value": 530, "name": "enc_proto3_slice_byte"}, {"value": 488, "name": "enc_proto3_string"}, {"value": 474, "name": "enc_proto3_uint32"}, {"value": 622, "name": "enc_slice_bool"}, {"value": 530, "name": "enc_slice_byte"}, {"value": 640, "name": "enc_slice_int32"}, {"value": 637, "name": "enc_slice_int64"}, {"value": 596, "name": "enc_slice_packed_bool"}, {"value": 969, "name": "enc_slice_packed_int32"}, {"value": 966, "name": "enc_slice_packed_int64"}, {"value": 966, "name": "enc_slice_packed_uint32"}, {"value": 605, "name": "enc_slice_slice_byte"}, {"value": 540, "name": "enc_slice_string"}, {"value": 972, "name": "enc_slice_struct_group"}, {"value": 2233, "name": "enc_slice_struct_message"}, {"value": 637, "name": "enc_slice_uint32"}, {"value": 490, "name": "enc_string"}, {"value": 2030, "name": "enc_struct"}, {"value": 689, "name": "enc_struct_group"}, {"value": 1518, "name": "enc_struct_message"}, {"value": 479, "name": "enc_uint32"}, {"value": 668, "name": "skip"}, {"value": 894, "name": "skipAndSave"}, {"value": 4738, "name": "unmarshalType"}], "name": "(*Buffer)."}, {"children": [{"value": 197, "name": "repeated"}], "name": "(*ExtensionDesc)."}, {"children": [{"value": 147, "name": "Init"}, {"value": 4700, "name": "Parse"}, {"value": 1035, "name": "String"}, {"value": 296, "name": "init"}, {"value": 11228, "name": "setEncAndDec"}], "name": "(*Properties)."}, {"children": [{"value": 192, "name": "Error"}], "name": "(*RequiredNotSetError)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 112, "name": "Less"}, {"value": 77, "name": "Swap"}], "name": "(*StructProperties)."}, {"children": [{"value": 1443, "name": "Marshal"}, {"value": 255, "name": "Text"}, {"value": 1815, "name": "writeAny"}, {"value": 581, "name": "writeExtension"}, {"value": 2184, "name": "writeExtensions"}, {"value": 1986, "name": "writeProto3Any"}, {"value": 6067, "name": "writeStruct"}], "name": "(*TextMarshaler)."}, {"children": [{"value": 68, "name": "extensionsRead"}, {"value": 251, "name": "extensionsWrite"}], "name": "(*XXX_InternalExtensions)."}, {"children": [{"value": 100, "name": "ExtensionMap"}, {"value": 120, "name": "ExtensionRangeArray"}, {"value": 90, "name": "ProtoMessage"}, {"value": 90, "name": "Reset"}, {"value": 110, "name": "String"}, {"value": 205, "name": "extensionsRead"}, {"value": 185, "name": "extensionsWrite"}], "name": "(*extensionAdapter)."}, {"children": [{"value": 168, "name": "IsValid"}], "name": "(*field)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*int32Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 222, "name": "Less"}, {"value": 469, "name": "Swap"}], "name": "(*mapKeySorter)."}, {"children": [{"value": 150, "name": "Lock"}, {"value": 150, "name": "Unlock"}], "name": "(*notLocker)."}, {"children": [{"value": 456, "name": "put"}], "name": "(*tagMap)."}, {"children": [{"value": 1456, "name": "Write"}, {"value": 198, "name": "WriteByte"}, {"value": 385, "name": "WriteString"}, {"value": 199, "name": "unindent"}, {"value": 210, "name": "writeIndent"}], "name": "(*textWriter)."}, {"children": [{"value": 1, "name": "1"}, {"value": 40, "name": "2"}, {"value": 2, "name": "4"}, {"value": 3, "name": "5"}, {"value": 4, "name": "6"}, {"value": 3, "name": "7"}], "name": ".gobytes."}, {"value": 102, "name": "CompactTextString"}, {"value": 164, "name": "EnumName"}, {"value": 16, "name": "ErrInternalBadWireType"}, {"value": 16, "name": "ErrMissingExtension"}, {"value": 16, "name": "ErrNil"}, {"value": 16, "name": "ErrTooLarge"}, {"value": 1734, "name": "GetExtension"}, {"value": 381, "name": "GetProperties"}, {"value": 457, "name": "HasExtension"}, {"value": 437, "name": "Marshal"}, {"value": 346, "name": "RegisterEnum"}, {"value": 815, "name": "RegisterExtension"}, {"value": 637, "name": "RegisterType"}, {"value": 187, "name": "RegisteredExtensions"}, {"value": 292, "name": "Size"}, {"value": 70, "name": "SizeVarint"}, {"value": 143, "name": "Unmarshal"}, {"value": 1179, "name": "UnmarshalJSONEnum"}, {"value": 319, "name": "UnmarshalMerge"}, {"value": 24, "name": "backslashBS"}, {"value": 24, "name": "backslashDQ"}, {"value": 24, "name": "backslashN"}, {"value": 24, "name": "backslashR"}, {"value": 24, "name": "backslashT"}, {"value": 929, "name": "checkExtensionTypes"}, {"value": 2, "name": "compactTextMarshaler"}, {"value": 728, "name": "decodeExtension"}, {"value": 1074, "name": "defaultExtensionValue"}, {"value": 8, "name": "defaults"}, {"value": 1074, "name": "encodeExtensionsMap"}, {"value": 24, "name": "endBraceNewline"}, {"value": 8, "name": "enumValueMaps"}, {"value": 16, "name": "errBadHex"}, {"value": 16, "name": "errBadUTF8"}, {"value": 16, "name": "errNoMessageTypeID"}, {"value": 16, "name": "errOneofHasNil"}, {"value": 16, "name": "errOverflow"}, {"value": 16, "name": "errRepeatedHasNil"}, {"value": 32, "name": "extProp"}, {"value": 16, "name": "extendableProtoType"}, {"value": 16, "name": "extendableProtoV1Type"}, {"children": [{"value": 98, "name": "ExtensionMap"}, {"value": 118, "name": "ExtensionRangeArray"}, {"value": 88, "name": "ProtoMessage"}, {"value": 88, "name": "Reset"}, {"value": 108, "name": "String"}, {"value": 135, "name": "extensionsRead"}, {"value": 76, "name": "extensionsWrite"}], "name": "extensionAdapter."}, {"value": 8, "name": "extensionMaps"}, {"value": 859, "name": "extensionProperties"}, {"value": 742, "name": "extensionsMapSize"}, {"value": 245, "name": "extensionsSize"}, {"children": [{"value": 17, "name": "IsValid"}], "name": "field."}, {"value": 5805, "name": "fieldDefault"}, {"value": 5171, "name": "getPropertiesLocked"}, {"value": 331, "name": "getbase"}, {"value": 2527, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "int32PtrType"}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "int32Slice."}, {"value": 248, "name": "isAny"}, {"value": 135, "name": "isExtensionField"}, {"value": 216, "name": "isMarshaler"}, {"value": 408, "name": "isProto3Zero"}, {"value": 216, "name": "isUnmarshaler"}, {"value": 236, "name": "logNoSliceEnc"}, {"value": 1509, "name": "mapEncodeScratch"}, {"children": [{"value": 11, "name": "Len"}, {"value": 174, "name": "Less"}, {"value": 353, "name": "Swap"}], "name": "mapKeySorter."}, {"value": 307, "name": "mapKeys"}, {"children": [{"value": 352, "name": "func1"}, {"value": 147, "name": "func2"}, {"value": 147, "name": "func3"}], "name": "mapKeys."}, {"value": 16, "name": "marshalerType"}, {"value": 8, "name": "messageSetMap"}, {"value": 24, "name": "nan"}, {"value": 24, "name": "negInf"}, {"value": 24, "name": "newline"}, {"children": [{"value": 1, "name": "Lock"}, {"value": 1, "name": "Unlock"}], "name": "notLocker."}, {"value": 24, "name": "posInf"}, {"value": 8, "name": "propertiesMap"}, {"value": 24, "name": "propertiesMu"}, {"value": 8, "name": "protoFiles"}, {"value": 16, "name": "protoMessageType"}, {"value": 8, "name": "protoTypes"}, {"value": 194, "name": "requiresQuotes"}, {"value": 8, "name": "revProtoTypes"}, {"value": 10, "name": "sizeFixed32"}, {"value": 10, "name": "sizeFixed64"}, {"value": 78, "name": "sizeRawBytes"}, {"value": 78, "name": "sizeStringBytes"}, {"value": 34, "name": "sizeVarint"}, {"value": 82, "name": "sizeZigzag32"}, {"value": 83, "name": "sizeZigzag64"}, {"value": 58, "name": "size_bool"}, {"value": 85, "name": "size_exts"}, {"value": 149, "name": "size_int32"}, {"value": 149, "name": "size_int64"}, {"value": 92, "name": "size_map"}, {"value": 949, "name": "size_new_map"}, {"value": 67, "name": "size_proto3_bool"}, {"value": 159, "name": "size_proto3_int32"}, {"value": 158, "name": "size_proto3_int64"}, {"value": 171, "name": "size_proto3_slice_byte"}, {"value": 161, "name": "size_proto3_string"}, {"value": 158, "name": "size_proto3_uint32"}, {"value": 63, "name": "size_slice_bool"}, {"value": 173, "name": "size_slice_byte"}, {"value": 254, "name": "size_slice_int32"}, {"value": 251, "name": "size_slice_int64"}, {"value": 157, "name": "size_slice_packed_bool"}, {"value": 295, "name": "size_slice_packed_int32"}, {"value": 292, "name": "size_slice_packed_int64"}, {"value": 292, "name": "size_slice_packed_uint32"}, {"value": 236, "name": "size_slice_slice_byte"}, {"value": 202, "name": "size_slice_string"}, {"value": 319, "name": "size_slice_struct_group"}, {"value": 451, "name": "size_slice_struct_message"}, {"value": 251, "name": "size_slice_uint32"}, {"value": 151, "name": "size_string"}, {"value": 393, "name": "size_struct"}, {"value": 237, "name": "size_struct_group"}, {"value": 369, "name": "size_struct_message"}, {"value": 148, "name": "size_uint32"}, {"value": 24, "name": "spaces"}, {"value": 2, "name": "statictmp_3609"}, {"value": 2, "name": "statictmp_3610"}, {"value": 2, "name": "statictmp_3611"}, {"value": 2, "name": "statictmp_3612"}, {"value": 2, "name": "statictmp_3613"}, {"value": 137, "name": "structPointer_Interface"}, {"value": 118, "name": "structPointer_NewAt"}, {"value": 90, "name": "toStructPointer"}, {"value": 16, "name": "unmarshalerType"}, {"value": 256, "name": "writeName"}, {"value": 356, "name": "writeRaw"}, {"value": 947, "name": "writeString"}, {"value": 371, "name": "writeUnknownInt"}, {"value": 2403, "name": "writeUnknownStruct"}, {"value": 20, "name": "zeroes"}, {"value": 40, "name": "go.itab.*RequiredNotSetError,error"}, {"value": 56, "name": "go.itab.*StructProperties,sort.Interface"}, {"value": 40, "name": "go.itab.*textWriter,io.Writer"}, {"value": 80, "name": "go.itab.extensionAdapter,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.extendableProto"}, {"value": 56, "name": "go.itab.int32Slice,sort.Interface"}, {"value": 56, "name": "go.itab.mapKeySorter,sort.Interface"}, {"value": 48, "name": "go.itab.notLocker,sync.Locker"}], "name": "proto."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetEnumType"}, {"value": 66, "name": "GetExtension"}, {"value": 66, "name": "GetExtensionRange"}, {"value": 66, "name": "GetField"}, {"value": 55, "name": "GetName"}, {"value": 66, "name": "GetNestedType"}, {"value": 75, "name": "GetOneofDecl"}, {"value": 33, "name": "GetOptions"}, {"value": 75, "name": "GetReservedName"}, {"value": 75, "name": "GetReservedRange"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*DescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 35, "name": "GetEnd"}, {"value": 34, "name": "GetStart"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*DescriptorProto_ExtensionRange)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 35, "name": "GetEnd"}, {"value": 34, "name": "GetStart"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*DescriptorProto_ReservedRange)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 55, "name": "GetName"}, {"value": 30, "name": "GetOptions"}, {"value": 66, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*EnumDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 32, "name": "GetAllowAlias"}, {"value": 33, "name": "GetDeprecated"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*EnumOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 55, "name": "GetName"}, {"value": 35, "name": "GetNumber"}, {"value": 30, "name": "GetOptions"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*EnumValueDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 32, "name": "GetDeprecated"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*EnumValueOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 56, "name": "GetDefaultValue"}, {"value": 56, "name": "GetExtendee"}, {"value": 56, "name": "GetJsonName"}, {"value": 35, "name": "GetLabel"}, {"value": 55, "name": "GetName"}, {"value": 35, "name": "GetNumber"}, {"value": 35, "name": "GetOneofIndex"}, {"value": 30, "name": "GetOptions"}, {"value": 35, "name": "GetType"}, {"value": 56, "name": "GetTypeName"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*FieldDescriptorProto)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*FieldDescriptorProto_Label)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*FieldDescriptorProto_Type)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 34, "name": "GetCtype"}, {"value": 33, "name": "GetDeprecated"}, {"value": 35, "name": "GetJstype"}, {"value": 33, "name": "GetLazy"}, {"value": 33, "name": "GetPacked"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 33, "name": "GetWeak"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*FieldOptions)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*FieldOptions_CType)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*FieldOptions_JSType)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetDependency"}, {"value": 69, "name": "GetEnumType"}, {"value": 75, "name": "GetExtension"}, {"value": 66, "name": "GetMessageType"}, {"value": 55, "name": "GetName"}, {"value": 33, "name": "GetOptions"}, {"value": 56, "name": "GetPackage"}, {"value": 66, "name": "GetPublicDependency"}, {"value": 75, "name": "GetService"}, {"value": 33, "name": "GetSourceCodeInfo"}, {"value": 59, "name": "GetSyntax"}, {"value": 66, "name": "GetWeakDependency"}, {"value": 1, "name": "ProtoMessage"}, {"value": 205, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*FileDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetFile"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*FileDescriptorSet)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 33, "name": "GetCcEnableArenas"}, {"value": 33, "name": "GetCcGenericServices"}, {"value": 56, "name": "GetCsharpNamespace"}, {"value": 33, "name": "GetDeprecated"}, {"value": 56, "name": "GetGoPackage"}, {"value": 33, "name": "GetJavaGenerateEqualsAndHash"}, {"value": 33, "name": "GetJavaGenericServices"}, {"value": 33, "name": "GetJavaMultipleFiles"}, {"value": 56, "name": "GetJavaOuterClassname"}, {"value": 55, "name": "GetJavaPackage"}, {"value": 33, "name": "GetJavaStringCheckUtf8"}, {"value": 56, "name": "GetObjcClassPrefix"}, {"value": 35, "name": "GetOptimizeFor"}, {"value": 33, "name": "GetPyGenericServices"}, {"value": 69, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 202, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 50, "name": "extensionsRead"}, {"value": 32, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*FileOptions)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*FileOptions_OptimizeMode)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetAnnotation"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*GeneratedCodeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 35, "name": "GetBegin"}, {"value": 35, "name": "GetEnd"}, {"value": 65, "name": "GetPath"}, {"value": 56, "name": "GetSourceFile"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*GeneratedCodeInfo_Annotation)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 33, "name": "GetDeprecated"}, {"value": 33, "name": "GetMapEntry"}, {"value": 32, "name": "GetMessageSetWireFormat"}, {"value": 33, "name": "GetNoStandardDescriptorAccessor"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*MessageOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 33, "name": "GetClientStreaming"}, {"value": 56, "name": "GetInputType"}, {"value": 55, "name": "GetName"}, {"value": 30, "name": "GetOptions"}, {"value": 56, "name": "GetOutputType"}, {"value": 33, "name": "GetServerStreaming"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*MethodDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 32, "name": "GetDeprecated"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*MethodOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 55, "name": "GetName"}, {"value": 30, "name": "GetOptions"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*OneofDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 65, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*OneofOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetMethod"}, {"value": 55, "name": "GetName"}, {"value": 30, "name": "GetOptions"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*ServiceDescriptorProto)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 37, "name": "ExtensionRangeArray"}, {"value": 32, "name": "GetDeprecated"}, {"value": 66, "name": "GetUninterpretedOption"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}, {"children": [{"value": 48, "name": "extensionsRead"}, {"value": 30, "name": "extensionsWrite"}], "name": "github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto."}], "name": "(*ServiceOptions)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetLocation"}, {"value": 1, "name": "ProtoMessage"}, {"value": 158, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*SourceCodeInfo)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 56, "name": "GetLeadingComments"}, {"value": 66, "name": "GetLeadingDetachedComments"}, {"value": 65, "name": "GetPath"}, {"value": 66, "name": "GetSpan"}, {"value": 56, "name": "GetTrailingComments"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*SourceCodeInfo_Location)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 56, "name": "GetAggregateValue"}, {"value": 40, "name": "GetDoubleValue"}, {"value": 56, "name": "GetIdentifierValue"}, {"value": 65, "name": "GetName"}, {"value": 38, "name": "GetNegativeIntValue"}, {"value": 38, "name": "GetPositiveIntValue"}, {"value": 66, "name": "GetStringValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*UninterpretedOption)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 33, "name": "GetIsExtension"}, {"value": 55, "name": "GetNamePart"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*UninterpretedOption_NamePart)."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "FieldDescriptorProto_Label."}, {"value": 8, "name": "FieldDescriptorProto_Label_name"}, {"value": 8, "name": "FieldDescriptorProto_Label_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "FieldDescriptorProto_Type."}, {"value": 8, "name": "FieldDescriptorProto_Type_name"}, {"value": 8, "name": "FieldDescriptorProto_Type_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "FieldOptions_CType."}, {"value": 8, "name": "FieldOptions_CType_name"}, {"value": 8, "name": "FieldOptions_CType_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "FieldOptions_JSType."}, {"value": 8, "name": "FieldOptions_JSType_name"}, {"value": 8, "name": "FieldOptions_JSType_value"}, {"children": [{"value": 78, "name": "Enum"}, {"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "FileOptions_OptimizeMode."}, {"value": 8, "name": "FileOptions_OptimizeMode_name"}, {"value": 8, "name": "FileOptions_OptimizeMode_value"}, {"value": 24, "name": "extRange_EnumOptions"}, {"value": 24, "name": "extRange_EnumValueOptions"}, {"value": 24, "name": "extRange_FieldOptions"}, {"value": 24, "name": "extRange_FileOptions"}, {"value": 24, "name": "extRange_MessageOptions"}, {"value": 24, "name": "extRange_MethodOptions"}, {"value": 24, "name": "extRange_OneofOptions"}, {"value": 24, "name": "extRange_ServiceOptions"}, {"value": 24, "name": "fileDescriptor0"}, {"value": 2386, "name": "init"}, {"children": [{"value": 1448, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "statictmp_10"}, {"value": 8, "name": "statictmp_102"}, {"value": 8, "name": "statictmp_108"}, {"value": 8, "name": "statictmp_114"}, {"value": 8, "name": "statictmp_120"}, {"value": 8, "name": "statictmp_126"}, {"value": 8, "name": "statictmp_132"}, {"value": 8, "name": "statictmp_138"}, {"value": 16, "name": "statictmp_14"}, {"value": 16, "name": "statictmp_144"}, {"value": 8, "name": "statictmp_150"}, {"value": 16, "name": "statictmp_156"}, {"value": 8, "name": "statictmp_162"}, {"value": 16, "name": "statictmp_168"}, {"value": 16, "name": "statictmp_18"}, {"value": 8, "name": "statictmp_198"}, {"value": 8, "name": "statictmp_199"}, {"value": 16, "name": "statictmp_2"}, {"value": 8, "name": "statictmp_200"}, {"value": 8, "name": "statictmp_201"}, {"value": 8, "name": "statictmp_202"}, {"value": 8, "name": "statictmp_203"}, {"value": 8, "name": "statictmp_204"}, {"value": 8, "name": "statictmp_205"}, {"value": 2295, "name": "statictmp_206"}, {"value": 72, "name": "statictmp_208"}, {"value": 288, "name": "statictmp_209"}, {"value": 288, "name": "statictmp_213"}, {"value": 72, "name": "statictmp_214"}, {"value": 12, "name": "statictmp_218"}, {"value": 48, "name": "statictmp_219"}, {"value": 48, "name": "statictmp_223"}, {"value": 12, "name": "statictmp_224"}, {"value": 12, "name": "statictmp_228"}, {"value": 48, "name": "statictmp_229"}, {"value": 48, "name": "statictmp_233"}, {"value": 12, "name": "statictmp_234"}, {"value": 12, "name": "statictmp_238"}, {"value": 48, "name": "statictmp_239"}, {"value": 8, "name": "statictmp_24"}, {"value": 48, "name": "statictmp_243"}, {"value": 12, "name": "statictmp_244"}, {"value": 12, "name": "statictmp_248"}, {"value": 48, "name": "statictmp_249"}, {"value": 48, "name": "statictmp_253"}, {"value": 12, "name": "statictmp_254"}, {"value": 16, "name": "statictmp_270"}, {"value": 16, "name": "statictmp_274"}, {"value": 16, "name": "statictmp_278"}, {"value": 16, "name": "statictmp_282"}, {"value": 16, "name": "statictmp_286"}, {"value": 8, "name": "statictmp_30"}, {"value": 8, "name": "statictmp_36"}, {"value": 16, "name": "statictmp_42"}, {"value": 16, "name": "statictmp_48"}, {"value": 8, "name": "statictmp_54"}, {"value": 16, "name": "statictmp_6"}, {"value": 8, "name": "statictmp_60"}, {"value": 8, "name": "statictmp_66"}, {"value": 8, "name": "statictmp_72"}, {"value": 8, "name": "statictmp_78"}, {"value": 8, "name": "statictmp_84"}, {"value": 8, "name": "statictmp_90"}, {"value": 8, "name": "statictmp_96"}, {"value": 56, "name": "go.itab.*DescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DescriptorProto_ExtensionRange,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*DescriptorProto_ReservedRange,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EnumDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EnumOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EnumValueDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*EnumValueOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FieldDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FieldOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FileDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FileDescriptorSet,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*FileOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GeneratedCodeInfo,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GeneratedCodeInfo_Annotation,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MessageOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MethodDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MethodOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*OneofDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*OneofOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ServiceDescriptorProto,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ServiceOptions,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SourceCodeInfo,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SourceCodeInfo_Location,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UninterpretedOption,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*UninterpretedOption_NamePart,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "protoc-gen-go/descriptor."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 1, "name": "ProtoMessage"}, {"value": 20, "name": "Reset"}, {"value": 92, "name": "String"}, {"value": 22, "name": "XXX_WellKnownType"}], "name": "(*Timestamp)."}, {"value": 24, "name": "fileDescriptor0"}, {"value": 111, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "statictmp_3"}, {"value": 194, "name": "statictmp_9"}, {"value": 56, "name": "go.itab.*Timestamp,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "ptypes/timestamp."}], "name": "protobuf/"}, {"children": [{"children": [{"value": 3361, "name": "Read"}, {"value": 190, "name": "Reset"}, {"value": 444, "name": "readFull"}], "name": "(*Reader)."}, {"children": [{"value": 169, "name": "Close"}, {"value": 191, "name": "Flush"}, {"value": 191, "name": "Reset"}, {"value": 685, "name": "Write"}, {"value": 1441, "name": "write"}], "name": "(*Writer)."}, {"value": 613, "name": "Decode"}, {"value": 110, "name": "DecodedLen"}, {"value": 725, "name": "Encode"}, {"value": 16, "name": "ErrCorrupt"}, {"value": 16, "name": "ErrTooLarge"}, {"value": 16, "name": "ErrUnsupported"}, {"value": 116, "name": "crc"}, {"value": 8, "name": "crcTable"}, {"value": 688, "name": "decode"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "decode."}, {"value": 194, "name": "decodedLen"}, {"value": 130, "name": "emitLiteral"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "emitLiteral."}, {"value": 966, "name": "encodeBlock"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "encodeBlock."}, {"value": 16, "name": "errClosed"}, {"value": 16, "name": "errUnsupportedLiteralLength"}, {"value": 607, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.*Reader,io.Reader"}], "name": "snappy."}], "name": "golang/"}, {"children": [{"children": [{"value": 144, "name": "Ascend"}, {"value": 146, "name": "AscendGreaterOrEqual"}, {"value": 146, "name": "AscendLessThan"}, {"value": 151, "name": "AscendRange"}, {"value": 502, "name": "Clone"}, {"value": 109, "name": "Delete"}, {"value": 107, "name": "DeleteMax"}, {"value": 107, "name": "DeleteMin"}, {"value": 144, "name": "Descend"}, {"value": 146, "name": "DescendGreaterThan"}, {"value": 146, "name": "DescendLessOrEqual"}, {"value": 151, "name": "DescendRange"}, {"value": 140, "name": "Get"}, {"value": 95, "name": "Has"}, {"value": 15, "name": "Len"}, {"value": 84, "name": "Max"}, {"value": 84, "name": "Min"}, {"value": 1489, "name": "ReplaceOrInsert"}, {"value": 430, "name": "deleteItem"}], "name": "(*BTree)."}, {"children": [{"value": 300, "name": "freeNode"}, {"value": 267, "name": "newNode"}], "name": "(*FreeList)."}, {"children": [{"value": 358, "name": "truncate"}], "name": "(*children)."}, {"children": [{"value": 193, "name": "freeNode"}, {"value": 132, "name": "newNode"}], "name": "(*copyOnWriteContext)."}, {"children": [{"value": 358, "name": "truncate"}], "name": "(*items)."}, {"children": [{"value": 290, "name": "get"}, {"value": 5018, "name": "growChildAndRemove"}, {"value": 1385, "name": "insert"}, {"value": 1990, "name": "iterate"}, {"value": 1318, "name": "maybeSplitChild"}, {"value": 189, "name": "mutableChild"}, {"value": 523, "name": "mutableFor"}, {"value": 1747, "name": "remove"}, {"value": 1113, "name": "split"}], "name": "(*node)."}, {"value": 270, "name": "New"}, {"value": 340, "name": "NewWithFreeList"}, {"value": 331, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 331, "name": "find"}, {"children": [{"value": 121, "name": "func1"}], "name": "find."}], "name": "items."}, {"value": 188, "name": "max"}, {"value": 107, "name": "min"}, {"value": 24, "name": "nilChildren"}, {"value": 24, "name": "nilItems"}], "name": "google/btree."}, {"children": [{"children": [{"value": 215, "name": "Pause"}], "name": "(*Backoff)."}, {"value": 413, "name": "Sleep"}, {"value": 134, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "googleapis/gax-go."}, {"children": [{"children": [{"children": [{"value": 206, "name": "Decode"}], "name": "(*DecoderFunc)."}, {"children": [{"value": 206, "name": "Encode"}], "name": "(*EncoderFunc)."}, {"children": [{"value": 22, "name": "ContentType"}, {"value": 451, "name": "Marshal"}, {"value": 243, "name": "NewDecoder"}, {"children": [{"value": 99, "name": "func1"}], "name": "NewDecoder."}, {"value": 215, "name": "NewEncoder"}, {"children": [{"value": 117, "name": "func1"}], "name": "NewEncoder."}, {"value": 123, "name": "Unmarshal"}, {"value": 1872, "name": "marshalNonProtoField"}, {"value": 334, "name": "marshalTo"}], "name": "(*JSONPb)."}, {"children": [{"value": 343, "name": "Match"}, {"value": 232, "name": "String"}, {"value": 248, "name": "Verb"}], "name": "(*Pattern)."}, {"children": [{"value": 33, "name": "GetForwardResponseOptions"}, {"value": 548, "name": "Handle"}, {"value": 2737, "name": "ServeHTTP"}], "name": "(*ServeMux)."}, {"children": [{"value": 1, "name": "ProtoMessage"}, {"value": 107, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*errorBody)."}, {"value": 8832, "name": "AnnotateContext"}, {"value": 1220, "name": "Bool"}, {"children": [{"value": 95, "name": "Decode"}], "name": "DecoderFunc."}, {"value": 8, "name": "DefaultContextTimeout"}, {"value": 1838, "name": "DefaultHTTPError"}, {"value": 100, "name": "DefaultOtherErrorHandler"}, {"children": [{"value": 95, "name": "Encode"}], "name": "EncoderFunc."}, {"value": 16, "name": "ErrInvalidPattern"}, {"value": 16, "name": "ErrNotMatch"}, {"value": 164, "name": "Float32"}, {"value": 111, "name": "Float64"}, {"value": 1371, "name": "ForwardResponseMessage"}, {"value": 2334, "name": "ForwardResponseStream"}, {"value": 8, "name": "HTTPError"}, {"value": 650, "name": "HTTPStatusFromCode"}, {"value": 165, "name": "Int32"}, {"value": 118, "name": "Int64"}, {"value": 581, "name": "MarshalerForRequest"}, {"value": 310, "name": "MustPattern"}, {"value": 3632, "name": "NewPattern"}, {"value": 653, "name": "NewServeMux"}, {"value": 241, "name": "NewServerMetadataContext"}, {"value": 8, "name": "OtherErrorHandler"}, {"children": [{"value": 2703, "name": "Match"}, {"value": 2122, "name": "String"}, {"value": 21, "name": "Verb"}], "name": "Pattern."}, {"value": 513, "name": "PopulateQueryParameters"}, {"value": 182, "name": "ServerMetadataFromContext"}, {"value": 39, "name": "String"}, {"value": 165, "name": "Uint32"}, {"value": 118, "name": "Uint64"}, {"value": 210, "name": "WithMarshalerOption"}, {"children": [{"value": 317, "name": "func1"}], "name": "WithMarshalerOption."}, {"value": 16, "name": "acceptHeader"}, {"value": 16, "name": "contentTypeHeader"}, {"value": 8, "name": "convFromType"}, {"value": 1358, "name": "convertEnum"}, {"value": 236, "name": "decodeJSONPb"}, {"value": 3715, "name": "decodeNonProtoField"}, {"value": 8, "name": "defaultMarshaler"}, {"value": 446, "name": "fieldByProtoName"}, {"value": 513, "name": "handleForwardResponseOptions"}, {"value": 638, "name": "handleForwardResponseServerMetadata"}, {"value": 776, "name": "handleForwardResponseStreamError"}, {"value": 638, "name": "handleForwardResponseTrailer"}, {"value": 550, "name": "handleForwardResponseTrailerHeader"}, {"value": 2571, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 236, "name": "isPathLengthFallback"}, {"value": 2108, "name": "populateField"}, {"value": 276, "name": "populateFieldEnum"}, {"value": 800, "name": "populateFieldEnumRepeated"}, {"value": 3117, "name": "populateFieldValueFromPath"}, {"value": 1653, "name": "populateRepeatedField"}, {"value": 24, "name": "statictmp_117"}, {"value": 104, "name": "statictmp_557"}, {"value": 104, "name": "statictmp_562"}, {"value": 104, "name": "statictmp_564"}, {"value": 104, "name": "statictmp_568"}, {"value": 104, "name": "statictmp_572"}, {"value": 104, "name": "statictmp_576"}, {"value": 104, "name": "statictmp_580"}, {"value": 104, "name": "statictmp_581"}, {"value": 104, "name": "statictmp_585"}, {"value": 104, "name": "statictmp_587"}, {"value": 24, "name": "statictmp_775"}, {"value": 24, "name": "statictmp_876"}, {"value": 24, "name": "statictmp_883"}, {"value": 32, "name": "statictmp_917"}, {"value": 995, "name": "streamChunk"}, {"value": 800, "name": "timeoutDecode"}, {"value": 16, "name": "typeProtoMessage"}, {"value": 298, "name": "unmarshalJSONPb"}, {"value": 72, "name": "go.itab.*JSONPb,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Marshaler"}, {"value": 40, "name": "go.itab.*ServeMux,net/http.Handler"}, {"value": 56, "name": "go.itab.*errorBody,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.DecoderFunc,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Decoder"}, {"value": 40, "name": "go.itab.EncoderFunc,github.com/cockroachdb/cockroach/vendor/github.com/grpc-ecosystem/grpc-gateway/runtime.Encoder"}], "name": "runtime."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 26, "name": "GetGrpcCode"}, {"value": 27, "name": "GetHttpCode"}, {"value": 48, "name": "GetHttpStatus"}, {"value": 48, "name": "GetMessage"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*StreamError)."}, {"value": 24, "name": "fileDescriptor0"}, {"value": 111, "name": "init"}, {"children": [{"value": 92, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 181, "name": "statictmp_10"}, {"value": 8, "name": "statictmp_4"}, {"value": 56, "name": "go.itab.*StreamError,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "runtime/internal."}, {"children": [{"children": [{"value": 430, "name": "HasCommonPrefix"}], "name": "(*DoubleArray)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "utilities."}], "name": "grpc-ecosystem/grpc-gateway/"}, {"children": [{"value": 8, "name": "_Cfpvar_fp_cgoSymbolizer"}, {"value": 8, "name": "_Cfpvar_fp_cgoTraceback"}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 121, "name": "_Cfunc_cgoSymbolizerInit"}, {"value": 8, "name": "_cgo_1fe0e3cfaf20_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_1fe0e3cfaf20_Cfunc_cgoSymbolizerInit"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 106, "name": "init"}, {"children": [{"value": 160, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}], "name": "ianlancetaylor/cgosymbolizer."}, {"children": [{"value": 9544, "name": "Strftime"}, {"children": [{"value": 269, "name": "func1"}], "name": "Strftime."}, {"value": 1629, "name": "Strptime"}, {"children": [{"value": 113, "name": "func1"}, {"value": 113, "name": "func2"}, {"value": 281, "name": "func3"}], "name": "Strptime."}, {"value": 282, "name": "_C2func_bsd_strptime"}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 80, "name": "_Cfunc_GoString"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 8, "name": "_cgo_03f7492b85ec_C2func_bsd_strptime"}, {"value": 8, "name": "_cgo_03f7492b85ec_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_03f7492b85ec_Cfunc_free"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "longDayNames"}, {"value": 24, "name": "longMonthNames"}, {"value": 24, "name": "shortDayNames"}, {"value": 24, "name": "shortMonthNames"}, {"value": 24, "name": "statictmp_247"}, {"value": 32, "name": "statictmp_251"}, {"value": 16, "name": "statictmp_254"}, {"value": 112, "name": "statictmp_275"}, {"value": 112, "name": "statictmp_276"}, {"value": 208, "name": "statictmp_277"}, {"value": 208, "name": "statictmp_278"}, {"value": 203, "name": "weekNumber"}], "name": "knz/strtime."}, {"children": [{"children": [{"children": [{"value": 228, "name": "Format"}, {"value": 220, "name": "String"}], "name": "(*formatter)."}, {"children": [{"value": 157, "name": "Write"}, {"value": 140, "name": "fmtString"}, {"value": 539, "name": "indent"}, {"value": 433, "name": "printInline"}, {"value": 7646, "name": "printValue"}], "name": "(*printer)."}, {"children": [{"value": 345, "name": "Printf"}], "name": "(*sbuf)."}, {"value": 194, "name": "Diff"}, {"value": 248, "name": "Pdiff"}, {"value": 152, "name": "Println"}, {"value": 142, "name": "Sprint"}, {"value": 118, "name": "canExpand"}, {"value": 665, "name": "canInline"}, {"children": [{"value": 12542, "name": "diff"}, {"value": 280, "name": "printf"}], "name": "diffPrinter."}, {"children": [{"value": 745, "name": "Format"}, {"value": 177, "name": "String"}, {"value": 1123, "name": "passThrough"}], "name": "formatter."}, {"value": 263, "name": "getField"}, {"value": 121, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 2053, "name": "keyDiff"}, {"value": 2642, "name": "keyEqual"}, {"value": 108, "name": "labelType"}, {"value": 1041, "name": "nonzero"}, {"children": [{"value": 167, "name": "Write"}], "name": "printer."}, {"value": 1, "name": "statictmp_363"}, {"value": 423, "name": "wrap"}, {"value": 119, "name": "writeByte"}, {"value": 40, "name": "go.itab.*printer,io.Writer"}, {"value": 40, "name": "go.itab.*sbuf,github.com/cockroachdb/cockroach/vendor/github.com/kr/pretty.Printfer"}, {"value": 40, "name": "go.itab.printer,io.Writer"}], "name": "pretty."}, {"children": [{"children": [{"value": 557, "name": "Write"}], "name": "(*indentWriter)."}, {"value": 322, "name": "Indent"}, {"value": 494, "name": "IndentBytes"}, {"value": 224, "name": "NewIndentWriter"}, {"value": 200, "name": "Wrap"}, {"value": 882, "name": "WrapBytes"}, {"value": 1403, "name": "WrapWords"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "nl"}, {"value": 24, "name": "sp"}, {"value": 1, "name": "statictmp_72"}, {"value": 1, "name": "statictmp_73"}, {"value": 40, "name": "go.itab.*indentWriter,io.Writer"}], "name": "text."}], "name": "kr/"}, {"children": [{"children": [{"value": 287, "name": "Error"}, {"value": 83, "name": "Fatal"}, {"value": 625, "name": "Get"}], "name": "(*Error)."}, {"children": [{"value": 280, "name": "Name"}], "name": "(*ErrorClass)."}, {"children": [{"value": 188, "name": "Class"}, {"value": 221, "name": "Name"}], "name": "(*ErrorCode)."}, {"children": [{"value": 556, "name": "Scan"}, {"value": 224, "name": "Value"}, {"value": 910, "name": "scanBytes"}], "name": "(*Int64Array)."}, {"children": [{"value": 556, "name": "Scan"}, {"value": 224, "name": "Value"}, {"value": 863, "name": "scanBytes"}], "name": "(*StringArray)."}, {"children": [{"value": 1000, "name": "Begin"}, {"value": 585, "name": "BeginTx"}, {"value": 253, "name": "Close"}, {"children": [{"value": 133, "name": "func1"}], "name": "Close."}, {"value": 857, "name": "Commit"}, {"value": 823, "name": "Exec"}, {"value": 677, "name": "ExecContext"}, {"value": 545, "name": "Prepare"}, {"value": 174, "name": "Query"}, {"value": 702, "name": "QueryContext"}, {"value": 767, "name": "Rollback"}, {"value": 2764, "name": "auth"}, {"value": 1488, "name": "cancel"}, {"value": 229, "name": "checkIsInTransaction"}, {"value": 67, "name": "closeTxn"}, {"value": 1302, "name": "errRecover"}, {"value": 102, "name": "gname"}, {"value": 325, "name": "handleDriverSettings"}, {"children": [{"value": 490, "name": "func1"}], "name": "handleDriverSettings."}, {"value": 1926, "name": "handlePgpass"}, {"children": [{"value": 1285, "name": "func1"}], "name": "handlePgpass."}, {"value": 1281, "name": "parseComplete"}, {"value": 327, "name": "postExecuteWorkaround"}, {"value": 3091, "name": "prepareCopyIn"}, {"value": 2760, "name": "prepareTo"}, {"value": 798, "name": "processParameterStatus"}, {"value": 1519, "name": "query"}, {"value": 297, "name": "readBindResponse"}, {"value": 1389, "name": "readExecuteResponse"}, {"value": 297, "name": "readParseResponse"}, {"value": 643, "name": "readPortalDescribeResponse"}, {"value": 341, "name": "readReadyForQuery"}, {"value": 1013, "name": "readStatementDescribeResponse"}, {"value": 294, "name": "recv"}, {"value": 193, "name": "recv1"}, {"value": 168, "name": "recv1Buf"}, {"value": 722, "name": "recvMessage"}, {"value": 286, "name": "saveMessage"}, {"value": 246, "name": "send"}, {"value": 3223, "name": "sendBinaryModeQuery"}, {"value": 2427, "name": "sendBinaryParameters"}, {"value": 166, "name": "sendSimpleMessage"}, {"value": 260, "name": "sendStartupPacket"}, {"value": 1411, "name": "simpleExec"}, {"value": 2200, "name": "simpleQuery"}, {"value": 775, "name": "ssl"}, {"value": 4052, "name": "startup"}, {"value": 287, "name": "watchCancel"}, {"children": [{"value": 295, "name": "func1"}, {"value": 243, "name": "func2"}], "name": "watchCancel."}], "name": "(*conn)."}, {"children": [{"value": 525, "name": "Close"}, {"value": 1373, "name": "Exec"}, {"value": 21, "name": "Lock"}, {"value": 10, "name": "NumInput"}, {"value": 43, "name": "Query"}, {"value": 21, "name": "Unlock"}, {"value": 230, "name": "flush"}, {"value": 115, "name": "isBad"}, {"value": 114, "name": "isErrorSet"}, {"value": 738, "name": "resploop"}, {"value": 102, "name": "setBad"}, {"value": 161, "name": "setError"}], "name": "(*copyin)."}, {"children": [{"value": 247, "name": "Dial"}, {"value": 263, "name": "DialTimeout"}], "name": "(*defaultDialer)."}, {"children": [{"value": 110, "name": "Open"}], "name": "(*drv)."}, {"children": [{"value": 878, "name": "getLocation"}], "name": "(*locationCache)."}, {"children": [{"value": 187, "name": "LastInsertId"}, {"value": 187, "name": "RowsAffected"}], "name": "(*noRows)."}, {"children": [{"value": 363, "name": "string"}], "name": "(*readBuf)."}, {"children": [{"value": 325, "name": "Close"}, {"value": 33, "name": "Columns"}, {"value": 17, "name": "HasNextResultSet"}, {"value": 2596, "name": "Next"}, {"value": 19, "name": "NextResultSet"}, {"value": 138, "name": "Result"}, {"value": 30, "name": "Tag"}], "name": "(*rows)."}, {"children": [{"value": 92, "name": "Next"}, {"value": 219, "name": "SkipSpaces"}], "name": "(*scanner)."}, {"children": [{"value": 1605, "name": "Close"}, {"value": 415, "name": "Exec"}, {"value": 18, "name": "NumInput"}, {"value": 613, "name": "Query"}, {"value": 3696, "name": "exec"}], "name": "(*stmt)."}, {"children": [{"value": 519, "name": "expect"}, {"value": 507, "name": "mustAtoi"}], "name": "(*timestampParser)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*transactionStatus)."}, {"value": 4226, "name": "DialOpen"}, {"value": 16, "name": "ErrChannelAlreadyOpen"}, {"value": 16, "name": "ErrChannelNotOpen"}, {"value": 16, "name": "ErrCouldNotDetectUsername"}, {"value": 16, "name": "ErrInFailedTransaction"}, {"value": 16, "name": "ErrNotSupported"}, {"value": 16, "name": "ErrSSLKeyHasWorldPermissions"}, {"value": 16, "name": "ErrSSLNotSupported"}, {"children": [{"value": 126, "name": "Error"}], "name": "Error."}, {"children": [{"value": 181, "name": "Name"}], "name": "ErrorClass."}, {"children": [{"value": 58, "name": "Class"}, {"value": 116, "name": "Name"}], "name": "ErrorCode."}, {"value": 1019, "name": "FormatTimestamp"}, {"children": [{"value": 783, "name": "Value"}], "name": "Int64Array."}, {"value": 163, "name": "Open"}, {"value": 3034, "name": "ParseTimestamp"}, {"value": 1622, "name": "ParseURL"}, {"children": [{"value": 420, "name": "func1"}], "name": "ParseURL."}, {"children": [{"value": 1007, "name": "Value"}], "name": "StringArray."}, {"value": 52, "name": "alnumLowerASCII"}, {"value": 1024, "name": "appendArrayQuotedBytes"}, {"value": 2142, "name": "appendEncodedText"}, {"value": 1250, "name": "appendEscapedText"}, {"value": 952, "name": "binaryDecode"}, {"value": 240, "name": "binaryEncode"}, {"value": 24, "name": "colFmtDataAllBinary"}, {"value": 24, "name": "colFmtDataAllText"}, {"value": 863, "name": "decideColumnFormats"}, {"value": 315, "name": "decode"}, {"value": 995, "name": "decodeUUIDBinary"}, {"children": [{"value": 139, "name": "Dial"}, {"value": 159, "name": "DialTimeout"}], "name": "defaultDialer."}, {"value": 1230, "name": "dial"}, {"value": 1661, "name": "encode"}, {"value": 1039, "name": "encodeBytea"}, {"value": 16, "name": "errBinaryCopyNotSupported"}, {"value": 16, "name": "errCopyInClosed"}, {"value": 16, "name": "errCopyInProgress"}, {"value": 16, "name": "errCopyNotSupportedOutsideTxn"}, {"value": 16, "name": "errCopyToNotSupported"}, {"value": 16, "name": "errInvalidTimestamp"}, {"value": 16, "name": "errListenerClosed"}, {"value": 16, "name": "errListenerConnClosed"}, {"value": 16, "name": "errNoLastInsertId"}, {"value": 16, "name": "errNoRowsAffected"}, {"value": 376, "name": "errRecoverNoErrBadConn"}, {"value": 16, "name": "errUnexpectedReady"}, {"value": 8, "name": "errorCodeNames"}, {"value": 275, "name": "errorf"}, {"value": 414, "name": "formatTs"}, {"value": 8, "name": "globalLocationCache"}, {"value": 1, "name": "infinityTsEnabled"}, {"value": 24, "name": "infinityTsNegative"}, {"value": 24, "name": "infinityTsPositive"}, {"value": 2525, "name": "init"}, {"children": [{"value": 109, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 201, "name": "isUTF8"}, {"value": 424, "name": "md5s"}, {"value": 507, "name": "mustParse"}, {"value": 611, "name": "network"}, {"value": 198, "name": "newLocationCache"}, {"children": [{"value": 34, "name": "LastInsertId"}, {"value": 34, "name": "RowsAffected"}], "name": "noRows."}, {"value": 4780, "name": "parseArray"}, {"value": 2157, "name": "parseBytea"}, {"value": 5623, "name": "parseEnviron"}, {"children": [{"value": 188, "name": "func1"}, {"value": 251, "name": "func2"}], "name": "parseEnviron."}, {"value": 1605, "name": "parseError"}, {"value": 2178, "name": "parseOpts"}, {"value": 1294, "name": "parsePortalRowDescribe"}, {"value": 1100, "name": "parseStatementRowDescribe"}, {"value": 830, "name": "parseTs"}, {"value": 876, "name": "scanLinearArray"}, {"value": 1380, "name": "ssl"}, {"children": [{"value": 263, "name": "func1"}], "name": "ssl."}, {"value": 601, "name": "sslCertificateAuthority"}, {"value": 1089, "name": "sslClientCertificates"}, {"value": 195, "name": "sslKeyPermissions"}, {"value": 868, "name": "sslVerifyCertificateAuthority"}, {"value": 96, "name": "statictmp_1304"}, {"value": 32, "name": "statictmp_2007"}, {"value": 16, "name": "statictmp_2010"}, {"value": 24, "name": "statictmp_2054"}, {"value": 24, "name": "statictmp_2058"}, {"value": 48, "name": "statictmp_2340"}, {"value": 48, "name": "statictmp_2345"}, {"value": 96, "name": "statictmp_2401"}, {"value": 4, "name": "statictmp_2489"}, {"value": 2, "name": "statictmp_2490"}, {"value": 3712, "name": "statictmp_2498"}, {"value": 3712, "name": "statictmp_2499"}, {"value": 1, "name": "statictmp_302"}, {"value": 1, "name": "statictmp_338"}, {"value": 32, "name": "statictmp_601"}, {"value": 24, "name": "statictmp_685"}, {"value": 5, "name": "statictmp_994"}, {"value": 2195, "name": "textDecode"}, {"children": [{"value": 355, "name": "String"}], "name": "transactionStatus."}, {"value": 16, "name": "typeByteSlice"}, {"value": 16, "name": "typeDriverValuer"}, {"value": 16, "name": "typeSqlScanner"}, {"value": 242, "name": "userCurrent"}, {"value": 40, "name": "go.itab.*Error,error"}, {"value": 56, "name": "go.itab.*conn,database/sql/driver.Conn"}, {"value": 48, "name": "go.itab.*conn,database/sql/driver.Tx"}, {"value": 64, "name": "go.itab.*copyin,database/sql/driver.Stmt"}, {"value": 40, "name": "go.itab.*drv,database/sql/driver.Driver"}, {"value": 56, "name": "go.itab.*rows,database/sql/driver.Rows"}, {"value": 64, "name": "go.itab.*stmt,database/sql/driver.Stmt"}, {"value": 48, "name": "go.itab.defaultDialer,github.com/cockroachdb/cockroach/vendor/github.com/lib/pq.Dialer"}, {"value": 48, "name": "go.itab.noRows,database/sql/driver.Result"}], "name": "lib/pq."}, {"children": [{"children": [{"children": [{"value": 331, "name": "Close"}, {"value": 476, "name": "Disable"}, {"value": 2761, "name": "Flush"}, {"value": 575, "name": "RecordSpan"}, {"value": 15, "name": "ReporterID"}, {"value": 344, "name": "connectClient"}, {"value": 577, "name": "convertRawSpans"}, {"value": 1649, "name": "convertToKeyValue"}, {"value": 516, "name": "makeReportRequest"}, {"value": 244, "name": "maybeLogError"}, {"children": [{"value": 147, "name": "func1"}], "name": "maybeLogError."}, {"value": 271, "name": "maybeLogInfof"}, {"value": 520, "name": "reconnectClient"}, {"value": 636, "name": "reportLoop"}, {"value": 440, "name": "shouldFlushLocked"}, {"value": 645, "name": "translateLogs"}, {"value": 1322, "name": "translateRawSpan"}, {"value": 561, "name": "translateTags"}], "name": "(*Recorder)."}, {"children": [{"value": 299, "name": "EmitBool"}, {"value": 306, "name": "EmitFloat32"}, {"value": 302, "name": "EmitFloat64"}, {"value": 300, "name": "EmitInt"}, {"value": 302, "name": "EmitInt32"}, {"value": 300, "name": "EmitInt64"}, {"value": 77, "name": "EmitLazyLogger"}, {"value": 1041, "name": "EmitObject"}, {"value": 479, "name": "EmitString"}, {"value": 301, "name": "EmitUint32"}, {"value": 300, "name": "EmitUint64"}], "name": "(*logFieldEncoder)."}, {"children": [{"value": 910, "name": "convertToInternalMetrics"}, {"value": 661, "name": "mergeFrom"}], "name": "(*reportBuffer)."}, {"value": 16, "name": "ErrNotLightStepTracer"}, {"value": 16, "name": "ErrSpanIsTooOld"}, {"value": 5296, "name": "NewRecorder"}, {"value": 1651, "name": "NewTracer"}, {"children": [{"value": 6, "name": "func1"}], "name": "NewTracer."}, {"value": 203, "name": "convertToReporter"}, {"value": 8, "name": "defaultReconnectPeriod"}, {"value": 16, "name": "errConnectionWasClosed"}, {"value": 16, "name": "errPreviousReportInFlight"}, {"value": 194, "name": "genSeededGUID"}, {"children": [{"value": 352, "name": "func1"}], "name": "genSeededGUID."}, {"value": 173, "name": "getAPIURL"}, {"value": 405, "name": "getCollectorHostPort"}, {"value": 566, "name": "getURL"}, {"value": 738, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "intType"}, {"value": 12, "name": "logOneError"}, {"value": 735, "name": "marshalFields"}, {"value": 8, "name": "seededGUIDGen"}, {"value": 12, "name": "seededGUIDGenOnce"}, {"value": 8, "name": "seededGUIDLock"}, {"value": 136, "name": "statictmp_123"}, {"value": 24, "name": "statictmp_459"}, {"value": 24, "name": "statictmp_460"}, {"value": 24, "name": "statictmp_480"}, {"value": 24, "name": "statictmp_481"}, {"value": 24, "name": "statictmp_532"}, {"value": 24, "name": "statictmp_533"}, {"value": 832, "name": "translateAttributes"}, {"value": 159, "name": "translateDurationFromOldestYoungest"}, {"value": 40, "name": "go.itab.*Recorder,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/basictracer-go.SpanRecorder"}, {"value": 120, "name": "go.itab.*logFieldEncoder,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go/log.Encoder"}], "name": "lightstep-tracer-go."}, {"children": [{"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 47, "name": "GetAccessToken"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Auth)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 24, "name": "GetDisable"}, {"value": 1, "name": "ProtoMessage"}, {"value": 9, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Command)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetCounts"}, {"value": 30, "name": "GetDurationMicros"}, {"value": 66, "name": "GetGauges"}, {"value": 66, "name": "GetLogs"}, {"value": 29, "name": "GetStartTimestamp"}, {"value": 1, "name": "ProtoMessage"}, {"value": 182, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*InternalMetrics)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 71, "name": "GetBoolValue"}, {"value": 78, "name": "GetDoubleValue"}, {"value": 76, "name": "GetIntValue"}, {"value": 93, "name": "GetJsonValue"}, {"value": 47, "name": "GetKey"}, {"value": 93, "name": "GetStringValue"}, {"value": 48, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}, {"value": 455, "name": "XXX_OneofFuncs"}], "name": "(*KeyValue)."}, {"children": [{"value": 1, "name": "isKeyValue_Value"}], "name": "(*KeyValue_BoolValue)."}, {"children": [{"value": 1, "name": "isKeyValue_Value"}], "name": "(*KeyValue_DoubleValue)."}, {"children": [{"value": 1, "name": "isKeyValue_Value"}], "name": "(*KeyValue_IntValue)."}, {"children": [{"value": 1, "name": "isKeyValue_Value"}], "name": "(*KeyValue_JsonValue)."}, {"children": [{"value": 1, "name": "isKeyValue_Value"}], "name": "(*KeyValue_StringValue)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetKeyvalues"}, {"value": 29, "name": "GetTimestamp"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Log)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 78, "name": "GetDoubleValue"}, {"value": 76, "name": "GetIntValue"}, {"value": 47, "name": "GetName"}, {"value": 48, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}, {"value": 260, "name": "XXX_OneofFuncs"}], "name": "(*MetricsSample)."}, {"children": [{"value": 1, "name": "isMetricsSample_Value"}], "name": "(*MetricsSample_DoubleValue)."}, {"children": [{"value": 1, "name": "isMetricsSample_Value"}], "name": "(*MetricsSample_IntValue)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 26, "name": "GetRelationship"}, {"value": 30, "name": "GetSpanContext"}, {"value": 1, "name": "ProtoMessage"}, {"value": 100, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Reference)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}], "name": "(*Reference_Relationship)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetAuth"}, {"value": 30, "name": "GetInternalMetrics"}, {"value": 29, "name": "GetReporter"}, {"value": 66, "name": "GetSpans"}, {"value": 27, "name": "GetTimestampOffsetMicros"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*ReportRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetCommands"}, {"value": 66, "name": "GetErrors"}, {"value": 30, "name": "GetReceiveTimestamp"}, {"value": 30, "name": "GetTransmitTimestamp"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*ReportResponse)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 29, "name": "GetReporterId"}, {"value": 66, "name": "GetTags"}, {"value": 1, "name": "ProtoMessage"}, {"value": 124, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Reporter)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetDurationMicros"}, {"value": 66, "name": "GetLogs"}, {"value": 48, "name": "GetOperationName"}, {"value": 66, "name": "GetReferences"}, {"value": 29, "name": "GetSpanContext"}, {"value": 30, "name": "GetStartTimestamp"}, {"value": 66, "name": "GetTags"}, {"value": 1, "name": "ProtoMessage"}, {"value": 181, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Span)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetBaggage"}, {"value": 30, "name": "GetSpanId"}, {"value": 29, "name": "GetTraceId"}, {"value": 1, "name": "ProtoMessage"}, {"value": 113, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*SpanContext)."}, {"children": [{"value": 326, "name": "Report"}], "name": "(*collectorServiceClient)."}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "Reference_Relationship."}, {"value": 8, "name": "Reference_Relationship_name"}, {"value": 8, "name": "Reference_Relationship_value"}, {"value": 1289, "name": "_KeyValue_OneofMarshaler"}, {"value": 961, "name": "_KeyValue_OneofSizer"}, {"value": 1686, "name": "_KeyValue_OneofUnmarshaler"}, {"value": 757, "name": "_MetricsSample_OneofMarshaler"}, {"value": 540, "name": "_MetricsSample_OneofSizer"}, {"value": 653, "name": "_MetricsSample_OneofUnmarshaler"}, {"value": 24, "name": "fileDescriptor0"}, {"value": 579, "name": "init"}, {"children": [{"value": 654, "name": "1"}, {"value": 210, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 32, "name": "statictmp_10"}, {"value": 32, "name": "statictmp_101"}, {"value": 8, "name": "statictmp_107"}, {"value": 16, "name": "statictmp_109"}, {"value": 8, "name": "statictmp_113"}, {"value": 8, "name": "statictmp_119"}, {"value": 32, "name": "statictmp_121"}, {"value": 8, "name": "statictmp_125"}, {"value": 32, "name": "statictmp_127"}, {"value": 8, "name": "statictmp_133"}, {"value": 8, "name": "statictmp_16"}, {"value": 8, "name": "statictmp_190"}, {"value": 16, "name": "statictmp_192"}, {"value": 8, "name": "statictmp_196"}, {"value": 16, "name": "statictmp_2"}, {"value": 8, "name": "statictmp_202"}, {"value": 8, "name": "statictmp_207"}, {"value": 8, "name": "statictmp_213"}, {"value": 978, "name": "statictmp_253"}, {"value": 8, "name": "statictmp_255"}, {"value": 32, "name": "statictmp_256"}, {"value": 32, "name": "statictmp_260"}, {"value": 8, "name": "statictmp_261"}, {"value": 16, "name": "statictmp_269"}, {"value": 24, "name": "statictmp_4"}, {"value": 8, "name": "statictmp_8"}, {"value": 56, "name": "go.itab.*Auth,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Command,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*InternalMetrics,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*KeyValue,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*KeyValue_BoolValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isKeyValue_Value"}, {"value": 40, "name": "go.itab.*KeyValue_DoubleValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isKeyValue_Value"}, {"value": 40, "name": "go.itab.*KeyValue_IntValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isKeyValue_Value"}, {"value": 40, "name": "go.itab.*KeyValue_JsonValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isKeyValue_Value"}, {"value": 40, "name": "go.itab.*KeyValue_StringValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isKeyValue_Value"}, {"value": 56, "name": "go.itab.*Log,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MetricsSample,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*MetricsSample_DoubleValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isMetricsSample_Value"}, {"value": 40, "name": "go.itab.*MetricsSample_IntValue,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.isMetricsSample_Value"}, {"value": 56, "name": "go.itab.*Reference,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReportRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*ReportResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Reporter,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Span,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SpanContext,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*collectorServiceClient,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/collectorpb.CollectorServiceClient"}], "name": "collectorpb."}, {"children": [{"children": [{"value": 56, "name": "GetAccessToken"}, {"value": 19, "name": "IsSetAccessToken"}, {"value": 1137, "name": "Read"}, {"value": 392, "name": "ReadField1"}, {"value": 205, "name": "String"}, {"value": 752, "name": "Write"}, {"value": 852, "name": "writeField1"}], "name": "(*Auth)."}, {"children": [{"value": 33, "name": "GetDisable"}, {"value": 19, "name": "IsSetDisable"}, {"value": 1137, "name": "Read"}, {"value": 303, "name": "ReadField1"}, {"value": 205, "name": "String"}, {"value": 752, "name": "Write"}, {"value": 842, "name": "writeField1"}], "name": "(*Command)."}, {"children": [{"value": 23, "name": "GetKey"}, {"value": 24, "name": "GetValue"}, {"value": 1242, "name": "Read"}, {"value": 279, "name": "ReadField1"}, {"value": 284, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 833, "name": "writeField1"}, {"value": 834, "name": "writeField2"}], "name": "(*KeyValue)."}, {"children": [{"value": 34, "name": "GetErrorFlag"}, {"value": 36, "name": "GetFields"}, {"value": 57, "name": "GetFilename"}, {"value": 57, "name": "GetLevel"}, {"value": 36, "name": "GetLineNumber"}, {"value": 57, "name": "GetMessage"}, {"value": 57, "name": "GetPayloadJson"}, {"value": 57, "name": "GetRuntimeGuid"}, {"value": 57, "name": "GetSpanGuid"}, {"value": 57, "name": "GetStableName"}, {"value": 33, "name": "GetStackFrames"}, {"value": 36, "name": "GetThreadId"}, {"value": 35, "name": "GetTimestampMicros"}, {"value": 20, "name": "IsSetErrorFlag"}, {"value": 20, "name": "IsSetFields"}, {"value": 20, "name": "IsSetFilename"}, {"value": 20, "name": "IsSetLevel"}, {"value": 20, "name": "IsSetLineNumber"}, {"value": 20, "name": "IsSetMessage"}, {"value": 20, "name": "IsSetPayloadJson"}, {"value": 20, "name": "IsSetRuntimeGuid"}, {"value": 20, "name": "IsSetSpanGuid"}, {"value": 20, "name": "IsSetStableName"}, {"value": 20, "name": "IsSetStackFrames"}, {"value": 20, "name": "IsSetThreadId"}, {"value": 19, "name": "IsSetTimestampMicros"}, {"value": 2404, "name": "Read"}, {"value": 304, "name": "ReadField1"}, {"value": 1113, "name": "ReadField10"}, {"value": 397, "name": "ReadField11"}, {"value": 308, "name": "ReadField12"}, {"value": 1202, "name": "ReadField13"}, {"value": 397, "name": "ReadField2"}, {"value": 397, "name": "ReadField3"}, {"value": 397, "name": "ReadField4"}, {"value": 397, "name": "ReadField5"}, {"value": 397, "name": "ReadField6"}, {"value": 309, "name": "ReadField7"}, {"value": 397, "name": "ReadField8"}, {"value": 309, "name": "ReadField9"}, {"value": 230, "name": "String"}, {"value": 1844, "name": "Write"}, {"value": 843, "name": "writeField1"}, {"value": 1351, "name": "writeField10"}, {"value": 854, "name": "writeField11"}, {"value": 844, "name": "writeField12"}, {"value": 1350, "name": "writeField13"}, {"value": 854, "name": "writeField2"}, {"value": 854, "name": "writeField3"}, {"value": 854, "name": "writeField4"}, {"value": 854, "name": "writeField5"}, {"value": 854, "name": "writeField6"}, {"value": 845, "name": "writeField7"}, {"value": 854, "name": "writeField8"}, {"value": 845, "name": "writeField9"}], "name": "(*LogRecord)."}, {"children": [{"value": 32, "name": "GetCounts"}, {"value": 33, "name": "GetGauges"}, {"value": 19, "name": "IsSetCounts"}, {"value": 20, "name": "IsSetGauges"}, {"value": 1242, "name": "Read"}, {"value": 1152, "name": "ReadField1"}, {"value": 1193, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 1348, "name": "writeField1"}, {"value": 1350, "name": "writeField2"}], "name": "(*Metrics)."}, {"children": [{"value": 40, "name": "GetDoubleValue"}, {"value": 36, "name": "GetInt64Value"}, {"value": 23, "name": "GetName"}, {"value": 20, "name": "IsSetDoubleValue"}, {"value": 20, "name": "IsSetInt64Value"}, {"value": 1359, "name": "Read"}, {"value": 279, "name": "ReadField1"}, {"value": 309, "name": "ReadField2"}, {"value": 311, "name": "ReadField3"}, {"value": 230, "name": "String"}, {"value": 934, "name": "Write"}, {"value": 833, "name": "writeField1"}, {"value": 845, "name": "writeField2"}, {"value": 847, "name": "writeField3"}], "name": "(*MetricsSample)."}, {"children": [{"value": 23, "name": "GetName"}, {"value": 15, "name": "GetValue"}, {"value": 1242, "name": "Read"}, {"value": 279, "name": "ReadField1"}, {"value": 237, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 833, "name": "writeField1"}, {"value": 825, "name": "writeField2"}], "name": "(*NamedCounter)."}, {"children": [{"value": 32, "name": "GetAuth"}, {"value": 33, "name": "GetRequest"}, {"value": 19, "name": "IsSetAuth"}, {"value": 20, "name": "IsSetRequest"}, {"value": 1242, "name": "Read"}, {"value": 370, "name": "ReadField1"}, {"value": 370, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 828, "name": "writeField1"}, {"value": 830, "name": "writeField2"}], "name": "(*ReportArgs)."}, {"children": [{"value": 33, "name": "GetCounters"}, {"value": 33, "name": "GetInternalLogs"}, {"value": 36, "name": "GetInternalMetrics"}, {"value": 33, "name": "GetLogRecords"}, {"value": 36, "name": "GetOldestMicros"}, {"value": 32, "name": "GetRuntime"}, {"value": 33, "name": "GetSpanRecords"}, {"value": 36, "name": "GetTimestampOffsetMicros"}, {"value": 36, "name": "GetYoungestMicros"}, {"value": 20, "name": "IsSetCounters"}, {"value": 20, "name": "IsSetInternalLogs"}, {"value": 23, "name": "IsSetInternalMetrics"}, {"value": 20, "name": "IsSetLogRecords"}, {"value": 20, "name": "IsSetOldestMicros"}, {"value": 19, "name": "IsSetRuntime"}, {"value": 20, "name": "IsSetSpanRecords"}, {"value": 20, "name": "IsSetTimestampOffsetMicros"}, {"value": 20, "name": "IsSetYoungestMicros"}, {"value": 1999, "name": "Read"}, {"value": 363, "name": "ReadField1"}, {"value": 1156, "name": "ReadField10"}, {"value": 382, "name": "ReadField11"}, {"value": 1156, "name": "ReadField3"}, {"value": 1156, "name": "ReadField4"}, {"value": 309, "name": "ReadField5"}, {"value": 309, "name": "ReadField7"}, {"value": 309, "name": "ReadField8"}, {"value": 1185, "name": "ReadField9"}, {"value": 230, "name": "String"}, {"value": 1480, "name": "Write"}, {"value": 844, "name": "writeField1"}, {"value": 1350, "name": "writeField10"}, {"value": 856, "name": "writeField11"}, {"value": 1350, "name": "writeField3"}, {"value": 1350, "name": "writeField4"}, {"value": 845, "name": "writeField5"}, {"value": 845, "name": "writeField7"}, {"value": 845, "name": "writeField8"}, {"value": 1350, "name": "writeField9"}], "name": "(*ReportRequest)."}, {"children": [{"value": 32, "name": "GetCommands"}, {"value": 33, "name": "GetErrors"}, {"value": 33, "name": "GetTiming"}, {"value": 19, "name": "IsSetCommands"}, {"value": 20, "name": "IsSetErrors"}, {"value": 20, "name": "IsSetTiming"}, {"value": 1359, "name": "Read"}, {"value": 1122, "name": "ReadField1"}, {"value": 385, "name": "ReadField2"}, {"value": 1113, "name": "ReadField3"}, {"value": 230, "name": "String"}, {"value": 934, "name": "Write"}, {"value": 1348, "name": "writeField1"}, {"value": 847, "name": "writeField2"}, {"value": 1351, "name": "writeField3"}], "name": "(*ReportResponse)."}, {"children": [{"value": 32, "name": "GetSuccess"}, {"value": 19, "name": "IsSetSuccess"}, {"value": 1136, "name": "Read"}, {"value": 363, "name": "ReadField0"}, {"value": 205, "name": "String"}, {"value": 752, "name": "Write"}, {"value": 844, "name": "writeField0"}], "name": "(*ReportResult)."}, {"children": [{"value": 175, "name": "Report"}, {"value": 1196, "name": "recvReport"}, {"value": 597, "name": "sendReport"}], "name": "(*ReportingServiceClient)."}, {"children": [{"value": 33, "name": "GetAttrs"}, {"value": 57, "name": "GetGroupName"}, {"value": 56, "name": "GetGuid"}, {"value": 36, "name": "GetStartMicros"}, {"value": 20, "name": "IsSetAttrs"}, {"value": 20, "name": "IsSetGroupName"}, {"value": 19, "name": "IsSetGuid"}, {"value": 20, "name": "IsSetStartMicros"}, {"value": 1471, "name": "Read"}, {"value": 392, "name": "ReadField1"}, {"value": 309, "name": "ReadField2"}, {"value": 397, "name": "ReadField3"}, {"value": 1193, "name": "ReadField4"}, {"value": 230, "name": "String"}, {"value": 1025, "name": "Write"}, {"value": 852, "name": "writeField1"}, {"value": 845, "name": "writeField2"}, {"value": 854, "name": "writeField3"}, {"value": 1350, "name": "writeField4"}], "name": "(*Runtime)."}, {"children": [{"value": 33, "name": "GetAttributes"}, {"value": 34, "name": "GetErrorFlag"}, {"value": 33, "name": "GetJoinIds"}, {"value": 33, "name": "GetLogRecords"}, {"value": 36, "name": "GetOldestMicros"}, {"value": 57, "name": "GetRuntimeGuid"}, {"value": 56, "name": "GetSpanGuid"}, {"value": 57, "name": "GetSpanName"}, {"value": 57, "name": "GetTraceGuid"}, {"value": 36, "name": "GetYoungestMicros"}, {"value": 20, "name": "IsSetAttributes"}, {"value": 20, "name": "IsSetErrorFlag"}, {"value": 20, "name": "IsSetJoinIds"}, {"value": 20, "name": "IsSetLogRecords"}, {"value": 20, "name": "IsSetOldestMicros"}, {"value": 20, "name": "IsSetRuntimeGuid"}, {"value": 19, "name": "IsSetSpanGuid"}, {"value": 20, "name": "IsSetSpanName"}, {"value": 20, "name": "IsSetTraceGuid"}, {"value": 20, "name": "IsSetYoungestMicros"}, {"value": 2104, "name": "Read"}, {"value": 392, "name": "ReadField1"}, {"value": 1156, "name": "ReadField10"}, {"value": 397, "name": "ReadField11"}, {"value": 397, "name": "ReadField2"}, {"value": 397, "name": "ReadField3"}, {"value": 1193, "name": "ReadField4"}, {"value": 309, "name": "ReadField5"}, {"value": 309, "name": "ReadField6"}, {"value": 1193, "name": "ReadField8"}, {"value": 308, "name": "ReadField9"}, {"value": 230, "name": "String"}, {"value": 1571, "name": "Write"}, {"value": 852, "name": "writeField1"}, {"value": 1350, "name": "writeField10"}, {"value": 854, "name": "writeField11"}, {"value": 854, "name": "writeField2"}, {"value": 854, "name": "writeField3"}, {"value": 1350, "name": "writeField4"}, {"value": 845, "name": "writeField5"}, {"value": 845, "name": "writeField6"}, {"value": 1350, "name": "writeField8"}, {"value": 844, "name": "writeField9"}], "name": "(*SpanRecord)."}, {"children": [{"value": 35, "name": "GetReceiveMicros"}, {"value": 36, "name": "GetTransmitMicros"}, {"value": 19, "name": "IsSetReceiveMicros"}, {"value": 20, "name": "IsSetTransmitMicros"}, {"value": 1242, "name": "Read"}, {"value": 304, "name": "ReadField1"}, {"value": 309, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 843, "name": "writeField1"}, {"value": 845, "name": "writeField2"}], "name": "(*Timing)."}, {"children": [{"value": 23, "name": "GetTraceKey"}, {"value": 24, "name": "GetValue"}, {"value": 1242, "name": "Read"}, {"value": 279, "name": "ReadField1"}, {"value": 284, "name": "ReadField2"}, {"value": 230, "name": "String"}, {"value": 843, "name": "Write"}, {"value": 833, "name": "writeField1"}, {"value": 834, "name": "writeField2"}], "name": "(*TraceJoinId)."}, {"value": 16, "name": "Auth_AccessToken_DEFAULT"}, {"value": 1, "name": "Command_Disable_DEFAULT"}, {"value": 1, "name": "LogRecord_ErrorFlag_DEFAULT"}, {"value": 16, "name": "LogRecord_Filename_DEFAULT"}, {"value": 16, "name": "LogRecord_Level_DEFAULT"}, {"value": 8, "name": "LogRecord_LineNumber_DEFAULT"}, {"value": 16, "name": "LogRecord_Message_DEFAULT"}, {"value": 16, "name": "LogRecord_PayloadJson_DEFAULT"}, {"value": 16, "name": "LogRecord_RuntimeGuid_DEFAULT"}, {"value": 16, "name": "LogRecord_SpanGuid_DEFAULT"}, {"value": 16, "name": "LogRecord_StableName_DEFAULT"}, {"value": 8, "name": "LogRecord_ThreadId_DEFAULT"}, {"value": 8, "name": "LogRecord_TimestampMicros_DEFAULT"}, {"value": 8, "name": "MetricsSample_DoubleValue_DEFAULT"}, {"value": 8, "name": "MetricsSample_Int64Value_DEFAULT"}, {"value": 459, "name": "NewReportingServiceClientFactory"}, {"value": 8, "name": "ReportArgs_Auth_DEFAULT"}, {"value": 8, "name": "ReportArgs_Request_DEFAULT"}, {"value": 8, "name": "ReportRequest_InternalMetrics_DEFAULT"}, {"value": 8, "name": "ReportRequest_OldestMicros_DEFAULT"}, {"value": 8, "name": "ReportRequest_Runtime_DEFAULT"}, {"value": 8, "name": "ReportRequest_TimestampOffsetMicros_DEFAULT"}, {"value": 8, "name": "ReportRequest_YoungestMicros_DEFAULT"}, {"value": 8, "name": "ReportResponse_Timing_DEFAULT"}, {"value": 8, "name": "ReportResult_Success_DEFAULT"}, {"value": 16, "name": "Runtime_GroupName_DEFAULT"}, {"value": 16, "name": "Runtime_Guid_DEFAULT"}, {"value": 8, "name": "Runtime_StartMicros_DEFAULT"}, {"value": 1, "name": "SpanRecord_ErrorFlag_DEFAULT"}, {"value": 8, "name": "SpanRecord_OldestMicros_DEFAULT"}, {"value": 16, "name": "SpanRecord_RuntimeGuid_DEFAULT"}, {"value": 16, "name": "SpanRecord_SpanGuid_DEFAULT"}, {"value": 16, "name": "SpanRecord_SpanName_DEFAULT"}, {"value": 16, "name": "SpanRecord_TraceGuid_DEFAULT"}, {"value": 8, "name": "SpanRecord_YoungestMicros_DEFAULT"}, {"value": 8, "name": "Timing_ReceiveMicros_DEFAULT"}, {"value": 8, "name": "Timing_TransmitMicros_DEFAULT"}, {"value": 106, "name": "init"}, {"children": [{"value": 1, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "statictmp_60"}, {"value": 40, "name": "go.itab.*ReportingServiceClient,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/lightstep_thrift.ReportingService"}], "name": "lightstep_thrift."}, {"children": [{"children": [{"value": 110, "name": "Close"}, {"value": 110, "name": "Flush"}, {"value": 99, "name": "IsOpen"}, {"value": 110, "name": "Open"}, {"value": 157, "name": "Read"}, {"value": 140, "name": "ReadByte"}, {"value": 157, "name": "Write"}, {"value": 140, "name": "WriteByte"}, {"value": 168, "name": "WriteString"}], "name": "(*RichTransport)."}, {"children": [{"value": 151, "name": "Flush"}, {"value": 526, "name": "ReadBinary"}, {"value": 95, "name": "ReadBool"}, {"value": 97, "name": "ReadByte"}, {"value": 143, "name": "ReadDouble"}, {"value": 219, "name": "ReadFieldBegin"}, {"value": 19, "name": "ReadFieldEnd"}, {"value": 137, "name": "ReadI16"}, {"value": 125, "name": "ReadI32"}, {"value": 128, "name": "ReadI64"}, {"value": 451, "name": "ReadListBegin"}, {"value": 19, "name": "ReadListEnd"}, {"value": 628, "name": "ReadMapBegin"}, {"value": 19, "name": "ReadMapEnd"}, {"value": 1472, "name": "ReadMessageBegin"}, {"value": 19, "name": "ReadMessageEnd"}, {"value": 451, "name": "ReadSetBegin"}, {"value": 19, "name": "ReadSetEnd"}, {"value": 282, "name": "ReadString"}, {"value": 37, "name": "ReadStructBegin"}, {"value": 19, "name": "ReadStructEnd"}, {"value": 101, "name": "Skip"}, {"value": 24, "name": "Transport"}, {"value": 244, "name": "WriteBinary"}, {"value": 146, "name": "WriteBool"}, {"value": 164, "name": "WriteByte"}, {"value": 102, "name": "WriteDouble"}, {"value": 151, "name": "WriteFieldBegin"}, {"value": 19, "name": "WriteFieldEnd"}, {"value": 85, "name": "WriteFieldStop"}, {"value": 202, "name": "WriteI16"}, {"value": 194, "name": "WriteI32"}, {"value": 197, "name": "WriteI64"}, {"value": 150, "name": "WriteListBegin"}, {"value": 19, "name": "WriteListEnd"}, {"value": 212, "name": "WriteMapBegin"}, {"value": 19, "name": "WriteMapEnd"}, {"value": 412, "name": "WriteMessageBegin"}, {"value": 19, "name": "WriteMessageEnd"}, {"value": 150, "name": "WriteSetBegin"}, {"value": 19, "name": "WriteSetEnd"}, {"value": 233, "name": "WriteString"}, {"value": 19, "name": "WriteStructBegin"}, {"value": 19, "name": "WriteStructEnd"}, {"value": 190, "name": "readAll"}, {"value": 521, "name": "readStringBody"}], "name": "(*TBinaryProtocol)."}, {"children": [{"value": 640, "name": "GetProtocol"}], "name": "(*TBinaryProtocolFactory)."}, {"children": [{"value": 177, "name": "Close"}, {"value": 84, "name": "DelHeader"}, {"value": 2109, "name": "Flush"}, {"value": 104, "name": "GetHeader"}, {"value": 35, "name": "IsOpen"}, {"value": 19, "name": "Open"}, {"value": 35, "name": "Peek"}, {"value": 637, "name": "Read"}, {"value": 104, "name": "ReadByte"}, {"value": 104, "name": "SetHeader"}, {"value": 124, "name": "Write"}, {"value": 93, "name": "WriteByte"}, {"value": 114, "name": "WriteString"}], "name": "(*THttpClient)."}, {"children": [{"value": 237, "name": "String"}], "name": "(*TType)."}, {"children": [{"value": 45, "name": "Bytes"}, {"value": 27, "name": "Cap"}, {"value": 122, "name": "Close"}, {"value": 18, "name": "Grow"}, {"value": 27, "name": "Len"}, {"value": 45, "name": "Next"}, {"value": 45, "name": "Read"}, {"value": 41, "name": "ReadByte"}, {"value": 63, "name": "ReadBytes"}, {"value": 45, "name": "ReadFrom"}, {"value": 53, "name": "ReadRune"}, {"value": 54, "name": "ReadString"}, {"value": 18, "name": "Reset"}, {"value": 36, "name": "String"}, {"value": 18, "name": "Truncate"}, {"value": 36, "name": "UnreadByte"}, {"value": 36, "name": "UnreadRune"}, {"value": 45, "name": "Write"}, {"value": 36, "name": "WriteByte"}, {"value": 45, "name": "WriteRune"}, {"value": 45, "name": "WriteString"}, {"value": 45, "name": "WriteTo"}], "name": "(*bufferCloser)."}, {"children": [{"value": 30, "name": "Id"}, {"value": 47, "name": "Name"}, {"value": 348, "name": "String"}, {"value": 25, "name": "TypeId"}], "name": "(*field)."}, {"children": [{"value": 13, "name": "Byte"}, {"value": 21, "name": "Float32"}, {"value": 17, "name": "Float64"}, {"value": 14, "name": "Int"}, {"value": 14, "name": "Int16"}, {"value": 13, "name": "Int32"}, {"value": 14, "name": "Int64"}, {"value": 24, "name": "String"}, {"value": 14, "name": "isNull"}], "name": "(*numeric)."}, {"children": [{"value": 171, "name": "Error"}, {"value": 1137, "name": "Read"}, {"value": 13, "name": "TypeId"}, {"value": 686, "name": "Write"}], "name": "(*tApplicationException)."}, {"children": [{"value": 24, "name": "Error"}, {"value": 24, "name": "String"}, {"value": 14, "name": "TypeId"}], "name": "(*tProtocolException)."}, {"children": [{"value": 24, "name": "Err"}, {"value": 89, "name": "Error"}, {"value": 14, "name": "TypeId"}], "name": "(*tTransportException)."}, {"value": 8, "name": "ANONYMOUS_FIELD"}, {"value": 16, "name": "INFINITY"}, {"value": 24, "name": "JSON_COLON"}, {"value": 24, "name": "JSON_COMMA"}, {"value": 24, "name": "JSON_FALSE"}, {"value": 16, "name": "JSON_INFINITY"}, {"value": 24, "name": "JSON_INFINITY_BYTES"}, {"value": 24, "name": "JSON_LBRACE"}, {"value": 24, "name": "JSON_LBRACKET"}, {"value": 16, "name": "JSON_NAN"}, {"value": 24, "name": "JSON_NAN_BYTES"}, {"value": 16, "name": "JSON_NEGATIVE_INFINITY"}, {"value": 24, "name": "JSON_NEGATIVE_INFINITY_BYTES"}, {"value": 24, "name": "JSON_NULL"}, {"value": 1, "name": "JSON_QUOTE"}, {"value": 24, "name": "JSON_QUOTE_BYTES"}, {"value": 24, "name": "JSON_RBRACE"}, {"value": 24, "name": "JSON_RBRACKET"}, {"value": 24, "name": "JSON_TRUE"}, {"value": 8, "name": "MaxSkipDepth"}, {"value": 16, "name": "NAN"}, {"value": 16, "name": "NEGATIVE_INFINITY"}, {"value": 16, "name": "NUMERIC_NULL"}, {"value": 619, "name": "NewTHttpPostClient"}, {"value": 507, "name": "NewTProtocolException"}, {"value": 239, "name": "NewTProtocolExceptionWithType"}, {"value": 775, "name": "NewTTransportExceptionFromError"}, {"children": [{"value": 108, "name": "Close"}, {"value": 108, "name": "Flush"}, {"value": 97, "name": "IsOpen"}, {"value": 108, "name": "Open"}, {"value": 158, "name": "Read"}, {"value": 158, "name": "Write"}], "name": "RichTransport."}, {"value": 1648, "name": "Skip"}, {"value": 111, "name": "SkipDefaultDepth"}, {"children": [{"value": 152, "name": "String"}], "name": "TType."}, {"value": 16, "name": "ZERO"}, {"value": 24, "name": "bufPool"}, {"children": [{"value": 123, "name": "Bytes"}, {"value": 46, "name": "Cap"}, {"value": 92, "name": "Grow"}, {"value": 53, "name": "Len"}, {"value": 172, "name": "Next"}, {"value": 145, "name": "Read"}, {"value": 111, "name": "ReadByte"}, {"value": 144, "name": "ReadBytes"}, {"value": 135, "name": "ReadFrom"}, {"value": 120, "name": "ReadRune"}, {"value": 134, "name": "ReadString"}, {"value": 82, "name": "Reset"}, {"value": 200, "name": "String"}, {"value": 92, "name": "Truncate"}, {"value": 224, "name": "UnreadByte"}, {"value": 224, "name": "UnreadRune"}, {"value": 145, "name": "Write"}, {"value": 111, "name": "WriteByte"}, {"value": 120, "name": "WriteRune"}, {"value": 135, "name": "WriteString"}, {"value": 135, "name": "WriteTo"}], "name": "bufferCloser."}, {"value": 16, "name": "errTransportInterrupted"}, {"value": 293, "name": "getBuffer"}, {"children": [{"value": 222, "name": "func1"}], "name": "glob."}, {"value": 664, "name": "init"}, {"children": [{"value": 238, "name": "1"}, {"value": 181, "name": "2"}, {"value": 1033, "name": "3"}, {"value": 1721, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "invalidDataLength"}, {"value": 24, "name": "json_nonbase_map_elem_bytes"}, {"value": 423, "name": "readByte"}, {"value": 12, "name": "statictmp_147"}, {"value": 12, "name": "statictmp_148"}, {"value": 1, "name": "statictmp_2109"}, {"value": 1, "name": "statictmp_2112"}, {"value": 1, "name": "statictmp_2115"}, {"value": 1, "name": "statictmp_2118"}, {"value": 1, "name": "statictmp_2121"}, {"value": 1, "name": "statictmp_2124"}, {"value": 1, "name": "statictmp_2127"}, {"value": 4, "name": "statictmp_2130"}, {"value": 4, "name": "statictmp_2133"}, {"value": 5, "name": "statictmp_2136"}, {"value": 8, "name": "statictmp_2139"}, {"value": 9, "name": "statictmp_2142"}, {"value": 3, "name": "statictmp_2145"}, {"value": 3, "name": "statictmp_2148"}, {"value": 112, "name": "statictmp_2987"}, {"value": 224, "name": "statictmp_2988"}, {"value": 112, "name": "statictmp_829"}, {"children": [{"value": 21, "name": "Error"}], "name": "tApplicationException."}, {"value": 8, "name": "ttypeToCompactType"}, {"value": 8, "name": "typeNames"}, {"value": 142, "name": "writeByte"}, {"value": 80, "name": "go.itab.*RichTransport,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TRichTransport"}, {"value": 384, "name": "go.itab.*TBinaryProtocol,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TProtocol"}, {"value": 40, "name": "go.itab.*TBinaryProtocolFactory,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TProtocolFactory"}, {"value": 80, "name": "go.itab.*THttpClient,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TTransport"}, {"value": 40, "name": "go.itab.*bufferCloser,io.Reader"}, {"value": 104, "name": "go.itab.*numeric,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.Numeric"}, {"value": 64, "name": "go.itab.*tApplicationException,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TApplicationException"}, {"value": 48, "name": "go.itab.*tProtocolException,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TProtocolException"}, {"value": 56, "name": "go.itab.*tTransportException,github.com/cockroachdb/cockroach/vendor/github.com/lightstep/lightstep-tracer-go/thrift_0_9_2/lib/go/thrift.TTransportException"}], "name": "thrift_0_9_2/lib/go/thrift."}, {"children": [{"children": [{"value": 400, "name": "Disable"}, {"value": 8324, "name": "Flush"}, {"value": 677, "name": "RecordSpan"}, {"value": 247, "name": "maybeLogError"}, {"children": [{"value": 147, "name": "func1"}], "name": "maybeLogError."}, {"value": 274, "name": "maybeLogInfof"}, {"value": 492, "name": "reportLoop"}, {"value": 537, "name": "shouldFlush"}, {"value": 915, "name": "thriftRuntime"}], "name": "(*Recorder)."}, {"children": [{"value": 690, "name": "EmitBool"}, {"value": 693, "name": "EmitFloat32"}, {"value": 693, "name": "EmitFloat64"}, {"value": 691, "name": "EmitInt"}, {"value": 689, "name": "EmitInt32"}, {"value": 691, "name": "EmitInt64"}, {"value": 1, "name": "EmitLazyLogger"}, {"value": 782, "name": "EmitObject"}, {"value": 585, "name": "EmitString"}, {"value": 689, "name": "EmitUint32"}, {"value": 691, "name": "EmitUint64"}], "name": "(*logFieldEncoder)."}, {"value": 3751, "name": "NewRecorder"}, {"value": 194, "name": "genSeededGUID"}, {"children": [{"value": 352, "name": "func1"}], "name": "genSeededGUID."}, {"value": 173, "name": "getAPIURL"}, {"value": 170, "name": "getCollectorURL"}, {"value": 566, "name": "getURL"}, {"value": 178, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 12, "name": "logOneError"}, {"value": 8, "name": "seededGUIDGen"}, {"value": 12, "name": "seededGUIDGenOnce"}, {"value": 8, "name": "seededGUIDLock"}, {"value": 40, "name": "go.itab.*Recorder,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/basictracer-go.SpanRecorder"}, {"value": 120, "name": "go.itab.*logFieldEncoder,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go/log.Encoder"}], "name": "thrift_rpc."}], "name": "lightstep-tracer-go/"}], "name": "lightstep/"}, {"children": [{"children": [{"value": 228, "name": "IsTerminal"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "go-isatty."}, {"children": [{"children": [{"value": 316, "name": "FillLeft"}, {"value": 316, "name": "FillRight"}, {"value": 564, "name": "RuneWidth"}, {"value": 228, "name": "StringWidth"}, {"value": 576, "name": "Truncate"}, {"value": 679, "name": "Wrap"}], "name": "(*Condition)."}, {"value": 8, "name": "DefaultCondition"}, {"value": 1, "name": "EastAsianWidth"}, {"value": 205, "name": "IsAmbiguousWidth"}, {"value": 282, "name": "IsEastAsian"}, {"value": 80, "name": "RuneWidth"}, {"value": 92, "name": "StringWidth"}, {"value": 24, "name": "ambiguous"}, {"value": 24, "name": "combining"}, {"value": 24, "name": "doublewidth"}, {"value": 24, "name": "emoji"}, {"value": 170, "name": "inTable"}, {"value": 169, "name": "inTables"}, {"value": 399, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 767, "name": "isEastAsian"}, {"value": 8, "name": "mblenTable"}, {"value": 24, "name": "nonprint"}, {"value": 24, "name": "notassigned"}, {"value": 24, "name": "private"}, {"value": 8, "name": "reLoc"}, {"value": 1, "name": "statictmp_108"}, {"value": 24, "name": "statictmp_109"}, {"value": 96, "name": "statictmp_110"}, {"value": 2000, "name": "statictmp_111"}, {"value": 848, "name": "statictmp_112"}, {"value": 1432, "name": "statictmp_113"}, {"value": 312, "name": "statictmp_114"}, {"value": 5096, "name": "statictmp_115"}, {"value": 240, "name": "statictmp_118"}, {"value": 120, "name": "statictmp_119"}], "name": "go-runewidth."}], "name": "mattn/"}, {"children": [{"value": 16, "name": "errInvalidVarint"}, {"value": 194, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "matttproud/golang_protobuf_extensions/pbutil."}, {"children": [{"children": [{"value": 186, "name": "String"}], "name": "(*Location)."}, {"children": [{"value": 305, "name": "String"}], "name": "Location."}, {"value": 16, "name": "SkipEntry"}, {"value": 396, "name": "Walk"}, {"value": 10, "name": "_Location_index"}, {"value": 189, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 2328, "name": "walk"}, {"children": [{"value": 157, "name": "func1"}], "name": "walk."}, {"value": 989, "name": "walkArray"}, {"value": 1449, "name": "walkMap"}, {"value": 196, "name": "walkPrimitive"}, {"value": 989, "name": "walkSlice"}, {"value": 1458, "name": "walkStruct"}], "name": "mitchellh/reflectwalk."}, {"children": [{"children": [{"value": 252, "name": "Correlation"}, {"value": 252, "name": "Covariance"}, {"value": 252, "name": "CovariancePopulation"}, {"value": 216, "name": "GeometricMean"}, {"value": 189, "name": "Get"}, {"value": 216, "name": "HarmonicMean"}, {"value": 216, "name": "InterQuartileRange"}, {"value": 163, "name": "Len"}, {"value": 209, "name": "Less"}, {"value": 216, "name": "Max"}, {"value": 216, "name": "Mean"}, {"value": 216, "name": "Median"}, {"value": 216, "name": "MedianAbsoluteDeviation"}, {"value": 216, "name": "MedianAbsoluteDeviationPopulation"}, {"value": 252, "name": "Midhinge"}, {"value": 216, "name": "Min"}, {"value": 234, "name": "Mode"}, {"value": 252, "name": "Pearson"}, {"value": 228, "name": "Percentile"}, {"value": 228, "name": "PercentileNearestRank"}, {"value": 216, "name": "PopulationVariance"}, {"value": 292, "name": "Quartile"}, {"value": 335, "name": "QuartileOutliers"}, {"value": 265, "name": "Sample"}, {"value": 216, "name": "SampleVariance"}, {"value": 216, "name": "StandardDeviation"}, {"value": 216, "name": "StandardDeviationPopulation"}, {"value": 216, "name": "StandardDeviationSample"}, {"value": 216, "name": "Sum"}, {"value": 208, "name": "Swap"}, {"value": 252, "name": "Trimean"}, {"value": 216, "name": "Variance"}], "name": "(*Float64Data)."}, {"children": [{"value": 171, "name": "Error"}], "name": "(*statsErr)."}, {"value": 16, "name": "BoundsErr"}, {"value": 607, "name": "Correlation"}, {"value": 544, "name": "Covariance"}, {"value": 517, "name": "CovariancePopulation"}, {"value": 16, "name": "EmptyInput"}, {"children": [{"value": 161, "name": "Correlation"}, {"value": 161, "name": "Covariance"}, {"value": 161, "name": "CovariancePopulation"}, {"value": 112, "name": "GeometricMean"}, {"value": 59, "name": "Get"}, {"value": 112, "name": "HarmonicMean"}, {"value": 112, "name": "InterQuartileRange"}, {"value": 11, "name": "Len"}, {"value": 79, "name": "Less"}, {"value": 112, "name": "Max"}, {"value": 112, "name": "Mean"}, {"value": 112, "name": "Median"}, {"value": 112, "name": "MedianAbsoluteDeviation"}, {"value": 112, "name": "MedianAbsoluteDeviationPopulation"}, {"value": 115, "name": "Midhinge"}, {"value": 112, "name": "Min"}, {"value": 139, "name": "Mode"}, {"value": 161, "name": "Pearson"}, {"value": 124, "name": "Percentile"}, {"value": 124, "name": "PercentileNearestRank"}, {"value": 112, "name": "PopulationVariance"}, {"value": 158, "name": "Quartile"}, {"value": 237, "name": "QuartileOutliers"}, {"value": 174, "name": "Sample"}, {"value": 112, "name": "SampleVariance"}, {"value": 112, "name": "StandardDeviation"}, {"value": 112, "name": "StandardDeviationPopulation"}, {"value": 112, "name": "StandardDeviationSample"}, {"value": 112, "name": "Sum"}, {"value": 78, "name": "Swap"}, {"value": 115, "name": "Trimean"}, {"value": 112, "name": "Variance"}], "name": "Float64Data."}, {"value": 277, "name": "GeometricMean"}, {"value": 464, "name": "HarmonicMean"}, {"value": 241, "name": "InterQuartileRange"}, {"value": 241, "name": "Max"}, {"value": 236, "name": "Mean"}, {"value": 367, "name": "Median"}, {"value": 112, "name": "MedianAbsoluteDeviation"}, {"value": 463, "name": "MedianAbsoluteDeviationPopulation"}, {"value": 253, "name": "Midhinge"}, {"value": 232, "name": "Min"}, {"value": 1266, "name": "Mode"}, {"value": 16, "name": "NaNErr"}, {"value": 16, "name": "NegativeErr"}, {"value": 161, "name": "Pearson"}, {"value": 639, "name": "Percentile"}, {"value": 638, "name": "PercentileNearestRank"}, {"value": 188, "name": "PopulationVariance"}, {"value": 611, "name": "Quartile"}, {"value": 1113, "name": "QuartileOutliers"}, {"value": 415, "name": "Round"}, {"value": 1081, "name": "Sample"}, {"value": 188, "name": "SampleVariance"}, {"value": 16, "name": "SizeErr"}, {"value": 112, "name": "StandardDeviation"}, {"value": 249, "name": "StandardDeviationPopulation"}, {"value": 249, "name": "StandardDeviationSample"}, {"value": 219, "name": "Sum"}, {"value": 309, "name": "Trimean"}, {"value": 112, "name": "Variance"}, {"value": 16, "name": "ZeroErr"}, {"value": 297, "name": "_variance"}, {"value": 87, "name": "float64ToInt"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 224, "name": "sortedCopy"}, {"value": 314, "name": "sortedCopyDif"}, {"value": 48, "name": "statictmp_276"}, {"value": 24, "name": "statictmp_322"}, {"children": [{"value": 21, "name": "Error"}], "name": "statsErr."}, {"value": 115, "name": "unixnano"}, {"value": 40, "name": "go.itab.statsErr,error"}], "name": "montanaflynn/stats."}, {"children": [{"children": [{"value": 756, "name": "Append"}, {"value": 135, "name": "AppendBulk"}, {"value": 223, "name": "Render"}, {"value": 18, "name": "SetAlignment"}, {"value": 17, "name": "SetAutoFormatHeaders"}, {"value": 17, "name": "SetAutoMergeCells"}, {"value": 17, "name": "SetAutoWrapText"}, {"value": 35, "name": "SetBorder"}, {"value": 50, "name": "SetBorders"}, {"value": 113, "name": "SetCenterSeparator"}, {"value": 18, "name": "SetColWidth"}, {"value": 113, "name": "SetColumnSeparator"}, {"value": 419, "name": "SetFooter"}, {"value": 18, "name": "SetFooterAlignment"}, {"value": 458, "name": "SetHeader"}, {"value": 18, "name": "SetHeaderAlignment"}, {"value": 17, "name": "SetHeaderLine"}, {"value": 113, "name": "SetNewLine"}, {"value": 17, "name": "SetRowLine"}, {"value": 113, "name": "SetRowSeparator"}, {"value": 1022, "name": "parseDimension"}], "name": "(*Table)."}, {"value": 137, "name": "DisplayWidth"}, {"value": 1142, "name": "NewWriter"}, {"value": 401, "name": "Pad"}, {"value": 227, "name": "PadLeft"}, {"value": 227, "name": "PadRight"}, {"children": [{"value": 479, "name": "Render"}, {"value": 2820, "name": "printFooter"}, {"value": 1314, "name": "printHeading"}, {"value": 849, "name": "printLine"}, {"value": 1215, "name": "printLineOptionalCellSeparators"}, {"value": 3547, "name": "printRow"}, {"value": 4516, "name": "printRowMergeCells"}, {"value": 276, "name": "printRows"}, {"value": 747, "name": "printRowsMergeCells"}], "name": "Table."}, {"value": 271, "name": "Title"}, {"value": 731, "name": "WrapString"}, {"value": 1547, "name": "WrapWords"}, {"value": 8, "name": "ansi"}, {"value": 8, "name": "decimal"}, {"value": 418, "name": "getLines"}, {"value": 359, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "nl"}, {"value": 8, "name": "percent"}, {"value": 16, "name": "sp"}], "name": "olekukonko/tablewriter."}, {"children": [{"children": [{"children": [{"value": 202, "name": "ForeachBaggageItem"}, {"value": 296, "name": "WithBaggageItem"}], "name": "(*SpanContext)."}, {"children": [{"value": 605, "name": "Extract"}, {"children": [{"value": 289, "name": "func1"}], "name": "Extract."}, {"value": 553, "name": "Inject"}], "name": "(*accessorPropagator)."}, {"children": [{"value": 1096, "name": "Extract"}, {"value": 924, "name": "Inject"}], "name": "(*binaryPropagator)."}, {"children": [{"value": 239, "name": "Error"}], "name": "(*errAssertionFailed)."}, {"children": [{"value": 223, "name": "BaggageItem"}, {"value": 98, "name": "Context"}, {"value": 103, "name": "Finish"}, {"value": 3772, "name": "FinishWithOptions"}, {"value": 80, "name": "Lock"}, {"value": 1084, "name": "Log"}, {"value": 181, "name": "LogEvent"}, {"value": 207, "name": "LogEventWithPayload"}, {"value": 1071, "name": "LogFields"}, {"value": 814, "name": "LogKV"}, {"value": 24, "name": "Operation"}, {"value": 486, "name": "SetBaggageItem"}, {"value": 231, "name": "SetOperationName"}, {"value": 793, "name": "SetTag"}, {"value": 31, "name": "Start"}, {"value": 26, "name": "Tracer"}, {"value": 21, "name": "Unlock"}, {"value": 838, "name": "maybeAssertSanityLocked"}, {"value": 203, "name": "onBaggage"}, {"value": 171, "name": "onCreate"}, {"value": 201, "name": "onFinish"}, {"value": 175, "name": "onLog"}, {"value": 162, "name": "onLogFields"}, {"value": 203, "name": "onTag"}], "name": "(*spanImpl)."}, {"children": [{"value": 1420, "name": "Extract"}, {"children": [{"value": 2531, "name": "func1"}], "name": "Extract."}, {"value": 907, "name": "Inject"}], "name": "(*textMapPropagator)."}, {"children": [{"value": 468, "name": "Extract"}, {"value": 450, "name": "Inject"}, {"value": 79, "name": "Options"}, {"value": 421, "name": "StartSpan"}, {"value": 1022, "name": "StartSpanWithOptions"}, {"value": 455, "name": "getSpan"}, {"value": 693, "name": "startSpanInternal"}], "name": "(*tracerImpl)."}, {"children": [{"value": 10, "name": "1"}], "name": ".gobytes."}, {"value": 122, "name": "DefaultOptions"}, {"children": [{"value": 19, "name": "func1"}], "name": "DefaultOptions."}, {"value": 716, "name": "New"}, {"children": [{"value": 237, "name": "ForeachBaggageItem"}, {"value": 758, "name": "WithBaggageItem"}], "name": "SpanContext."}, {"value": 1157, "name": "curGoroutineID"}, {"children": [{"value": 192, "name": "func1"}, {"value": 84, "name": "func2"}], "name": "glob."}, {"value": 24, "name": "goroutineSpace"}, {"value": 291, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "littleBuf"}, {"value": 166, "name": "randomID"}, {"value": 211, "name": "randomID2"}, {"value": 457, "name": "rotateLogBuffer"}, {"value": 8, "name": "seededIDGen"}, {"value": 8, "name": "seededIDLock"}, {"value": 8, "name": "spanPool"}, {"value": 32, "name": "statictmp_107"}, {"value": 32, "name": "statictmp_114"}, {"value": 72, "name": "statictmp_179"}, {"value": 24, "name": "statictmp_344"}, {"value": 136, "name": "go.itab.*spanImpl,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Span"}, {"value": 56, "name": "go.itab.*tracerImpl,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Tracer"}, {"value": 40, "name": "go.itab.SpanContext,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.SpanContext"}], "name": "basictracer-go."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetBaggageItems"}, {"value": 280, "name": "Marshal"}, {"value": 1546, "name": "MarshalTo"}, {"value": 1, "name": "ProtoMessage"}, {"value": 123, "name": "Reset"}, {"value": 437, "name": "Size"}, {"value": 92, "name": "String"}, {"value": 4487, "name": "Unmarshal"}], "name": "(*TracerState)."}, {"value": 16, "name": "ErrIntOverflowWire"}, {"value": 16, "name": "ErrInvalidLengthWire"}, {"value": 122, "name": "encodeVarintWire"}, {"value": 24, "name": "fileDescriptorWire"}, {"value": 347, "name": "init"}, {"children": [{"value": 92, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 1621, "name": "skipWire"}, {"value": 34, "name": "sovWire"}, {"value": 32, "name": "statictmp_10"}, {"value": 8, "name": "statictmp_14"}, {"value": 234, "name": "statictmp_214"}, {"value": 56, "name": "go.itab.*TracerState,github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Message"}], "name": "basictracer-go/wire."}, {"children": [{"children": [{"value": 1191, "name": "ToLogRecord"}], "name": "(*LogData)."}, {"children": [{"value": 199, "name": "Extract"}, {"value": 175, "name": "Inject"}, {"value": 231, "name": "StartSpan"}], "name": "(*NoopTracer)."}, {"children": [{"value": 403, "name": "Apply"}], "name": "(*SpanReference)."}, {"children": [{"value": 176, "name": "Apply"}], "name": "(*Tags)."}, {"children": [{"value": 172, "name": "BaggageItem"}, {"value": 202, "name": "Context"}, {"value": 150, "name": "Finish"}, {"value": 211, "name": "FinishWithOptions"}, {"value": 199, "name": "Log"}, {"value": 150, "name": "LogEvent"}, {"value": 150, "name": "LogEventWithPayload"}, {"value": 188, "name": "LogFields"}, {"value": 188, "name": "LogKV"}, {"value": 202, "name": "SetBaggageItem"}, {"value": 200, "name": "SetOperationName"}, {"value": 200, "name": "SetTag"}, {"value": 202, "name": "Tracer"}], "name": "(*noopSpan)."}, {"children": [{"value": 150, "name": "ForeachBaggageItem"}], "name": "(*noopSpanContext)."}, {"children": [{"value": 64, "name": "Finish-fm"}], "name": "(Span)."}, {"value": 187, "name": "ContextWithSpan"}, {"value": 16, "name": "ErrInvalidCarrier"}, {"value": 16, "name": "ErrInvalidSpanContext"}, {"value": 16, "name": "ErrSpanContextCorrupted"}, {"value": 16, "name": "ErrSpanContextNotFound"}, {"value": 16, "name": "ErrUnsupportedFormat"}, {"children": [{"value": 43, "name": "Extract"}, {"value": 19, "name": "Inject"}, {"value": 94, "name": "StartSpan"}], "name": "NoopTracer."}, {"value": 224, "name": "SpanFromContext"}, {"children": [{"value": 285, "name": "Apply"}], "name": "SpanReference."}, {"children": [{"value": 451, "name": "Apply"}], "name": "Tags."}, {"value": 548, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 19, "name": "BaggageItem"}, {"value": 94, "name": "Context"}, {"value": 1, "name": "Finish"}, {"value": 1, "name": "FinishWithOptions"}, {"value": 1, "name": "Log"}, {"value": 1, "name": "LogEvent"}, {"value": 1, "name": "LogEventWithPayload"}, {"value": 1, "name": "LogFields"}, {"value": 1, "name": "LogKV"}, {"value": 94, "name": "SetBaggageItem"}, {"value": 92, "name": "SetOperationName"}, {"value": 92, "name": "SetTag"}, {"value": 94, "name": "Tracer"}], "name": "noopSpan."}, {"children": [{"value": 1, "name": "ForeachBaggageItem"}], "name": "noopSpanContext."}, {"value": 56, "name": "go.itab.NoopTracer,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Tracer"}, {"value": 40, "name": "go.itab.SpanReference,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.StartSpanOption"}, {"value": 136, "name": "go.itab.noopSpan,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.Span"}, {"value": 40, "name": "go.itab.noopSpanContext,github.com/cockroachdb/cockroach/vendor/github.com/opentracing/opentracing-go.SpanContext"}], "name": "opentracing-go."}, {"children": [{"children": [{"children": [{"value": 205, "name": "Set"}], "name": "(*uint16TagName)."}, {"value": 16, "name": "SamplingPriority"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 159, "name": "Set"}], "name": "uint16TagName."}], "name": "ext."}, {"children": [{"children": [{"value": 210, "name": "Key"}, {"value": 201, "name": "Marshal"}, {"value": 201, "name": "String"}, {"value": 838, "name": "Value"}], "name": "(*Field)."}, {"children": [{"value": 21, "name": "Key"}, {"value": 1128, "name": "Marshal"}, {"value": 995, "name": "String"}, {"value": 912, "name": "Value"}], "name": "Field."}, {"value": 7022, "name": "InterleavedKVToFields"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "log."}], "name": "opentracing-go/"}], "name": "opentracing/"}, {"children": [{"value": 67, "name": "Get"}, {"value": 15, "name": "getg"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "getg."}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "petermattis/goid."}, {"children": [{"children": [{"value": 194, "name": "Format"}], "name": "(*Frame)."}, {"children": [{"value": 212, "name": "Format"}], "name": "(*StackTrace)."}, {"children": [{"value": 23, "name": "Error"}, {"value": 542, "name": "Format"}, {"value": 46, "name": "StackTrace"}], "name": "(*fundamental)."}, {"children": [{"value": 407, "name": "Format"}, {"value": 165, "name": "StackTrace"}], "name": "(*stack)."}, {"children": [{"value": 23, "name": "Cause"}, {"value": 172, "name": "Error"}, {"value": 525, "name": "Format"}], "name": "(*withMessage)."}, {"children": [{"value": 23, "name": "Cause"}, {"value": 110, "name": "Error"}, {"value": 769, "name": "Format"}, {"value": 46, "name": "StackTrace"}], "name": "(*withStack)."}, {"value": 178, "name": "Cause"}, {"value": 300, "name": "Errorf"}, {"children": [{"value": 1445, "name": "Format"}, {"value": 151, "name": "file"}, {"value": 126, "name": "line"}], "name": "Frame."}, {"value": 214, "name": "New"}, {"children": [{"value": 1181, "name": "Format"}], "name": "StackTrace."}, {"value": 417, "name": "Wrap"}, {"value": 518, "name": "Wrapf"}, {"value": 227, "name": "callers"}, {"value": 259, "name": "funcname"}, {"children": [{"value": 112, "name": "StackTrace"}], "name": "fundamental."}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 108, "name": "Error"}, {"value": 112, "name": "StackTrace"}], "name": "withStack."}, {"value": 40, "name": "go.itab.*fundamental,error"}, {"value": 40, "name": "go.itab.*withMessage,error"}, {"value": 40, "name": "go.itab.*withStack,error"}], "name": "pkg/errors."}, {"children": [{"children": [{"children": [{"value": 37, "name": "GetCumulativeCount"}, {"value": 40, "name": "GetUpperBound"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Bucket)."}, {"children": [{"value": 39, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Counter)."}, {"children": [{"value": 39, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Gauge)."}, {"children": [{"value": 66, "name": "GetBucket"}, {"value": 37, "name": "GetSampleCount"}, {"value": 40, "name": "GetSampleSum"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Histogram)."}, {"children": [{"value": 55, "name": "GetName"}, {"value": 56, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*LabelPair)."}, {"children": [{"value": 30, "name": "GetCounter"}, {"value": 30, "name": "GetGauge"}, {"value": 30, "name": "GetHistogram"}, {"value": 65, "name": "GetLabel"}, {"value": 30, "name": "GetSummary"}, {"value": 38, "name": "GetTimestampMs"}, {"value": 30, "name": "GetUntyped"}, {"value": 1, "name": "ProtoMessage"}, {"value": 167, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Metric)."}, {"children": [{"value": 56, "name": "GetHelp"}, {"value": 66, "name": "GetMetric"}, {"value": 55, "name": "GetName"}, {"value": 35, "name": "GetType"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*MetricFamily)."}, {"children": [{"value": 192, "name": "Enum"}, {"value": 184, "name": "String"}, {"value": 190, "name": "UnmarshalJSON"}], "name": "(*MetricType)."}, {"children": [{"value": 39, "name": "GetQuantile"}, {"value": 40, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Quantile)."}, {"children": [{"value": 66, "name": "GetQuantile"}, {"value": 37, "name": "GetSampleCount"}, {"value": 40, "name": "GetSampleSum"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Summary)."}, {"children": [{"value": 39, "name": "GetValue"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Untyped)."}, {"children": [{"value": 78, "name": "Enum"}, {"value": 90, "name": "String"}], "name": "MetricType."}, {"value": 8, "name": "MetricType_name"}, {"value": 8, "name": "MetricType_value"}, {"value": 554, "name": "init"}, {"children": [{"value": 95, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 32, "name": "statictmp_20"}, {"value": 20, "name": "statictmp_38"}, {"value": 80, "name": "statictmp_39"}, {"value": 32, "name": "statictmp_4"}, {"value": 80, "name": "statictmp_43"}, {"value": 20, "name": "statictmp_44"}, {"value": 32, "name": "statictmp_9"}, {"value": 56, "name": "go.itab.*Bucket,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Counter,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Gauge,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Histogram,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*LabelPair,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Metric,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*MetricFamily,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Quantile,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Summary,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Untyped,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "client_model/go."}, {"children": [{"children": [{"value": 6640, "name": "MetricFamilyToText"}, {"value": 8, "name": "escape"}, {"value": 184, "name": "escapeString"}, {"value": 8, "name": "escapeWithDoubleQuote"}, {"value": 536, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1397, "name": "labelPairsToText"}, {"value": 64, "name": "statictmp_1065"}, {"value": 96, "name": "statictmp_1068"}, {"value": 1, "name": "statictmp_511"}, {"value": 1, "name": "statictmp_541"}, {"value": 1187, "name": "writeSample"}], "name": "expfmt."}, {"children": [{"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "internal/bitbucket.org/ww/goautoneg."}, {"children": [{"value": 8, "name": "LabelNameRE"}, {"value": 8, "name": "MetricNameRE"}, {"value": 8, "name": "dotPrecision"}, {"value": 8, "name": "durationRE"}, {"value": 8, "name": "emptyLabelSignature"}, {"value": 16, "name": "hashNew"}, {"value": 413, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "model."}], "name": "common/"}], "name": "prometheus/"}, {"children": [{"children": [{"children": [{"value": 166, "name": "Clear"}, {"value": 162, "name": "Count"}, {"value": 176, "name": "Dec"}, {"value": 176, "name": "Inc"}, {"value": 208, "name": "Snapshot"}], "name": "(*CounterSnapshot)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*DuplicateMetric)."}, {"children": [{"value": 210, "name": "Snapshot"}, {"value": 180, "name": "Update"}, {"value": 164, "name": "Value"}], "name": "(*GaugeFloat64Snapshot)."}, {"children": [{"value": 208, "name": "Snapshot"}, {"value": 176, "name": "Update"}, {"value": 162, "name": "Value"}], "name": "(*GaugeSnapshot)."}, {"children": [{"value": 14, "name": "Count"}, {"value": 109, "name": "Mark"}, {"value": 17, "name": "Rate1"}, {"value": 17, "name": "Rate15"}, {"value": 17, "name": "Rate5"}, {"value": 17, "name": "RateMean"}, {"value": 23, "name": "Snapshot"}], "name": "(*MeterSnapshot)."}, {"children": [{"value": 150, "name": "Clear"}, {"value": 163, "name": "Count"}, {"value": 150, "name": "Dec"}, {"value": 150, "name": "Inc"}, {"value": 200, "name": "Snapshot"}], "name": "(*NilCounter)."}, {"children": [{"value": 200, "name": "Snapshot"}, {"value": 150, "name": "Update"}, {"value": 163, "name": "Value"}], "name": "(*NilGaugeFloat64)."}, {"children": [{"value": 11, "name": "Clear"}, {"value": 14, "name": "Count"}, {"value": 19, "name": "Dec"}, {"value": 16, "name": "Inc"}, {"value": 116, "name": "Snapshot"}], "name": "(*StandardCounter)."}, {"children": [{"value": 118, "name": "Snapshot"}, {"value": 143, "name": "Update"}, {"value": 152, "name": "Value"}], "name": "(*StandardGaugeFloat64)."}, {"children": [{"value": 100, "name": "Count"}, {"value": 261, "name": "Mark"}, {"value": 105, "name": "Rate1"}, {"value": 105, "name": "Rate15"}, {"value": 105, "name": "Rate5"}, {"value": 105, "name": "RateMean"}, {"value": 170, "name": "Snapshot"}, {"value": 214, "name": "tick"}, {"value": 318, "name": "updateSnapshot"}], "name": "(*StandardMeter)."}, {"children": [{"value": 242, "name": "Each"}, {"value": 234, "name": "Get"}, {"value": 546, "name": "GetOrRegister"}, {"value": 238, "name": "MarshalJSON"}, {"children": [{"value": 8184, "name": "func1"}], "name": "MarshalJSON."}, {"value": 243, "name": "Register"}, {"value": 357, "name": "RunHealthchecks"}, {"value": 204, "name": "Unregister"}, {"value": 347, "name": "UnregisterAll"}, {"value": 730, "name": "register"}, {"value": 532, "name": "registered"}], "name": "(*StandardRegistry)."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}, {"value": 106, "name": "tick"}, {"value": 216, "name": "tickMeters"}], "name": "(*meterArbiter)."}, {"children": [{"value": 109, "name": "Clear"}, {"value": 11, "name": "Count"}, {"value": 109, "name": "Dec"}, {"value": 109, "name": "Inc"}, {"value": 102, "name": "Snapshot"}], "name": "CounterSnapshot."}, {"value": 16, "name": "DefaultRegistry"}, {"children": [{"value": 213, "name": "Error"}], "name": "DuplicateMetric."}, {"children": [{"value": 104, "name": "Snapshot"}, {"value": 109, "name": "Update"}, {"value": 13, "name": "Value"}], "name": "GaugeFloat64Snapshot."}, {"children": [{"value": 102, "name": "Snapshot"}, {"value": 109, "name": "Update"}, {"value": 11, "name": "Value"}], "name": "GaugeSnapshot."}, {"value": 210, "name": "NewRegistry"}, {"children": [{"value": 1, "name": "Clear"}, {"value": 10, "name": "Count"}, {"value": 1, "name": "Dec"}, {"value": 1, "name": "Inc"}, {"value": 92, "name": "Snapshot"}], "name": "NilCounter."}, {"children": [{"value": 92, "name": "Snapshot"}, {"value": 1, "name": "Update"}, {"value": 10, "name": "Value"}], "name": "NilGaugeFloat64."}, {"value": 1, "name": "UseNilMetrics"}, {"value": 64, "name": "arbiter"}, {"value": 112, "name": "gcStats"}, {"value": 399, "name": "init"}, {"children": [{"value": 152, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "statictmp_1565"}, {"value": 40, "name": "statictmp_1583"}, {"value": 8, "name": "threadCreateProfile"}, {"value": 88, "name": "go.itab.*MeterSnapshot,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Meter"}, {"value": 72, "name": "go.itab.*StandardCounter,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Counter"}, {"value": 56, "name": "go.itab.*StandardGaugeFloat64,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.GaugeFloat64"}, {"value": 88, "name": "go.itab.*StandardRegistry,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Registry"}, {"value": 72, "name": "go.itab.CounterSnapshot,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Counter"}, {"value": 40, "name": "go.itab.DuplicateMetric,error"}, {"value": 56, "name": "go.itab.GaugeFloat64Snapshot,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.GaugeFloat64"}, {"value": 56, "name": "go.itab.GaugeSnapshot,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Gauge"}, {"value": 72, "name": "go.itab.NilCounter,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.Counter"}, {"value": 56, "name": "go.itab.NilGaugeFloat64,github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics.GaugeFloat64"}], "name": "go-metrics."}, {"children": [{"children": [{"value": 89, "name": "(github.com/cockroachdb/cockroach/vendor/github.com/rcrowley/go-metrics/exp.expHandler)-fm"}, {"value": 471, "name": "expHandler"}, {"children": [{"value": 499, "name": "func1"}], "name": "expHandler."}, {"value": 260, "name": "getFloat"}, {"value": 260, "name": "getInt"}, {"value": 137, "name": "publishCounter"}, {"value": 137, "name": "publishGauge"}, {"value": 139, "name": "publishGaugeFloat64"}, {"value": 1711, "name": "publishHistogram"}, {"value": 817, "name": "publishMeter"}, {"value": 2315, "name": "publishTimer"}, {"value": 168, "name": "syncToExpvar"}, {"children": [{"value": 1293, "name": "func1"}], "name": "syncToExpvar."}], "name": "(*exp)."}, {"value": 115, "name": "Exp"}, {"value": 251, "name": "ExpHandler"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "statictmp_31"}, {"value": 40, "name": "statictmp_71"}], "name": "go-metrics/exp."}], "name": "rcrowley/"}, {"children": [{"children": [{"value": 27, "name": "Bucket"}, {"value": 687, "name": "Delete"}, {"value": 49, "name": "Do"}, {"value": 49, "name": "Get"}, {"value": 581, "name": "GetReader"}, {"value": 49, "name": "Head"}, {"value": 49, "name": "Post"}, {"value": 49, "name": "PostForm"}, {"value": 396, "name": "PutWriter"}, {"value": 36, "name": "Region"}, {"value": 546, "name": "Sign"}, {"value": 813, "name": "delete"}, {"value": 2570, "name": "url"}], "name": "(*Bucket)."}, {"children": [{"value": 45, "name": "Do"}, {"value": 45, "name": "Get"}, {"value": 45, "name": "Head"}, {"value": 45, "name": "Post"}, {"value": 45, "name": "PostForm"}], "name": "(*Config)."}, {"children": [{"value": 266, "name": "Error"}], "name": "(*RespError)."}, {"children": [{"value": 235, "name": "Bucket"}, {"value": 716, "name": "Region"}], "name": "(*S3)."}, {"children": [{"value": 111, "name": "Close"}, {"value": 111, "name": "LocalAddr"}, {"value": 338, "name": "Read"}, {"value": 111, "name": "RemoteAddr"}, {"value": 142, "name": "SetDeadline"}, {"value": 142, "name": "SetReadDeadline"}, {"value": 142, "name": "SetWriteDeadline"}, {"value": 338, "name": "Write"}], "name": "(*deadlineConn)."}, {"children": [{"value": 587, "name": "Close"}, {"value": 1651, "name": "Read"}, {"value": 2483, "name": "checkMd5"}, {"value": 1503, "name": "getChunk"}, {"value": 985, "name": "initChunks"}, {"value": 942, "name": "nextChunk"}, {"value": 807, "name": "retryGetChunk"}, {"value": 855, "name": "retryRequest"}, {"value": 164, "name": "worker"}], "name": "(*getter)."}, {"children": [{"value": 18, "name": "Fatal"}, {"value": 18, "name": "Fatalf"}, {"value": 18, "name": "Fatalln"}, {"value": 27, "name": "Flags"}, {"value": 36, "name": "Output"}, {"value": 18, "name": "Panic"}, {"value": 18, "name": "Panicf"}, {"value": 18, "name": "Panicln"}, {"value": 36, "name": "Prefix"}, {"value": 18, "name": "Print"}, {"value": 18, "name": "Printf"}, {"value": 18, "name": "Println"}, {"value": 18, "name": "SetFlags"}, {"value": 18, "name": "SetOutput"}, {"value": 18, "name": "SetPrefix"}, {"value": 125, "name": "debugPrintf"}, {"value": 105, "name": "debugPrintln"}], "name": "(*internalLogger)."}, {"children": [{"value": 3682, "name": "Close"}, {"value": 900, "name": "Write"}, {"value": 1087, "name": "abort"}, {"value": 1837, "name": "flush"}, {"value": 1250, "name": "hashContent"}, {"value": 1918, "name": "putMd5"}, {"value": 2351, "name": "putPart"}, {"value": 775, "name": "retryPutPart"}, {"value": 1204, "name": "retryRequest"}, {"value": 164, "name": "worker"}], "name": "(*putter)."}, {"children": [{"value": 762, "name": "bodyDigest"}, {"value": 1772, "name": "buildCanonicalHeaders"}, {"value": 1122, "name": "buildCanonicalString"}, {"value": 343, "name": "buildCredentialString"}, {"value": 1071, "name": "buildSignature"}, {"value": 517, "name": "buildStringToSign"}, {"value": 197, "name": "buildTime"}, {"value": 613, "name": "sign"}], "name": "(*signer)."}, {"children": [{"value": 267, "name": "Bucket"}, {"value": 125, "name": "Do"}, {"value": 141, "name": "Get"}, {"value": 141, "name": "Head"}, {"value": 209, "name": "Post"}, {"value": 161, "name": "PostForm"}, {"value": 102, "name": "Region"}], "name": "Bucket."}, {"value": 341, "name": "ClientWithTimeout"}, {"children": [{"value": 470, "name": "func1"}], "name": "ClientWithTimeout."}, {"children": [{"value": 134, "name": "Do"}, {"value": 150, "name": "Get"}, {"value": 150, "name": "Head"}, {"value": 206, "name": "Post"}, {"value": 167, "name": "PostForm"}], "name": "Config."}, {"value": 8, "name": "DefaultConfig"}, {"value": 16, "name": "DefaultDomain"}, {"value": 618, "name": "bufferPool"}, {"children": [{"value": 2667, "name": "func1"}], "name": "bufferPool."}, {"value": 73, "name": "checkClose"}, {"children": [{"value": 108, "name": "Close"}, {"value": 108, "name": "LocalAddr"}, {"value": 108, "name": "RemoteAddr"}, {"value": 139, "name": "SetDeadline"}, {"value": 139, "name": "SetReadDeadline"}, {"value": 139, "name": "SetWriteDeadline"}], "name": "deadlineConn."}, {"value": 248, "name": "hmacSign"}, {"value": 8, "name": "ignoredHeaders"}, {"value": 573, "name": "init"}, {"children": [{"value": 278, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"children": [{"value": 112, "name": "Fatal"}, {"value": 135, "name": "Fatalf"}, {"value": 112, "name": "Fatalln"}, {"value": 92, "name": "Flags"}, {"value": 135, "name": "Output"}, {"value": 112, "name": "Panic"}, {"value": 135, "name": "Panicf"}, {"value": 112, "name": "Panicln"}, {"value": 102, "name": "Prefix"}, {"value": 112, "name": "Print"}, {"value": 135, "name": "Printf"}, {"value": 112, "name": "Println"}, {"value": 92, "name": "SetFlags"}, {"value": 102, "name": "SetOutput"}, {"value": 102, "name": "SetPrefix"}], "name": "internalLogger."}, {"value": 16, "name": "logger"}, {"value": 2857, "name": "newGetter"}, {"value": 2851, "name": "newPutter"}, {"value": 1098, "name": "newRespError"}, {"value": 8, "name": "regionMatcher"}, {"value": 197, "name": "sha"}, {"value": 469, "name": "shaReader"}, {"value": 64, "name": "statictmp_613"}, {"value": 64, "name": "statictmp_655"}, {"value": 64, "name": "statictmp_752"}, {"value": 64, "name": "statictmp_754"}, {"value": 4, "name": "statictmp_755"}, {"value": 40, "name": "go.itab.*RespError,error"}, {"value": 96, "name": "go.itab.*deadlineConn,net.Conn"}, {"value": 48, "name": "go.itab.*getter,io.ReadCloser"}, {"value": 48, "name": "go.itab.*putter,io.WriteCloser"}], "name": "rlmcpherson/s3gof3r."}, {"children": [{"children": [{"value": 280, "name": "AddListener"}, {"value": 68, "name": "Break"}, {"value": 124, "name": "Call"}, {"value": 741, "name": "CallContext"}, {"children": [{"value": 125, "name": "func1"}], "name": "CallContext."}, {"value": 15, "name": "ConsecFailures"}, {"value": 76, "name": "ErrorRate"}, {"value": 220, "name": "Fail"}, {"value": 74, "name": "Failures"}, {"value": 140, "name": "Ready"}, {"value": 511, "name": "RemoveListener"}, {"value": 99, "name": "Reset"}, {"value": 70, "name": "ResetCounters"}, {"value": 387, "name": "Subscribe"}, {"children": [{"value": 259, "name": "func1"}], "name": "Subscribe."}, {"value": 220, "name": "Success"}, {"value": 74, "name": "Successes"}, {"value": 143, "name": "Trip"}, {"value": 19, "name": "Tripped"}, {"value": 431, "name": "sendEvent"}, {"value": 597, "name": "state"}], "name": "(*Breaker)."}, {"children": [{"value": 15, "name": "Fail"}, {"value": 21, "name": "Reset"}, {"value": 17, "name": "Success"}], "name": "(*bucket)."}, {"children": [{"value": 245, "name": "ErrorRate"}, {"children": [{"value": 138, "name": "func1"}], "name": "ErrorRate."}, {"value": 113, "name": "Fail"}, {"value": 176, "name": "Failures"}, {"children": [{"value": 112, "name": "func1"}], "name": "Failures."}, {"value": 121, "name": "Reset"}, {"children": [{"value": 111, "name": "func1"}], "name": "Reset."}, {"value": 115, "name": "Success"}, {"value": 176, "name": "Successes"}, {"children": [{"value": 113, "name": "func1"}], "name": "Successes."}, {"value": 687, "name": "getLatestBucket"}], "name": "(*window)."}, {"value": 8, "name": "DefaultWindowBuckets"}, {"value": 8, "name": "DefaultWindowTime"}, {"value": 16, "name": "ErrBreakerOpen"}, {"value": 16, "name": "ErrBreakerTimeout"}, {"value": 888, "name": "NewBreakerWithOptions"}, {"value": 91, "name": "ThresholdTripFunc"}, {"children": [{"value": 89, "name": "func1"}], "name": "ThresholdTripFunc."}, {"value": 8, "name": "defaultBackoffMaxElapsedTime"}, {"value": 8, "name": "defaultInitialBackOffInterval"}, {"value": 306, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 677, "name": "newWindow"}], "name": "rubyist/circuitbreaker."}, {"children": [{"children": [{"value": 211, "name": "Bytes"}, {"value": 234, "name": "MarshalBinary"}, {"value": 216, "name": "MarshalText"}, {"value": 541, "name": "Scan"}, {"value": 19, "name": "SetVariant"}, {"value": 26, "name": "SetVersion"}, {"value": 186, "name": "String"}, {"value": 285, "name": "UnmarshalBinary"}, {"value": 1715, "name": "UnmarshalText"}, {"value": 206, "name": "Value"}, {"value": 228, "name": "Variant"}, {"value": 178, "name": "Version"}], "name": "(*UUID)."}, {"children": [{"value": 9, "name": "1"}], "name": ".gobytes."}, {"value": 128, "name": "FromBytes"}, {"value": 168, "name": "FromString"}, {"value": 16, "name": "NamespaceDNS"}, {"value": 16, "name": "NamespaceOID"}, {"value": 16, "name": "NamespaceURL"}, {"value": 16, "name": "NamespaceX500"}, {"value": 163, "name": "NewV4"}, {"children": [{"value": 100, "name": "Bytes"}, {"value": 118, "name": "MarshalBinary"}, {"value": 144, "name": "MarshalText"}, {"value": 506, "name": "String"}, {"value": 147, "name": "Value"}, {"value": 72, "name": "Variant"}, {"value": 17, "name": "Version"}], "name": "UUID."}, {"value": 24, "name": "byteGroups"}, {"value": 340, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 4, "name": "posixGID"}, {"value": 4, "name": "posixUID"}, {"value": 117, "name": "safeRandom"}, {"value": 40, "name": "statictmp_145"}, {"value": 24, "name": "urnPrefix"}], "name": "satori/go%2euuid."}, {"children": [{"children": [{"children": [{"value": 734, "name": "AddCommand"}, {"value": 77, "name": "ArgsLenAtDash"}, {"value": 232, "name": "CommandPath"}, {"value": 55, "name": "CommandPathPadding"}, {"value": 233, "name": "Commands"}, {"value": 369, "name": "DebugFlags"}, {"children": [{"value": 732, "name": "func1"}, {"children": [{"value": 2459, "name": "1"}, {"value": 1697, "name": "2"}], "name": "func1."}], "name": "DebugFlags."}, {"value": 80, "name": "Execute"}, {"value": 2002, "name": "ExecuteC"}, {"value": 1675, "name": "Find"}, {"children": [{"value": 1788, "name": "func1"}], "name": "Find."}, {"value": 157, "name": "Flag"}, {"value": 134, "name": "FlagErrorFunc"}, {"children": [{"value": 21, "name": "func1"}], "name": "FlagErrorFunc."}, {"value": 464, "name": "Flags"}, {"value": 533, "name": "GenBashCompletion"}, {"value": 257, "name": "GenBashCompletionFile"}, {"value": 18, "name": "GlobalNormalizationFunc"}, {"value": 207, "name": "HasAlias"}, {"value": 83, "name": "HasAvailableFlags"}, {"value": 83, "name": "HasAvailableInheritedFlags"}, {"value": 83, "name": "HasAvailableLocalFlags"}, {"value": 83, "name": "HasAvailablePersistentFlags"}, {"value": 173, "name": "HasAvailableSubCommands"}, {"value": 20, "name": "HasExample"}, {"value": 91, "name": "HasFlags"}, {"value": 173, "name": "HasHelpSubCommands"}, {"value": 91, "name": "HasInheritedFlags"}, {"value": 91, "name": "HasLocalFlags"}, {"value": 23, "name": "HasParent"}, {"value": 91, "name": "HasPersistentFlags"}, {"value": 23, "name": "HasSubCommands"}, {"value": 158, "name": "Help"}, {"value": 184, "name": "HelpFunc"}, {"children": [{"value": 276, "name": "func1"}], "name": "HelpFunc."}, {"value": 169, "name": "HelpTemplate"}, {"value": 340, "name": "InheritedFlags"}, {"children": [{"value": 220, "name": "func1"}, {"children": [{"value": 186, "name": "1"}], "name": "func1."}], "name": "InheritedFlags."}, {"value": 262, "name": "IsAdditionalHelpTopicCommand"}, {"value": 211, "name": "IsAvailableCommand"}, {"value": 368, "name": "LocalFlags"}, {"children": [{"value": 69, "name": "func1"}, {"value": 122, "name": "func2"}], "name": "LocalFlags."}, {"value": 324, "name": "LocalNonPersistentFlags"}, {"children": [{"value": 126, "name": "func1"}], "name": "LocalNonPersistentFlags."}, {"value": 137, "name": "MarkFlagCustom"}, {"value": 157, "name": "MarkFlagFilename"}, {"value": 114, "name": "MarkFlagRequired"}, {"value": 157, "name": "MarkPersistentFlagFilename"}, {"value": 114, "name": "MarkPersistentFlagRequired"}, {"value": 251, "name": "Name"}, {"value": 450, "name": "NameAndAliases"}, {"value": 55, "name": "NamePadding"}, {"value": 70, "name": "NonInheritedFlags"}, {"value": 104, "name": "OutOrStderr"}, {"value": 104, "name": "OutOrStdout"}, {"value": 18, "name": "Parent"}, {"value": 184, "name": "ParseFlags"}, {"value": 464, "name": "PersistentFlags"}, {"value": 114, "name": "Print"}, {"value": 242, "name": "Printf"}, {"value": 213, "name": "Println"}, {"value": 898, "name": "RemoveCommand"}, {"value": 181, "name": "ResetCommands"}, {"value": 722, "name": "ResetFlags"}, {"value": 239, "name": "Root"}, {"children": [{"value": 104, "name": "func1"}], "name": "Root."}, {"value": 42, "name": "Runnable"}, {"value": 125, "name": "SetArgs"}, {"value": 103, "name": "SetFlagErrorFunc"}, {"value": 295, "name": "SetGlobalNormalizationFunc"}, {"value": 103, "name": "SetHelpCommand"}, {"value": 103, "name": "SetHelpFunc"}, {"value": 113, "name": "SetHelpTemplate"}, {"value": 113, "name": "SetOutput"}, {"value": 103, "name": "SetUsageFunc"}, {"value": 113, "name": "SetUsageTemplate"}, {"value": 1286, "name": "SuggestionsFor"}, {"value": 99, "name": "Usage"}, {"value": 134, "name": "UsageFunc"}, {"children": [{"value": 328, "name": "func1"}], "name": "UsageFunc."}, {"value": 55, "name": "UsagePadding"}, {"value": 400, "name": "UsageString"}, {"value": 169, "name": "UsageTemplate"}, {"value": 219, "name": "UseLine"}, {"value": 356, "name": "VisitParents"}, {"children": [{"value": 149, "name": "func1"}], "name": "VisitParents."}, {"value": 159, "name": "checkHelpFunc"}, {"value": 2047, "name": "execute"}, {"value": 188, "name": "getOut"}, {"value": 813, "name": "initHelpCmd"}, {"children": [{"value": 1, "name": "func1"}, {"value": 1, "name": "func2"}, {"value": 364, "name": "func3"}], "name": "initHelpCmd."}, {"value": 304, "name": "initHelpFlag"}, {"value": 629, "name": "mergePersistentFlags"}, {"children": [{"value": 76, "name": "func1"}, {"value": 289, "name": "func2"}, {"children": [{"value": 157, "name": "1"}, {"value": 157, "name": "2"}], "name": "func2."}], "name": "mergePersistentFlags."}, {"value": 201, "name": "persistentFlag"}, {"value": 128, "name": "preRun"}], "name": "(*Command)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*commandSorterByName)."}, {"value": 1, "name": "EnableCommandSorting"}, {"value": 1, "name": "EnablePrefixMatching"}, {"value": 623, "name": "Eq"}, {"value": 533, "name": "Gt"}, {"value": 250, "name": "MarkFlagCustom"}, {"value": 170, "name": "MarkFlagFilename"}, {"value": 240, "name": "MarkFlagRequired"}, {"value": 236, "name": "appendIfNotPresent"}, {"value": 788, "name": "argsMinusFirstX"}, {"children": [{"value": 11, "name": "Len"}, {"value": 209, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "commandSorterByName."}, {"value": 1602, "name": "gen"}, {"value": 119, "name": "hasNoOptDefVal"}, {"value": 1024, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "initializers"}, {"value": 878, "name": "ld"}, {"value": 8, "name": "minCommandPathPadding"}, {"value": 8, "name": "minNamePadding"}, {"value": 8, "name": "minUsagePadding"}, {"value": 1191, "name": "postscript"}, {"value": 8, "name": "preExecHookFn"}, {"value": 473, "name": "preamble"}, {"value": 391, "name": "rpad"}, {"value": 147, "name": "shortHasNoOptDefVal"}, {"children": [{"value": 141, "name": "func1"}], "name": "shortHasNoOptDefVal."}, {"value": 16, "name": "statictmp_198"}, {"value": 2046, "name": "stripFlags"}, {"value": 8, "name": "templateFuncs"}, {"value": 692, "name": "tmpl"}, {"value": 102, "name": "trimRightSpace"}, {"value": 635, "name": "writeArgAliases"}, {"value": 712, "name": "writeCommands"}, {"value": 651, "name": "writeFlag"}, {"value": 2634, "name": "writeFlagHandler"}, {"value": 736, "name": "writeFlags"}, {"children": [{"value": 499, "name": "func1"}, {"value": 334, "name": "func2"}], "name": "writeFlags."}, {"value": 472, "name": "writeLocalNonPersistentFlag"}, {"value": 349, "name": "writeRequiredFlag"}, {"children": [{"value": 1066, "name": "func1"}], "name": "writeRequiredFlag."}, {"value": 635, "name": "writeRequiredNouns"}, {"value": 652, "name": "writeShortFlag"}, {"value": 56, "name": "go.itab.commandSorterByName,sort.Interface"}], "name": "cobra."}, {"children": [{"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*byName)."}, {"value": 379, "name": "GenMan"}, {"value": 237, "name": "GenManTree"}, {"value": 1193, "name": "GenManTreeFromOpts"}, {"children": [{"value": 11, "name": "Len"}, {"value": 209, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "byName."}, {"value": 643, "name": "fillHeader"}, {"value": 2890, "name": "genMan"}, {"children": [{"value": 27, "name": "func1"}], "name": "genMan."}, {"value": 239, "name": "hasSeeAlso"}, {"value": 149, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1349, "name": "manPreamble"}, {"value": 120, "name": "manPrintFlags"}, {"children": [{"value": 1277, "name": "func1"}], "name": "manPrintFlags."}, {"value": 533, "name": "manPrintOptions"}, {"value": 56, "name": "go.itab.byName,sort.Interface"}], "name": "cobra/doc."}, {"children": [{"children": [{"value": 1933, "name": "defaultIsZeroValue"}], "name": "(*Flag)."}, {"children": [{"value": 2534, "name": "AddFlag"}, {"value": 116, "name": "AddFlagSet"}, {"children": [{"value": 122, "name": "func1"}], "name": "AddFlagSet."}, {"value": 143, "name": "AddGoFlag"}, {"value": 116, "name": "AddGoFlagSet"}, {"children": [{"value": 69, "name": "func1"}], "name": "AddGoFlagSet."}, {"value": 79, "name": "Arg"}, {"value": 42, "name": "Args"}, {"value": 18, "name": "ArgsLenAtDash"}, {"value": 146, "name": "Bool"}, {"value": 192, "name": "BoolP"}, {"value": 300, "name": "BoolSlice"}, {"value": 308, "name": "BoolSliceP"}, {"value": 305, "name": "BoolSliceVar"}, {"value": 313, "name": "BoolSliceVarP"}, {"value": 146, "name": "BoolVar"}, {"value": 232, "name": "BoolVarP"}, {"value": 113, "name": "Changed"}, {"value": 169, "name": "Count"}, {"value": 177, "name": "CountP"}, {"value": 128, "name": "CountVar"}, {"value": 229, "name": "CountVarP"}, {"value": 185, "name": "Duration"}, {"value": 193, "name": "DurationP"}, {"value": 161, "name": "DurationVar"}, {"value": 169, "name": "DurationVarP"}, {"value": 89, "name": "FlagUsages"}, {"value": 1109, "name": "FlagUsagesWrapped"}, {"children": [{"value": 2497, "name": "func1"}], "name": "FlagUsagesWrapped."}, {"value": 187, "name": "Float32"}, {"value": 195, "name": "Float32P"}, {"value": 163, "name": "Float32Var"}, {"value": 171, "name": "Float32VarP"}, {"value": 187, "name": "Float64"}, {"value": 195, "name": "Float64P"}, {"value": 163, "name": "Float64Var"}, {"value": 171, "name": "Float64VarP"}, {"value": 247, "name": "GetBool"}, {"value": 346, "name": "GetBoolSlice"}, {"value": 252, "name": "GetCount"}, {"value": 252, "name": "GetDuration"}, {"value": 254, "name": "GetFloat32"}, {"value": 254, "name": "GetFloat64"}, {"value": 300, "name": "GetIP"}, {"value": 429, "name": "GetIPNet"}, {"value": 346, "name": "GetIPSlice"}, {"value": 300, "name": "GetIPv4Mask"}, {"value": 252, "name": "GetInt"}, {"value": 249, "name": "GetInt32"}, {"value": 252, "name": "GetInt64"}, {"value": 247, "name": "GetInt8"}, {"value": 346, "name": "GetIntSlice"}, {"value": 36, "name": "GetNormalizeFunc"}, {"children": [{"value": 21, "name": "func1"}], "name": "GetNormalizeFunc."}, {"value": 276, "name": "GetString"}, {"value": 346, "name": "GetStringArray"}, {"value": 346, "name": "GetStringSlice"}, {"value": 252, "name": "GetUint"}, {"value": 250, "name": "GetUint16"}, {"value": 249, "name": "GetUint32"}, {"value": 252, "name": "GetUint64"}, {"value": 247, "name": "GetUint8"}, {"value": 346, "name": "GetUintSlice"}, {"value": 223, "name": "HasAvailableFlags"}, {"value": 32, "name": "HasFlags"}, {"value": 217, "name": "IP"}, {"value": 217, "name": "IPMask"}, {"value": 225, "name": "IPMaskP"}, {"value": 224, "name": "IPMaskVar"}, {"value": 235, "name": "IPMaskVarP"}, {"value": 222, "name": "IPNet"}, {"value": 230, "name": "IPNetP"}, {"value": 330, "name": "IPNetVar"}, {"value": 338, "name": "IPNetVarP"}, {"value": 225, "name": "IPP"}, {"value": 300, "name": "IPSlice"}, {"value": 308, "name": "IPSliceP"}, {"value": 305, "name": "IPSliceVar"}, {"value": 313, "name": "IPSliceVarP"}, {"value": 224, "name": "IPVar"}, {"value": 235, "name": "IPVarP"}, {"value": 135, "name": "Init"}, {"value": 185, "name": "Int"}, {"value": 183, "name": "Int32"}, {"value": 191, "name": "Int32P"}, {"value": 159, "name": "Int32Var"}, {"value": 167, "name": "Int32VarP"}, {"value": 185, "name": "Int64"}, {"value": 193, "name": "Int64P"}, {"value": 161, "name": "Int64Var"}, {"value": 169, "name": "Int64VarP"}, {"value": 184, "name": "Int8"}, {"value": 192, "name": "Int8P"}, {"value": 160, "name": "Int8Var"}, {"value": 168, "name": "Int8VarP"}, {"value": 193, "name": "IntP"}, {"value": 300, "name": "IntSlice"}, {"value": 308, "name": "IntSliceP"}, {"value": 305, "name": "IntSliceVar"}, {"value": 313, "name": "IntSliceVarP"}, {"value": 161, "name": "IntVar"}, {"value": 169, "name": "IntVarP"}, {"value": 146, "name": "Lookup"}, {"value": 571, "name": "MarkDeprecated"}, {"value": 298, "name": "MarkHidden"}, {"value": 580, "name": "MarkShorthandDeprecated"}, {"value": 18, "name": "NArg"}, {"value": 27, "name": "NFlag"}, {"value": 485, "name": "Parse"}, {"children": [{"value": 121, "name": "func1"}], "name": "Parse."}, {"value": 354, "name": "ParseAll"}, {"value": 14, "name": "Parsed"}, {"value": 266, "name": "PrintDefaults"}, {"value": 2072, "name": "Set"}, {"value": 638, "name": "SetAnnotation"}, {"value": 17, "name": "SetInterspersed"}, {"value": 592, "name": "SetNormalizeFunc"}, {"value": 113, "name": "SetOutput"}, {"value": 201, "name": "String"}, {"value": 300, "name": "StringArray"}, {"value": 308, "name": "StringArrayP"}, {"value": 305, "name": "StringArrayVar"}, {"value": 313, "name": "StringArrayVarP"}, {"value": 209, "name": "StringP"}, {"value": 300, "name": "StringSlice"}, {"value": 308, "name": "StringSliceP"}, {"value": 305, "name": "StringSliceVar"}, {"value": 313, "name": "StringSliceVarP"}, {"value": 212, "name": "StringVar"}, {"value": 223, "name": "StringVarP"}, {"value": 185, "name": "Uint"}, {"value": 185, "name": "Uint16"}, {"value": 193, "name": "Uint16P"}, {"value": 161, "name": "Uint16Var"}, {"value": 169, "name": "Uint16VarP"}, {"value": 183, "name": "Uint32"}, {"value": 191, "name": "Uint32P"}, {"value": 159, "name": "Uint32Var"}, {"value": 167, "name": "Uint32VarP"}, {"value": 185, "name": "Uint64"}, {"value": 193, "name": "Uint64P"}, {"value": 161, "name": "Uint64Var"}, {"value": 169, "name": "Uint64VarP"}, {"value": 184, "name": "Uint8"}, {"value": 192, "name": "Uint8P"}, {"value": 160, "name": "Uint8Var"}, {"value": 168, "name": "Uint8VarP"}, {"value": 193, "name": "UintP"}, {"value": 300, "name": "UintSlice"}, {"value": 308, "name": "UintSliceP"}, {"value": 305, "name": "UintSliceVar"}, {"value": 313, "name": "UintSliceVarP"}, {"value": 161, "name": "UintVar"}, {"value": 169, "name": "UintVarP"}, {"value": 147, "name": "Var"}, {"value": 162, "name": "VarP"}, {"value": 460, "name": "VarPF"}, {"value": 328, "name": "Visit"}, {"value": 349, "name": "VisitAll"}, {"value": 310, "name": "failf"}, {"value": 954, "name": "getFlagType"}, {"value": 119, "name": "normalizeFlagName"}, {"value": 1994, "name": "parseArgs"}, {"value": 1604, "name": "parseLongArg"}, {"value": 394, "name": "parseShortArg"}, {"value": 2107, "name": "parseSingleShortArg"}, {"value": 101, "name": "usage"}], "name": "(*FlagSet)."}, {"children": [{"value": 2229, "name": "Set"}, {"value": 459, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*boolSliceValue)."}, {"children": [{"value": 6, "name": "IsBoolFlag"}, {"value": 1223, "name": "Set"}, {"value": 53, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*boolValue)."}, {"children": [{"value": 146, "name": "Set"}, {"value": 83, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*countValue)."}, {"children": [{"value": 103, "name": "Set"}, {"value": 83, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*durationValue)."}, {"children": [{"value": 108, "name": "Set"}, {"value": 88, "name": "String"}, {"value": 24, "name": "Type"}], "name": "(*flagValueWrapper)."}, {"children": [{"value": 118, "name": "Set"}, {"value": 112, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*float32Value)."}, {"children": [{"value": 114, "name": "Set"}, {"value": 108, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*float64Value)."}, {"children": [{"value": 120, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*int32Value)."}, {"children": [{"value": 121, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*int64Value)."}, {"children": [{"value": 120, "name": "Set"}, {"value": 93, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*int8Value)."}, {"children": [{"value": 728, "name": "Set"}, {"value": 629, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*intSliceValue)."}, {"children": [{"value": 121, "name": "Set"}, {"value": 83, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*intValue)."}, {"children": [{"value": 336, "name": "Set"}, {"value": 101, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*ipMaskValue)."}, {"children": [{"value": 284, "name": "Set"}, {"value": 201, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*ipNetValue)."}, {"children": [{"value": 1460, "name": "Set"}, {"value": 489, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*ipSliceValue)."}, {"children": [{"value": 360, "name": "Set"}, {"value": 101, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*ipValue)."}, {"children": [{"value": 457, "name": "Set"}, {"value": 186, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*stringArrayValue)."}, {"children": [{"value": 566, "name": "Set"}, {"value": 186, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*stringSliceValue)."}, {"children": [{"value": 117, "name": "Set"}, {"value": 23, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*stringValue)."}, {"children": [{"value": 121, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uint16Value)."}, {"children": [{"value": 120, "name": "Set"}, {"value": 91, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uint32Value)."}, {"children": [{"value": 121, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uint64Value)."}, {"children": [{"value": 120, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uint8Value)."}, {"children": [{"value": 747, "name": "Set"}, {"value": 629, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uintSliceValue)."}, {"children": [{"value": 121, "name": "Set"}, {"value": 92, "name": "String"}, {"value": 22, "name": "Type"}], "name": "(*uintValue)."}, {"value": 8, "name": "CommandLine"}, {"value": 16, "name": "ErrHelp"}, {"value": 176, "name": "NewFlagSet"}, {"value": 652, "name": "PFlagFromGoFlag"}, {"value": 1219, "name": "ParseIPv4Mask"}, {"value": 62, "name": "PrintDefaults"}, {"value": 835, "name": "UnquoteUsage"}, {"value": 8, "name": "Usage"}, {"value": 1293, "name": "boolConv"}, {"value": 2073, "name": "boolSliceConv"}, {"value": 204, "name": "countConv"}, {"value": 266, "name": "defaultUsage"}, {"value": 173, "name": "durationConv"}, {"value": 288, "name": "float32Conv"}, {"value": 187, "name": "float64Conv"}, {"children": [{"value": 224, "name": "func1"}], "name": "glob."}, {"value": 343, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 296, "name": "int32Conv"}, {"value": 197, "name": "int64Conv"}, {"value": 296, "name": "int8Conv"}, {"value": 173, "name": "intConv"}, {"value": 683, "name": "intSliceConv"}, {"value": 397, "name": "ipConv"}, {"value": 390, "name": "ipNetConv"}, {"children": [{"value": 115, "name": "String"}], "name": "ipNetValue."}, {"value": 959, "name": "ipSliceConv"}, {"value": 397, "name": "parseIPv4Mask"}, {"value": 819, "name": "readAsCSV"}, {"value": 695, "name": "sortFlags"}, {"value": 96, "name": "statictmp_39"}, {"value": 96, "name": "statictmp_704"}, {"value": 48, "name": "statictmp_817"}, {"value": 413, "name": "stringArrayConv"}, {"value": 133, "name": "stringConv"}, {"value": 413, "name": "stringSliceConv"}, {"value": 297, "name": "uint16Conv"}, {"value": 296, "name": "uint32Conv"}, {"value": 297, "name": "uint64Conv"}, {"value": 296, "name": "uint8Conv"}, {"value": 297, "name": "uintConv"}, {"value": 702, "name": "uintSliceConv"}, {"value": 828, "name": "wrap"}, {"value": 720, "name": "wrapFlagValue"}, {"value": 310, "name": "wrapN"}, {"value": 878, "name": "writeAsCSV"}, {"value": 56, "name": "go.itab.*boolSliceValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*boolValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*countValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*durationValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*flagValueWrapper,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*float32Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*float64Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*int32Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*int64Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*int8Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*intSliceValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*intValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*ipMaskValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*ipNetValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*ipSliceValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*ipValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*stringArrayValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*stringSliceValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*stringValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uint16Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uint32Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uint64Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uint8Value,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uintSliceValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}, {"value": 56, "name": "go.itab.*uintValue,github.com/cockroachdb/cockroach/vendor/github.com/spf13/pflag.Value"}], "name": "pflag."}], "name": "spf13/"}], "name": "github.com/"}, {"children": [{"children": [{"children": [{"children": [{"value": 185, "name": "Error"}], "name": "(*HashVersionTooNewError)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*InvalidCostError)."}, {"children": [{"value": 185, "name": "Error"}], "name": "(*InvalidHashPrefixError)."}, {"children": [{"value": 863, "name": "Hash"}, {"value": 525, "name": "String"}, {"value": 338, "name": "decodeCost"}], "name": "(*hashed)."}, {"value": 652, "name": "CompareHashAndPassword"}, {"value": 16, "name": "ErrHashTooShort"}, {"value": 16, "name": "ErrMismatchedHashAndPassword"}, {"value": 233, "name": "GenerateFromPassword"}, {"children": [{"value": 274, "name": "Error"}], "name": "HashVersionTooNewError."}, {"children": [{"value": 352, "name": "Error"}], "name": "InvalidCostError."}, {"children": [{"value": 199, "name": "Error"}], "name": "InvalidHashPrefixError."}, {"value": 594, "name": "base64Decode"}, {"value": 369, "name": "base64Encode"}, {"value": 8, "name": "bcEncoding"}, {"value": 658, "name": "bcrypt"}, {"value": 666, "name": "expensiveBlowfishSetup"}, {"value": 368, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "magicCipherData"}, {"value": 1029, "name": "newFromHash"}, {"value": 828, "name": "newFromPassword"}, {"value": 24, "name": "statictmp_134"}, {"value": 40, "name": "go.itab.HashVersionTooNewError,error"}, {"value": 40, "name": "go.itab.InvalidCostError,error"}, {"value": 40, "name": "go.itab.InvalidHashPrefixError,error"}], "name": "bcrypt."}, {"children": [{"children": [{"value": 10, "name": "BlockSize"}, {"value": 371, "name": "Decrypt"}, {"value": 371, "name": "Encrypt"}], "name": "(*Cipher)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*KeySizeError)."}, {"value": 742, "name": "ExpandKey"}, {"children": [{"value": 137, "name": "Error"}], "name": "KeySizeError."}, {"value": 441, "name": "NewCipher"}, {"value": 585, "name": "NewSaltedCipher"}, {"value": 1134, "name": "decryptBlock"}, {"value": 1134, "name": "encryptBlock"}, {"value": 1455, "name": "expandKeyWithSalt"}, {"value": 98, "name": "getNextWord"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 72, "name": "p"}, {"value": 1024, "name": "s0"}, {"value": 1024, "name": "s1"}, {"value": 1024, "name": "s2"}, {"value": 1024, "name": "s3"}, {"value": 40, "name": "go.itab.KeySizeError,error"}], "name": "blowfish."}, {"children": [{"children": [{"value": 226, "name": "Read"}], "name": "(*passwordReader)."}, {"value": 914, "name": "ReadPassword"}, {"children": [{"value": 125, "name": "func1"}], "name": "ReadPassword."}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 120, "name": "Read"}], "name": "passwordReader."}, {"value": 685, "name": "readPasswordLine"}, {"value": 40, "name": "go.itab.passwordReader,io.Reader"}], "name": "ssh/terminal."}], "name": "crypto/"}, {"children": [{"children": [{"value": 106, "name": "Background"}, {"value": 16, "name": "Canceled"}, {"value": 16, "name": "DeadlineExceeded"}, {"value": 106, "name": "TODO"}, {"value": 189, "name": "WithCancel"}, {"value": 226, "name": "WithDeadline"}, {"value": 228, "name": "WithTimeout"}, {"value": 215, "name": "WithValue"}, {"value": 16, "name": "background"}, {"value": 365, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "todo"}], "name": "context."}, {"children": [{"value": 347, "name": "Do"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "context/ctxhttp."}, {"children": [{"children": [{"value": 184, "name": "Error"}], "name": "(*ConnectionError)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*ContinuationFrame)."}, {"children": [{"value": 94, "name": "Data"}, {"value": 150, "name": "Header"}, {"value": 22, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*DataFrame)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*ErrCode)."}, {"children": [{"value": 173, "name": "Has"}], "name": "(*Flags)."}, {"children": [{"value": 247, "name": "Header"}, {"value": 195, "name": "String"}, {"value": 134, "name": "checkValid"}, {"value": 9, "name": "invalidate"}], "name": "(*FrameHeader)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*FrameType)."}, {"children": [{"value": 331, "name": "Consume"}, {"value": 206, "name": "DataSize"}, {"value": 213, "name": "StreamID"}, {"value": 213, "name": "String"}, {"value": 375, "name": "replyToWriter"}], "name": "(*FrameWriteRequest)."}, {"children": [{"value": 24, "name": "ErrorDetail"}, {"value": 1924, "name": "ReadFrame"}, {"value": 25, "name": "SetMaxReadFrameSize"}, {"value": 142, "name": "SetReuseFrames"}, {"value": 699, "name": "WriteContinuation"}, {"value": 170, "name": "WriteData"}, {"value": 1437, "name": "WriteDataPadded"}, {"value": 1012, "name": "WriteGoAway"}, {"value": 1986, "name": "WriteHeaders"}, {"value": 549, "name": "WritePing"}, {"value": 873, "name": "WritePriority"}, {"value": 1635, "name": "WritePushPromise"}, {"value": 589, "name": "WriteRSTStream"}, {"value": 578, "name": "WriteRawFrame"}, {"value": 823, "name": "WriteSettings"}, {"value": 263, "name": "WriteSettingsAck"}, {"value": 666, "name": "WriteWindowUpdate"}, {"value": 1864, "name": "checkFrameOrder"}, {"value": 378, "name": "endWrite"}, {"value": 821, "name": "logWrite"}, {"value": 2613, "name": "readMetaFrame"}, {"children": [{"value": 1402, "name": "func1"}, {"value": 1, "name": "func2"}], "name": "readMetaFrame."}], "name": "(*Framer)."}, {"children": [{"value": 94, "name": "DebugData"}, {"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*GoAwayFrame)."}, {"children": [{"value": 22, "name": "HasPriority"}, {"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 22, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*HeadersFrame)."}, {"children": [{"value": 23, "name": "HasPriority"}, {"value": 153, "name": "Header"}, {"value": 45, "name": "HeaderBlockFragment"}, {"value": 23, "name": "HeadersEnded"}, {"value": 351, "name": "PseudoFields"}, {"value": 550, "name": "PseudoValue"}, {"value": 387, "name": "RegularFields"}, {"value": 23, "name": "StreamEnded"}, {"value": 117, "name": "String"}, {"value": 1571, "name": "checkPseudos"}, {"value": 20, "name": "invalidate"}], "name": "(*MetaHeadersFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 22, "name": "IsAck"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*PingFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 73, "name": "IsZero"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*PriorityFrame)."}, {"children": [{"value": 189, "name": "IsZero"}], "name": "(*PriorityParam)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*PushPromiseFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*RSTStreamFrame)."}, {"children": [{"value": 4209, "name": "ServeConn"}], "name": "(*Server)."}, {"children": [{"value": 193, "name": "String"}, {"value": 379, "name": "Valid"}], "name": "(*Setting)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*SettingID)."}, {"children": [{"value": 303, "name": "ForeachSetting"}, {"value": 150, "name": "Header"}, {"value": 22, "name": "IsAck"}, {"value": 114, "name": "String"}, {"value": 232, "name": "Value"}, {"value": 17, "name": "invalidate"}], "name": "(*SettingsFrame)."}, {"children": [{"value": 209, "name": "Error"}, {"value": 170, "name": "staysWithinBuffer"}, {"value": 229, "name": "writeFrame"}], "name": "(*StreamError)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "Payload"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*UnknownFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*WindowUpdateFrame)."}, {"children": [{"value": 41, "name": "Available"}, {"value": 385, "name": "Flush"}, {"value": 421, "name": "Write"}], "name": "(*bufferedWriter)."}, {"children": [{"value": 226, "name": "Write"}], "name": "(*chunkWriter)."}, {"children": [{"value": 166, "name": "Close"}, {"value": 112, "name": "Init"}, {"value": 187, "name": "Wait"}], "name": "(*closeWaiter)."}, {"children": [{"value": 202, "name": "Error"}], "name": "(*connError)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 926, "name": "Read"}, {"value": 388, "name": "Write"}, {"value": 467, "name": "lastChunkOrAlloc"}], "name": "(*dataBuffer)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*duplicatePseudoHeaderError)."}, {"children": [{"value": 179, "name": "take"}], "name": "(*flow)."}, {"children": [{"value": 159, "name": "staysWithinBuffer"}, {"value": 198, "name": "writeFrame"}], "name": "(*flushFrameWriter)."}, {"children": [{"value": 188, "name": "Done"}, {"value": 187, "name": "Wait"}], "name": "(*gate)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*goAwayFlowError)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 204, "name": "writeFrame"}], "name": "(*handlerPanicRST)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*headerFieldNameError)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*headerFieldValueError)."}, {"children": [{"value": 100, "name": "BreakWithError"}, {"value": 100, "name": "CloseWithError"}, {"value": 277, "name": "Done"}, {"value": 211, "name": "Err"}, {"value": 173, "name": "Len"}, {"value": 569, "name": "Read"}, {"value": 445, "name": "Write"}, {"value": 132, "name": "closeDoneLocked"}, {"value": 513, "name": "closeWithError"}, {"value": 101, "name": "closeWithErrorAndCode"}], "name": "(*pipe)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*pseudoHeaderError)."}, {"children": [{"value": 1, "name": "AdjustStream"}, {"value": 199, "name": "CloseStream"}, {"value": 1, "name": "OpenStream"}, {"value": 457, "name": "Pop"}, {"value": 1215, "name": "Push"}], "name": "(*randomWriteScheduler)."}, {"children": [{"value": 133, "name": "Close"}, {"value": 488, "name": "Read"}], "name": "(*requestBody)."}, {"children": [{"value": 344, "name": "CloseNotify"}, {"children": [{"value": 122, "name": "func1"}], "name": "CloseNotify."}, {"value": 219, "name": "Flush"}, {"value": 259, "name": "Header"}, {"value": 147, "name": "Push"}, {"value": 159, "name": "Write"}, {"value": 158, "name": "WriteHeader"}, {"value": 151, "name": "WriteString"}, {"value": 161, "name": "handlerDone"}, {"value": 4090, "name": "push"}, {"value": 649, "name": "write"}], "name": "(*responseWriter)."}, {"children": [{"value": 79, "name": "(github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.declareTrailer)-fm"}, {"value": 629, "name": "declareTrailer"}, {"value": 835, "name": "promoteUndeclaredTrailers"}, {"value": 2640, "name": "writeChunk"}, {"value": 157, "name": "writeHeader"}], "name": "(*responseWriterState)."}, {"children": [{"value": 97, "name": "(github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.processSetting)-fm"}, {"value": 89, "name": "CloseConn"}, {"value": 84, "name": "Flush"}, {"value": 15, "name": "Framer"}, {"value": 29, "name": "HeaderEncoder"}, {"value": 581, "name": "canonicalHeader"}, {"value": 262, "name": "closeAllStreamsOnConnClose"}, {"value": 722, "name": "closeStream"}, {"value": 399, "name": "condlogf"}, {"value": 90, "name": "curOpenStreams"}, {"value": 114, "name": "goAway"}, {"value": 164, "name": "goAwayIn"}, {"value": 186, "name": "logf"}, {"value": 1023, "name": "newStream"}, {"value": 2453, "name": "newWriterAndRequest"}, {"value": 3776, "name": "newWriterAndRequestNoBody"}, {"value": 162, "name": "noteBodyRead"}, {"value": 332, "name": "noteBodyReadFromHandler"}, {"value": 265, "name": "notePanic"}, {"value": 1968, "name": "processData"}, {"value": 1544, "name": "processFrame"}, {"value": 1823, "name": "processFrameFromReader"}, {"value": 335, "name": "processGoAway"}, {"value": 2017, "name": "processHeaders"}, {"value": 310, "name": "processPing"}, {"value": 298, "name": "processPriority"}, {"value": 332, "name": "processResetStream"}, {"value": 994, "name": "processSetting"}, {"value": 399, "name": "processSettingInitialWindowSize"}, {"value": 334, "name": "processSettings"}, {"value": 499, "name": "processWindowUpdate"}, {"value": 795, "name": "readFrames"}, {"value": 815, "name": "readPreface"}, {"children": [{"value": 676, "name": "func1"}], "name": "readPreface."}, {"value": 473, "name": "rejectConn"}, {"value": 253, "name": "resetStream"}, {"value": 184, "name": "runHandler"}, {"children": [{"value": 805, "name": "func1"}], "name": "runHandler."}, {"value": 620, "name": "scheduleFrameWrite"}, {"value": 176, "name": "sendWindowUpdate"}, {"value": 474, "name": "sendWindowUpdate32"}, {"value": 3996, "name": "serve"}, {"value": 98, "name": "setConnState"}, {"value": 195, "name": "shutDownIn"}, {"value": 1520, "name": "startFrameWrite"}, {"value": 77, "name": "startGracefulShutdown"}, {"value": 816, "name": "startPush"}, {"children": [{"value": 1282, "name": "func1"}], "name": "startPush."}, {"value": 283, "name": "state"}, {"value": 95, "name": "stopShutdownTimer"}, {"value": 123, "name": "vlogf"}, {"value": 148, "name": "write100ContinueHeaders"}, {"value": 1177, "name": "writeDataFromHandler"}, {"value": 694, "name": "writeFrame"}, {"value": 232, "name": "writeFrameAsync"}, {"value": 404, "name": "writeFrameFromHandler"}, {"value": 810, "name": "writeHeaders"}, {"value": 1027, "name": "wroteFrame"}], "name": "(*serverConn)."}, {"children": [{"value": 545, "name": "Keys"}, {"value": 15, "name": "Len"}, {"value": 157, "name": "Less"}, {"value": 247, "name": "SortStrings"}, {"value": 256, "name": "Swap"}], "name": "(*sorter)."}, {"children": [{"value": 59, "name": "(github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.copyTrailersToHandlerRequest)-fm"}, {"value": 423, "name": "copyTrailersToHandlerRequest"}, {"value": 527, "name": "endStream"}, {"value": 1413, "name": "processTrailerHeaders"}], "name": "(*stream)."}, {"children": [{"value": 200, "name": "String"}], "name": "(*streamState)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 204, "name": "writeFrame"}], "name": "(*write100ContinueHeadersFrame)."}, {"children": [{"value": 324, "name": "String"}, {"value": 29, "name": "staysWithinBuffer"}, {"value": 150, "name": "writeFrame"}], "name": "(*writeData)."}, {"children": [{"value": 6, "name": "staysWithinBuffer"}, {"value": 239, "name": "writeFrame"}], "name": "(*writeGoAway)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 206, "name": "writeFrame"}], "name": "(*writePingAck)."}, {"children": [{"value": 166, "name": "(github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeHeaderBlock)-fm"}, {"value": 6, "name": "staysWithinBuffer"}, {"value": 685, "name": "writeFrame"}, {"value": 426, "name": "writeHeaderBlock"}], "name": "(*writePushPromise)."}, {"children": [{"value": 710, "name": "consume"}, {"value": 578, "name": "shift"}], "name": "(*writeQueue)."}, {"children": [{"value": 302, "name": "put"}], "name": "(*writeQueuePool)."}, {"children": [{"value": 166, "name": "(github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeHeaderBlock)-fm"}, {"value": 6, "name": "staysWithinBuffer"}, {"value": 743, "name": "writeFrame"}, {"value": 418, "name": "writeHeaderBlock"}], "name": "(*writeResHeaders)."}, {"children": [{"value": 184, "name": "staysWithinBuffer"}, {"value": 224, "name": "writeFrame"}], "name": "(*writeSettings)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 198, "name": "writeFrame"}], "name": "(*writeSettingsAck)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 211, "name": "writeFrame"}], "name": "(*writeWindowUpdate)."}, {"children": [{"value": 87, "name": "Done-fm"}], "name": "(gate)."}, {"children": [{"value": 10, "name": "1"}, {"value": 24, "name": "2"}], "name": ".gobytes."}, {"value": 1664, "name": "ConfigureServer"}, {"children": [{"value": 175, "name": "func1"}], "name": "ConfigureServer."}, {"children": [{"value": 198, "name": "Error"}], "name": "ConnectionError."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "ContinuationFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "DataFrame."}, {"value": 1, "name": "DebugGoroutines"}, {"children": [{"value": 275, "name": "String"}], "name": "ErrCode."}, {"value": 16, "name": "ErrFrameTooLarge"}, {"value": 16, "name": "ErrNoCachedConn"}, {"value": 16, "name": "ErrPushLimitReached"}, {"value": 16, "name": "ErrRecursivePush"}, {"children": [{"value": 22, "name": "Has"}], "name": "Flags."}, {"children": [{"value": 39, "name": "Header"}, {"value": 287, "name": "String"}, {"value": 957, "name": "writeDebug"}], "name": "FrameHeader."}, {"children": [{"value": 287, "name": "String"}], "name": "FrameType."}, {"children": [{"value": 1085, "name": "Consume"}, {"value": 62, "name": "DataSize"}, {"value": 74, "name": "StreamID"}, {"value": 656, "name": "String"}], "name": "FrameWriteRequest."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "GoAwayFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "HeadersFrame."}, {"children": [{"value": 53, "name": "HasPriority"}, {"value": 150, "name": "Header"}, {"value": 112, "name": "HeaderBlockFragment"}, {"value": 53, "name": "HeadersEnded"}, {"value": 53, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 40, "name": "invalidate"}], "name": "MetaHeadersFrame."}, {"value": 509, "name": "NewFramer"}, {"children": [{"value": 230, "name": "func1"}], "name": "NewFramer."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "PingFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 71, "name": "IsZero"}, {"value": 112, "name": "String"}], "name": "PriorityFrame."}, {"children": [{"value": 40, "name": "IsZero"}], "name": "PriorityParam."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "PushPromiseFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "RSTStreamFrame."}, {"children": [{"value": 254, "name": "String"}, {"value": 337, "name": "Valid"}], "name": "Setting."}, {"children": [{"value": 289, "name": "String"}], "name": "SettingID."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "SettingsFrame."}, {"children": [{"value": 580, "name": "Error"}, {"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "StreamError."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "UnknownFrame."}, {"value": 240, "name": "ValidTrailerHeader"}, {"value": 1, "name": "VerboseLogs"}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "WindowUpdateFrame."}, {"value": 8, "name": "badTrailer"}, {"value": 24, "name": "bufWriterPool"}, {"value": 714, "name": "checkValidHTTP2RequestHeaders"}, {"children": [{"value": 120, "name": "Write"}], "name": "chunkWriter."}, {"value": 24, "name": "clientPreface"}, {"value": 593, "name": "cloneHeader"}, {"children": [{"value": 60, "name": "Close"}, {"value": 81, "name": "Wait"}], "name": "closeWaiter."}, {"value": 8, "name": "commonCanonHeader"}, {"value": 8, "name": "commonLowerHeader"}, {"children": [{"value": 260, "name": "Error"}], "name": "connError."}, {"value": 24, "name": "connHeaders"}, {"value": 189, "name": "contextWithCancel"}, {"value": 1124, "name": "curGoroutineID"}, {"value": 120, "name": "dataChunkPools"}, {"value": 24, "name": "dataChunkSizeClasses"}, {"children": [{"value": 213, "name": "Error"}], "name": "duplicatePseudoHeaderError."}, {"value": 512, "name": "encKV"}, {"value": 855, "name": "encodeHeaders"}, {"value": 24, "name": "errChanPool"}, {"value": 16, "name": "errClientConnClosed"}, {"value": 16, "name": "errClientConnGotGoAway"}, {"value": 16, "name": "errClientConnGotGoAwayAfterSomeReqBody"}, {"value": 16, "name": "errClientConnUnusable"}, {"value": 16, "name": "errClientDisconnected"}, {"value": 16, "name": "errClosedBody"}, {"value": 16, "name": "errClosedPipeWrite"}, {"value": 16, "name": "errClosedResponseBody"}, {"value": 8, "name": "errCodeName"}, {"value": 16, "name": "errDepStreamID"}, {"value": 16, "name": "errHandlerComplete"}, {"value": 16, "name": "errHandlerPanicked"}, {"value": 16, "name": "errInvalidHeaderFieldName"}, {"value": 16, "name": "errInvalidHeaderFieldValue"}, {"value": 16, "name": "errInvalidTrailers"}, {"value": 16, "name": "errMixPseudoHeaderTypes"}, {"value": 16, "name": "errPadBytes"}, {"value": 16, "name": "errPadLength"}, {"value": 16, "name": "errPseudoAfterRegular"}, {"value": 16, "name": "errPseudoTrailers"}, {"value": 16, "name": "errReadEmpty"}, {"value": 16, "name": "errRequestCanceled"}, {"value": 16, "name": "errResponseHeaderListSize"}, {"value": 16, "name": "errStopReqBodyWrite"}, {"value": 16, "name": "errStopReqBodyWriteAndCancel"}, {"value": 16, "name": "errStreamClosed"}, {"value": 16, "name": "errStreamID"}, {"value": 16, "name": "errTransportVersion"}, {"value": 8, "name": "flagName"}, {"children": [{"value": 6, "name": "staysWithinBuffer"}, {"value": 86, "name": "writeFrame"}], "name": "flushFrameWriter."}, {"value": 375, "name": "foreachHeaderElement"}, {"value": 8, "name": "frameName"}, {"value": 8, "name": "frameParsers"}, {"children": [{"value": 82, "name": "Done"}, {"value": 81, "name": "Wait"}], "name": "gate."}, {"value": 209, "name": "getDataBufferChunk"}, {"children": [{"value": 163, "name": "func1"}, {"value": 447, "name": "func10"}, {"value": 93, "name": "func11"}, {"value": 84, "name": "func12"}, {"value": 163, "name": "func2"}, {"value": 163, "name": "func3"}, {"value": 163, "name": "func4"}, {"value": 163, "name": "func5"}, {"value": 192, "name": "func7"}, {"value": 354, "name": "func8"}, {"value": 84, "name": "func9"}], "name": "glob."}, {"children": [{"value": 22, "name": "Error"}], "name": "goAwayFlowError."}, {"children": [{"value": 166, "name": "check"}, {"value": 166, "name": "checkNotOn"}], "name": "goroutineLock."}, {"value": 24, "name": "goroutineSpace"}, {"value": 143, "name": "h1ServerKeepAlivesDisabled"}, {"value": 195, "name": "h1ServerShutdownChan"}, {"value": 163, "name": "handleHeaderListTooLong"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "handlerPanicRST."}, {"children": [{"value": 213, "name": "Error"}], "name": "headerFieldNameError."}, {"children": [{"value": 213, "name": "Error"}], "name": "headerFieldValueError."}, {"value": 166, "name": "httpCodeString"}, {"value": 8, "name": "httpCodeStringCommon"}, {"value": 1, "name": "inTests"}, {"value": 7499, "name": "init"}, {"children": [{"value": 442, "name": "1"}, {"value": 224, "name": "2"}, {"value": 280, "name": "3"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 167, "name": "isClosedConnError"}, {"value": 24, "name": "littleBuf"}, {"value": 1, "name": "logFrameReads"}, {"value": 1, "name": "logFrameWrites"}, {"value": 186, "name": "lowerHeader"}, {"value": 148, "name": "new400Handler"}, {"children": [{"value": 117, "name": "func1"}], "name": "new400Handler."}, {"value": 90, "name": "newGoroutineLock"}, {"value": 16, "name": "noBody"}, {"value": 24, "name": "padZeros"}, {"value": 354, "name": "parseContinuationFrame"}, {"value": 713, "name": "parseDataFrame"}, {"value": 525, "name": "parseGoAwayFrame"}, {"value": 1021, "name": "parseHeadersFrame"}, {"value": 377, "name": "parsePingFrame"}, {"value": 678, "name": "parsePriorityFrame"}, {"value": 737, "name": "parsePushPromise"}, {"value": 369, "name": "parseRSTStreamFrame"}, {"value": 703, "name": "parseSettingsFrame"}, {"value": 1192, "name": "parseUintBytes"}, {"value": 198, "name": "parseUnknownFrame"}, {"value": 529, "name": "parseWindowUpdateFrame"}, {"children": [{"value": 213, "name": "Error"}], "name": "pseudoHeaderError."}, {"value": 444, "name": "putDataBufferChunk"}, {"value": 409, "name": "readFrameHeader"}, {"value": 126, "name": "requestWithContext"}, {"value": 24, "name": "responseWriterStatePool"}, {"value": 613, "name": "serverConnBaseContext"}, {"value": 8, "name": "settingName"}, {"value": 24, "name": "sorterPool"}, {"value": 378, "name": "splitHeaderBlock"}, {"value": 80, "name": "stateName"}, {"value": 752, "name": "statictmp_1105"}, {"value": 24, "name": "statictmp_1258"}, {"value": 32, "name": "statictmp_1362"}, {"value": 24, "name": "statictmp_1663"}, {"value": 48, "name": "statictmp_1993"}, {"value": 32, "name": "statictmp_2903"}, {"value": 32, "name": "statictmp_2909"}, {"value": 32, "name": "statictmp_2911"}, {"value": 32, "name": "statictmp_3025"}, {"value": 72, "name": "statictmp_3129"}, {"value": 40, "name": "statictmp_3176"}, {"value": 80, "name": "statictmp_3178"}, {"value": 56, "name": "statictmp_3182"}, {"value": 224, "name": "statictmp_3183"}, {"value": 10, "name": "statictmp_3187"}, {"value": 160, "name": "statictmp_3188"}, {"value": 2, "name": "statictmp_3194"}, {"value": 32, "name": "statictmp_3195"}, {"value": 4, "name": "statictmp_3199"}, {"value": 64, "name": "statictmp_3200"}, {"value": 1, "name": "statictmp_3204"}, {"value": 16, "name": "statictmp_3205"}, {"value": 1, "name": "statictmp_3209"}, {"value": 16, "name": "statictmp_3210"}, {"value": 1, "name": "statictmp_3214"}, {"value": 16, "name": "statictmp_3215"}, {"value": 2, "name": "statictmp_3219"}, {"value": 32, "name": "statictmp_3220"}, {"value": 12, "name": "statictmp_3240"}, {"value": 96, "name": "statictmp_3241"}, {"value": 336, "name": "statictmp_3246"}, {"value": 21, "name": "statictmp_3247"}, {"value": 12, "name": "statictmp_325"}, {"value": 12, "name": "statictmp_328"}, {"value": 186, "name": "strSliceContains"}, {"children": [{"value": 69, "name": "String"}], "name": "streamState."}, {"value": 2371, "name": "summarizeFrame"}, {"children": [{"value": 364, "name": "func1"}], "name": "summarizeFrame."}, {"value": 8, "name": "testHookGetServerConn"}, {"value": 8, "name": "testHookOnConn"}, {"value": 8, "name": "testHookOnPanic"}, {"value": 8, "name": "testHookOnPanicMu"}, {"value": 8, "name": "testh1ServerShutdownChan"}, {"value": 245, "name": "validWireHeaderFieldName"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 405, "name": "writeFrame"}], "name": "write100ContinueHeadersFrame."}, {"value": 24, "name": "writeDataPool"}, {"value": 302, "name": "writeEndsStream"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 119, "name": "writeFrame"}], "name": "writePingAck."}, {"children": [{"value": 32, "name": "staysWithinBuffer"}, {"value": 133, "name": "writeFrame"}], "name": "writeSettings."}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 100, "name": "writeFrame"}], "name": "writeSettingsAck."}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "writeWindowUpdate."}, {"value": 48, "name": "go.itab.*ContinuationFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*ContinuationFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.headersOrContinuation"}, {"value": 48, "name": "go.itab.*DataFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*GoAwayFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*HeadersFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*HeadersFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.headersOrContinuation"}, {"value": 48, "name": "go.itab.*MetaHeadersFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*PingFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*PriorityFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*PushPromiseFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*RSTStreamFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*SettingsFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*UnknownFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 48, "name": "go.itab.*WindowUpdateFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.Frame"}, {"value": 40, "name": "go.itab.*bufferedWriter,io.Writer"}, {"value": 56, "name": "go.itab.*dataBuffer,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.pipeBuffer"}, {"value": 72, "name": "go.itab.*randomWriteScheduler,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.WriteScheduler"}, {"value": 48, "name": "go.itab.*requestBody,io.ReadCloser"}, {"value": 56, "name": "go.itab.*responseWriter,net/http.ResponseWriter"}, {"value": 64, "name": "go.itab.*serverConn,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeContext"}, {"value": 56, "name": "go.itab.*sorter,sort.Interface"}, {"value": 48, "name": "go.itab.*writeData,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.*writeGoAway,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.*writePushPromise,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.*writeResHeaders,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 40, "name": "go.itab.ConnectionError,error"}, {"value": 40, "name": "go.itab.StreamError,error"}, {"value": 48, "name": "go.itab.StreamError,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 40, "name": "go.itab.chunkWriter,io.Writer"}, {"value": 40, "name": "go.itab.connError,error"}, {"value": 40, "name": "go.itab.duplicatePseudoHeaderError,error"}, {"value": 48, "name": "go.itab.flushFrameWriter,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 40, "name": "go.itab.goAwayFlowError,error"}, {"value": 48, "name": "go.itab.handlerPanicRST,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 40, "name": "go.itab.headerFieldNameError,error"}, {"value": 40, "name": "go.itab.headerFieldValueError,error"}, {"value": 40, "name": "go.itab.pseudoHeaderError,error"}, {"value": 48, "name": "go.itab.write100ContinueHeadersFrame,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.writePingAck,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.writeSettings,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.writeSettingsAck,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}, {"value": 48, "name": "go.itab.writeWindowUpdate,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/http2.writeFramer"}], "name": "http2."}, {"children": [{"children": [{"value": 287, "name": "Close"}, {"value": 665, "name": "DecodeFull"}, {"children": [{"value": 97, "name": "func1"}, {"value": 300, "name": "func2"}], "name": "DecodeFull."}, {"value": 14, "name": "EmitEnabled"}, {"value": 13, "name": "SetAllowedMaxDynamicTableSize"}, {"value": 14, "name": "SetEmitEnabled"}, {"value": 97, "name": "SetEmitFunc"}, {"value": 70, "name": "SetMaxDynamicTableSize"}, {"value": 15, "name": "SetMaxStringLength"}, {"value": 768, "name": "Write"}, {"value": 334, "name": "at"}, {"value": 196, "name": "callEmit"}, {"value": 518, "name": "parseDynamicTableSizeUpdate"}, {"value": 744, "name": "parseFieldIndexed"}, {"value": 1134, "name": "parseFieldLiteral"}, {"value": 543, "name": "parseHeaderFieldRepr"}, {"value": 1649, "name": "readString"}], "name": "(*Decoder)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*DecodingError)."}, {"children": [{"value": 93, "name": "SetMaxDynamicTableSize"}, {"value": 84, "name": "SetMaxDynamicTableSizeLimit"}, {"value": 1293, "name": "WriteField"}, {"value": 301, "name": "searchTable"}], "name": "(*Encoder)."}, {"children": [{"value": 221, "name": "IsPseudo"}, {"value": 209, "name": "Size"}, {"value": 214, "name": "String"}], "name": "(*HeaderField)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*InvalidIndexError)."}, {"children": [{"value": 728, "name": "add"}, {"value": 180, "name": "evict"}, {"value": 67, "name": "setMaxSize"}], "name": "(*dynamicTable)."}, {"children": [{"value": 1489, "name": "evictOldest"}, {"value": 395, "name": "idToIndex"}, {"value": 234, "name": "init"}, {"value": 386, "name": "search"}], "name": "(*headerFieldTable)."}, {"value": 363, "name": "AppendHuffmanString"}, {"children": [{"value": 173, "name": "Error"}], "name": "DecodingError."}, {"value": 16, "name": "ErrInvalidHuffman"}, {"value": 16, "name": "ErrStringLength"}, {"children": [{"value": 32, "name": "IsPseudo"}, {"value": 20, "name": "Size"}, {"value": 362, "name": "String"}], "name": "HeaderField."}, {"value": 64, "name": "HuffmanEncodeLength"}, {"children": [{"value": 200, "name": "Error"}], "name": "InvalidIndexError."}, {"value": 364, "name": "NewDecoder"}, {"value": 382, "name": "NewEncoder"}, {"value": 766, "name": "addDecoderNode"}, {"value": 367, "name": "appendByteToHuffmanCode"}, {"value": 479, "name": "appendHpackString"}, {"value": 163, "name": "appendIndexed"}, {"value": 304, "name": "appendIndexedName"}, {"value": 351, "name": "appendNewName"}, {"value": 164, "name": "appendTableSize"}, {"value": 596, "name": "appendVarInt"}, {"value": 24, "name": "bufPool"}, {"value": 16, "name": "errNeedMore"}, {"value": 16, "name": "errVarintOverflow"}, {"children": [{"value": 84, "name": "func1"}], "name": "glob."}, {"value": 256, "name": "huffmanCodeLen"}, {"value": 1024, "name": "huffmanCodes"}, {"value": 851, "name": "huffmanDecode"}, {"value": 572, "name": "init"}, {"children": [{"value": 206, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 239, "name": "newInternalNode"}, {"value": 54238, "name": "newStaticTable"}, {"value": 723, "name": "readVarInt"}, {"value": 8, "name": "rootHuffmanNode"}, {"value": 8, "name": "staticTable"}, {"value": 40, "name": "go.itab.DecodingError,error"}, {"value": 40, "name": "go.itab.InvalidIndexError,error"}], "name": "http2/hpack."}, {"children": [{"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "idna."}, {"children": [{"children": [{"value": 17, "name": "Add"}, {"value": 17, "name": "AddWithTime"}, {"value": 17, "name": "Clear"}, {"value": 44, "name": "ComputeRange"}, {"value": 100, "name": "Hour"}, {"value": 35, "name": "Latest"}, {"value": 44, "name": "LatestBuckets"}, {"value": 100, "name": "Minute"}, {"value": 35, "name": "Range"}, {"value": 35, "name": "Recent"}, {"value": 44, "name": "RecentList"}, {"value": 17, "name": "ScaleBy"}, {"value": 35, "name": "Total"}], "name": "(*MinuteHourSeries)."}, {"children": [{"value": 194, "name": "Time"}], "name": "(*defaultClock)."}, {"children": [{"value": 134, "name": "Add"}, {"value": 719, "name": "AddWithTime"}, {"value": 477, "name": "Clear"}, {"value": 1384, "name": "ComputeRange"}, {"value": 446, "name": "Latest"}, {"value": 1326, "name": "LatestBuckets"}, {"value": 189, "name": "Range"}, {"value": 250, "name": "Recent"}, {"value": 339, "name": "RecentList"}, {"value": 314, "name": "ScaleBy"}, {"value": 83, "name": "Total"}, {"value": 1209, "name": "advance"}, {"value": 3255, "name": "extract"}, {"value": 880, "name": "init"}, {"value": 226, "name": "mergePendingUpdates"}, {"value": 646, "name": "mergeValue"}, {"value": 115, "name": "resetObservation"}], "name": "(*timeSeries)."}, {"children": [{"value": 351, "name": "Clear"}, {"value": 214, "name": "InitLevel"}], "name": "(*tsLevel)."}, {"value": 118, "name": "NewMinuteHourSeries"}, {"value": 173, "name": "NewMinuteHourSeriesWithClock"}, {"children": [{"value": 78, "name": "Time"}], "name": "defaultClock."}, {"value": 8, "name": "defaultClockInstance"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "minuteHourSeriesResolutions"}, {"value": 24, "name": "statictmp_13"}, {"value": 16, "name": "statictmp_233"}, {"value": 24, "name": "statictmp_33"}, {"value": 24, "name": "statictmp_34"}, {"value": 40, "name": "go.itab.defaultClock,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/internal/timeseries.Clock"}], "name": "internal/timeseries."}, {"children": [{"value": 87, "name": "ValidHeaderFieldValue"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 127, "name": "isTokenTable"}], "name": "lex/httplex."}, {"children": [{"children": [{"value": 203, "name": "String"}], "name": "(*discarded)."}, {"children": [{"value": 175, "name": "String"}, {"value": 167, "name": "match"}], "name": "(*errorCond)."}, {"children": [{"value": 214, "name": "WhenString"}], "name": "(*event)."}, {"children": [{"value": 602, "name": "Copy"}, {"value": 298, "name": "Count"}, {"value": 298, "name": "add"}, {"value": 352, "name": "remove"}], "name": "(*eventFamily)."}, {"children": [{"value": 310, "name": "ElapsedTime"}, {"value": 115, "name": "Errorf"}, {"value": 204, "name": "Events"}, {"value": 110, "name": "Finish"}, {"value": 115, "name": "Printf"}, {"value": 343, "name": "Stack"}, {"value": 121, "name": "When"}, {"value": 399, "name": "delta"}, {"value": 276, "name": "hasRecentError"}, {"value": 1426, "name": "printf"}, {"value": 19, "name": "ref"}, {"value": 81, "name": "unref"}], "name": "(*eventLog)."}, {"children": [{"value": 184, "name": "Free"}, {"value": 163, "name": "Len"}, {"value": 240, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*eventLogs)."}, {"children": [{"value": 506, "name": "Add"}, {"value": 148, "name": "Clear"}, {"value": 393, "name": "CopyFrom"}, {"value": 172, "name": "Multiply"}, {"value": 190, "name": "New"}, {"value": 457, "name": "String"}, {"value": 361, "name": "addMeasurement"}, {"value": 123, "name": "average"}, {"value": 444, "name": "html"}, {"value": 84, "name": "median"}, {"value": 1240, "name": "newData"}, {"value": 589, "name": "percentileBoundary"}, {"value": 76, "name": "standardDeviation"}, {"value": 57, "name": "total"}, {"value": 146, "name": "variance"}], "name": "(*histogram)."}, {"children": [{"value": 119, "name": "String"}], "name": "(*lazySprintf)."}, {"children": [{"value": 201, "name": "WhenString"}], "name": "(*logEntry)."}, {"children": [{"value": 186, "name": "String"}, {"value": 176, "name": "match"}], "name": "(*minCond)."}, {"children": [{"value": 328, "name": "ElapsedTime"}, {"value": 207, "name": "Events"}, {"value": 904, "name": "Finish"}, {"value": 103, "name": "LazyLog"}, {"value": 240, "name": "LazyPrintf"}, {"value": 10, "name": "SetError"}, {"value": 33, "name": "SetMaxEvents"}, {"value": 103, "name": "SetRecycler"}, {"value": 24, "name": "SetTraceInfo"}, {"value": 121, "name": "When"}, {"value": 2028, "name": "addEvent"}, {"value": 399, "name": "delta"}, {"value": 19, "name": "ref"}, {"value": 708, "name": "reset"}, {"value": 164, "name": "unref"}, {"children": [{"value": 257, "name": "func1"}], "name": "unref."}], "name": "(*trace)."}, {"children": [{"value": 371, "name": "Add"}, {"value": 645, "name": "Copy"}, {"value": 172, "name": "Empty"}], "name": "(*traceBucket)."}, {"children": [{"value": 184, "name": "Free"}, {"value": 163, "name": "Len"}, {"value": 240, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*traceList)."}, {"children": [{"value": 250, "name": "Add"}, {"value": 1771, "name": "FirstN"}, {"children": [{"value": 104, "name": "func1"}], "name": "FirstN."}, {"value": 166, "name": "Len"}, {"value": 128, "name": "Remove"}], "name": "(*traceSet)."}, {"value": 8, "name": "AuthRequest"}, {"value": 1, "name": "DebugUseAfterFinish"}, {"value": 196, "name": "FromContext"}, {"value": 886, "name": "New"}, {"value": 187, "name": "NewContext"}, {"value": 658, "name": "NewEventLog"}, {"value": 5186, "name": "Render"}, {"value": 3391, "name": "RenderEvents"}, {"value": 24, "name": "activeMu"}, {"value": 8, "name": "activeTraces"}, {"value": 338, "name": "allocFamily"}, {"value": 24, "name": "buckets"}, {"value": 24, "name": "completedMu"}, {"value": 8, "name": "completedTraces"}, {"value": 16, "name": "contextKey"}, {"value": 86, "name": "distTmpl"}, {"children": [{"value": 1163, "name": "func1"}], "name": "distTmpl."}, {"value": 8, "name": "distTmplCache"}, {"value": 12, "name": "distTmplOnce"}, {"value": 542, "name": "elapsed"}, {"children": [{"value": 22, "name": "String"}, {"value": 14, "name": "match"}], "name": "errorCond."}, {"children": [{"value": 230, "name": "WhenString"}], "name": "event."}, {"children": [{"value": 104, "name": "Free"}, {"value": 11, "name": "Len"}, {"value": 110, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "eventLogs."}, {"value": 86, "name": "eventsTmpl"}, {"children": [{"value": 1518, "name": "func1"}], "name": "eventsTmpl."}, {"value": 8, "name": "eventsTmplCache"}, {"value": 12, "name": "eventsTmplOnce"}, {"value": 24, "name": "famMu"}, {"value": 8, "name": "families"}, {"value": 541, "name": "freeEventLog"}, {"value": 8, "name": "freeEventLogs"}, {"value": 141, "name": "freeTrace"}, {"value": 241, "name": "getActiveTraces"}, {"value": 93, "name": "getBucket"}, {"value": 353, "name": "getEventFamily"}, {"value": 203, "name": "getFamily"}, {"children": [{"value": 333, "name": "func1"}], "name": "glob."}, {"value": 612, "name": "init"}, {"children": [{"value": 120, "name": "1"}, {"children": [{"value": 315, "name": "func1"}, {"value": 279, "name": "func2"}], "name": "1."}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 53, "name": "log2"}, {"children": [{"value": 230, "name": "WhenString"}], "name": "logEntry."}, {"value": 134, "name": "lookupBucket"}, {"children": [{"value": 273, "name": "String"}, {"value": 25, "name": "match"}], "name": "minCond."}, {"value": 151, "name": "newEventLog"}, {"value": 1741, "name": "newFamily"}, {"children": [{"value": 84, "name": "func1"}], "name": "newFamily."}, {"value": 151, "name": "newTrace"}, {"value": 86, "name": "pageTmpl"}, {"children": [{"value": 1518, "name": "func1"}, {"children": [{"value": 19, "name": "1"}], "name": "func1."}], "name": "pageTmpl."}, {"value": 8, "name": "pageTmplCache"}, {"value": 12, "name": "pageTmplOnce"}, {"value": 372, "name": "parseArgs"}, {"value": 332, "name": "parseEventsArgs"}, {"value": 684, "name": "printStackRecord"}, {"value": 90, "name": "round"}, {"value": 24, "name": "statictmp_176"}, {"value": 24, "name": "statictmp_177"}, {"value": 24, "name": "statictmp_453"}, {"value": 168, "name": "statictmp_589"}, {"value": 8, "name": "traceFreeList"}, {"children": [{"value": 104, "name": "Free"}, {"value": 11, "name": "Len"}, {"value": 110, "name": "Less"}, {"value": 202, "name": "Swap"}], "name": "traceList."}, {"value": 56, "name": "go.itab.*eventLog,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/trace.EventLog"}, {"value": 64, "name": "go.itab.*histogram,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/internal/timeseries.Observable"}, {"value": 88, "name": "go.itab.*trace,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/trace.Trace"}, {"value": 48, "name": "go.itab.errorCond,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/trace.cond"}, {"value": 56, "name": "go.itab.eventLogs,sort.Interface"}, {"value": 48, "name": "go.itab.minCond,github.com/cockroachdb/cockroach/vendor/golang.org/x/net/trace.cond"}, {"value": 56, "name": "go.itab.traceList,sort.Interface"}], "name": "trace."}], "name": "net/"}, {"children": [{"children": [{"value": 1981, "name": "AuthCodeURL"}, {"value": 529, "name": "Client"}, {"value": 931, "name": "Exchange"}, {"value": 1220, "name": "PasswordCredentialsToken"}, {"value": 458, "name": "TokenSource"}], "name": "(*Config)."}, {"children": [{"value": 789, "name": "Extra"}, {"value": 212, "name": "SetAuthHeader"}, {"value": 384, "name": "Type"}, {"value": 94, "name": "Valid"}, {"value": 225, "name": "WithExtra"}, {"value": 264, "name": "expired"}], "name": "(*Token)."}, {"children": [{"value": 324, "name": "CancelRequest"}, {"value": 927, "name": "RoundTrip"}, {"children": [{"value": 77, "name": "func1"}], "name": "RoundTrip."}, {"value": 415, "name": "setModReq"}], "name": "(*Transport)."}, {"children": [{"value": 122, "name": "Close"}, {"value": 269, "name": "Read"}, {"value": 114, "name": "runFunc"}], "name": "(*onEOFReader)."}, {"children": [{"value": 404, "name": "Token"}], "name": "(*reuseTokenSource)."}, {"children": [{"value": 370, "name": "setValue"}], "name": "(*setParam)."}, {"children": [{"value": 1035, "name": "Token"}], "name": "(*tokenRefresher)."}, {"value": 16, "name": "AccessTypeOffline"}, {"value": 16, "name": "AccessTypeOnline"}, {"value": 16, "name": "ApprovalForce"}, {"value": 910, "name": "NewClient"}, {"value": 16, "name": "NoContext"}, {"value": 166, "name": "SetAuthURLParam"}, {"value": 780, "name": "cloneRequest"}, {"value": 534, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 594, "name": "retrieveToken"}, {"children": [{"value": 250, "name": "setValue"}], "name": "setParam."}, {"value": 16, "name": "statictmp_105"}, {"value": 16, "name": "statictmp_24"}, {"value": 16, "name": "statictmp_55"}, {"value": 16, "name": "statictmp_76"}, {"value": 40, "name": "go.itab.*Transport,net/http.RoundTripper"}, {"value": 48, "name": "go.itab.*onEOFReader,io.ReadCloser"}, {"value": 40, "name": "go.itab.*reuseTokenSource,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.TokenSource"}, {"value": 40, "name": "go.itab.*tokenRefresher,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.TokenSource"}, {"value": 40, "name": "go.itab.setParam,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.AuthCodeOption"}], "name": "oauth2."}, {"children": [{"children": [{"children": [{"value": 1087, "name": "Token"}], "name": "(*appEngineTokenSource)."}, {"children": [{"value": 205, "name": "Token"}], "name": "(*computeSource)."}, {"children": [{"value": 2559, "name": "tokenSource"}], "name": "(*credentialsFile)."}, {"value": 708, "name": "AppEngineTokenSource"}, {"value": 219, "name": "DefaultTokenSource"}, {"value": 32, "name": "Endpoint"}, {"value": 2327, "name": "FindDefaultCredentials"}, {"value": 1310, "name": "JWTConfigFromJSON"}, {"value": 8, "name": "aeTokens"}, {"value": 8, "name": "aeTokensMu"}, {"value": 8, "name": "appengineAppIDFunc"}, {"value": 1, "name": "appengineFlex"}, {"value": 8, "name": "appengineTokenFunc"}, {"children": [{"value": 1425, "name": "Token"}], "name": "computeSource."}, {"value": 178, "name": "guessUnixHomeDir"}, {"value": 280, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 866, "name": "readCredentialsFile"}, {"value": 64, "name": "statictmp_79"}, {"value": 163, "name": "wellKnownFile"}, {"value": 40, "name": "go.itab.*appEngineTokenSource,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.TokenSource"}, {"value": 40, "name": "go.itab.computeSource,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.TokenSource"}], "name": "google."}, {"children": [{"children": [{"value": 180, "name": "RoundTrip"}], "name": "(*ErrorTransport)."}, {"children": [{"value": 271, "name": "UnmarshalJSON"}], "name": "(*expirationTime)."}, {"children": [{"value": 400, "name": "expiry"}], "name": "(*tokenJSON)."}, {"value": 438, "name": "ContextClient"}, {"value": 198, "name": "ContextTransport"}, {"children": [{"value": 30, "name": "RoundTrip"}], "name": "ErrorTransport."}, {"value": 591, "name": "ParseKey"}, {"value": 4895, "name": "RetrieveToken"}, {"value": 24, "name": "brokenAuthHeaderDomains"}, {"value": 24, "name": "brokenAuthHeaderProviders"}, {"value": 24, "name": "contextClientFuncs"}, {"value": 168, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 476, "name": "providerAuthHeaderWorks"}, {"value": 480, "name": "statictmp_183"}, {"value": 48, "name": "statictmp_184"}, {"value": 40, "name": "go.itab.ErrorTransport,net/http.RoundTripper"}], "name": "internal."}, {"children": [{"children": [{"value": 2164, "name": "encode"}], "name": "(*ClaimSet)."}, {"children": [{"value": 216, "name": "encode"}], "name": "(*Header)."}, {"value": 660, "name": "Decode"}, {"value": 212, "name": "Encode"}, {"children": [{"value": 330, "name": "func1"}], "name": "Encode."}, {"value": 1043, "name": "EncodeWithSigner"}, {"value": 139, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1, "name": "statictmp_39"}, {"value": 1, "name": "statictmp_45"}], "name": "jws."}, {"children": [{"children": [{"value": 463, "name": "Client"}, {"value": 422, "name": "TokenSource"}], "name": "(*Config)."}, {"children": [{"value": 214, "name": "Token"}], "name": "(*jwtSource)."}, {"value": 16, "name": "defaultGrantType"}, {"value": 8, "name": "defaultHeader"}, {"value": 149, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 4265, "name": "Token"}], "name": "jwtSource."}, {"value": 48, "name": "statictmp_98"}, {"value": 40, "name": "go.itab.jwtSource,github.com/cockroachdb/cockroach/vendor/golang.org/x/oauth2.TokenSource"}], "name": "jwt."}], "name": "oauth2/"}, {"children": [{"children": [{"children": [{"value": 119, "name": "Go"}, {"children": [{"value": 218, "name": "func1"}, {"children": [{"value": 121, "name": "1"}], "name": "func1."}], "name": "Go."}, {"value": 109, "name": "Wait"}], "name": "(*Group)."}, {"value": 202, "name": "WithContext"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "errgroup."}, {"children": [{"children": [{"value": 670, "name": "Do"}, {"value": 1040, "name": "DoChan"}, {"value": 141, "name": "Forget"}, {"value": 576, "name": "doCall"}], "name": "(*Group)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "singleflight."}], "name": "sync/"}, {"children": [{"children": [{"value": 17, "name": "Lock"}, {"value": 860, "name": "Mmap"}, {"value": 579, "name": "Munmap"}, {"value": 17, "name": "Unlock"}], "name": "(*mmapper)."}, {"value": 254, "name": "Dup"}, {"value": 235, "name": "Dup2"}, {"value": 245, "name": "Getrlimit"}, {"value": 5, "name": "RawSyscall"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "RawSyscall."}, {"value": 245, "name": "Setrlimit"}, {"value": 8, "name": "Stderr"}, {"value": 5, "name": "Syscall"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "Syscall."}, {"value": 5, "name": "Syscall6"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "Syscall6."}, {"value": 16, "name": "errEAGAIN"}, {"value": 16, "name": "errEINVAL"}, {"value": 16, "name": "errENOENT"}, {"value": 200, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 310, "name": "mmap"}, {"value": 235, "name": "munmap"}, {"value": 8, "name": "statictmp_1034"}, {"value": 8, "name": "statictmp_1035"}, {"value": 8, "name": "statictmp_1036"}, {"value": 32, "name": "statictmp_1037"}], "name": "sys/unix."}, {"children": [{"children": [{"children": [{"value": 19, "name": "Reset"}, {"value": 134, "name": "init"}], "name": "(*Buffer)."}, {"children": [{"value": 736, "name": "Compare"}, {"value": 762, "name": "CompareString"}, {"value": 287, "name": "Key"}, {"value": 274, "name": "KeyFromString"}, {"value": 740, "name": "Sort"}, {"value": 725, "name": "SortStrings"}, {"value": 416, "name": "compare"}, {"value": 360, "name": "getColElems"}, {"value": 359, "name": "getColElemsString"}, {"value": 451, "name": "init"}, {"value": 284, "name": "key"}, {"value": 4712, "name": "keyFromElems"}], "name": "(*Collator)."}, {"children": [{"value": 23, "name": "Discard"}, {"value": 32, "name": "End"}, {"value": 32, "name": "Len"}, {"value": 28, "name": "Next"}, {"value": 23, "name": "Reset"}, {"value": 23, "name": "SetInput"}, {"value": 23, "name": "SetInputString"}, {"value": 243, "name": "nextPrimary"}, {"value": 167, "name": "nextQuaternary"}, {"value": 184, "name": "nextSecondary"}, {"value": 194, "name": "nextTertiary"}, {"value": 198, "name": "prevSecondary"}], "name": "(*iter)."}, {"children": [{"value": 1196, "name": "setFromTag"}, {"value": 197, "name": "setOptions"}], "name": "(*options)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 214, "name": "Less"}, {"value": 358, "name": "Swap"}], "name": "(*prioritizedOptions)."}, {"children": [{"value": 188, "name": "Len"}, {"value": 210, "name": "Less"}, {"value": 201, "name": "Swap"}, {"value": 133, "name": "sort"}], "name": "(*sorter)."}, {"value": 1008, "name": "New"}, {"value": 16, "name": "availableLocales"}, {"value": 209, "name": "compareLevel"}, {"value": 121, "name": "init"}, {"children": [{"value": 428, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 236, "name": "ldmlBool"}, {"value": 760, "name": "locales"}, {"value": 10116, "name": "mainCTEntries"}, {"value": 16480, "name": "mainContractElem"}, {"value": 187456, "name": "mainExpandElem"}, {"value": 33152, "name": "mainLookup"}, {"value": 1005824, "name": "mainValues"}, {"value": 190, "name": "newCollator"}, {"children": [{"value": 11, "name": "Len"}, {"value": 84, "name": "Less"}, {"value": 251, "name": "Swap"}], "name": "prioritizedOptions."}, {"value": 237, "name": "processWeights"}, {"children": [{"value": 11, "name": "Len"}, {"value": 182, "name": "Less"}, {"value": 341, "name": "Swap"}], "name": "sorter."}, {"value": 24, "name": "tags"}, {"value": 56, "name": "go.itab.*sorter,sort.Interface"}, {"value": 56, "name": "go.itab.prioritizedOptions,sort.Interface"}], "name": "collate."}, {"children": [{"children": [{"children": [{"value": 193, "name": "CCC"}, {"value": 162, "name": "Mask"}, {"value": 193, "name": "Primary"}, {"value": 212, "name": "Quaternary"}, {"value": 174, "name": "Secondary"}, {"value": 228, "name": "Tertiary"}, {"value": 184, "name": "Weight"}], "name": "(*Elem)."}, {"children": [{"value": 185, "name": "Discard"}, {"value": 15, "name": "End"}, {"value": 34, "name": "Len"}, {"value": 645, "name": "Next"}, {"value": 35, "name": "Reset"}, {"value": 212, "name": "SetInput"}, {"value": 214, "name": "SetInputString"}, {"value": 533, "name": "appendNext"}, {"value": 719, "name": "doNorm"}], "name": "(*Iter)."}, {"children": [{"value": 316, "name": "AppendNext"}, {"value": 297, "name": "AppendNextString"}, {"value": 109, "name": "Domain"}, {"value": 109, "name": "Start"}, {"value": 109, "name": "StartString"}, {"value": 16, "name": "Top"}, {"value": 357, "name": "appendExpansion"}, {"value": 2344, "name": "appendNext"}, {"value": 2335, "name": "matchContraction"}, {"value": 2288, "name": "matchContractionString"}], "name": "(*Table)."}, {"children": [{"value": 900, "name": "lookup"}, {"value": 900, "name": "lookupString"}], "name": "(*Trie)."}, {"children": [{"value": 590, "name": "scan"}], "name": "(*ctScanner)."}, {"children": [{"value": 590, "name": "scan"}], "name": "(*ctScannerString)."}, {"children": [{"value": 432, "name": "checkNextDigit"}, {"value": 266, "name": "isDigit"}, {"value": 157, "name": "result"}, {"value": 259, "name": "update"}], "name": "(*numberConverter)."}, {"children": [{"value": 1437, "name": "AppendNext"}, {"value": 1348, "name": "AppendNextString"}, {"value": 120, "name": "Domain"}, {"value": 143, "name": "Start"}, {"value": 133, "name": "StartString"}, {"value": 98, "name": "Top"}], "name": "(*numericWeighter)."}, {"children": [{"value": 185, "name": "lookup"}, {"value": 315, "name": "nfd"}, {"value": 194, "name": "properties"}, {"value": 161, "name": "rune"}], "name": "(*source)."}, {"children": [{"value": 47, "name": "CCC"}, {"value": 9, "name": "Mask"}, {"value": 52, "name": "Primary"}, {"value": 68, "name": "Quaternary"}, {"value": 285, "name": "Secondary"}, {"value": 80, "name": "Tertiary"}, {"value": 343, "name": "Weight"}, {"value": 65, "name": "ctype"}], "name": "Elem."}, {"value": 2627, "name": "MakeElem"}, {"value": 3390, "name": "MatchLang"}, {"children": [{"value": 229, "name": "func1"}], "name": "MatchLang."}, {"value": 684, "name": "NewNumericWeighter"}, {"children": [{"value": 142, "name": "func1"}], "name": "NewNumericWeighter."}, {"value": 208, "name": "implicitPrimary"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 118, "name": "Domain"}, {"value": 147, "name": "Start"}, {"value": 128, "name": "StartString"}, {"value": 96, "name": "Top"}], "name": "numericWeighter."}, {"value": 1306, "name": "parent"}, {"value": 80, "name": "go.itab.*Table,github.com/cockroachdb/cockroach/vendor/golang.org/x/text/internal/colltab.Weighter"}, {"value": 80, "name": "go.itab.*numericWeighter,github.com/cockroachdb/cockroach/vendor/golang.org/x/text/internal/colltab.Weighter"}], "name": "colltab."}, {"children": [{"children": [{"value": 212, "name": "Elem"}, {"value": 215, "name": "Index"}, {"value": 225, "name": "Next"}], "name": "(*Index)."}, {"value": 110, "name": "Compare"}, {"value": 191, "name": "FixCase"}, {"children": [{"value": 82, "name": "Elem"}, {"value": 383, "name": "Index"}, {"children": [{"value": 170, "name": "func1"}], "name": "Index."}, {"value": 209, "name": "Next"}], "name": "Index."}, {"value": 219, "name": "cmp"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "tag."}], "name": "internal/"}, {"children": [{"children": [{"value": 105, "name": "ISO3"}, {"value": 56, "name": "IsPrivateUse"}, {"value": 105, "name": "String"}], "name": "(*Base)."}, {"children": [{"value": 297, "name": "Canonicalize"}, {"value": 314, "name": "Compose"}, {"value": 256, "name": "Make"}, {"value": 256, "name": "MustParse"}, {"value": 294, "name": "Parse"}], "name": "(*CanonType)."}, {"children": [{"value": 206, "name": "String"}], "name": "(*Confidence)."}, {"children": [{"value": 171, "name": "String"}, {"value": 205, "name": "Tokens"}, {"value": 177, "name": "Type"}], "name": "(*Extension)."}, {"children": [{"value": 176, "name": "Canonicalize"}, {"value": 292, "name": "Contains"}, {"value": 318, "name": "ISO3"}, {"value": 242, "name": "IsCountry"}, {"value": 206, "name": "IsGroup"}, {"value": 95, "name": "IsPrivateUse"}, {"value": 95, "name": "M49"}, {"value": 105, "name": "String"}, {"value": 248, "name": "TLD"}], "name": "(*Region)."}, {"children": [{"value": 52, "name": "IsPrivateUse"}, {"value": 133, "name": "String"}], "name": "(*Script)."}, {"children": [{"value": 195, "name": "Base"}, {"value": 213, "name": "Extension"}, {"value": 205, "name": "Extensions"}, {"value": 310, "name": "IsRoot"}, {"value": 242, "name": "Parent"}, {"value": 200, "name": "Raw"}, {"value": 195, "name": "Region"}, {"value": 194, "name": "Script"}, {"value": 351, "name": "SetTypeForKey"}, {"value": 195, "name": "String"}, {"value": 215, "name": "TypeForKey"}, {"value": 205, "name": "Variants"}, {"value": 719, "name": "genCoreBytes"}, {"value": 1128, "name": "remakeString"}], "name": "(*Tag)."}, {"children": [{"value": 186, "name": "Error"}, {"value": 186, "name": "Subtag"}], "name": "(*ValueError)."}, {"children": [{"value": 171, "name": "String"}], "name": "(*Variant)."}, {"children": [{"value": 4701, "name": "update"}, {"children": [{"value": 377, "name": "func1"}, {"value": 108, "name": "func2"}, {"value": 73, "name": "func3"}], "name": "update."}], "name": "(*builder)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 389, "name": "Swap"}], "name": "(*bytesSort)."}, {"children": [{"value": 186, "name": "ISO3"}, {"value": 173, "name": "IsPrivateUse"}, {"value": 186, "name": "String"}], "name": "(*langID)."}, {"children": [{"value": 396, "name": "ISO3"}, {"value": 192, "name": "IsPrivateUse"}, {"value": 192, "name": "M49"}, {"value": 186, "name": "String"}], "name": "(*regionID)."}, {"children": [{"value": 123, "name": "acceptMinSize"}, {"value": 628, "name": "gobble"}, {"value": 117, "name": "init"}, {"value": 189, "name": "replace"}, {"value": 865, "name": "resizeRange"}, {"value": 946, "name": "scan"}, {"value": 88, "name": "toLower"}], "name": "(*scanner)."}, {"children": [{"value": 169, "name": "IsPrivateUse"}, {"value": 230, "name": "String"}], "name": "(*scriptID)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 352, "name": "Less"}, {"value": 356, "name": "Swap"}], "name": "(*sortVariant)."}, {"children": [{"value": 188, "name": "Len"}, {"value": 238, "name": "Less"}, {"value": 505, "name": "Swap"}], "name": "(*variantsSort)."}, {"children": [{"value": 102, "name": "ISO3"}, {"value": 53, "name": "IsPrivateUse"}, {"value": 102, "name": "String"}], "name": "Base."}, {"children": [{"value": 206, "name": "Canonicalize"}, {"value": 1406, "name": "Compose"}, {"value": 169, "name": "Make"}, {"value": 206, "name": "MustParse"}, {"value": 840, "name": "Parse"}], "name": "CanonType."}, {"children": [{"value": 75, "name": "String"}], "name": "Confidence."}, {"value": 16, "name": "ErrMissingLikelyTagsData"}, {"children": [{"value": 21, "name": "String"}, {"value": 121, "name": "Tokens"}, {"value": 29, "name": "Type"}], "name": "Extension."}, {"value": 149, "name": "Make"}, {"value": 184, "name": "MustParse"}, {"value": 188, "name": "Parse"}, {"children": [{"value": 95, "name": "Canonicalize"}, {"value": 157, "name": "Contains"}, {"value": 315, "name": "ISO3"}, {"value": 117, "name": "IsCountry"}, {"value": 85, "name": "IsGroup"}, {"value": 92, "name": "IsPrivateUse"}, {"value": 92, "name": "M49"}, {"value": 102, "name": "String"}, {"value": 140, "name": "TLD"}], "name": "Region."}, {"children": [{"value": 49, "name": "IsPrivateUse"}, {"value": 130, "name": "String"}], "name": "Script."}, {"children": [{"value": 379, "name": "Base"}, {"value": 192, "name": "Extension"}, {"value": 414, "name": "Extensions"}, {"value": 153, "name": "IsRoot"}, {"value": 1781, "name": "Parent"}, {"value": 30, "name": "Raw"}, {"value": 401, "name": "Region"}, {"value": 563, "name": "Script"}, {"value": 3240, "name": "SetTypeForKey"}, {"value": 294, "name": "String"}, {"value": 201, "name": "TypeForKey"}, {"value": 502, "name": "Variants"}, {"value": 701, "name": "canonicalize"}, {"value": 931, "name": "findTypeForKey"}], "name": "Tag."}, {"value": 24, "name": "Und"}, {"children": [{"value": 237, "name": "Error"}, {"value": 123, "name": "Subtag"}, {"value": 176, "name": "tag"}], "name": "ValueError."}, {"children": [{"value": 21, "name": "String"}], "name": "Variant."}, {"value": 8, "name": "acceptFallback"}, {"value": 2587, "name": "addTags"}, {"value": 12, "name": "altLangIndex"}, {"value": 22, "name": "altRegionIDs"}, {"value": 8, "name": "altTagIndex"}, {"value": 16, "name": "altTags"}, {"value": 264, "name": "appendTokens"}, {"children": [{"value": 11, "name": "Len"}, {"value": 176, "name": "Less"}, {"value": 279, "name": "Swap"}], "name": "bytesSort."}, {"value": 24, "name": "confName"}, {"value": 8, "name": "coreTags"}, {"value": 16, "name": "errInvalidArgument"}, {"value": 16, "name": "errInvalidArguments"}, {"value": 16, "name": "errInvalidWeight"}, {"value": 16, "name": "errNoTLD"}, {"value": 16, "name": "errPrivateUse"}, {"value": 16, "name": "errSyntax"}, {"value": 420, "name": "findIndex"}, {"value": 664, "name": "fromM49"}, {"value": 264, "name": "getExtension"}, {"value": 192, "name": "getLangID"}, {"value": 444, "name": "getLangISO2"}, {"value": 1245, "name": "getLangISO3"}, {"value": 348, "name": "getRegionID"}, {"value": 214, "name": "getRegionISO2"}, {"value": 847, "name": "getRegionISO3"}, {"value": 838, "name": "getRegionM49"}, {"children": [{"value": 64, "name": "func1"}], "name": "getRegionM49."}, {"value": 169, "name": "getScriptID"}, {"value": 382, "name": "grandfathered"}, {"value": 8, "name": "grandfatheredMap"}, {"value": 3405, "name": "init"}, {"children": [{"value": 528, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 107, "name": "intToStr"}, {"value": 71, "name": "isAlphaNum"}, {"value": 644, "name": "langAliasMap"}, {"value": 161, "name": "langAliasTypes"}, {"children": [{"value": 343, "name": "ISO3"}, {"value": 22, "name": "IsPrivateUse"}, {"value": 325, "name": "String"}, {"value": 433, "name": "stringToBuf"}], "name": "langID."}, {"value": 2197, "name": "langNoIndex"}, {"value": 5276, "name": "likelyLang"}, {"value": 396, "name": "likelyLangList"}, {"value": 1428, "name": "likelyRegion"}, {"value": 192, "name": "likelyRegionGroup"}, {"value": 384, "name": "likelyRegionList"}, {"value": 928, "name": "likelyScript"}, {"value": 714, "name": "m49"}, {"value": 18, "name": "m49Index"}, {"value": 212, "name": "makeScanner"}, {"value": 542, "name": "makeScannerString"}, {"value": 135, "name": "nextExtension"}, {"value": 300, "name": "nextToken"}, {"value": 209, "name": "normLang"}, {"children": [{"value": 71, "name": "func1"}], "name": "normLang."}, {"value": 296, "name": "normRegion"}, {"children": [{"value": 62, "name": "func1"}], "name": "normRegion."}, {"value": 24, "name": "notEquivalent"}, {"value": 160, "name": "parents"}, {"value": 1026, "name": "parse"}, {"value": 3723, "name": "parseExtension"}, {"value": 1950, "name": "parseExtensions"}, {"value": 1363, "name": "parseTag"}, {"value": 2166, "name": "parseVariants"}, {"value": 128, "name": "regionContainment"}, {"children": [{"value": 349, "name": "ISO3"}, {"value": 64, "name": "IsPrivateUse"}, {"value": 64, "name": "M49"}, {"value": 360, "name": "String"}], "name": "regionID."}, {"value": 357, "name": "regionInclusion"}, {"value": 288, "name": "regionInclusionBits"}, {"value": 80, "name": "regionOldMap"}, {"value": 357, "name": "regionTypes"}, {"children": [{"value": 18, "name": "IsPrivateUse"}, {"value": 120, "name": "String"}], "name": "scriptID."}, {"value": 24, "name": "separator"}, {"children": [{"value": 11, "name": "Len"}, {"value": 240, "name": "Less"}, {"value": 249, "name": "Swap"}], "name": "sortVariant."}, {"value": 64, "name": "statictmp_1318"}, {"value": 1, "name": "statictmp_1319"}, {"value": 172, "name": "statictmp_1320"}, {"value": 16, "name": "statictmp_1321"}, {"value": 42, "name": "statictmp_1322"}, {"value": 20, "name": "statictmp_1323"}, {"value": 2, "name": "statictmp_1324"}, {"value": 3000, "name": "statictmp_1326"}, {"value": 1500, "name": "statictmp_1327"}, {"value": 11, "name": "statictmp_1333"}, {"value": 11, "name": "statictmp_1335"}, {"value": 11, "name": "statictmp_1337"}, {"value": 11, "name": "statictmp_1339"}, {"value": 11, "name": "statictmp_1341"}, {"value": 11, "name": "statictmp_1343"}, {"value": 11, "name": "statictmp_1345"}, {"value": 11, "name": "statictmp_1347"}, {"value": 11, "name": "statictmp_1349"}, {"value": 11, "name": "statictmp_1351"}, {"value": 11, "name": "statictmp_1353"}, {"value": 11, "name": "statictmp_1355"}, {"value": 11, "name": "statictmp_1357"}, {"value": 11, "name": "statictmp_1359"}, {"value": 11, "name": "statictmp_1361"}, {"value": 11, "name": "statictmp_1363"}, {"value": 11, "name": "statictmp_1365"}, {"value": 11, "name": "statictmp_1367"}, {"value": 11, "name": "statictmp_1369"}, {"value": 11, "name": "statictmp_1371"}, {"value": 11, "name": "statictmp_1373"}, {"value": 11, "name": "statictmp_1375"}, {"value": 11, "name": "statictmp_1377"}, {"value": 11, "name": "statictmp_1379"}, {"value": 11, "name": "statictmp_1381"}, {"value": 11, "name": "statictmp_1383"}, {"value": 11, "name": "statictmp_1386"}, {"value": 80, "name": "statictmp_1389"}, {"value": 10, "name": "statictmp_1390"}, {"value": 1232, "name": "statictmp_1394"}, {"value": 77, "name": "statictmp_1395"}, {"value": 2, "name": "statictmp_143"}, {"value": 2, "name": "statictmp_1445"}, {"value": 2, "name": "statictmp_150"}, {"value": 16, "name": "statictmp_199"}, {"value": 2, "name": "statictmp_372"}, {"value": 55, "name": "strToInt"}, {"value": 1319, "name": "suppressScript"}, {"value": 47, "name": "tokenLen"}, {"value": 24, "name": "und"}, {"value": 8, "name": "variantIndex"}, {"children": [{"value": 11, "name": "Len"}, {"value": 75, "name": "Less"}, {"value": 348, "name": "Swap"}], "name": "variantsSort."}, {"value": 40, "name": "go.itab.ValueError,error"}, {"value": 56, "name": "go.itab.bytesSort,sort.Interface"}, {"value": 56, "name": "go.itab.sortVariant,sort.Interface"}, {"value": 56, "name": "go.itab.variantsSort,sort.Interface"}], "name": "language."}, {"children": [{"value": 16, "name": "ErrEndOfSpan"}, {"value": 16, "name": "ErrShortDst"}, {"value": 16, "name": "ErrShortSrc"}, {"value": 16, "name": "errInconsistentByteCount"}, {"value": 16, "name": "errShortInternal"}, {"value": 538, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "transform."}, {"children": [{"children": [{"value": 278, "name": "Append"}, {"value": 258, "name": "AppendString"}, {"value": 226, "name": "Bytes"}, {"value": 206, "name": "FirstBoundary"}, {"value": 196, "name": "FirstBoundaryInString"}, {"value": 205, "name": "IsNormal"}, {"value": 195, "name": "IsNormalString"}, {"value": 206, "name": "LastBoundary"}, {"value": 215, "name": "NextBoundary"}, {"value": 205, "name": "NextBoundaryInString"}, {"value": 225, "name": "Properties"}, {"value": 215, "name": "PropertiesString"}, {"value": 206, "name": "QuickSpan"}, {"value": 196, "name": "QuickSpanString"}, {"value": 759, "name": "Reader"}, {"value": 150, "name": "Reset"}, {"value": 241, "name": "Span"}, {"value": 225, "name": "SpanString"}, {"value": 206, "name": "String"}, {"value": 309, "name": "Transform"}, {"value": 577, "name": "Writer"}], "name": "(*Form)."}, {"children": [{"value": 30, "name": "Done"}, {"value": 966, "name": "Init"}, {"value": 962, "name": "InitString"}, {"value": 97, "name": "Next"}, {"value": 18, "name": "Pos"}, {"value": 920, "name": "Seek"}], "name": "(*Iter)."}, {"children": [{"value": 199, "name": "BoundaryAfter"}, {"value": 203, "name": "BoundaryBefore"}, {"value": 210, "name": "CCC"}, {"value": 305, "name": "Decomposition"}, {"value": 195, "name": "LeadCCC"}, {"value": 172, "name": "Size"}, {"value": 195, "name": "TrailCCC"}], "name": "(*Properties)."}, {"children": [{"value": 668, "name": "quickSpan"}], "name": "(*formInfo)."}, {"children": [{"value": 586, "name": "appendSlice"}, {"value": 268, "name": "charinfoNFC"}, {"value": 268, "name": "charinfoNFKC"}, {"value": 498, "name": "hangul"}, {"value": 145, "name": "skipASCII"}, {"value": 141, "name": "skipContinuationBytes"}], "name": "(*input)."}, {"children": [{"value": 829, "name": "lookup"}, {"value": 829, "name": "lookupString"}, {"value": 160, "name": "lookupValue"}], "name": "(*nfcTrie)."}, {"children": [{"value": 829, "name": "lookup"}, {"value": 829, "name": "lookupString"}, {"value": 160, "name": "lookupValue"}], "name": "(*nfkcTrie)."}, {"children": [{"value": 1515, "name": "Read"}], "name": "(*normReader)."}, {"children": [{"value": 178, "name": "Close"}, {"value": 1346, "name": "Write"}], "name": "(*normWriter)."}, {"children": [{"value": 252, "name": "appendRune"}, {"value": 225, "name": "assignRune"}, {"value": 651, "name": "combineHangul"}, {"value": 712, "name": "compose"}, {"value": 220, "name": "decomposeHangul"}, {"value": 126, "name": "doFlush"}, {"value": 336, "name": "flushCopy"}, {"value": 124, "name": "insertCGJ"}, {"value": 746, "name": "insertDecomposed"}, {"value": 437, "name": "insertFlush"}, {"value": 181, "name": "insertOrdered"}, {"value": 306, "name": "insertSingle"}, {"value": 394, "name": "insertUnsafe"}, {"value": 195, "name": "runeAt"}], "name": "(*reorderBuffer)."}, {"children": [{"value": 226, "name": "lookup"}], "name": "(*sparseBlocks)."}, {"children": [{"value": 235, "name": "backwards"}, {"value": 240, "name": "next"}], "name": "(*streamSafe)."}, {"children": [{"value": 416, "name": "Append"}, {"value": 400, "name": "AppendString"}, {"value": 1083, "name": "Bytes"}, {"value": 327, "name": "FirstBoundary"}, {"value": 308, "name": "FirstBoundaryInString"}, {"value": 1339, "name": "IsNormal"}, {"value": 1445, "name": "IsNormalString"}, {"children": [{"value": 223, "name": "func1"}], "name": "IsNormalString."}, {"value": 133, "name": "LastBoundary"}, {"value": 345, "name": "NextBoundary"}, {"value": 323, "name": "NextBoundaryInString"}, {"value": 270, "name": "Properties"}, {"value": 250, "name": "PropertiesString"}, {"value": 389, "name": "QuickSpan"}, {"value": 373, "name": "QuickSpanString"}, {"value": 643, "name": "Reader"}, {"value": 1, "name": "Reset"}, {"value": 475, "name": "Span"}, {"value": 459, "name": "SpanString"}, {"value": 1088, "name": "String"}, {"value": 970, "name": "Transform"}, {"value": 464, "name": "Writer"}, {"value": 1241, "name": "doAppend"}, {"value": 466, "name": "firstBoundary"}, {"value": 784, "name": "nextBoundary"}, {"value": 1671, "name": "transform"}], "name": "Form."}, {"children": [{"value": 60, "name": "BoundaryAfter"}, {"value": 71, "name": "BoundaryBefore"}, {"value": 79, "name": "CCC"}, {"value": 177, "name": "Decomposition"}, {"value": 54, "name": "LeadCCC"}, {"value": 11, "name": "Size"}, {"value": 54, "name": "TrailCCC"}], "name": "Properties."}, {"value": 481, "name": "appendFlush"}, {"value": 427, "name": "appendQuick"}, {"value": 55, "name": "ccc"}, {"value": 254, "name": "cmpNormalBytes"}, {"value": 415, "name": "compInfo"}, {"value": 395, "name": "decomposeHangul"}, {"value": 1009, "name": "decomposeSegment"}, {"value": 1323, "name": "decomposeToLastBoundary"}, {"value": 19105, "name": "decomps"}, {"value": 1247, "name": "doAppend"}, {"value": 179, "name": "doAppendInner"}, {"value": 748, "name": "doNormComposed"}, {"value": 719, "name": "doNormDecomposed"}, {"value": 24, "name": "errs"}, {"value": 263, "name": "flushTransform"}, {"value": 24, "name": "formTable"}, {"value": 891, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 715, "name": "lastBoundary"}, {"value": 482, "name": "lastRuneStart"}, {"value": 123, "name": "lookupInfoNFC"}, {"value": 123, "name": "lookupInfoNFKC"}, {"value": 72, "name": "newNfcTrie"}, {"value": 72, "name": "newNfkcTrie"}, {"value": 645, "name": "nextASCIIBytes"}, {"value": 604, "name": "nextASCIIString"}, {"value": 404, "name": "nextCGJCompose"}, {"value": 236, "name": "nextCGJDecompose"}, {"value": 2354, "name": "nextComposed"}, {"value": 5094, "name": "nextDecomposed"}, {"value": 28, "name": "nextDone"}, {"value": 697, "name": "nextHangul"}, {"value": 728, "name": "nextMulti"}, {"value": 1270, "name": "nextMultiNorm"}, {"value": 8, "name": "nfcData"}, {"value": 1408, "name": "nfcIndex"}, {"value": 48, "name": "nfcSparse"}, {"value": 24, "name": "nfcSparseOffset"}, {"value": 2752, "name": "nfcSparseValues"}, {"value": 5888, "name": "nfcValues"}, {"value": 8, "name": "nfkcData"}, {"value": 1408, "name": "nfkcIndex"}, {"value": 48, "name": "nfkcSparse"}, {"value": 24, "name": "nfkcSparseOffset"}, {"value": 3500, "name": "nfkcSparseValues"}, {"value": 11776, "name": "nfkcValues"}, {"value": 1445, "name": "patchTail"}, {"value": 8, "name": "recompMap"}, {"value": 552, "name": "statictmp_485"}, {"value": 552, "name": "statictmp_497"}, {"value": 552, "name": "statictmp_561"}, {"value": 8, "name": "statictmp_628"}, {"value": 284, "name": "statictmp_784"}, {"value": 310, "name": "statictmp_785"}, {"value": 32, "name": "statictmp_786"}, {"value": 32, "name": "statictmp_787"}, {"value": 32, "name": "statictmp_788"}, {"value": 32, "name": "statictmp_789"}, {"value": 32, "name": "statictmp_790"}, {"value": 48, "name": "statictmp_791"}, {"value": 3760, "name": "statictmp_793"}, {"value": 3760, "name": "statictmp_794"}, {"value": 40, "name": "statictmp_88"}, {"value": 8, "name": "statictmp_89"}, {"value": 40, "name": "go.itab.*normReader,io.Reader"}, {"value": 48, "name": "go.itab.*normWriter,io.WriteCloser"}], "name": "unicode/norm."}], "name": "text/"}, {"children": [{"children": [{"value": 110, "name": "Allow"}, {"value": 200, "name": "AllowN"}, {"value": 15, "name": "Burst"}, {"value": 169, "name": "Limit"}, {"value": 111, "name": "Reserve"}, {"value": 322, "name": "ReserveN"}, {"value": 104, "name": "SetLimit"}, {"value": 301, "name": "SetLimitAt"}, {"value": 148, "name": "Wait"}, {"value": 149, "name": "WaitN"}, {"value": 543, "name": "advance"}, {"value": 1093, "name": "reserveN"}, {"value": 1560, "name": "waitN"}], "name": "(*Limiter)."}, {"children": [{"value": 92, "name": "Cancel"}, {"value": 1013, "name": "CancelAt"}, {"value": 102, "name": "Delay"}, {"value": 181, "name": "DelayFrom"}, {"value": 13, "name": "OK"}], "name": "(*Reservation)."}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "time/rate."}], "name": "golang.org/x/"}, {"children": [{"children": [{"children": [{"children": [{"value": 177, "name": "Pause"}, {"value": 22, "name": "Reset"}], "name": "(*ExponentialBackoff)."}, {"children": [{"value": 349, "name": "Chunk"}, {"value": 29, "name": "Next"}, {"value": 252, "name": "loadChunk"}], "name": "(*MediaBuffer)."}, {"children": [{"value": 168, "name": "Progress"}, {"value": 1087, "name": "Upload"}, {"value": 1287, "name": "doUploadRequest"}, {"value": 166, "name": "reportProgress"}, {"value": 767, "name": "transferChunk"}], "name": "(*ResumableUpload)."}, {"children": [{"value": 186, "name": "Encode"}, {"value": 241, "name": "Get"}, {"value": 356, "name": "Set"}, {"value": 270, "name": "SetMulti"}], "name": "(*URLParams)."}, {"children": [{"value": 578, "name": "ContentType"}, {"value": 405, "name": "Read"}], "name": "(*contentSniffer)."}, {"children": [{"value": 123, "name": "Close"}, {"value": 123, "name": "Read"}], "name": "(*multipartReader)."}, {"children": [{"value": 111, "name": "ContentType"}, {"value": 157, "name": "Read"}], "name": "(*readerTyper)."}, {"children": [{"value": 157, "name": "Read"}], "name": "(*typeReader)."}, {"value": 407, "name": "CombineBodyMedia"}, {"value": 443, "name": "DetermineContentType"}, {"value": 925, "name": "MarshalJSON"}, {"value": 536, "name": "PrepareUpload"}, {"value": 674, "name": "SendRequest"}, {"value": 347, "name": "SetOptions"}, {"children": [{"value": 80, "name": "Encode"}, {"value": 161, "name": "Get"}, {"value": 250, "name": "Set"}, {"value": 171, "name": "SetMulti"}], "name": "URLParams."}, {"value": 133, "name": "contextDone"}, {"value": 318, "name": "formatAsString"}, {"value": 24, "name": "hooks"}, {"value": 377, "name": "includeField"}, {"value": 193, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 509, "name": "isEmptyValue"}, {"value": 764, "name": "newMultipartReader"}, {"children": [{"value": 677, "name": "func1"}], "name": "newMultipartReader."}, {"value": 1064, "name": "parseJSONTag"}, {"children": [{"value": 108, "name": "ContentType"}, {"value": 164, "name": "Read"}], "name": "readerTyper."}, {"value": 2498, "name": "schemaToMap"}, {"value": 295, "name": "shouldRetry"}, {"value": 24, "name": "statictmp_118"}, {"value": 159, "name": "statusResumeIncomplete"}, {"value": 173, "name": "typeHeader"}, {"children": [{"value": 164, "name": "Read"}], "name": "typeReader."}, {"value": 48, "name": "go.itab.*ExponentialBackoff,github.com/cockroachdb/cockroach/vendor/google.golang.org/api/gensupport.BackoffStrategy"}, {"value": 40, "name": "go.itab.*contentSniffer,io.Reader"}, {"value": 48, "name": "go.itab.*multipartReader,io.ReadCloser"}, {"value": 40, "name": "go.itab.readerTyper,io.Reader"}], "name": "gensupport."}, {"children": [{"children": [{"value": 1996, "name": "Error"}], "name": "(*Error)."}, {"children": [{"value": 225, "name": "JSONReader"}], "name": "(*MarshalStyle)."}, {"children": [{"value": 208, "name": "setOptions"}], "name": "(*chunkSizeOption)."}, {"children": [{"value": 217, "name": "setOptions"}], "name": "(*contentTypeOption)."}, {"value": 484, "name": "CheckMediaResponse"}, {"value": 696, "name": "CheckResponse"}, {"value": 265, "name": "CloseBody"}, {"value": 314, "name": "CombineFields"}, {"value": 228, "name": "Expand"}, {"children": [{"value": 543, "name": "JSONReader"}], "name": "MarshalStyle."}, {"value": 193, "name": "ProcessMediaOptions"}, {"value": 325, "name": "ResolveRelative"}, {"value": 1, "name": "WithoutDataWrapper"}, {"children": [{"value": 57, "name": "setOptions"}], "name": "chunkSizeOption."}, {"children": [{"value": 117, "name": "setOptions"}], "name": "contentTypeOption."}, {"value": 139, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.*Error,error"}, {"value": 40, "name": "go.itab.chunkSizeOption,github.com/cockroachdb/cockroach/vendor/google.golang.org/api/googleapi.MediaOption"}, {"value": 40, "name": "go.itab.contentTypeOption,github.com/cockroachdb/cockroach/vendor/google.golang.org/api/googleapi.MediaOption"}], "name": "googleapi."}, {"children": [{"children": [{"children": [{"value": 381, "name": "Escape"}, {"value": 180, "name": "Escaped"}, {"value": 188, "name": "Unescaped"}, {"value": 122, "name": "Write"}], "name": "(*pairWriter)."}, {"children": [{"value": 553, "name": "expand"}, {"value": 188, "name": "expandName"}, {"value": 184, "name": "expandString"}], "name": "(*templatePart)."}, {"children": [{"value": 636, "name": "Expand"}], "name": "(*uriTemplate)."}, {"children": [{"value": 16, "name": "1"}], "name": ".gobytes."}, {"value": 236, "name": "Expand"}, {"value": 24, "name": "hex"}, {"value": 334, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1564, "name": "parse"}, {"value": 1220, "name": "parseExpression"}, {"value": 1022, "name": "parseTerm"}, {"value": 307, "name": "pctEncode"}, {"value": 8, "name": "reserved"}, {"value": 8, "name": "unreserved"}, {"value": 8, "name": "validname"}], "name": "internal/uritemplates."}, {"children": [{"children": [{"value": 788, "name": "RoundTrip"}], "name": "(*APIKey)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 40, "name": "go.itab.*APIKey,net/http.RoundTripper"}], "name": "transport."}], "name": "googleapi/"}, {"children": [{"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "internal."}, {"children": [{"children": [{"value": 79, "name": "(github.com/cockroachdb/cockroach/vendor/google.golang.org/api/iterator.next)-fm"}, {"value": 69, "name": "Remaining"}, {"value": 228, "name": "fill"}, {"value": 472, "name": "next"}], "name": "(*PageInfo)."}, {"value": 16, "name": "Done"}, {"value": 8, "name": "NewPageInfo"}, {"value": 16, "name": "errMixed"}, {"value": 271, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 347, "name": "newPageInfo"}], "name": "iterator."}, {"children": [{"children": [{"value": 377, "name": "Apply"}], "name": "(*withScopes)."}, {"children": [{"value": 204, "name": "Apply"}], "name": "(*withUA)."}, {"value": 122, "name": "WithScopes"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 245, "name": "Apply"}], "name": "withScopes."}, {"children": [{"value": 104, "name": "Apply"}], "name": "withUA."}, {"value": 40, "name": "go.itab.withScopes,github.com/cockroachdb/cockroach/vendor/google.golang.org/api/option.ClientOption"}, {"value": 40, "name": "go.itab.withUA,github.com/cockroachdb/cockroach/vendor/google.golang.org/api/option.ClientOption"}], "name": "option."}, {"children": [{"children": [{"value": 363, "name": "MarshalJSON"}], "name": "(*Bucket)."}, {"children": [{"value": 363, "name": "MarshalJSON"}], "name": "(*BucketAccessControl)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketAccessControlProjectTeam)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*BucketAccessControls)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1637, "name": "doRequest"}], "name": "(*BucketAccessControlsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*BucketAccessControlsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1670, "name": "doRequest"}], "name": "(*BucketAccessControlsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*BucketAccessControlsListCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*BucketAccessControlsPatchCall)."}, {"children": [{"value": 360, "name": "Delete"}, {"value": 360, "name": "Get"}, {"value": 351, "name": "Insert"}, {"value": 291, "name": "List"}, {"value": 416, "name": "Patch"}, {"value": 416, "name": "Update"}], "name": "(*BucketAccessControlsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*BucketAccessControlsUpdateCall)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketCors)."}, {"children": [{"value": 342, "name": "MarshalJSON"}], "name": "(*BucketLifecycle)."}, {"children": [{"value": 319, "name": "MarshalJSON"}], "name": "(*BucketLifecycleRule)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketLifecycleRuleAction)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketLifecycleRuleCondition)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketLogging)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketOwner)."}, {"children": [{"value": 342, "name": "MarshalJSON"}], "name": "(*BucketVersioning)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*BucketWebsite)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*Buckets)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 1473, "name": "doRequest"}], "name": "(*BucketsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 265, "name": "Projection"}, {"value": 1548, "name": "doRequest"}], "name": "(*BucketsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*BucketsGetIamPolicyCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 265, "name": "PredefinedDefaultObjectAcl"}, {"value": 265, "name": "Projection"}, {"value": 1403, "name": "doRequest"}], "name": "(*BucketsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 419, "name": "MaxResults"}, {"value": 265, "name": "PageToken"}, {"value": 725, "name": "Pages"}, {"value": 265, "name": "Prefix"}, {"value": 265, "name": "Projection"}, {"value": 1281, "name": "doRequest"}], "name": "(*BucketsListCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 265, "name": "PredefinedDefaultObjectAcl"}, {"value": 265, "name": "Projection"}, {"value": 1670, "name": "doRequest"}], "name": "(*BucketsPatchCall)."}, {"children": [{"value": 291, "name": "Delete"}, {"value": 291, "name": "Get"}, {"value": 291, "name": "GetIamPolicy"}, {"value": 511, "name": "Insert"}, {"value": 449, "name": "List"}, {"value": 351, "name": "Patch"}, {"value": 351, "name": "SetIamPolicy"}, {"value": 661, "name": "TestIamPermissions"}, {"value": 351, "name": "Update"}], "name": "(*BucketsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1670, "name": "doRequest"}], "name": "(*BucketsSetIamPolicyCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*BucketsTestIamPermissionsCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 265, "name": "PredefinedDefaultObjectAcl"}, {"value": 265, "name": "Projection"}, {"value": 1670, "name": "doRequest"}], "name": "(*BucketsUpdateCall)."}, {"children": [{"value": 363, "name": "MarshalJSON"}], "name": "(*Channel)."}, {"children": [{"value": 282, "name": "Stop"}], "name": "(*ChannelsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1403, "name": "doRequest"}], "name": "(*ChannelsStopCall)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ComposeRequest)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ComposeRequestSourceObjects)."}, {"children": [{"value": 342, "name": "MarshalJSON"}], "name": "(*ComposeRequestSourceObjectsObjectPreconditions)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1637, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1670, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsListCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsPatchCall)."}, {"children": [{"value": 360, "name": "Delete"}, {"value": 360, "name": "Get"}, {"value": 351, "name": "Insert"}, {"value": 291, "name": "List"}, {"value": 416, "name": "Patch"}, {"value": 416, "name": "Update"}], "name": "(*DefaultObjectAccessControlsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*DefaultObjectAccessControlsUpdateCall)."}, {"children": [{"value": 340, "name": "MarshalJSON"}], "name": "(*Notification)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*Notifications)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1637, "name": "doRequest"}], "name": "(*NotificationsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*NotificationsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 1670, "name": "doRequest"}], "name": "(*NotificationsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*NotificationsListCall)."}, {"children": [{"value": 360, "name": "Delete"}, {"value": 360, "name": "Get"}, {"value": 351, "name": "Insert"}, {"value": 291, "name": "List"}], "name": "(*NotificationsService)."}, {"children": [{"value": 340, "name": "MarshalJSON"}], "name": "(*Object)."}, {"children": [{"value": 340, "name": "MarshalJSON"}], "name": "(*ObjectAccessControl)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ObjectAccessControlProjectTeam)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*ObjectAccessControls)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 1801, "name": "doRequest"}], "name": "(*ObjectAccessControlsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1876, "name": "doRequest"}], "name": "(*ObjectAccessControlsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*ObjectAccessControlsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*ObjectAccessControlsListCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 1998, "name": "doRequest"}], "name": "(*ObjectAccessControlsPatchCall)."}, {"children": [{"value": 428, "name": "Delete"}, {"value": 428, "name": "Get"}, {"value": 416, "name": "Insert"}, {"value": 360, "name": "List"}, {"value": 490, "name": "Patch"}, {"value": 490, "name": "Update"}], "name": "(*ObjectAccessControlsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 1998, "name": "doRequest"}], "name": "(*ObjectAccessControlsUpdateCall)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ObjectCustomerEncryption)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ObjectOwner)."}, {"children": [{"value": 328, "name": "MarshalJSON"}], "name": "(*Objects)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 265, "name": "DestinationPredefinedAcl"}, {"value": 1046, "name": "Do"}, {"value": 336, "name": "Download"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 1834, "name": "doRequest"}], "name": "(*ObjectsComposeCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 265, "name": "DestinationPredefinedAcl"}, {"value": 1046, "name": "Do"}, {"value": 336, "name": "Download"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 419, "name": "IfSourceGenerationMatch"}, {"value": 419, "name": "IfSourceGenerationNotMatch"}, {"value": 419, "name": "IfSourceMetagenerationMatch"}, {"value": 419, "name": "IfSourceMetagenerationNotMatch"}, {"value": 265, "name": "Projection"}, {"value": 419, "name": "SourceGeneration"}, {"value": 2162, "name": "doRequest"}], "name": "(*ObjectsCopyCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 337, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 1637, "name": "doRequest"}], "name": "(*ObjectsDeleteCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 336, "name": "Download"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 265, "name": "Projection"}, {"value": 1712, "name": "doRequest"}], "name": "(*ObjectsGetCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*ObjectsGetIamPolicyCall)."}, {"children": [{"value": 265, "name": "ContentEncoding"}, {"value": 114, "name": "Context"}, {"value": 2203, "name": "Do"}, {"children": [{"value": 84, "name": "func1"}], "name": "Do."}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 848, "name": "Media"}, {"value": 265, "name": "Name"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 107, "name": "ProgressUpdater"}, {"value": 265, "name": "Projection"}, {"value": 974, "name": "ResumableMedia"}, {"value": 2786, "name": "doRequest"}], "name": "(*ObjectsInsertCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 265, "name": "Delimiter"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 419, "name": "MaxResults"}, {"value": 265, "name": "PageToken"}, {"value": 725, "name": "Pages"}, {"value": 265, "name": "Prefix"}, {"value": 265, "name": "Projection"}, {"value": 418, "name": "Versions"}, {"value": 1548, "name": "doRequest"}], "name": "(*ObjectsListCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 265, "name": "Projection"}, {"value": 1834, "name": "doRequest"}], "name": "(*ObjectsPatchCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 265, "name": "DestinationPredefinedAcl"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 419, "name": "IfSourceGenerationMatch"}, {"value": 419, "name": "IfSourceGenerationNotMatch"}, {"value": 419, "name": "IfSourceMetagenerationMatch"}, {"value": 419, "name": "IfSourceMetagenerationNotMatch"}, {"value": 419, "name": "MaxBytesRewrittenPerCall"}, {"value": 265, "name": "Projection"}, {"value": 265, "name": "RewriteToken"}, {"value": 419, "name": "SourceGeneration"}, {"value": 2162, "name": "doRequest"}], "name": "(*ObjectsRewriteCall)."}, {"children": [{"value": 416, "name": "Compose"}, {"value": 564, "name": "Copy"}, {"value": 360, "name": "Delete"}, {"value": 360, "name": "Get"}, {"value": 360, "name": "GetIamPolicy"}, {"value": 351, "name": "Insert"}, {"value": 291, "name": "List"}, {"value": 416, "name": "Patch"}, {"value": 564, "name": "Rewrite"}, {"value": 416, "name": "SetIamPolicy"}, {"value": 735, "name": "TestIamPermissions"}, {"value": 416, "name": "Update"}, {"value": 351, "name": "WatchAll"}], "name": "(*ObjectsService)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 1834, "name": "doRequest"}], "name": "(*ObjectsSetIamPolicyCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1712, "name": "doRequest"}], "name": "(*ObjectsTestIamPermissionsCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1046, "name": "Do"}, {"value": 336, "name": "Download"}, {"value": 338, "name": "Fields"}, {"value": 419, "name": "Generation"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "IfGenerationMatch"}, {"value": 419, "name": "IfGenerationNotMatch"}, {"value": 419, "name": "IfMetagenerationMatch"}, {"value": 419, "name": "IfMetagenerationNotMatch"}, {"value": 265, "name": "PredefinedAcl"}, {"value": 265, "name": "Projection"}, {"value": 1834, "name": "doRequest"}], "name": "(*ObjectsUpdateCall)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 265, "name": "Delimiter"}, {"value": 1046, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 419, "name": "MaxResults"}, {"value": 265, "name": "PageToken"}, {"value": 265, "name": "Prefix"}, {"value": 265, "name": "Projection"}, {"value": 418, "name": "Versions"}, {"value": 1670, "name": "doRequest"}], "name": "(*ObjectsWatchAllCall)."}, {"children": [{"value": 348, "name": "MarshalJSON"}], "name": "(*Policy)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*PolicyBindings)."}, {"children": [{"value": 114, "name": "Context"}, {"value": 1037, "name": "Do"}, {"value": 338, "name": "Fields"}, {"value": 173, "name": "Header"}, {"value": 114, "name": "IfNoneMatch"}, {"value": 1548, "name": "doRequest"}], "name": "(*ProjectsServiceAccountGetCall)."}, {"children": [{"value": 291, "name": "Get"}], "name": "(*ProjectsServiceAccountService)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*RewriteResponse)."}, {"children": [{"value": 322, "name": "MarshalJSON"}], "name": "(*ServiceAccount)."}, {"children": [{"value": 345, "name": "MarshalJSON"}], "name": "(*TestIamPermissionsResponse)."}, {"value": 1560, "name": "New"}, {"value": 149, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "storage/v1."}, {"children": [{"children": [{"value": 233, "name": "RoundTrip"}], "name": "(*userAgentTransport)."}, {"value": 2064, "name": "NewHTTPClient"}, {"value": 8, "name": "appengineUrlfetchHook"}, {"value": 139, "name": "baseTransport"}, {"value": 149, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 971, "name": "serviceAcctTokenSource"}, {"children": [{"value": 1136, "name": "RoundTrip"}], "name": "userAgentTransport."}, {"value": 40, "name": "go.itab.userAgentTransport,net/http.RoundTripper"}], "name": "transport."}], "name": "api/"}, {"children": [{"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 47, "name": "GetKind"}, {"value": 48, "name": "GetPath"}, {"value": 1, "name": "ProtoMessage"}, {"value": 165, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*CustomHttpPattern)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetRules"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Http)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetAdditionalBindings"}, {"value": 48, "name": "GetBody"}, {"value": 76, "name": "GetCustom"}, {"value": 93, "name": "GetDelete"}, {"value": 93, "name": "GetGet"}, {"value": 93, "name": "GetPatch"}, {"value": 48, "name": "GetPattern"}, {"value": 93, "name": "GetPost"}, {"value": 93, "name": "GetPut"}, {"value": 47, "name": "GetSelector"}, {"value": 1, "name": "ProtoMessage"}, {"value": 175, "name": "Reset"}, {"value": 92, "name": "String"}, {"value": 520, "name": "XXX_OneofFuncs"}], "name": "(*HttpRule)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Custom)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Delete)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Get)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Patch)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Post)."}, {"children": [{"value": 1, "name": "isHttpRule_Pattern"}], "name": "(*HttpRule_Put)."}, {"value": 8, "name": "E_Http"}, {"value": 1325, "name": "_HttpRule_OneofMarshaler"}, {"value": 1344, "name": "_HttpRule_OneofSizer"}, {"value": 2253, "name": "_HttpRule_OneofUnmarshaler"}, {"value": 24, "name": "fileDescriptor0"}, {"value": 24, "name": "fileDescriptor1"}, {"value": 126, "name": "init"}, {"children": [{"value": 62, "name": "1"}, {"value": 210, "name": "2"}, {"value": 191, "name": "3"}, {"value": 210, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 32, "name": "statictmp_109"}, {"value": 8, "name": "statictmp_115"}, {"value": 88, "name": "statictmp_123"}, {"value": 208, "name": "statictmp_124"}, {"value": 359, "name": "statictmp_125"}, {"value": 8, "name": "statictmp_13"}, {"value": 24, "name": "statictmp_3"}, {"value": 8, "name": "statictmp_7"}, {"value": 56, "name": "go.itab.*CustomHttpPattern,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Http,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*HttpRule,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 40, "name": "go.itab.*HttpRule_Custom,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}, {"value": 40, "name": "go.itab.*HttpRule_Delete,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}, {"value": 40, "name": "go.itab.*HttpRule_Get,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}, {"value": 40, "name": "go.itab.*HttpRule_Patch,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}, {"value": 40, "name": "go.itab.*HttpRule_Post,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}, {"value": 40, "name": "go.itab.*HttpRule_Put,github.com/cockroachdb/cockroach/vendor/google.golang.org/genproto/googleapis/api/annotations.isHttpRule_Pattern"}], "name": "api/annotations."}, {"children": [{"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetMembers"}, {"value": 47, "name": "GetRole"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Binding)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 26, "name": "GetAction"}, {"value": 48, "name": "GetMember"}, {"value": 48, "name": "GetRole"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*BindingDelta)."}, {"children": [{"value": 246, "name": "EnumDescriptor"}, {"value": 184, "name": "String"}], "name": "(*BindingDelta_Action)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 47, "name": "GetResource"}, {"value": 1, "name": "ProtoMessage"}, {"value": 98, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*GetIamPolicyRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetBindings"}, {"value": 66, "name": "GetEtag"}, {"value": 26, "name": "GetVersion"}, {"value": 1, "name": "ProtoMessage"}, {"value": 179, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*Policy)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetBindingDeltas"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*PolicyDelta)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 30, "name": "GetPolicy"}, {"value": 47, "name": "GetResource"}, {"value": 1, "name": "ProtoMessage"}, {"value": 150, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*SetIamPolicyRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 66, "name": "GetPermissions"}, {"value": 47, "name": "GetResource"}, {"value": 1, "name": "ProtoMessage"}, {"value": 184, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*TestIamPermissionsRequest)."}, {"children": [{"value": 141, "name": "Descriptor"}, {"value": 65, "name": "GetPermissions"}, {"value": 1, "name": "ProtoMessage"}, {"value": 109, "name": "Reset"}, {"value": 92, "name": "String"}], "name": "(*TestIamPermissionsResponse)."}, {"children": [{"value": 141, "name": "EnumDescriptor"}, {"value": 90, "name": "String"}], "name": "BindingDelta_Action."}, {"value": 8, "name": "BindingDelta_Action_name"}, {"value": 8, "name": "BindingDelta_Action_value"}, {"value": 24, "name": "fileDescriptor0"}, {"value": 24, "name": "fileDescriptor1"}, {"value": 589, "name": "init"}, {"children": [{"value": 237, "name": "1"}, {"value": 210, "name": "2"}, {"value": 286, "name": "3"}, {"value": 210, "name": "4"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "statictmp_0"}, {"value": 8, "name": "statictmp_100"}, {"value": 8, "name": "statictmp_12"}, {"value": 396, "name": "statictmp_121"}, {"value": 387, "name": "statictmp_122"}, {"value": 12, "name": "statictmp_124"}, {"value": 48, "name": "statictmp_125"}, {"value": 48, "name": "statictmp_129"}, {"value": 12, "name": "statictmp_130"}, {"value": 16, "name": "statictmp_154"}, {"value": 8, "name": "statictmp_18"}, {"value": 24, "name": "statictmp_20"}, {"value": 8, "name": "statictmp_24"}, {"value": 8, "name": "statictmp_6"}, {"value": 16, "name": "statictmp_76"}, {"value": 16, "name": "statictmp_8"}, {"value": 8, "name": "statictmp_82"}, {"value": 8, "name": "statictmp_88"}, {"value": 24, "name": "statictmp_90"}, {"value": 8, "name": "statictmp_94"}, {"value": 56, "name": "go.itab.*Binding,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*BindingDelta,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*GetIamPolicyRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*Policy,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*PolicyDelta,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*SetIamPolicyRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TestIamPermissionsRequest,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}, {"value": 56, "name": "go.itab.*TestIamPermissionsResponse,github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Message"}], "name": "iam/v1."}], "name": "genproto/googleapis/"}, {"children": [{"children": [{"value": 217, "name": "backoff"}], "name": "(*BackoffConfig)."}, {"children": [{"value": 504, "name": "Close"}, {"value": 273, "name": "getMethodConfig"}, {"value": 1347, "name": "getTransport"}, {"value": 2202, "name": "lbWatcher"}, {"value": 2488, "name": "resetAddrConn"}, {"children": [{"value": 493, "name": "func1"}], "name": "resetAddrConn."}, {"value": 571, "name": "scWatcher"}], "name": "(*ClientConn)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*ConnectivityState)."}, {"children": [{"value": 1508, "name": "GetServiceInfo"}, {"value": 871, "name": "GracefulStop"}, {"value": 549, "name": "RegisterService"}, {"value": 1546, "name": "Serve"}, {"children": [{"value": 272, "name": "func1"}], "name": "Serve."}, {"value": 464, "name": "ServeHTTP"}, {"value": 712, "name": "Stop"}, {"value": 277, "name": "addConn"}, {"value": 135, "name": "errorf"}, {"value": 1259, "name": "handleRawConn"}, {"value": 4961, "name": "handleStream"}, {"value": 135, "name": "printf"}, {"value": 3026, "name": "processStreamingRPC"}, {"children": [{"value": 454, "name": "func1"}, {"value": 605, "name": "func2"}], "name": "processStreamingRPC."}, {"value": 7139, "name": "processUnaryRPC"}, {"children": [{"value": 454, "name": "func1"}, {"value": 464, "name": "func2"}, {"value": 1943, "name": "func3"}], "name": "processUnaryRPC."}, {"value": 1489, "name": "register"}, {"value": 246, "name": "removeConn"}, {"value": 826, "name": "sendResponse"}, {"value": 1130, "name": "serveHTTP2Transport"}, {"value": 535, "name": "serveStreams"}, {"children": [{"value": 181, "name": "func1"}, {"children": [{"value": 211, "name": "1"}], "name": "func1."}, {"value": 284, "name": "func2"}], "name": "serveStreams."}, {"value": 407, "name": "serveUsingHandler"}, {"value": 322, "name": "testingCloseConns"}, {"value": 479, "name": "traceInfo"}, {"value": 250, "name": "useTransportAuthenticator"}], "name": "(*Server)."}, {"children": [{"value": 135, "name": "errorf"}, {"value": 135, "name": "printf"}, {"value": 3373, "name": "resetTransport"}, {"value": 1207, "name": "tearDown"}, {"value": 2006, "name": "transportMonitor"}, {"value": 1063, "name": "wait"}], "name": "(*addrConn)."}, {"children": [{"value": 176, "name": "after"}, {"value": 172, "name": "before"}], "name": "(*afterCall)."}, {"children": [{"value": 647, "name": "CloseSend"}, {"children": [{"value": 89, "name": "func1"}], "name": "CloseSend."}, {"value": 28, "name": "Context"}, {"value": 286, "name": "Header"}, {"value": 2339, "name": "RecvMsg"}, {"children": [{"value": 470, "name": "func1"}, {"value": 89, "name": "func2"}], "name": "RecvMsg."}, {"value": 1233, "name": "SendMsg"}, {"children": [{"value": 535, "name": "func1"}, {"value": 74, "name": "func2"}], "name": "SendMsg."}, {"value": 74, "name": "Trailer"}, {"value": 194, "name": "closeTransportStream"}, {"value": 939, "name": "finish"}, {"children": [{"value": 67, "name": "func1"}], "name": "finish."}], "name": "(*clientStream)."}, {"children": [{"value": 172, "name": "Error"}, {"value": 162, "name": "Temporary"}, {"value": 161, "name": "Timeout"}], "name": "(*downErr)."}, {"children": [{"value": 694, "name": "String"}], "name": "(*firstLine)."}, {"children": [{"value": 119, "name": "String"}], "name": "(*fmtStringer)."}, {"children": [{"value": 1039, "name": "recvMsg"}], "name": "(*parser)."}, {"children": [{"value": 203, "name": "String"}], "name": "(*payload)."}, {"children": [{"value": 231, "name": "Marshal"}, {"value": 175, "name": "String"}, {"value": 231, "name": "Unmarshal"}], "name": "(*protoCodec)."}, {"children": [{"value": 262, "name": "Error"}], "name": "(*rpcError)."}, {"children": [{"value": 28, "name": "Context"}, {"value": 854, "name": "RecvMsg"}, {"children": [{"value": 692, "name": "func1"}], "name": "RecvMsg."}, {"value": 107, "name": "SendHeader"}, {"value": 1036, "name": "SendMsg"}, {"children": [{"value": 606, "name": "func1"}, {"value": 71, "name": "func2"}], "name": "SendMsg."}, {"value": 142, "name": "SetHeader"}, {"value": 101, "name": "SetTrailer"}], "name": "(*serverStream)."}, {"children": [{"value": 171, "name": "String"}], "name": "(*stringer)."}, {"children": [{"value": 256, "name": "backoff"}], "name": "BackoffConfig."}, {"children": [{"value": 459, "name": "String"}], "name": "ConnectivityState."}, {"value": 148, "name": "Creds"}, {"children": [{"value": 96, "name": "func1"}], "name": "Creds."}, {"value": 32, "name": "DefaultBackoffConfig"}, {"value": 209, "name": "Dial"}, {"value": 2870, "name": "DialContext"}, {"children": [{"value": 298, "name": "func1"}, {"value": 877, "name": "func2"}], "name": "DialContext."}, {"value": 1, "name": "EnableTracing"}, {"value": 16, "name": "ErrClientConnClosing"}, {"value": 16, "name": "ErrClientConnTimeout"}, {"value": 16, "name": "ErrServerStopped"}, {"value": 193, "name": "ErrorDesc"}, {"value": 292, "name": "Errorf"}, {"value": 157, "name": "Header"}, {"children": [{"value": 90, "name": "func1"}], "name": "Header."}, {"value": 461, "name": "Invoke"}, {"value": 89, "name": "MaxConcurrentStreams"}, {"children": [{"value": 12, "name": "func1"}], "name": "MaxConcurrentStreams."}, {"value": 91, "name": "MaxMsgSize"}, {"children": [{"value": 14, "name": "func1"}], "name": "MaxMsgSize."}, {"value": 426, "name": "NewClientStream"}, {"value": 1554, "name": "NewServer"}, {"value": 148, "name": "RPCCompressor"}, {"children": [{"value": 97, "name": "func1"}], "name": "RPCCompressor."}, {"value": 148, "name": "RPCDecompressor"}, {"children": [{"value": 97, "name": "func1"}], "name": "RPCDecompressor."}, {"value": 157, "name": "Trailer"}, {"children": [{"value": 90, "name": "func1"}], "name": "Trailer."}, {"value": 224, "name": "WithBackoffConfig"}, {"value": 94, "name": "WithBackoffMaxDelay"}, {"value": 13, "name": "WithBlock"}, {"children": [{"value": 10, "name": "func1"}], "name": "WithBlock."}, {"value": 148, "name": "WithCompressor"}, {"children": [{"value": 97, "name": "func1"}], "name": "WithCompressor."}, {"value": 148, "name": "WithDecompressor"}, {"children": [{"value": 97, "name": "func1"}], "name": "WithDecompressor."}, {"value": 141, "name": "WithDialer"}, {"children": [{"value": 196, "name": "func1"}, {"children": [{"value": 384, "name": "1"}], "name": "func1."}], "name": "WithDialer."}, {"value": 13, "name": "WithInsecure"}, {"children": [{"value": 10, "name": "func1"}], "name": "WithInsecure."}, {"value": 108, "name": "WithKeepaliveParams"}, {"children": [{"value": 38, "name": "func1"}], "name": "WithKeepaliveParams."}, {"value": 148, "name": "WithTransportCredentials"}, {"children": [{"value": 106, "name": "func1"}], "name": "WithTransportCredentials."}, {"children": [{"value": 65, "name": "after"}, {"value": 19, "name": "before"}], "name": "afterCall."}, {"value": 574, "name": "checkRecvPayload"}, {"value": 1045, "name": "convertCode"}, {"value": 80, "name": "defaultCallInfo"}, {"value": 8, "name": "defaultMaxMsgSize"}, {"children": [{"value": 21, "name": "Error"}, {"value": 10, "name": "Temporary"}, {"value": 10, "name": "Timeout"}], "name": "downErr."}, {"value": 147, "name": "downErrorf"}, {"value": 1321, "name": "encode"}, {"value": 16, "name": "errConnClosing"}, {"value": 16, "name": "errConnDrain"}, {"value": 16, "name": "errConnUnavailable"}, {"value": 16, "name": "errCredentialsConflict"}, {"value": 16, "name": "errNetworkIO"}, {"value": 16, "name": "errNoTransportSecurity"}, {"value": 16, "name": "errTransportCredentialsMissing"}, {"value": 1123, "name": "init"}, {"children": [{"value": 161, "name": "1"}, {"children": [{"value": 105, "name": "func1"}, {"value": 100, "name": "func2"}], "name": "1."}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 5443, "name": "invoke"}, {"children": [{"value": 119, "name": "func1"}, {"value": 386, "name": "func2"}, {"value": 309, "name": "func3"}], "name": "invoke."}, {"value": 404, "name": "methodFamily"}, {"value": 8, "name": "minConnectTimeout"}, {"value": 5485, "name": "newClientStream"}, {"children": [{"value": 292, "name": "func1"}, {"value": 222, "name": "func2"}, {"value": 1051, "name": "func3"}], "name": "newClientStream."}, {"children": [{"value": 306, "name": "String"}], "name": "payload."}, {"children": [{"value": 163, "name": "Marshal"}, {"value": 22, "name": "String"}, {"value": 163, "name": "Unmarshal"}], "name": "protoCodec."}, {"value": 1533, "name": "recv"}, {"value": 1139, "name": "recvResponse"}, {"children": [{"value": 225, "name": "func1"}], "name": "recvResponse."}, {"value": 1217, "name": "sendRequest"}, {"children": [{"value": 225, "name": "func1"}], "name": "sendRequest."}, {"children": [{"value": 21, "name": "String"}], "name": "stringer."}, {"value": 1751, "name": "toRPCErr"}, {"value": 148, "name": "withBackoff"}, {"children": [{"value": 97, "name": "func1"}], "name": "withBackoff."}, {"value": 40, "name": "go.itab.*Server,net/http.Handler"}, {"value": 80, "name": "go.itab.*clientStream,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.ClientStream"}, {"value": 40, "name": "go.itab.*firstLine,fmt.Stringer"}, {"value": 40, "name": "go.itab.*fmtStringer,fmt.Stringer"}, {"value": 40, "name": "go.itab.*payload,fmt.Stringer"}, {"value": 40, "name": "go.itab.*rpcError,error"}, {"value": 80, "name": "go.itab.*serverStream,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.ServerStream"}, {"value": 40, "name": "go.itab.BackoffConfig,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.backoffStrategy"}, {"value": 48, "name": "go.itab.afterCall,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.CallOption"}, {"value": 40, "name": "go.itab.downErr,error"}, {"value": 56, "name": "go.itab.protoCodec,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc.Codec"}, {"value": 40, "name": "go.itab.stringer,fmt.Stringer"}], "name": "grpc."}, {"children": [{"children": [{"children": [{"value": 184, "name": "String"}], "name": "(*Code)."}, {"children": [{"value": 313, "name": "String"}], "name": "Code."}, {"value": 18, "name": "_Code_index"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "codes."}, {"children": [{"children": [{"value": 243, "name": "AuthType"}], "name": "(*TLSInfo)."}, {"children": [{"value": 1288, "name": "ClientHandshake"}, {"children": [{"value": 116, "name": "func1"}], "name": "ClientHandshake."}, {"value": 83, "name": "Clone"}, {"value": 407, "name": "Info"}, {"value": 128, "name": "OverrideServerName"}, {"value": 640, "name": "ServerHandshake"}], "name": "(*tlsCreds)."}, {"value": 16, "name": "ErrConnDispatched"}, {"value": 220, "name": "NewClientTLSFromCert"}, {"value": 235, "name": "NewTLS"}, {"children": [{"value": 28, "name": "AuthType"}], "name": "TLSInfo."}, {"value": 24, "name": "alpnProtoStr"}, {"value": 111, "name": "cloneTLSConfig"}, {"value": 214, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "statictmp_55"}, {"children": [{"value": 170, "name": "Info"}], "name": "tlsCreds."}, {"value": 72, "name": "go.itab.*tlsCreds,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/credentials.TransportCredentials"}, {"value": 40, "name": "go.itab.TLSInfo,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/credentials.AuthInfo"}], "name": "credentials."}, {"children": [{"value": 121, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "credentials/oauth."}, {"children": [{"value": 120, "name": "Fatalf"}, {"value": 100, "name": "Print"}, {"value": 120, "name": "Printf"}, {"value": 100, "name": "Println"}, {"value": 207, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 16, "name": "logger"}], "name": "grpclog."}, {"children": [{"value": 8, "name": "TestingCloseConns"}, {"value": 8, "name": "TestingUseHandlerImpl"}], "name": "internal."}, {"children": [{"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "keepalive."}, {"children": [{"children": [{"value": 176, "name": "Copy"}, {"value": 174, "name": "Len"}], "name": "(*MD)."}, {"value": 819, "name": "DecodeKeyValue"}, {"value": 167, "name": "FromContext"}, {"value": 747, "name": "Join"}, {"children": [{"value": 107, "name": "Copy"}, {"value": 23, "name": "Len"}], "name": "MD."}, {"value": 165, "name": "NewContext"}, {"value": 956, "name": "Pairs"}, {"value": 391, "name": "encodeKeyValue"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "metadata."}, {"children": [{"value": 167, "name": "FromContext"}, {"value": 165, "name": "NewContext"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "peer."}, {"children": [{"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*Begin)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isConnStats"}], "name": "(*ConnBegin)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isConnStats"}], "name": "(*ConnEnd)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*End)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*InHeader)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*InPayload)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*InTrailer)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*OutHeader)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*OutPayload)."}, {"children": [{"value": 13, "name": "IsClient"}, {"value": 1, "name": "isRPCStats"}], "name": "(*OutTrailer)."}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "go.itab.*Begin,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*ConnBegin,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.ConnStats"}, {"value": 48, "name": "go.itab.*ConnEnd,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.ConnStats"}, {"value": 48, "name": "go.itab.*End,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*InHeader,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*InPayload,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*InTrailer,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*OutHeader,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*OutPayload,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}, {"value": 48, "name": "go.itab.*OutTrailer,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/stats.RPCStats"}], "name": "stats."}, {"children": [{"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "tap."}, {"children": [{"children": [{"value": 214, "name": "Error"}, {"value": 328, "name": "Origin"}, {"value": 199, "name": "Temporary"}], "name": "(*ConnectionError)."}, {"children": [{"value": 24, "name": "Context"}, {"value": 15, "name": "Done"}, {"value": 15, "name": "GoAway"}, {"value": 663, "name": "Header"}, {"value": 24, "name": "Method"}, {"value": 244, "name": "Read"}, {"value": 24, "name": "RecvCompress"}, {"value": 24, "name": "ServerTransport"}, {"value": 440, "name": "SetHeader"}, {"value": 104, "name": "SetSendCompress"}, {"value": 382, "name": "SetTrailer"}, {"value": 16, "name": "StatusCode"}, {"value": 30, "name": "StatusDesc"}, {"value": 188, "name": "Trailer"}, {"value": 201, "name": "write"}], "name": "(*Stream)."}, {"children": [{"value": 202, "name": "Error"}], "name": "(*StreamError)."}, {"children": [{"value": 3896, "name": "processHeaderField"}], "name": "(*decodeState)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*flushIO)."}, {"children": [{"value": 22, "name": "adjustNumWriters"}, {"value": 84, "name": "flushWrite"}, {"value": 104, "name": "readFrame"}, {"value": 237, "name": "writeContinuation"}, {"value": 237, "name": "writeData"}, {"value": 236, "name": "writeGoAway"}, {"value": 228, "name": "writeHeaders"}, {"value": 200, "name": "writePing"}, {"value": 197, "name": "writeRSTStream"}, {"value": 211, "name": "writeSettings"}, {"value": 181, "name": "writeSettingsAck"}, {"value": 197, "name": "writeWindowUpdate"}], "name": "(*framer)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*goAway)."}, {"children": [{"value": 965, "name": "Close"}, {"value": 730, "name": "CloseStream"}, {"children": [{"value": 183, "name": "func1"}], "name": "CloseStream."}, {"value": 18, "name": "Error"}, {"value": 18, "name": "GoAway"}, {"value": 616, "name": "GracefulClose"}, {"value": 10143, "name": "NewStream"}, {"value": 2685, "name": "Write"}, {"value": 560, "name": "applySettings"}, {"value": 1638, "name": "controller"}, {"value": 265, "name": "getStream"}, {"value": 2586, "name": "handleData"}, {"value": 1038, "name": "handleGoAway"}, {"value": 194, "name": "handlePing"}, {"value": 994, "name": "handleRSTStream"}, {"value": 290, "name": "handleSettings"}, {"children": [{"value": 250, "name": "func1"}], "name": "handleSettings."}, {"value": 240, "name": "handleWindowUpdate"}, {"value": 1273, "name": "keepalive"}, {"value": 1697, "name": "newStream"}, {"children": [{"value": 77, "name": "func1"}], "name": "newStream."}, {"value": 344, "name": "notifyError"}, {"value": 1511, "name": "operateHeaders"}, {"children": [{"value": 429, "name": "func1"}], "name": "operateHeaders."}, {"value": 1854, "name": "reader"}, {"value": 429, "name": "updateWindow"}], "name": "(*http2Client)."}, {"children": [{"value": 695, "name": "Close"}, {"value": 105, "name": "Drain"}, {"value": 3519, "name": "HandleStreams"}, {"value": 24, "name": "RemoteAddr"}, {"value": 2619, "name": "Write"}, {"value": 2698, "name": "WriteHeader"}, {"value": 2890, "name": "WriteStatus"}, {"value": 449, "name": "applySettings"}, {"value": 511, "name": "closeStream"}, {"value": 1871, "name": "controller"}, {"value": 355, "name": "getStream"}, {"value": 2219, "name": "handleData"}, {"value": 194, "name": "handlePing"}, {"value": 125, "name": "handleRSTStream"}, {"value": 290, "name": "handleSettings"}, {"children": [{"value": 250, "name": "func1"}], "name": "handleSettings."}, {"value": 240, "name": "handleWindowUpdate"}, {"value": 5123, "name": "operateHeaders"}, {"children": [{"value": 77, "name": "func1"}], "name": "operateHeaders."}, {"value": 429, "name": "updateWindow"}, {"value": 973, "name": "writeHeaders"}], "name": "(*http2Server)."}, {"children": [{"value": 459, "name": "onData"}, {"value": 250, "name": "onRead"}, {"value": 172, "name": "resetPendingData"}], "name": "(*inFlow)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*ping)."}, {"children": [{"value": 327, "name": "add"}], "name": "(*quotaPool)."}, {"children": [{"value": 333, "name": "load"}, {"value": 493, "name": "put"}], "name": "(*recvBuffer)."}, {"children": [{"value": 1724, "name": "Read"}, {"children": [{"value": 101, "name": "func1"}], "name": "Read."}], "name": "(*recvBufferReader)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*recvMsg)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*resetStream)."}, {"children": [{"value": 63, "name": "(github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.closeCloseChanOnce)-fm"}, {"value": 120, "name": "Close"}, {"value": 109, "name": "Drain"}, {"value": 2158, "name": "HandleStreams"}, {"children": [{"value": 344, "name": "func1"}, {"value": 1, "name": "func2"}, {"value": 775, "name": "func3"}], "name": "HandleStreams."}, {"value": 125, "name": "RemoteAddr"}, {"value": 376, "name": "Write"}, {"children": [{"value": 221, "name": "func1"}], "name": "Write."}, {"value": 297, "name": "WriteHeader"}, {"children": [{"value": 1345, "name": "func1"}], "name": "WriteHeader."}, {"value": 355, "name": "WriteStatus"}, {"children": [{"value": 1842, "name": "func1"}], "name": "WriteStatus."}, {"value": 369, "name": "do"}, {"value": 317, "name": "runStream"}, {"value": 461, "name": "writeCommonHeaders"}], "name": "(*serverHandlerTransport)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*settings)."}, {"children": [{"value": 193, "name": "Network"}, {"value": 171, "name": "String"}], "name": "(*strAddr)."}, {"children": [{"value": 1, "name": "item"}], "name": "(*windowUpdate)."}, {"children": [{"value": 24, "name": "1"}], "name": ".gobytes."}, {"children": [{"value": 196, "name": "Error"}, {"value": 185, "name": "Origin"}, {"value": 10, "name": "Temporary"}], "name": "ConnectionError."}, {"value": 746, "name": "ContextErr"}, {"value": 40, "name": "ErrConnClosing"}, {"value": 16, "name": "ErrIllegalHeaderWrite"}, {"value": 24, "name": "ErrStreamDrain"}, {"value": 251, "name": "NewClientTransport"}, {"value": 4378, "name": "NewServerHandlerTransport"}, {"value": 126, "name": "NewServerTransport"}, {"children": [{"value": 260, "name": "Error"}], "name": "StreamError."}, {"value": 24, "name": "clientPreface"}, {"value": 324, "name": "connectionErrorf"}, {"value": 183, "name": "decodeGrpcMessage"}, {"value": 491, "name": "decodeGrpcMessageUnchecked"}, {"value": 800, "name": "decodeTimeout"}, {"value": 292, "name": "dial"}, {"value": 293, "name": "dialContext"}, {"value": 183, "name": "encodeGrpcMessage"}, {"value": 462, "name": "encodeGrpcMessageUnchecked"}, {"value": 1092, "name": "encodeTimeout"}, {"value": 269, "name": "handleMalformedHTTP2"}, {"value": 8, "name": "http2ErrConvTab"}, {"value": 1060, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 425, "name": "isTemporary"}, {"value": 854, "name": "mapRecvMsgError"}, {"value": 165, "name": "newContextWithStream"}, {"value": 1231, "name": "newFramer"}, {"value": 7359, "name": "newHTTP2Client"}, {"children": [{"value": 81, "name": "func1"}], "name": "newHTTP2Client."}, {"value": 3639, "name": "newHTTP2Server"}, {"value": 56, "name": "statictmp_1422"}, {"value": 56, "name": "statictmp_1423"}, {"value": 20, "name": "statictmp_1427"}, {"value": 20, "name": "statictmp_1428"}, {"value": 8, "name": "statictmp_222"}, {"value": 8, "name": "statictmp_348"}, {"value": 40, "name": "statictmp_349"}, {"value": 40, "name": "statictmp_353"}, {"value": 40, "name": "statictmp_355"}, {"value": 8, "name": "statictmp_689"}, {"value": 40, "name": "statictmp_925"}, {"value": 40, "name": "statictmp_926"}, {"value": 40, "name": "statictmp_953"}, {"value": 40, "name": "statictmp_954"}, {"value": 8, "name": "statusCodeConvTab"}, {"children": [{"value": 51, "name": "Network"}, {"value": 21, "name": "String"}], "name": "strAddr."}, {"value": 137, "name": "streamErrorf"}, {"value": 1074, "name": "wait"}, {"value": 40, "name": "go.itab.*Stream,io.Reader"}, {"value": 40, "name": "go.itab.*flushIO,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 40, "name": "go.itab.*goAway,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 88, "name": "go.itab.*http2Client,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.ClientTransport"}, {"value": 88, "name": "go.itab.*http2Server,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.ServerTransport"}, {"value": 40, "name": "go.itab.*ping,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 40, "name": "go.itab.*recvBufferReader,io.Reader"}, {"value": 40, "name": "go.itab.*recvMsg,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 40, "name": "go.itab.*resetStream,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 88, "name": "go.itab.*serverHandlerTransport,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.ServerTransport"}, {"value": 40, "name": "go.itab.*settings,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 40, "name": "go.itab.*windowUpdate,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/transport.item"}, {"value": 40, "name": "go.itab.ConnectionError,error"}, {"value": 40, "name": "go.itab.StreamError,error"}, {"value": 48, "name": "go.itab.strAddr,net.Addr"}], "name": "transport."}], "name": "grpc/"}], "name": "google.golang.org/"}, {"children": [{"children": [{"value": 266, "name": "Error"}], "name": "(*TypeError)."}, {"children": [{"value": 657, "name": "alias"}, {"value": 744, "name": "callUnmarshaler"}, {"children": [{"value": 531, "name": "func1"}], "name": "callUnmarshaler."}, {"value": 205, "name": "document"}, {"value": 2795, "name": "mapping"}, {"value": 2117, "name": "mappingSlice"}, {"value": 2309, "name": "mappingStruct"}, {"value": 562, "name": "merge"}, {"value": 935, "name": "prepare"}, {"value": 5398, "name": "scalar"}, {"value": 1252, "name": "sequence"}, {"value": 1423, "name": "terror"}, {"value": 643, "name": "unmarshal"}], "name": "(*decoder)."}, {"children": [{"value": 193, "name": "boolv"}, {"value": 207, "name": "destroy"}, {"value": 123, "name": "emit"}, {"value": 569, "name": "emitScalar"}, {"value": 436, "name": "finish"}, {"value": 405, "name": "floatv"}, {"value": 187, "name": "intv"}, {"value": 192, "name": "itemsv"}, {"children": [{"value": 618, "name": "func1"}], "name": "itemsv."}, {"value": 612, "name": "mappingv"}, {"value": 192, "name": "mapv"}, {"children": [{"value": 486, "name": "func1"}], "name": "mapv."}, {"value": 2376, "name": "marshal"}, {"value": 244, "name": "must"}, {"value": 122, "name": "nilv"}, {"value": 809, "name": "slicev"}, {"value": 1375, "name": "stringv"}, {"value": 307, "name": "structv"}, {"children": [{"value": 1763, "name": "func1"}], "name": "structv."}, {"value": 187, "name": "uintv"}], "name": "(*encoder)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 469, "name": "Swap"}], "name": "(*keyList)."}, {"children": [{"value": 244, "name": "alias"}, {"value": 349, "name": "destroy"}, {"value": 720, "name": "document"}, {"value": 477, "name": "fail"}, {"value": 756, "name": "mapping"}, {"value": 409, "name": "parse"}, {"value": 565, "name": "scalar"}, {"value": 616, "name": "sequence"}, {"value": 330, "name": "skip"}], "name": "(*parser)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*yaml_parser_state_t)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*yaml_token_type_t)."}, {"children": [{"value": 1, "name": "1"}, {"value": 1, "name": "2"}, {"value": 2, "name": "3"}, {"value": 18, "name": "4"}], "name": ".gobytes."}, {"value": 397, "name": "Marshal"}, {"value": 861, "name": "Unmarshal"}, {"value": 8, "name": "base60float"}, {"value": 16, "name": "defaultMapType"}, {"value": 24, "name": "default_tag_directives"}, {"value": 16, "name": "durationType"}, {"value": 912, "name": "encodeBase64"}, {"value": 126, "name": "fail"}, {"value": 98, "name": "failWantMap"}, {"value": 254, "name": "failf"}, {"value": 24, "name": "fieldMapMutex"}, {"value": 101, "name": "flush"}, {"value": 5806, "name": "getStructInfo"}, {"value": 173, "name": "handleErr"}, {"value": 16, "name": "ifaceType"}, {"value": 1109, "name": "init"}, {"children": [{"value": 3457, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 195, "name": "isBase60Float"}, {"value": 1150, "name": "isZero"}, {"value": 339, "name": "is_blankz"}, {"value": 372, "name": "is_printable"}, {"value": 435, "name": "keyFloat"}, {"children": [{"value": 11, "name": "Len"}, {"value": 1784, "name": "Less"}, {"value": 350, "name": "Swap"}], "name": "keyList."}, {"value": 16, "name": "mapItemType"}, {"value": 1129, "name": "newEncoder"}, {"value": 831, "name": "newParser"}, {"value": 619, "name": "numLess"}, {"value": 162, "name": "peek_token"}, {"value": 180, "name": "put"}, {"value": 411, "name": "put_break"}, {"value": 825, "name": "read"}, {"value": 1063, "name": "read_line"}, {"value": 267, "name": "resetMap"}, {"value": 3814, "name": "resolve"}, {"children": [{"value": 1110, "name": "func1"}], "name": "resolve."}, {"value": 8, "name": "resolveMap"}, {"value": 24, "name": "resolveTable"}, {"value": 302, "name": "settableValueOf"}, {"value": 622, "name": "skip_line"}, {"value": 176, "name": "statictmp_1069"}, {"value": 176, "name": "statictmp_1077"}, {"value": 176, "name": "statictmp_1108"}, {"value": 176, "name": "statictmp_1155"}, {"value": 176, "name": "statictmp_1164"}, {"value": 176, "name": "statictmp_1215"}, {"value": 176, "name": "statictmp_1216"}, {"value": 176, "name": "statictmp_1217"}, {"value": 176, "name": "statictmp_1218"}, {"value": 176, "name": "statictmp_1219"}, {"value": 176, "name": "statictmp_1220"}, {"value": 176, "name": "statictmp_1221"}, {"value": 176, "name": "statictmp_1248"}, {"value": 176, "name": "statictmp_1264"}, {"value": 176, "name": "statictmp_1285"}, {"value": 176, "name": "statictmp_1298"}, {"value": 176, "name": "statictmp_1300"}, {"value": 176, "name": "statictmp_1324"}, {"value": 176, "name": "statictmp_1335"}, {"value": 176, "name": "statictmp_1343"}, {"value": 176, "name": "statictmp_1370"}, {"value": 176, "name": "statictmp_1383"}, {"value": 176, "name": "statictmp_1385"}, {"value": 672, "name": "statictmp_1534"}, {"value": 80, "name": "statictmp_1537"}, {"value": 48, "name": "statictmp_1540"}, {"value": 48, "name": "statictmp_1543"}, {"value": 80, "name": "statictmp_1546"}, {"value": 48, "name": "statictmp_1549"}, {"value": 48, "name": "statictmp_1552"}, {"value": 80, "name": "statictmp_1555"}, {"value": 48, "name": "statictmp_1558"}, {"value": 48, "name": "statictmp_1561"}, {"value": 48, "name": "statictmp_1564"}, {"value": 48, "name": "statictmp_1567"}, {"value": 16, "name": "statictmp_1570"}, {"value": 40, "name": "statictmp_1841"}, {"value": 40, "name": "statictmp_1876"}, {"value": 144, "name": "statictmp_1991"}, {"value": 144, "name": "statictmp_1993"}, {"value": 1, "name": "statictmp_2093"}, {"value": 144, "name": "statictmp_2097"}, {"value": 144, "name": "statictmp_2231"}, {"value": 144, "name": "statictmp_2340"}, {"value": 144, "name": "statictmp_2387"}, {"value": 96, "name": "statictmp_2700"}, {"value": 32, "name": "statictmp_360"}, {"value": 1, "name": "statictmp_564"}, {"value": 1, "name": "statictmp_568"}, {"value": 1, "name": "statictmp_571"}, {"value": 1, "name": "statictmp_574"}, {"value": 1, "name": "statictmp_605"}, {"value": 1, "name": "statictmp_609"}, {"value": 1, "name": "statictmp_612"}, {"value": 1, "name": "statictmp_615"}, {"value": 1, "name": "statictmp_618"}, {"value": 1, "name": "statictmp_631"}, {"value": 1, "name": "statictmp_634"}, {"value": 1, "name": "statictmp_652"}, {"value": 1, "name": "statictmp_673"}, {"value": 1, "name": "statictmp_686"}, {"value": 1, "name": "statictmp_689"}, {"value": 1, "name": "statictmp_754"}, {"value": 1, "name": "statictmp_758"}, {"value": 1, "name": "statictmp_774"}, {"value": 1, "name": "statictmp_87"}, {"value": 1, "name": "statictmp_898"}, {"value": 1, "name": "statictmp_907"}, {"value": 1, "name": "statictmp_926"}, {"value": 1, "name": "statictmp_945"}, {"value": 1, "name": "statictmp_971"}, {"value": 1, "name": "statictmp_989"}, {"value": 8, "name": "structMap"}, {"value": 597, "name": "write"}, {"value": 170, "name": "write_all"}, {"value": 251, "name": "write_break"}, {"value": 8, "name": "yamlStyleFloat"}, {"value": 570, "name": "yaml_emitter_analyze_anchor"}, {"value": 1188, "name": "yaml_emitter_analyze_event"}, {"value": 2320, "name": "yaml_emitter_analyze_scalar"}, {"value": 598, "name": "yaml_emitter_analyze_tag"}, {"value": 781, "name": "yaml_emitter_analyze_tag_directive"}, {"value": 966, "name": "yaml_emitter_append_tag_directive"}, {"value": 382, "name": "yaml_emitter_check_simple_key"}, {"value": 757, "name": "yaml_emitter_emit"}, {"value": 179, "name": "yaml_emitter_emit_alias"}, {"value": 1196, "name": "yaml_emitter_emit_block_mapping_key"}, {"value": 542, "name": "yaml_emitter_emit_block_mapping_value"}, {"value": 972, "name": "yaml_emitter_emit_block_sequence_item"}, {"value": 286, "name": "yaml_emitter_emit_document_content"}, {"value": 435, "name": "yaml_emitter_emit_document_end"}, {"value": 2378, "name": "yaml_emitter_emit_document_start"}, {"value": 1768, "name": "yaml_emitter_emit_flow_mapping_key"}, {"value": 589, "name": "yaml_emitter_emit_flow_mapping_value"}, {"value": 1373, "name": "yaml_emitter_emit_flow_sequence_item"}, {"value": 311, "name": "yaml_emitter_emit_mapping_start"}, {"value": 344, "name": "yaml_emitter_emit_node"}, {"value": 670, "name": "yaml_emitter_emit_scalar"}, {"value": 311, "name": "yaml_emitter_emit_sequence_start"}, {"value": 404, "name": "yaml_emitter_emit_stream_start"}, {"value": 1500, "name": "yaml_emitter_flush"}, {"value": 320, "name": "yaml_emitter_need_more_events"}, {"value": 248, "name": "yaml_emitter_process_anchor"}, {"value": 536, "name": "yaml_emitter_process_scalar"}, {"value": 555, "name": "yaml_emitter_process_tag"}, {"value": 710, "name": "yaml_emitter_select_scalar_style"}, {"value": 237, "name": "yaml_emitter_set_output_string"}, {"value": 1059, "name": "yaml_emitter_state_machine"}, {"value": 141, "name": "yaml_emitter_write_anchor"}, {"value": 1109, "name": "yaml_emitter_write_block_scalar_hints"}, {"value": 199, "name": "yaml_emitter_write_bom"}, {"value": 2401, "name": "yaml_emitter_write_double_quoted_scalar"}, {"value": 1642, "name": "yaml_emitter_write_folded_scalar"}, {"value": 228, "name": "yaml_emitter_write_indent"}, {"value": 251, "name": "yaml_emitter_write_indicator"}, {"value": 812, "name": "yaml_emitter_write_literal_scalar"}, {"value": 1127, "name": "yaml_emitter_write_plain_scalar"}, {"value": 1362, "name": "yaml_emitter_write_single_quoted_scalar"}, {"value": 922, "name": "yaml_emitter_write_tag_content"}, {"value": 196, "name": "yaml_emitter_write_tag_handle"}, {"value": 968, "name": "yaml_insert_token"}, {"value": 1066, "name": "yaml_parser_append_tag_directive"}, {"value": 531, "name": "yaml_parser_determine_encoding"}, {"value": 282, "name": "yaml_parser_fetch_anchor"}, {"value": 1208, "name": "yaml_parser_fetch_block_entry"}, {"value": 588, "name": "yaml_parser_fetch_block_scalar"}, {"value": 639, "name": "yaml_parser_fetch_directive"}, {"value": 1249, "name": "yaml_parser_fetch_document_indicator"}, {"value": 854, "name": "yaml_parser_fetch_flow_collection_end"}, {"value": 748, "name": "yaml_parser_fetch_flow_collection_start"}, {"value": 788, "name": "yaml_parser_fetch_flow_entry"}, {"value": 281, "name": "yaml_parser_fetch_flow_scalar"}, {"value": 1220, "name": "yaml_parser_fetch_key"}, {"value": 254, "name": "yaml_parser_fetch_more_tokens"}, {"value": 2644, "name": "yaml_parser_fetch_next_token"}, {"value": 269, "name": "yaml_parser_fetch_plain_scalar"}, {"value": 700, "name": "yaml_parser_fetch_stream_end"}, {"value": 518, "name": "yaml_parser_fetch_stream_start"}, {"value": 269, "name": "yaml_parser_fetch_tag"}, {"value": 1273, "name": "yaml_parser_fetch_value"}, {"value": 288, "name": "yaml_parser_parse"}, {"value": 2180, "name": "yaml_parser_parse_block_mapping_key"}, {"value": 1111, "name": "yaml_parser_parse_block_mapping_value"}, {"value": 2164, "name": "yaml_parser_parse_block_sequence_entry"}, {"value": 535, "name": "yaml_parser_parse_document_content"}, {"value": 490, "name": "yaml_parser_parse_document_end"}, {"value": 2239, "name": "yaml_parser_parse_document_start"}, {"value": 2613, "name": "yaml_parser_parse_flow_mapping_key"}, {"value": 1082, "name": "yaml_parser_parse_flow_mapping_value"}, {"value": 2228, "name": "yaml_parser_parse_flow_sequence_entry"}, {"value": 322, "name": "yaml_parser_parse_flow_sequence_entry_mapping_end"}, {"value": 751, "name": "yaml_parser_parse_flow_sequence_entry_mapping_key"}, {"value": 817, "name": "yaml_parser_parse_flow_sequence_entry_mapping_value"}, {"value": 1183, "name": "yaml_parser_parse_indentless_sequence_entry"}, {"value": 6456, "name": "yaml_parser_parse_node"}, {"value": 615, "name": "yaml_parser_parse_stream_start"}, {"value": 1813, "name": "yaml_parser_process_directives"}, {"value": 536, "name": "yaml_parser_roll_indent"}, {"value": 767, "name": "yaml_parser_save_simple_key"}, {"value": 1503, "name": "yaml_parser_scan_anchor"}, {"value": 7040, "name": "yaml_parser_scan_block_scalar"}, {"value": 1516, "name": "yaml_parser_scan_block_scalar_breaks"}, {"value": 3702, "name": "yaml_parser_scan_directive"}, {"value": 1007, "name": "yaml_parser_scan_directive_name"}, {"value": 12721, "name": "yaml_parser_scan_flow_scalar"}, {"value": 5765, "name": "yaml_parser_scan_plain_scalar"}, {"value": 2547, "name": "yaml_parser_scan_tag"}, {"value": 2042, "name": "yaml_parser_scan_tag_directive_value"}, {"value": 1243, "name": "yaml_parser_scan_tag_handle"}, {"value": 1326, "name": "yaml_parser_scan_tag_uri"}, {"value": 1806, "name": "yaml_parser_scan_to_next_token"}, {"value": 2187, "name": "yaml_parser_scan_uri_escapes"}, {"value": 921, "name": "yaml_parser_scan_version_directive_number"}, {"value": 1053, "name": "yaml_parser_scan_version_directive_value"}, {"value": 287, "name": "yaml_parser_set_input_string"}, {"value": 443, "name": "yaml_parser_stale_simple_keys"}, {"value": 1258, "name": "yaml_parser_state_machine"}, {"children": [{"value": 721, "name": "String"}], "name": "yaml_parser_state_t."}, {"value": 403, "name": "yaml_parser_unroll_indent"}, {"value": 3668, "name": "yaml_parser_update_buffer"}, {"value": 733, "name": "yaml_parser_update_raw_buffer"}, {"value": 267, "name": "yaml_string_read_handler"}, {"value": 311, "name": "yaml_string_write_handler"}, {"children": [{"value": 665, "name": "String"}], "name": "yaml_token_type_t."}, {"value": 24, "name": "zeroValue"}, {"value": 40, "name": "go.itab.*TypeError,error"}, {"value": 56, "name": "go.itab.keyList,sort.Interface"}], "name": "gopkg.in/yaml%2ev2."}], "name": "vendor/"}], "name": "github.com/cockroachdb/cockroach/"}, {"children": [{"children": [{"value": 44, "name": "Bytes"}, {"value": 26, "name": "Cap"}, {"value": 17, "name": "Grow"}, {"value": 26, "name": "Len"}, {"value": 44, "name": "Next"}, {"value": 44, "name": "Read"}, {"value": 40, "name": "ReadByte"}, {"value": 62, "name": "ReadBytes"}, {"value": 44, "name": "ReadFrom"}, {"value": 52, "name": "ReadRune"}, {"value": 53, "name": "ReadString"}, {"value": 17, "name": "Reset"}, {"value": 35, "name": "String"}, {"value": 17, "name": "Truncate"}, {"value": 35, "name": "UnreadByte"}, {"value": 35, "name": "UnreadRune"}, {"value": 44, "name": "Write"}, {"value": 35, "name": "WriteByte"}, {"value": 44, "name": "WriteRune"}, {"value": 44, "name": "WriteString"}, {"value": 44, "name": "WriteTo"}], "name": "(*struct { bytes.Buffer; github.com/cockroachdb/cockroach/pkg/roachpb.tmp [10]uint8 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; Proto github.com/cockroachdb/cockroach/pkg/roachpb.Transaction; UserPriority github.com/cockroachdb/cockroach/pkg/roachpb.UserPriority; github.com/cockroachdb/cockroach/pkg/internal/client.txnAnchorKey github.com/cockroachdb/cockroach/pkg/roachpb.Key; github.com/cockroachdb/cockroach/pkg/internal/client.writingTxnRecord bool; github.com/cockroachdb/cockroach/pkg/internal/client.finalized bool; github.com/cockroachdb/cockroach/pkg/internal/client.previousIDs map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]struct {}; github.com/cockroachdb/cockroach/pkg/internal/client.commandCount int })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.completedChunks int; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.lastReportedAt time.Time; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.lastReportedFraction float32 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.dataSize int64 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.files []github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.BackupDescriptor_File; github.com/cockroachdb/cockroach/pkg/ccl/sqlccl.dataSize int64 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/cli.created bool; github.com/cockroachdb/cockroach/pkg/cli.draining bool })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/gossip.clients []*github.com/cockroachdb/cockroach/pkg/gossip.client; github.com/cockroachdb/cockroach/pkg/gossip.breakers map[string]*github.com/cockroachdb/cockroach/vendor/github.com/rubyist/circuitbreaker.Breaker })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/gossip.is *github.com/cockroachdb/cockroach/pkg/gossip.infoStore; github.com/cockroachdb/cockroach/pkg/gossip.incoming github.com/cockroachdb/cockroach/pkg/gossip.nodeSet; github.com/cockroachdb/cockroach/pkg/gossip.nodeMap map[github.com/cockroachdb/cockroach/pkg/util.UnresolvedAddr]github.com/cockroachdb/cockroach/pkg/gossip.serverInfo; github.com/cockroachdb/cockroach/pkg/gossip.clusterID github.com/cockroachdb/cockroach/pkg/util/uuid.UUID; github.com/cockroachdb/cockroach/pkg/gossip.ready chan struct {} })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/gossip.last int64 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/kv.txns map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]*github.com/cockroachdb/cockroach/pkg/kv.txnMetadata })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/rpc.cache map[string]*github.com/cockroachdb/cockroach/pkg/rpc.connMeta })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/rpc.offsets map[string]github.com/cockroachdb/cockroach/pkg/rpc.RemoteOffset; github.com/cockroachdb/cockroach/pkg/rpc.latenciesNanos map[string]github.com/cockroachdb/cockroach/vendor/github.com/VividCortex/ewma.MovingAverage })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/server.resp github.com/cockroachdb/cockroach/pkg/server/serverpb.RaftDebugResponse })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/server/status.prometheusExporter github.com/cockroachdb/cockroach/pkg/util/metric.PrometheusExporter; github.com/cockroachdb/cockroach/pkg/server/status.nodeRegistry *github.com/cockroachdb/cockroach/pkg/util/metric.Registry; github.com/cockroachdb/cockroach/pkg/server/status.desc github.com/cockroachdb/cockroach/pkg/roachpb.NodeDescriptor; github.com/cockroachdb/cockroach/pkg/server/status.startedAt int64; github.com/cockroachdb/cockroach/pkg/server/status.storeRegistries map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreID]*github.com/cockroachdb/cockroach/pkg/util/metric.Registry; github.com/cockroachdb/cockroach/pkg/server/status.clock *github.com/cockroachdb/cockroach/pkg/util/hlc.Clock; github.com/cockroachdb/cockroach/pkg/server/status.stores map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreID]github.com/cockroachdb/cockroach/pkg/server/status.storeMetrics; github.com/cockroachdb/cockroach/pkg/server/status.lastDataCount int; github.com/cockroachdb/cockroach/pkg/server/status.lastSummaryCount int; github.com/cockroachdb/cockroach/pkg/server/status.lastNodeMetricCount int; github.com/cockroachdb/cockroach/pkg/server/status.lastStoreMetricCount int })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/sql.tables map[github.com/cockroachdb/cockroach/pkg/sql/sqlbase.ID]*github.com/cockroachdb/cockroach/pkg/sql.tableState })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.numRunning int; github.com/cockroachdb/cockroach/pkg/sql/distsqlrun.queue *container/list.List })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/sql/mon.curAllocated int64; github.com/cockroachdb/cockroach/pkg/sql/mon.maxAllocated int64; github.com/cockroachdb/cockroach/pkg/sql/mon.curBudget github.com/cockroachdb/cockroach/pkg/sql/mon.MemoryAccount })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/sql/parser.timestamp uint64 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/sql/pgwire.connCancelMap github.com/cockroachdb/cockroach/pkg/sql/pgwire.cancelChanMap; github.com/cockroachdb/cockroach/pkg/sql/pgwire.draining bool })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.at time.Time })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.cache *github.com/cockroachdb/cockroach/pkg/storage.timestampCache })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.cond *sync.Cond; github.com/cockroachdb/cockroach/pkg/storage.queue github.com/cockroachdb/cockroach/pkg/storage.rangeIDQueue; github.com/cockroachdb/cockroach/pkg/storage.state map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]github.com/cockroachdb/cockroach/pkg/storage.raftScheduleState; github.com/cockroachdb/cockroach/pkg/storage.stopped bool })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.dependents map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]struct {} })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.global *github.com/cockroachdb/cockroach/pkg/storage.CommandQueue; github.com/cockroachdb/cockroach/pkg/storage.local *github.com/cockroachdb/cockroach/pkg/storage.CommandQueue })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.handlers map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreID]github.com/cockroachdb/cockroach/pkg/storage.RaftMessageHandler })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.heartbeats map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreIdent][]github.com/cockroachdb/cockroach/pkg/storage.RaftHeartbeat; github.com/cockroachdb/cockroach/pkg/storage.heartbeatResponses map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreIdent][]github.com/cockroachdb/cockroach/pkg/storage.RaftHeartbeat })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.idx int; github.com/cockroachdb/cockroach/pkg/storage.requests [5]github.com/cockroachdb/cockroach/pkg/storage.perLocalityCounts; github.com/cockroachdb/cockroach/pkg/storage.lastRotate time.Time; github.com/cockroachdb/cockroach/pkg/storage.lastReset time.Time })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.inFlight map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]int })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.queues map[github.com/cockroachdb/cockroach/pkg/roachpb.NodeID]chan *github.com/cockroachdb/cockroach/pkg/storage.RaftMessageRequest; github.com/cockroachdb/cockroach/pkg/storage.stats map[github.com/cockroachdb/cockroach/pkg/roachpb.NodeID]*github.com/cockroachdb/cockroach/pkg/storage.raftTransportStats; github.com/cockroachdb/cockroach/pkg/storage.breakers map[github.com/cockroachdb/cockroach/pkg/roachpb.NodeID]*github.com/cockroachdb/cockroach/vendor/github.com/rubyist/circuitbreaker.Breaker })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.remotes map[github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaID]struct {} })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.scanCount int64; github.com/cockroachdb/cockroach/pkg/storage.waitEnabledCount int64; github.com/cockroachdb/cockroach/pkg/storage.total time.Duration; github.com/cockroachdb/cockroach/pkg/storage.disabled bool })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.self github.com/cockroachdb/cockroach/pkg/storage.Liveness; github.com/cockroachdb/cockroach/pkg/storage.callbacks []github.com/cockroachdb/cockroach/pkg/storage.IsLiveCallback; github.com/cockroachdb/cockroach/pkg/storage.nodes map[github.com/cockroachdb/cockroach/pkg/roachpb.NodeID]github.com/cockroachdb/cockroach/pkg/storage.Liveness; github.com/cockroachdb/cockroach/pkg/storage.heartbeatCallback github.com/cockroachdb/cockroach/pkg/storage.HeartbeatCallback })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.stats github.com/cockroachdb/cockroach/pkg/storage/engine/enginepb.MVCCStats })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage.txns map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]*github.com/cockroachdb/cockroach/pkg/storage.pendingTxn })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/storage/engine.cond *sync.Cond; github.com/cockroachdb/cockroach/pkg/storage/engine.committing bool; github.com/cockroachdb/cockroach/pkg/storage/engine.commitSeq uint64; github.com/cockroachdb/cockroach/pkg/storage/engine.pendingSeq uint64; github.com/cockroachdb/cockroach/pkg/storage/engine.pendingSync bool; github.com/cockroachdb/cockroach/pkg/storage/engine.pending []*github.com/cockroachdb/cockroach/pkg/storage/engine.rocksDBBatch })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/grpcutil.gids map[int64]time.Time })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/hlc.timestamp github.com/cockroachdb/cockroach/pkg/util/hlc.Timestamp; github.com/cockroachdb/cockroach/pkg/util/hlc.monotonicityErrorsCount int32; github.com/cockroachdb/cockroach/pkg/util/hlc.lastPhysicalTime int64 })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/metric.cumulative *github.com/cockroachdb/cockroach/vendor/github.com/codahale/hdrhistogram.Histogram; github.com/cockroachdb/cockroach/pkg/util/metric.sliding *github.com/cockroachdb/cockroach/pkg/util/metric.slidingHistogram })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/protoutil.known map[github.com/cockroachdb/cockroach/pkg/util/protoutil.typeKey]reflect.Type })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/stop.quiesce *sync.Cond; github.com/cockroachdb/cockroach/pkg/util/stop.quiescing bool; github.com/cockroachdb/cockroach/pkg/util/stop.numTasks int; github.com/cockroachdb/cockroach/pkg/util/stop.tasks map[github.com/cockroachdb/cockroach/pkg/util/stop.taskKey]int; github.com/cockroachdb/cockroach/pkg/util/stop.closers []github.com/cockroachdb/cockroach/pkg/util/stop.Closer; github.com/cockroachdb/cockroach/pkg/util/stop.cancels []func() })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/stop.stoppers []*github.com/cockroachdb/cockroach/pkg/util/stop.Stopper })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/kv.cache *github.com/cockroachdb/cockroach/pkg/util/cache.OrderedCache })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/storage.destroyed error; github.com/cockroachdb/cockroach/pkg/storage.corrupted bool; github.com/cockroachdb/cockroach/pkg/storage.quiescent bool; github.com/cockroachdb/cockroach/pkg/storage.state github.com/cockroachdb/cockroach/pkg/storage/storagebase.ReplicaState; github.com/cockroachdb/cockroach/pkg/storage.lastAssignedLeaseIndex uint64; github.com/cockroachdb/cockroach/pkg/storage.lastIndex uint64; github.com/cockroachdb/cockroach/pkg/storage.estimatedCommitIndex uint64; github.com/cockroachdb/cockroach/pkg/storage.pendingSnapshotIndex uint64; github.com/cockroachdb/cockroach/pkg/storage.raftLogSize int64; github.com/cockroachdb/cockroach/pkg/storage.pendingLeaseRequest github.com/cockroachdb/cockroach/pkg/storage.pendingLeaseRequest; github.com/cockroachdb/cockroach/pkg/storage.minLeaseProposedTS github.com/cockroachdb/cockroach/pkg/util/hlc.Timestamp; github.com/cockroachdb/cockroach/pkg/storage.maxBytes int64; github.com/cockroachdb/cockroach/pkg/storage.proposals map[github.com/cockroachdb/cockroach/pkg/storage/storagebase.CmdIDKey]*github.com/cockroachdb/cockroach/pkg/storage.ProposalData; github.com/cockroachdb/cockroach/pkg/storage.internalRaftGroup *github.com/cockroachdb/cockroach/vendor/github.com/coreos/etcd/raft.RawNode; github.com/cockroachdb/cockroach/pkg/storage.replicaID github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaID; github.com/cockroachdb/cockroach/pkg/storage.minReplicaID github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaID; github.com/cockroachdb/cockroach/pkg/storage.leaderID github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaID; github.com/cockroachdb/cockroach/pkg/storage.lastToReplica github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaDescriptor; github.com/cockroachdb/cockroach/pkg/storage.lastFromReplica github.com/cockroachdb/cockroach/pkg/roachpb.ReplicaDescriptor; github.com/cockroachdb/cockroach/pkg/storage.submitProposalFn func(*github.com/cockroachdb/cockroach/pkg/storage.ProposalData) error; github.com/cockroachdb/cockroach/pkg/storage.checksums map[github.com/cockroachdb/cockroach/pkg/util/uuid.UUID]github.com/cockroachdb/cockroach/pkg/storage.replicaChecksum; github.com/cockroachdb/cockroach/pkg/storage.ticks int; github.com/cockroachdb/cockroach/pkg/storage.droppedMessages int })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/storage.nodeLocalities map[github.com/cockroachdb/cockroach/pkg/roachpb.NodeID]github.com/cockroachdb/cockroach/pkg/storage.localityWithString })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/storage.replicas map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]*github.com/cockroachdb/cockroach/pkg/storage.Replica; github.com/cockroachdb/cockroach/pkg/storage.replicasByKey *github.com/cockroachdb/cockroach/vendor/github.com/google/btree.BTree; github.com/cockroachdb/cockroach/pkg/storage.uninitReplicas map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]*github.com/cockroachdb/cockroach/pkg/storage.Replica; github.com/cockroachdb/cockroach/pkg/storage.replicaPlaceholders map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]*github.com/cockroachdb/cockroach/pkg/storage.ReplicaPlaceholder; github.com/cockroachdb/cockroach/pkg/storage.replicaQueues map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]github.com/cockroachdb/cockroach/pkg/storage.raftRequestQueue })."}, {"children": [{"value": 17, "name": "AssertHeld"}, {"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/storage.storeDetails map[github.com/cockroachdb/cockroach/pkg/roachpb.StoreID]*github.com/cockroachdb/cockroach/pkg/storage.storeDetail })."}, {"children": [{"value": 111, "name": "Close"}, {"value": 157, "name": "Read"}], "name": "(*struct { io.Reader; io.Closer })."}, {"children": [{"value": 90, "name": "Lock"}, {"value": 90, "name": "Unlock"}], "name": "(*struct { sync.Locker; github.com/cockroachdb/cockroach/pkg/storage.priorityQ github.com/cockroachdb/cockroach/pkg/storage.priorityQueue; github.com/cockroachdb/cockroach/pkg/storage.replicas map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]*github.com/cockroachdb/cockroach/pkg/storage.replicaItem; github.com/cockroachdb/cockroach/pkg/storage.purgatory map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]error; github.com/cockroachdb/cockroach/pkg/storage.stopped bool; github.com/cockroachdb/cockroach/pkg/storage.disabled bool })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.Mutex; math/big.table [64]math/big.divisor })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.Mutex; os.dir string })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.Mutex; os/signal.m map[chan<- os.Signal]*os/signal.handler; os/signal.ref [65]int64 })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.Mutex; runtime/pprof.profiling bool; runtime/pprof.done chan bool })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; encoding/json.m map[reflect.Type]encoding/json.encoderFunc })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.m map[github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.extPropKey]*github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/proto.Properties })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.m map[github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.extPropKey]*github.com/cockroachdb/cockroach/vendor/github.com/golang/protobuf/proto.Properties })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; reflect.m map[reflect.cacheKey]*reflect.rtype })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType })."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}], "name": "(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype })."}, {"children": [{"value": 108, "name": "Close"}, {"value": 164, "name": "Read"}], "name": "struct { io.Reader; io.Closer }."}, {"children": [{"value": 88, "name": "Lock"}, {"value": 88, "name": "Unlock"}], "name": "struct { sync.Locker; github.com/cockroachdb/cockroach/pkg/storage.priorityQ github.com/cockroachdb/cockroach/pkg/storage.priorityQueue; github.com/cockroachdb/cockroach/pkg/storage.replicas map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]*github.com/cockroachdb/cockroach/pkg/storage.replicaItem; github.com/cockroachdb/cockroach/pkg/storage.purgatory map[github.com/cockroachdb/cockroach/pkg/roachpb.RangeID]error; github.com/cockroachdb/cockroach/pkg/storage.stopped bool; github.com/cockroachdb/cockroach/pkg/storage.disabled bool }."}], "name": "go."}, {"children": [{"children": [{"value": 80, "name": "go.itab.*digest,hash.Hash32"}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 12, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 215, "name": "Sum"}, {"value": 12, "name": "Sum32"}, {"value": 133, "name": "Write"}], "name": "(*digest)."}, {"value": 96, "name": "Checksum"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 332, "name": "update"}], "name": "adler32."}, {"children": [{"value": 80, "name": "go.itab.*digest,hash.Hash32"}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 12, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 215, "name": "Sum"}, {"value": 12, "name": "Sum32"}, {"value": 297, "name": "Write"}], "name": "(*digest)."}, {"value": 134, "name": "ChecksumIEEE"}, {"value": 8, "name": "IEEETable"}, {"value": 189, "name": "MakeTable"}, {"value": 208, "name": "New"}, {"value": 82, "name": "NewIEEE"}, {"value": 303, "name": "Update"}, {"value": 8, "name": "archIeeeTable8"}, {"value": 574, "name": "archInitCastagnoli"}, {"value": 194, "name": "archInitIEEE"}, {"value": 1249, "name": "archUpdateCastagnoli"}, {"value": 369, "name": "archUpdateIEEE"}, {"value": 1, "name": "castagnoliArchImpl"}, {"value": 309, "name": "castagnoliInit"}, {"children": [{"value": 108, "name": "func1"}], "name": "castagnoliInit."}, {"value": 12, "name": "castagnoliOnce"}, {"value": 172, "name": "castagnoliSSE42"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "castagnoliSSE42."}, {"value": 8, "name": "castagnoliSSE42TableK1"}, {"value": 8, "name": "castagnoliSSE42TableK2"}, {"value": 122, "name": "castagnoliSSE42Triple"}, {"children": [{"value": 16, "name": "args_stackmap"}], "name": "castagnoliSSE42Triple."}, {"value": 8, "name": "castagnoliTable"}, {"value": 8, "name": "castagnoliTable8"}, {"value": 19, "name": "haveCLMUL"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "haveCLMUL."}, {"value": 20, "name": "haveSSE41"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "haveSSE41."}, {"value": 20, "name": "haveSSE42"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "haveSSE42."}, {"value": 1, "name": "ieeeArchImpl"}, {"value": 445, "name": "ieeeCLMUL"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "ieeeCLMUL."}, {"value": 245, "name": "ieeeInit"}, {"children": [{"value": 108, "name": "func1"}], "name": "ieeeInit."}, {"value": 12, "name": "ieeeOnce"}, {"value": 8, "name": "ieeeTable8"}, {"value": 211, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 99, "name": "simpleMakeTable"}, {"value": 79, "name": "simplePopulateTable"}, {"value": 65, "name": "simpleUpdate"}, {"value": 182, "name": "slicingMakeTable"}, {"value": 351, "name": "slicingUpdate"}, {"value": 1, "name": "sse42"}, {"value": 8, "name": "updateCastagnoli"}, {"value": 8, "name": "updateIEEE"}, {"value": 1, "name": "useFastIEEE"}], "name": "crc32."}, {"children": [{"value": 80, "name": "go.itab.*sum32,hash.Hash32"}, {"value": 80, "name": "go.itab.*sum64a,hash.Hash64"}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 12, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 215, "name": "Sum"}, {"value": 12, "name": "Sum32"}, {"value": 78, "name": "Write"}], "name": "(*sum32)."}, {"children": [{"value": 10, "name": "BlockSize"}, {"value": 19, "name": "Reset"}, {"value": 10, "name": "Size"}, {"value": 270, "name": "Sum"}, {"value": 14, "name": "Sum64"}, {"value": 88, "name": "Write"}], "name": "(*sum64a)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "fnv."}], "name": "hash/"}, {"children": [{"value": 40, "name": "go.itab.*Error,error"}, {"children": [{"value": 1011, "name": "Error"}], "name": "(*Error)."}, {"children": [{"value": 782, "name": "AddParseTree"}, {"value": 2093, "name": "Clone"}, {"value": 84, "name": "DefinedTemplates"}, {"value": 573, "name": "Delims"}, {"value": 180, "name": "Execute"}, {"value": 212, "name": "ExecuteTemplate"}, {"value": 84, "name": "Funcs"}, {"value": 215, "name": "Lookup"}, {"value": 27, "name": "Name"}, {"value": 1230, "name": "New"}, {"value": 104, "name": "Option"}, {"value": 1881, "name": "Parse"}, {"value": 120, "name": "ParseFiles"}, {"value": 110, "name": "ParseGlob"}, {"value": 631, "name": "Templates"}, {"value": 327, "name": "checkCanParse"}, {"value": 588, "name": "escape"}, {"value": 1193, "name": "lookupAndEscapeTemplate"}], "name": "(*Template)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*attr)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*context)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*delim)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*element)."}, {"children": [{"value": 1196, "name": "commit"}, {"value": 566, "name": "computeOutCtx"}, {"value": 395, "name": "editActionNode"}, {"value": 379, "name": "editTemplateNode"}, {"value": 395, "name": "editTextNode"}, {"value": 1441, "name": "escape"}, {"value": 3717, "name": "escapeAction"}, {"value": 750, "name": "escapeBranch"}, {"value": 246, "name": "escapeList"}, {"value": 2546, "name": "escapeListConditionally"}, {"value": 314, "name": "escapeTemplate"}, {"value": 394, "name": "escapeTemplateBody"}, {"children": [{"value": 330, "name": "func1"}], "name": "escapeTemplateBody."}, {"value": 2359, "name": "escapeText"}, {"value": 2537, "name": "escapeTree"}], "name": "(*escaper)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*jsCtx)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*state)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*urlPart)."}, {"children": [{"value": 10, "name": "1"}, {"value": 5, "name": "10"}, {"value": 2, "name": "11"}, {"value": 9, "name": "12"}, {"value": 10, "name": "2"}, {"value": 4, "name": "3"}, {"value": 3, "name": "4"}, {"value": 2, "name": "5"}, {"value": 6, "name": "6"}, {"value": 6, "name": "7"}, {"value": 5, "name": "8"}, {"value": 8, "name": "9"}], "name": ".gobytes."}, {"value": 93, "name": "Must"}, {"value": 1061, "name": "New"}, {"value": 498, "name": "allIdents"}, {"children": [{"value": 249, "name": "String"}], "name": "attr."}, {"value": 291, "name": "attrEscaper"}, {"value": 80, "name": "attrNames"}, {"value": 5, "name": "attrStartStates"}, {"value": 772, "name": "attrType"}, {"value": 8, "name": "attrTypeMap"}, {"value": 24, "name": "blockCommentEnd"}, {"value": 24, "name": "commentEnd"}, {"value": 19, "name": "commentEscaper"}, {"value": 24, "name": "commentStart"}, {"children": [{"value": 517, "name": "String"}, {"value": 809, "name": "mangle"}], "name": "context."}, {"value": 1688, "name": "contextAfterText"}, {"value": 943, "name": "cssEscaper"}, {"value": 24, "name": "cssReplacementTable"}, {"value": 1264, "name": "cssValueFilter"}, {"value": 1661, "name": "decodeCSS"}, {"children": [{"value": 249, "name": "String"}], "name": "delim."}, {"value": 64, "name": "delimEnds"}, {"value": 64, "name": "delimNames"}, {"value": 24, "name": "doctypeBytes"}, {"value": 638, "name": "eatAttrName"}, {"value": 598, "name": "eatTagName"}, {"value": 106, "name": "eatWhiteSpace"}, {"children": [{"value": 249, "name": "String"}], "name": "element."}, {"value": 5, "name": "elementContentType"}, {"value": 8, "name": "elementNameMap"}, {"value": 80, "name": "elementNames"}, {"value": 454, "name": "endsWithCSSKeyword"}, {"value": 4807, "name": "ensurePipelineContains"}, {"value": 8, "name": "equivEscapers"}, {"value": 16, "name": "errorType"}, {"value": 371, "name": "errorf"}, {"value": 276, "name": "escFnsEq"}, {"value": 16, "name": "escapeOK"}, {"value": 1785, "name": "escapeTemplate"}, {"value": 24, "name": "expressionBytes"}, {"value": 16, "name": "fmtStringerType"}, {"value": 8, "name": "funcMap"}, {"value": 378, "name": "hexDecode"}, {"value": 202, "name": "htmlEscaper"}, {"value": 406, "name": "htmlNameFilter"}, {"value": 24, "name": "htmlNormReplacementTable"}, {"value": 291, "name": "htmlNospaceEscaper"}, {"value": 24, "name": "htmlNospaceNormReplacementTable"}, {"value": 24, "name": "htmlNospaceReplacementTable"}, {"value": 24, "name": "htmlReplacementTable"}, {"value": 1111, "name": "htmlReplacer"}, {"value": 184, "name": "indexOfStr"}, {"value": 684, "name": "indexTagEnd"}, {"value": 407, "name": "indirect"}, {"value": 357, "name": "indirectToJSONMarshaler"}, {"value": 488, "name": "indirectToStringerOrError"}, {"value": 4999, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1949, "name": "isJSType"}, {"value": 2548, "name": "join"}, {"children": [{"value": 316, "name": "String"}], "name": "jsCtx."}, {"value": 203, "name": "jsRegexpEscaper"}, {"value": 24, "name": "jsRegexpReplacementTable"}, {"value": 257, "name": "jsStrEscaper"}, {"value": 24, "name": "jsStrNormReplacementTable"}, {"value": 24, "name": "jsStrReplacementTable"}, {"value": 2354, "name": "jsValEscaper"}, {"value": 16, "name": "jsonMarshalType"}, {"value": 24, "name": "mozBindingBytes"}, {"value": 842, "name": "nextJSCtx"}, {"value": 1884, "name": "parseFiles"}, {"value": 482, "name": "parseGlob"}, {"value": 267, "name": "rcdataEscaper"}, {"value": 8, "name": "redundantFuncs"}, {"value": 8, "name": "regexpPrecederKeywords"}, {"value": 722, "name": "replace"}, {"value": 120, "name": "specialTagEndMarkers"}, {"value": 24, "name": "specialTagEndPrefix"}, {"children": [{"value": 249, "name": "String"}], "name": "state."}, {"value": 384, "name": "stateNames"}, {"value": 2016, "name": "statictmp_1137"}, {"value": 1008, "name": "statictmp_1138"}, {"value": 1008, "name": "statictmp_1139"}, {"value": 2016, "name": "statictmp_1140"}, {"value": 1008, "name": "statictmp_1141"}, {"value": 1488, "name": "statictmp_1142"}, {"value": 1552, "name": "statictmp_1143"}, {"value": 1552, "name": "statictmp_1144"}, {"value": 1792, "name": "statictmp_1166"}, {"value": 112, "name": "statictmp_1167"}, {"value": 64, "name": "statictmp_1171"}, {"value": 4, "name": "statictmp_1172"}, {"value": 224, "name": "statictmp_1176"}, {"value": 14, "name": "statictmp_1177"}, {"value": 96, "name": "statictmp_1198"}, {"value": 96, "name": "statictmp_1199"}, {"value": 48, "name": "statictmp_1205"}, {"value": 3, "name": "statictmp_1206"}, {"value": 16, "name": "statictmp_1210"}, {"value": 1, "name": "statictmp_1211"}, {"value": 16, "name": "statictmp_1215"}, {"value": 1, "name": "statictmp_1216"}, {"value": 16, "name": "statictmp_1220"}, {"value": 1, "name": "statictmp_1221"}, {"value": 16, "name": "statictmp_1225"}, {"value": 1, "name": "statictmp_1226"}, {"value": 16, "name": "statictmp_251"}, {"value": 16, "name": "statictmp_685"}, {"value": 16, "name": "statictmp_933"}, {"value": 16, "name": "statictmp_968"}, {"value": 16, "name": "statictmp_970"}, {"value": 896, "name": "stringify"}, {"value": 1286, "name": "stripTags"}, {"value": 230, "name": "tAfterName"}, {"value": 39, "name": "tAttr"}, {"value": 226, "name": "tAttrName"}, {"value": 259, "name": "tBeforeValue"}, {"value": 330, "name": "tBlockCmt"}, {"value": 935, "name": "tCSS"}, {"value": 1115, "name": "tCSSStr"}, {"value": 39, "name": "tError"}, {"value": 209, "name": "tHTMLCmt"}, {"value": 981, "name": "tJS"}, {"value": 1134, "name": "tJSDelimited"}, {"value": 342, "name": "tLineCmt"}, {"value": 238, "name": "tSpecialTagEnd"}, {"value": 1178, "name": "tTag"}, {"value": 746, "name": "tText"}, {"value": 235, "name": "tURL"}, {"value": 24, "name": "tagEndSeparators"}, {"value": 192, "name": "transitionFunc"}, {"value": 105, "name": "urlEscaper"}, {"value": 512, "name": "urlFilter"}, {"value": 105, "name": "urlNormalizer"}, {"children": [{"value": 249, "name": "String"}], "name": "urlPart."}, {"value": 64, "name": "urlPartNames"}, {"value": 1187, "name": "urlProcessor"}], "name": "html/template."}, {"children": [{"children": [{"value": 48, "name": "go.itab.*Function,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Label,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Line,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Location,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Mapping,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Profile,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*Sample,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.*ValueType,internal/pprof/profile.message"}, {"value": 48, "name": "go.itab.Label,internal/pprof/profile.message"}, {"children": [{"value": 37, "name": "decoder"}, {"value": 237, "name": "encode"}], "name": "(*Function)."}, {"children": [{"value": 190, "name": "decoder"}, {"value": 194, "name": "encode"}], "name": "(*Label)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 120, "name": "encode"}], "name": "(*Line)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 286, "name": "encode"}, {"value": 265, "name": "matchesName"}, {"value": 654, "name": "unmatchedLines"}], "name": "(*Location)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 418, "name": "encode"}], "name": "(*Mapping)."}, {"children": [{"value": 912, "name": "Aggregate"}, {"value": 3239, "name": "CheckValid"}, {"value": 1370, "name": "Compatible"}, {"value": 298, "name": "Copy"}, {"value": 702, "name": "Demangle"}, {"value": 20, "name": "Empty"}, {"value": 2213, "name": "FilterSamplesByName"}, {"value": 655, "name": "FilterSamplesByTag"}, {"value": 73, "name": "HasFileLines"}, {"value": 64, "name": "HasFunctions"}, {"value": 1924, "name": "Merge"}, {"value": 2193, "name": "ParseMemoryMap"}, {"value": 1747, "name": "Prune"}, {"value": 920, "name": "RemoveUninteresting"}, {"value": 9390, "name": "String"}, {"value": 306, "name": "Write"}, {"value": 37, "name": "decoder"}, {"value": 973, "name": "encode"}, {"value": 6137, "name": "postDecode"}, {"value": 6615, "name": "preEncode"}, {"value": 862, "name": "remapFunctionIDs"}, {"value": 815, "name": "remapLocationIDs"}, {"value": 557, "name": "remapMappingIDs"}], "name": "(*Profile)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 388, "name": "encode"}], "name": "(*Sample)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 120, "name": "encode"}], "name": "(*ValueType)."}, {"children": [{"value": 37, "name": "decoder"}, {"value": 148, "name": "encode"}], "name": "Label."}, {"value": 16, "name": "allocRxStr"}, {"value": 16, "name": "allocSkipRxStr"}, {"value": 8, "name": "briefMapsRE"}, {"value": 8, "name": "contentionSampleRE"}, {"value": 8, "name": "countRE"}, {"value": 8, "name": "countStartRE"}, {"value": 16, "name": "cpuProfilerRxStr"}, {"value": 1723, "name": "decodeField"}, {"value": 858, "name": "decodeInt64s"}, {"value": 624, "name": "decodeMessage"}, {"value": 858, "name": "decodeUint64s"}, {"value": 378, "name": "decodeVarint"}, {"value": 123, "name": "encodeBool"}, {"value": 93, "name": "encodeBoolOpt"}, {"value": 80, "name": "encodeInt64"}, {"value": 95, "name": "encodeInt64Opt"}, {"value": 102, "name": "encodeLength"}, {"value": 536, "name": "encodeMessage"}, {"value": 324, "name": "encodeString"}, {"value": 136, "name": "encodeStrings"}, {"value": 98, "name": "encodeUint64"}, {"value": 95, "name": "encodeUint64Opt"}, {"value": 705, "name": "encodeUint64s"}, {"value": 454, "name": "encodeVarint"}, {"value": 16, "name": "errMalformed"}, {"value": 16, "name": "errUnrecognized"}, {"value": 199, "name": "focusedAndNotIgnored"}, {"value": 1314, "name": "focusedSample"}, {"value": 8, "name": "fragmentationHeaderRE"}, {"value": 24, "name": "functionDecoder"}, {"children": [{"value": 388, "name": "func1"}, {"value": 286, "name": "func10"}, {"value": 236, "name": "func11"}, {"value": 286, "name": "func12"}, {"value": 277, "name": "func13"}, {"value": 277, "name": "func14"}, {"value": 157, "name": "func15"}, {"value": 157, "name": "func16"}, {"value": 417, "name": "func17"}, {"value": 270, "name": "func18"}, {"value": 277, "name": "func19"}, {"value": 408, "name": "func2"}, {"value": 277, "name": "func20"}, {"value": 270, "name": "func21"}, {"value": 277, "name": "func22"}, {"value": 277, "name": "func23"}, {"value": 277, "name": "func24"}, {"value": 277, "name": "func25"}, {"value": 277, "name": "func26"}, {"value": 293, "name": "func27"}, {"value": 293, "name": "func28"}, {"value": 293, "name": "func29"}, {"value": 408, "name": "func3"}, {"value": 293, "name": "func30"}, {"value": 270, "name": "func31"}, {"value": 277, "name": "func32"}, {"value": 277, "name": "func33"}, {"value": 460, "name": "func34"}, {"value": 277, "name": "func35"}, {"value": 277, "name": "func36"}, {"value": 270, "name": "func37"}, {"value": 277, "name": "func38"}, {"value": 277, "name": "func39"}, {"value": 408, "name": "func4"}, {"value": 277, "name": "func40"}, {"value": 277, "name": "func41"}, {"value": 408, "name": "func5"}, {"value": 972, "name": "func6"}, {"value": 286, "name": "func7"}, {"value": 286, "name": "func8"}, {"value": 286, "name": "func9"}], "name": "glob."}, {"value": 8, "name": "growthHeaderRE"}, {"value": 8, "name": "heapHeaderRE"}, {"value": 8, "name": "heapSampleRE"}, {"value": 8, "name": "hexNumberRE"}, {"value": 2268, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "labelDecoder"}, {"value": 8, "name": "libRx"}, {"value": 24, "name": "lineDecoder"}, {"value": 24, "name": "locationDecoder"}, {"value": 16, "name": "lockRxStr"}, {"value": 24, "name": "mappingDecoder"}, {"value": 132, "name": "marshal"}, {"value": 1248, "name": "parseMappingEntry"}, {"value": 8, "name": "procMapsRE"}, {"value": 24, "name": "profileDecoder"}, {"value": 24, "name": "sampleDecoder"}, {"value": 24, "name": "statictmp_1863"}, {"value": 24, "name": "statictmp_1965"}, {"value": 104, "name": "statictmp_2011"}, {"value": 24, "name": "statictmp_2012"}, {"value": 32, "name": "statictmp_2013"}, {"value": 32, "name": "statictmp_2014"}, {"value": 88, "name": "statictmp_2015"}, {"value": 40, "name": "statictmp_2016"}, {"value": 24, "name": "statictmp_2017"}, {"value": 48, "name": "statictmp_2018"}, {"value": 784, "name": "statictmp_2026"}, {"value": 48, "name": "statictmp_2029"}, {"value": 80, "name": "statictmp_2032"}, {"value": 192, "name": "statictmp_2035"}, {"value": 8, "name": "threadStartRE"}, {"value": 8, "name": "threadzStartRE"}, {"value": 290, "name": "unmarshal"}, {"value": 24, "name": "valueTypeDecoder"}], "name": "pprof/profile."}, {"children": [{"children": [{"value": 670, "name": "Do"}, {"value": 1040, "name": "DoChan"}, {"value": 141, "name": "Forget"}, {"value": 576, "name": "doCall"}], "name": "(*Group)."}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "singleflight."}, {"children": [{"value": 404, "name": "GetRandom"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 4, "name": "randomUnsupported"}], "name": "syscall/unix."}], "name": "internal/"}, {"children": [{"value": 40, "name": "go.itab.*LimitedReader,io.Reader"}, {"value": 40, "name": "go.itab.*PipeReader,io.Reader"}, {"value": 40, "name": "go.itab.*PipeWriter,io.Writer"}, {"value": 40, "name": "go.itab.*SectionReader,io.Reader"}, {"value": 40, "name": "go.itab.*multiReader,io.Reader"}, {"value": 40, "name": "go.itab.*multiWriter,io.Writer"}, {"value": 40, "name": "go.itab.eofReader,io.Reader"}, {"children": [{"value": 236, "name": "Read"}], "name": "(*LimitedReader)."}, {"children": [{"value": 98, "name": "Close"}, {"value": 101, "name": "CloseWithError"}, {"value": 123, "name": "Read"}], "name": "(*PipeReader)."}, {"children": [{"value": 98, "name": "Close"}, {"value": 101, "name": "CloseWithError"}, {"value": 123, "name": "Write"}], "name": "(*PipeWriter)."}, {"children": [{"value": 254, "name": "Read"}, {"value": 361, "name": "ReadAt"}, {"value": 194, "name": "Seek"}, {"value": 22, "name": "Size"}], "name": "(*SectionReader)."}, {"children": [{"value": 187, "name": "Read"}], "name": "(*eofReader)."}, {"children": [{"value": 849, "name": "Read"}], "name": "(*multiReader)."}, {"children": [{"value": 325, "name": "Write"}, {"value": 609, "name": "WriteString"}], "name": "(*multiWriter)."}, {"children": [{"value": 296, "name": "rclose"}, {"value": 675, "name": "read"}, {"value": 296, "name": "wclose"}, {"value": 677, "name": "write"}], "name": "(*pipe)."}, {"value": 163, "name": "Copy"}, {"value": 281, "name": "CopyBuffer"}, {"value": 304, "name": "CopyN"}, {"value": 16, "name": "EOF"}, {"value": 16, "name": "ErrClosedPipe"}, {"value": 16, "name": "ErrNoProgress"}, {"value": 16, "name": "ErrShortBuffer"}, {"value": 16, "name": "ErrShortWrite"}, {"value": 16, "name": "ErrUnexpectedEOF"}, {"value": 289, "name": "MultiReader"}, {"value": 289, "name": "MultiWriter"}, {"value": 433, "name": "ReadAtLeast"}, {"value": 147, "name": "ReadFull"}, {"value": 291, "name": "WriteString"}, {"value": 853, "name": "copyBuffer"}, {"children": [{"value": 34, "name": "Read"}], "name": "eofReader."}, {"value": 16, "name": "errOffset"}, {"value": 16, "name": "errWhence"}, {"value": 800, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "io."}, {"children": [{"value": 80, "name": "go.itab.*Logger,github.com/cockroachdb/cockroach/vendor/google.golang.org/grpc/grpclog.Logger"}, {"children": [{"value": 139, "name": "Fatal"}, {"value": 163, "name": "Fatalf"}, {"value": 139, "name": "Fatalln"}, {"value": 150, "name": "Flags"}, {"value": 1041, "name": "Output"}, {"value": 202, "name": "Panic"}, {"value": 231, "name": "Panicf"}, {"value": 202, "name": "Panicln"}, {"value": 172, "name": "Prefix"}, {"value": 123, "name": "Print"}, {"value": 146, "name": "Printf"}, {"value": 123, "name": "Println"}, {"value": 141, "name": "SetFlags"}, {"value": 189, "name": "SetOutput"}, {"value": 189, "name": "SetPrefix"}, {"value": 3107, "name": "formatHeader"}], "name": "(*Logger)."}, {"value": 165, "name": "Fatalf"}, {"value": 209, "name": "New"}, {"value": 204, "name": "Panic"}, {"value": 204, "name": "Panicln"}, {"value": 125, "name": "Print"}, {"value": 148, "name": "Printf"}, {"value": 125, "name": "Println"}, {"value": 72, "name": "SetFlags"}, {"value": 195, "name": "SetOutput"}, {"value": 227, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 516, "name": "itoa"}, {"value": 8, "name": "std"}], "name": "log."}, {"children": [{"children": [{"value": 48, "name": "go.itab.*lockedSource,math/rand.Source"}, {"value": 48, "name": "go.itab.*rngSource,math/rand.Source"}, {"children": [{"value": 381, "name": "ExpFloat64"}, {"value": 93, "name": "Float32"}, {"value": 109, "name": "Float64"}, {"value": 76, "name": "Int"}, {"value": 73, "name": "Int31"}, {"value": 289, "name": "Int31n"}, {"value": 78, "name": "Int63"}, {"value": 69, "name": "Int63-fm"}, {"value": 327, "name": "Int63n"}, {"value": 211, "name": "Intn"}, {"value": 582, "name": "NormFloat64"}, {"value": 262, "name": "Perm"}, {"value": 343, "name": "Read"}, {"value": 175, "name": "Seed"}, {"value": 73, "name": "Uint32"}, {"value": 160, "name": "Uint64"}], "name": "(*Rand)."}, {"children": [{"value": 121, "name": "Int63"}, {"value": 111, "name": "Seed"}, {"value": 121, "name": "Uint64"}, {"value": 303, "name": "read"}, {"value": 119, "name": "seedPos"}], "name": "(*lockedSource)."}, {"children": [{"value": 142, "name": "Int63"}, {"value": 460, "name": "Seed"}, {"value": 136, "name": "Uint64"}], "name": "(*rngSource)."}, {"children": [{"value": 74, "name": "Int63-fm"}], "name": "(Source64)."}, {"value": 74, "name": "ExpFloat64"}, {"value": 74, "name": "Float64"}, {"value": 72, "name": "Int"}, {"value": 72, "name": "Int63"}, {"value": 82, "name": "Int63n"}, {"value": 82, "name": "Intn"}, {"value": 255, "name": "New"}, {"value": 113, "name": "NewSource"}, {"value": 102, "name": "Perm"}, {"value": 72, "name": "Seed"}, {"value": 1024, "name": "fe"}, {"value": 512, "name": "fn"}, {"value": 8, "name": "globalRand"}, {"value": 349, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1024, "name": "ke"}, {"value": 512, "name": "kn"}, {"value": 195, "name": "read"}, {"value": 4856, "name": "rng_cooked"}, {"value": 1024, "name": "we"}, {"value": 512, "name": "wn"}], "name": "rand."}, {"children": [{"value": 48, "name": "go.itab.byteReader,io.ByteScanner"}, {"children": [{"value": 185, "name": "String"}], "name": "(*Accuracy)."}, {"children": [{"value": 171, "name": "Error"}], "name": "(*ErrNaN)."}, {"children": [{"value": 84, "name": "Abs"}, {"value": 14, "name": "Acc"}, {"value": 574, "name": "Add"}, {"value": 2350, "name": "Append"}, {"value": 326, "name": "Cmp"}, {"value": 371, "name": "Copy"}, {"value": 1219, "name": "Float32"}, {"value": 1254, "name": "Float64"}, {"value": 1928, "name": "Format"}, {"value": 898, "name": "GobDecode"}, {"value": 727, "name": "GobEncode"}, {"value": 1204, "name": "Int"}, {"value": 572, "name": "Int64"}, {"value": 19, "name": "IsInf"}, {"value": 150, "name": "IsInt"}, {"value": 133, "name": "MantExp"}, {"value": 259, "name": "MarshalText"}, {"value": 140, "name": "MinPrec"}, {"value": 14, "name": "Mode"}, {"value": 367, "name": "Mul"}, {"value": 90, "name": "Neg"}, {"value": 1144, "name": "Parse"}, {"value": 13, "name": "Prec"}, {"value": 377, "name": "Quo"}, {"value": 1364, "name": "Rat"}, {"value": 206, "name": "Scan"}, {"value": 418, "name": "Set"}, {"value": 551, "name": "SetFloat64"}, {"value": 27, "name": "SetInf"}, {"value": 487, "name": "SetInt"}, {"value": 95, "name": "SetInt64"}, {"value": 147, "name": "SetMantExp"}, {"value": 23, "name": "SetMode"}, {"value": 182, "name": "SetPrec"}, {"value": 707, "name": "SetRat"}, {"value": 141, "name": "SetString"}, {"value": 85, "name": "SetUint64"}, {"value": 51, "name": "Sign"}, {"value": 14, "name": "Signbit"}, {"value": 94, "name": "String"}, {"value": 577, "name": "Sub"}, {"value": 239, "name": "Text"}, {"value": 470, "name": "Uint64"}, {"value": 432, "name": "UnmarshalText"}, {"value": 973, "name": "fmtB"}, {"value": 1161, "name": "fmtP"}, {"value": 367, "name": "pow5"}, {"value": 1034, "name": "round"}, {"value": 1673, "name": "scan"}, {"value": 316, "name": "setBits64"}, {"value": 189, "name": "setExpAndRound"}, {"value": 1658, "name": "uadd"}, {"value": 260, "name": "ucmp"}, {"value": 357, "name": "umul"}, {"value": 804, "name": "uquo"}, {"value": 1653, "name": "usub"}], "name": "(*Float)."}, {"children": [{"value": 323, "name": "Abs"}, {"value": 712, "name": "Add"}, {"value": 1128, "name": "And"}, {"value": 1399, "name": "AndNot"}, {"value": 543, "name": "Append"}, {"value": 305, "name": "Binomial"}, {"value": 438, "name": "Bit"}, {"value": 92, "name": "BitLen"}, {"value": 33, "name": "Bits"}, {"value": 244, "name": "Bytes"}, {"value": 178, "name": "Cmp"}, {"value": 231, "name": "Div"}, {"value": 718, "name": "DivMod"}, {"value": 677, "name": "Exp"}, {"value": 2178, "name": "Format"}, {"value": 3210, "name": "GCD"}, {"value": 534, "name": "GobDecode"}, {"value": 373, "name": "GobEncode"}, {"value": 41, "name": "Int64"}, {"value": 213, "name": "Lsh"}, {"value": 110, "name": "MarshalJSON"}, {"value": 250, "name": "MarshalText"}, {"value": 673, "name": "Mod"}, {"value": 305, "name": "ModInverse"}, {"value": 416, "name": "ModSqrt"}, {"value": 270, "name": "Mul"}, {"value": 345, "name": "MulRange"}, {"value": 351, "name": "Neg"}, {"value": 433, "name": "Not"}, {"value": 1233, "name": "Or"}, {"value": 1009, "name": "ProbablyPrime"}, {"value": 332, "name": "Quo"}, {"value": 521, "name": "QuoRem"}, {"value": 356, "name": "Rand"}, {"value": 322, "name": "Rem"}, {"value": 557, "name": "Rsh"}, {"value": 456, "name": "Scan"}, {"value": 320, "name": "Set"}, {"value": 699, "name": "SetBit"}, {"value": 162, "name": "SetBits"}, {"value": 194, "name": "SetBytes"}, {"value": 193, "name": "SetInt64"}, {"value": 414, "name": "SetString"}, {"value": 174, "name": "SetUint64"}, {"value": 51, "name": "Sign"}, {"value": 280, "name": "Sqrt"}, {"value": 89, "name": "String"}, {"value": 712, "name": "Sub"}, {"value": 205, "name": "Text"}, {"value": 31, "name": "Uint64"}, {"value": 197, "name": "UnmarshalJSON"}, {"value": 367, "name": "UnmarshalText"}, {"value": 1128, "name": "Xor"}, {"value": 2737, "name": "binaryGCD"}, {"value": 443, "name": "modSqrt3Mod4Prime"}, {"value": 1883, "name": "modSqrtTonelliShanks"}, {"value": 524, "name": "scan"}], "name": "(*Int)."}, {"children": [{"value": 83, "name": "Abs"}, {"value": 402, "name": "Add"}, {"value": 193, "name": "Cmp"}, {"value": 336, "name": "Denom"}, {"value": 362, "name": "Float32"}, {"value": 368, "name": "Float64"}, {"value": 3160, "name": "FloatString"}, {"value": 867, "name": "GobDecode"}, {"value": 752, "name": "GobEncode"}, {"value": 749, "name": "Inv"}, {"value": 148, "name": "IsInt"}, {"value": 144, "name": "MarshalText"}, {"value": 288, "name": "Mul"}, {"value": 101, "name": "Neg"}, {"value": 13, "name": "Num"}, {"value": 436, "name": "Quo"}, {"value": 152, "name": "RatString"}, {"value": 557, "name": "Scan"}, {"value": 673, "name": "Set"}, {"value": 674, "name": "SetFloat64"}, {"value": 1035, "name": "SetFrac"}, {"value": 320, "name": "SetFrac64"}, {"value": 340, "name": "SetInt"}, {"value": 90, "name": "SetInt64"}, {"value": 2370, "name": "SetString"}, {"value": 47, "name": "Sign"}, {"value": 409, "name": "String"}, {"value": 402, "name": "Sub"}, {"value": 358, "name": "UnmarshalText"}, {"value": 862, "name": "norm"}], "name": "(*Rat)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*RoundingMode)."}, {"children": [{"value": 157, "name": "Read"}, {"value": 204, "name": "ReadByte"}, {"value": 128, "name": "ReadRune"}, {"value": 90, "name": "SkipSpace"}, {"value": 172, "name": "Token"}, {"value": 195, "name": "UnreadByte"}, {"value": 110, "name": "UnreadRune"}, {"value": 109, "name": "Width"}], "name": "(*byteReader)."}, {"children": [{"value": 1236, "name": "String"}, {"value": 849, "name": "init"}, {"value": 191, "name": "round"}, {"value": 109, "name": "roundDown"}, {"value": 223, "name": "roundUp"}], "name": "(*decimal)."}, {"children": [{"value": 330, "name": "String"}], "name": "Accuracy."}, {"children": [{"value": 21, "name": "Error"}], "name": "ErrNaN."}, {"value": 2153, "name": "Jacobi"}, {"value": 96, "name": "NewInt"}, {"value": 106, "name": "NewRat"}, {"children": [{"value": 313, "name": "String"}], "name": "RoundingMode."}, {"value": 4, "name": "_Accuracy_index"}, {"value": 7, "name": "_RoundingMode_index"}, {"value": 346, "name": "addAt"}, {"value": 151, "name": "addMulVVW"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "addMulVVW."}, {"value": 146, "name": "addVV"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "addVV."}, {"value": 133, "name": "addVW"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "addVW."}, {"value": 207, "name": "appendZeros"}, {"value": 363, "name": "basicMul"}, {"value": 28, "name": "bitLen"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "bitLen."}, {"children": [{"value": 158, "name": "Read"}, {"value": 264, "name": "ReadByte"}, {"value": 126, "name": "ReadRune"}, {"value": 88, "name": "SkipSpace"}, {"value": 173, "name": "Token"}, {"value": 86, "name": "UnreadByte"}, {"value": 108, "name": "UnreadRune"}, {"value": 107, "name": "Width"}], "name": "byteReader."}, {"value": 2568, "name": "cacheBase10"}, {"value": 64, "name": "deBruijn64Lookup"}, {"value": 50, "name": "divWVW"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "divWVW."}, {"value": 1684, "name": "divisors"}, {"value": 1327, "name": "fmtE"}, {"value": 924, "name": "fmtF"}, {"value": 174, "name": "fnorm"}, {"value": 304, "name": "getNat"}, {"value": 134, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "intOne"}, {"value": 2309, "name": "karatsuba"}, {"value": 297, "name": "karatsubaAdd"}, {"value": 56, "name": "karatsubaLen"}, {"value": 297, "name": "karatsubaSub"}, {"value": 8, "name": "karatsubaThreshold"}, {"value": 8, "name": "leafSize"}, {"value": 87, "name": "maxPow"}, {"value": 82, "name": "msb32"}, {"value": 80, "name": "msb64"}, {"value": 174, "name": "mulAddVWW"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "mulAddVWW."}, {"value": 665, "name": "mulDenom"}, {"children": [{"value": 1033, "name": "add"}, {"value": 318, "name": "and"}, {"value": 465, "name": "andNot"}, {"value": 140, "name": "bitLen"}, {"value": 147, "name": "bytes"}, {"value": 81, "name": "clear"}, {"value": 200, "name": "cmp"}, {"value": 1779, "name": "convertWords"}, {"value": 1166, "name": "div"}, {"value": 2781, "name": "divLarge"}, {"value": 751, "name": "divW"}, {"value": 3577, "name": "expNN"}, {"value": 4145, "name": "expNNMontgomery"}, {"value": 3279, "name": "expNNWindowed"}, {"value": 465, "name": "expWW"}, {"value": 1483, "name": "itoa"}, {"value": 198, "name": "modW"}, {"value": 978, "name": "montgomery"}, {"value": 2812, "name": "mul"}, {"value": 563, "name": "mulAddWW"}, {"value": 992, "name": "mulRange"}, {"value": 105, "name": "norm"}, {"value": 550, "name": "or"}, {"value": 5952, "name": "probablyPrimeLucas"}, {"value": 2531, "name": "probablyPrimeMillerRabin"}, {"value": 751, "name": "random"}, {"value": 3304, "name": "scan"}, {"value": 1034, "name": "setBit"}, {"value": 371, "name": "setBytes"}, {"value": 192, "name": "setUint64"}, {"value": 545, "name": "shl"}, {"value": 437, "name": "shr"}, {"value": 1559, "name": "sqrt"}, {"value": 215, "name": "sticky"}, {"value": 987, "name": "sub"}, {"value": 150, "name": "trailingZeroBits"}, {"value": 128, "name": "utoa"}, {"value": 550, "name": "xor"}], "name": "nat."}, {"value": 24, "name": "natOne"}, {"value": 24, "name": "natPool"}, {"value": 24, "name": "natTen"}, {"value": 24, "name": "natTwo"}, {"value": 77, "name": "nlz"}, {"value": 70, "name": "nlz64"}, {"value": 53, "name": "pow"}, {"value": 224, "name": "pow5tab"}, {"value": 84, "name": "putNat"}, {"value": 1623, "name": "quotToFloat32"}, {"value": 1696, "name": "quotToFloat64"}, {"value": 88, "name": "ratTok"}, {"value": 1541, "name": "roundShortest"}, {"value": 671, "name": "scaleDenom"}, {"value": 1277, "name": "scanExponent"}, {"value": 193, "name": "scanSign"}, {"value": 86, "name": "shlVU"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "shlVU."}, {"value": 660, "name": "shr"}, {"value": 87, "name": "shrVU"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "shrVU."}, {"value": 32, "name": "statictmp_1286"}, {"value": 8, "name": "statictmp_2188"}, {"value": 8, "name": "statictmp_2632"}, {"value": 32, "name": "statictmp_2633"}, {"value": 8, "name": "statictmp_2634"}, {"value": 8, "name": "statictmp_2635"}, {"value": 146, "name": "subVV"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "subVV."}, {"value": 136, "name": "subVW"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "subVW."}, {"value": 49, "name": "trailingZeroBits"}, {"value": 110, "name": "trim"}, {"value": 221, "name": "writeMultiple"}], "name": "big."}], "name": "math/"}, {"children": [{"children": [{"value": 40, "name": "go.itab.*Part,io.Reader"}, {"value": 40, "name": "go.itab.*part,io.Writer"}, {"value": 40, "name": "go.itab.*stickyErrorReader,io.Reader"}, {"value": 40, "name": "go.itab.partReader,io.Reader"}, {"value": 64, "name": "go.itab.sectionReadCloser,mime/multipart.File"}, {"children": [{"value": 435, "name": "Open"}], "name": "(*FileHeader)."}, {"children": [{"value": 376, "name": "RemoveAll"}], "name": "(*Form)."}, {"children": [{"value": 114, "name": "Close"}, {"value": 147, "name": "FileName"}, {"value": 251, "name": "FormName"}, {"value": 132, "name": "Read"}, {"value": 302, "name": "parseContentDisposition"}, {"value": 220, "name": "populateHeaders"}], "name": "(*Part)."}, {"children": [{"value": 1531, "name": "NextPart"}, {"value": 100, "name": "ReadForm"}, {"value": 603, "name": "isBoundaryDelimiterLine"}, {"value": 317, "name": "isFinalBoundary"}, {"value": 3442, "name": "readForm"}, {"children": [{"value": 75, "name": "func1"}], "name": "readForm."}], "name": "(*Reader)."}, {"children": [{"value": 24, "name": "Boundary"}, {"value": 326, "name": "Close"}, {"value": 497, "name": "CreateFormField"}, {"value": 673, "name": "CreateFormFile"}, {"value": 1923, "name": "CreatePart"}, {"value": 123, "name": "FormDataContentType"}, {"value": 661, "name": "SetBoundary"}, {"value": 257, "name": "WriteField"}], "name": "(*Writer)."}, {"children": [{"value": 363, "name": "Write"}], "name": "(*part)."}, {"children": [{"value": 226, "name": "Read"}], "name": "(*partReader)."}, {"children": [{"value": 172, "name": "Close"}, {"value": 45, "name": "Read"}, {"value": 45, "name": "ReadAt"}, {"value": 45, "name": "Seek"}, {"value": 27, "name": "Size"}], "name": "(*sectionReadCloser)."}, {"children": [{"value": 253, "name": "Read"}], "name": "(*stickyErrorReader)."}, {"value": 223, "name": "NewWriter"}, {"value": 8, "name": "emptyParams"}, {"value": 102, "name": "escapeQuotes"}, {"value": 431, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1110, "name": "newPart"}, {"children": [{"value": 954, "name": "Read"}], "name": "partReader."}, {"value": 8, "name": "quoteEscaper"}, {"value": 344, "name": "randomBoundary"}, {"value": 1489, "name": "scanUntilBoundary"}, {"children": [{"value": 19, "name": "Close"}, {"value": 145, "name": "Read"}, {"value": 165, "name": "ReadAt"}, {"value": 180, "name": "Seek"}, {"value": 53, "name": "Size"}], "name": "sectionReadCloser."}, {"value": 81, "name": "skipLWSPChar"}, {"value": 64, "name": "statictmp_296"}], "name": "multipart."}, {"children": [{"value": 40, "name": "go.itab.*Reader,io.Reader"}, {"children": [{"value": 2777, "name": "Read"}], "name": "(*Reader)."}, {"children": [{"value": 2, "name": "1"}, {"value": 1, "name": "2"}, {"value": 1, "name": "3"}], "name": ".gobytes."}, {"value": 24, "name": "crlf"}, {"value": 338, "name": "fromHex"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 36, "name": "isQPDiscardWhitespace"}, {"value": 24, "name": "lf"}, {"value": 266, "name": "readHexByte"}, {"value": 24, "name": "softSuffix"}], "name": "quotedprintable."}], "name": "mime/"}, {"children": [{"value": 40, "name": "go.itab.*AddrError,error"}, {"value": 40, "name": "go.itab.*DNSError,error"}, {"value": 40, "name": "go.itab.*Dialer,net.dnsDialer"}, {"value": 48, "name": "go.itab.*IPAddr,net.Addr"}, {"value": 80, "name": "go.itab.*IPAddr,net.sockaddr"}, {"value": 96, "name": "go.itab.*IPConn,net.Conn"}, {"value": 48, "name": "go.itab.*IPNet,net.Addr"}, {"value": 40, "name": "go.itab.*OpError,error"}, {"value": 40, "name": "go.itab.*ParseError,error"}, {"value": 48, "name": "go.itab.*TCPAddr,net.Addr"}, {"value": 80, "name": "go.itab.*TCPAddr,net.sockaddr"}, {"value": 48, "name": "go.itab.*TCPConn,io.ReadWriter"}, {"value": 40, "name": "go.itab.*TCPConn,io.Writer"}, {"value": 96, "name": "go.itab.*TCPConn,net.Conn"}, {"value": 56, "name": "go.itab.*TCPConn,net.dnsConn"}, {"value": 56, "name": "go.itab.*TCPListener,net.Listener"}, {"value": 48, "name": "go.itab.*UDPAddr,net.Addr"}, {"value": 80, "name": "go.itab.*UDPAddr,net.sockaddr"}, {"value": 48, "name": "go.itab.*UDPConn,io.ReadWriter"}, {"value": 96, "name": "go.itab.*UDPConn,net.Conn"}, {"value": 56, "name": "go.itab.*UDPConn,net.dnsConn"}, {"value": 48, "name": "go.itab.*UnixAddr,net.Addr"}, {"value": 80, "name": "go.itab.*UnixAddr,net.sockaddr"}, {"value": 96, "name": "go.itab.*UnixConn,net.Conn"}, {"value": 56, "name": "go.itab.*UnixListener,net.Listener"}, {"value": 56, "name": "go.itab.*byRFC6724,sort.Interface"}, {"value": 40, "name": "go.itab.*dnsHeader,net.dnsStruct"}, {"value": 40, "name": "go.itab.*dnsMsgHdr,net.dnsStruct"}, {"value": 40, "name": "go.itab.*dnsQuestion,net.dnsStruct"}, {"value": 48, "name": "go.itab.*dnsRR_A,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_AAAA,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_CNAME,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_Header,net.dnsRR"}, {"value": 40, "name": "go.itab.*dnsRR_Header,net.dnsStruct"}, {"value": 48, "name": "go.itab.*dnsRR_MX,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_NS,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_PTR,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_SOA,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_SRV,net.dnsRR"}, {"value": 48, "name": "go.itab.*dnsRR_TXT,net.dnsRR"}, {"value": 40, "name": "go.itab.*timeoutError,error"}, {"value": 40, "name": "go.itab.UnknownNetworkError,error"}, {"value": 40, "name": "go.itab.addrinfoErrno,error"}, {"value": 56, "name": "go.itab.byMaskLength,sort.Interface"}, {"value": 56, "name": "go.itab.byPref,sort.Interface"}, {"value": 56, "name": "go.itab.byPriorityWeight,sort.Interface"}, {"value": 40, "name": "go.itab.writerOnly,io.Writer"}, {"children": [{"value": 211, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "(*AddrError)."}, {"children": [{"value": 333, "name": "Error"}, {"value": 29, "name": "Temporary"}, {"value": 14, "name": "Timeout"}], "name": "(*DNSError)."}, {"children": [{"value": 189, "name": "Dial"}, {"value": 151, "name": "Dial-fm"}, {"value": 3230, "name": "DialContext"}, {"value": 187, "name": "DialContext-fm"}, {"children": [{"value": 285, "name": "func1"}], "name": "DialContext."}, {"value": 513, "name": "deadline"}, {"value": 1959, "name": "dialDNS"}], "name": "(*Dialer)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Flags)."}, {"children": [{"value": 204, "name": "String"}], "name": "(*HardwareAddr)."}, {"children": [{"value": 214, "name": "DefaultMask"}, {"value": 223, "name": "Equal"}, {"value": 193, "name": "IsGlobalUnicast"}, {"value": 199, "name": "IsInterfaceLocalMulticast"}, {"value": 193, "name": "IsLinkLocalMulticast"}, {"value": 193, "name": "IsLinkLocalUnicast"}, {"value": 193, "name": "IsLoopback"}, {"value": 193, "name": "IsMulticast"}, {"value": 193, "name": "IsUnspecified"}, {"value": 234, "name": "MarshalText"}, {"value": 250, "name": "Mask"}, {"value": 204, "name": "String"}, {"value": 432, "name": "To16"}, {"value": 214, "name": "To4"}, {"value": 477, "name": "UnmarshalText"}], "name": "(*IP)."}, {"children": [{"value": 22, "name": "Network"}, {"value": 250, "name": "String"}, {"value": 152, "name": "family"}, {"value": 115, "name": "isWildcard"}, {"value": 234, "name": "sockaddr"}, {"value": 348, "name": "toLocal"}], "name": "(*IPAddr)."}, {"children": [{"value": 35, "name": "Close"}, {"value": 44, "name": "File"}, {"value": 35, "name": "LocalAddr"}, {"value": 44, "name": "Read"}, {"value": 780, "name": "ReadFrom"}, {"value": 688, "name": "ReadFromIP"}, {"value": 871, "name": "ReadMsgIP"}, {"value": 35, "name": "RemoteAddr"}, {"value": 35, "name": "SetDeadline"}, {"value": 35, "name": "SetReadBuffer"}, {"value": 35, "name": "SetReadDeadline"}, {"value": 35, "name": "SetWriteBuffer"}, {"value": 35, "name": "SetWriteDeadline"}, {"value": 44, "name": "Write"}, {"value": 867, "name": "WriteMsgIP"}, {"value": 1247, "name": "WriteTo"}, {"value": 725, "name": "WriteToIP"}, {"value": 877, "name": "readFrom"}, {"value": 886, "name": "readMsg"}, {"value": 468, "name": "writeMsg"}, {"value": 368, "name": "writeTo"}], "name": "(*IPConn)."}, {"children": [{"value": 204, "name": "Size"}, {"value": 204, "name": "String"}], "name": "(*IPMask)."}, {"children": [{"value": 306, "name": "Contains"}, {"value": 22, "name": "Network"}, {"value": 632, "name": "String"}], "name": "(*IPNet)."}, {"children": [{"value": 936, "name": "Addrs"}, {"value": 936, "name": "MulticastAddrs"}], "name": "(*Interface)."}, {"children": [{"value": 700, "name": "Error"}, {"value": 277, "name": "Temporary"}, {"value": 277, "name": "Timeout"}], "name": "(*OpError)."}, {"children": [{"value": 168, "name": "Error"}], "name": "(*ParseError)."}, {"children": [{"value": 171, "name": "(net.lookupIP)-fm"}, {"value": 175, "name": "LookupAddr"}, {"value": 159, "name": "LookupCNAME"}, {"value": 662, "name": "LookupHost"}, {"value": 2767, "name": "LookupIPAddr"}, {"children": [{"value": 243, "name": "func1"}], "name": "LookupIPAddr."}, {"value": 175, "name": "LookupMX"}, {"value": 175, "name": "LookupNS"}, {"value": 494, "name": "LookupPort"}, {"value": 285, "name": "LookupSRV"}, {"value": 175, "name": "LookupTXT"}, {"value": 2748, "name": "internetAddrList"}, {"children": [{"value": 1614, "name": "func1"}], "name": "internetAddrList."}, {"value": 345, "name": "lookupAddr"}, {"value": 314, "name": "lookupCNAME"}, {"value": 381, "name": "lookupHost"}, {"value": 527, "name": "lookupIP"}, {"value": 721, "name": "lookupMX"}, {"value": 694, "name": "lookupNS"}, {"value": 486, "name": "lookupPort"}, {"value": 1042, "name": "lookupSRV"}, {"value": 567, "name": "lookupTXT"}, {"value": 5922, "name": "resolveAddrList"}], "name": "(*Resolver)."}, {"children": [{"value": 22, "name": "Network"}, {"value": 445, "name": "String"}, {"value": 152, "name": "family"}, {"value": 115, "name": "isWildcard"}, {"value": 234, "name": "sockaddr"}, {"value": 356, "name": "toLocal"}], "name": "(*TCPAddr)."}, {"children": [{"value": 35, "name": "Close"}, {"value": 582, "name": "CloseRead"}, {"value": 582, "name": "CloseWrite"}, {"value": 44, "name": "File"}, {"value": 35, "name": "LocalAddr"}, {"value": 44, "name": "Read"}, {"value": 727, "name": "ReadFrom"}, {"value": 35, "name": "RemoteAddr"}, {"value": 35, "name": "SetDeadline"}, {"value": 591, "name": "SetKeepAlive"}, {"value": 592, "name": "SetKeepAlivePeriod"}, {"value": 592, "name": "SetLinger"}, {"value": 591, "name": "SetNoDelay"}, {"value": 35, "name": "SetReadBuffer"}, {"value": 35, "name": "SetReadDeadline"}, {"value": 35, "name": "SetWriteBuffer"}, {"value": 35, "name": "SetWriteDeadline"}, {"value": 44, "name": "Write"}, {"value": 112, "name": "dnsRoundTrip"}, {"value": 215, "name": "readFrom"}], "name": "(*TCPConn)."}, {"children": [{"value": 636, "name": "Accept"}, {"value": 606, "name": "AcceptTCP"}, {"value": 27, "name": "Addr"}, {"value": 578, "name": "Close"}, {"value": 598, "name": "File"}, {"value": 627, "name": "SetDeadline"}, {"value": 152, "name": "accept"}, {"value": 83, "name": "close"}, {"value": 138, "name": "file"}], "name": "(*TCPListener)."}, {"children": [{"value": 22, "name": "Network"}, {"value": 445, "name": "String"}, {"value": 152, "name": "family"}, {"value": 115, "name": "isWildcard"}, {"value": 234, "name": "sockaddr"}, {"value": 356, "name": "toLocal"}], "name": "(*UDPAddr)."}, {"children": [{"value": 35, "name": "Close"}, {"value": 44, "name": "File"}, {"value": 35, "name": "LocalAddr"}, {"value": 44, "name": "Read"}, {"value": 780, "name": "ReadFrom"}, {"value": 688, "name": "ReadFromUDP"}, {"value": 871, "name": "ReadMsgUDP"}, {"value": 35, "name": "RemoteAddr"}, {"value": 35, "name": "SetDeadline"}, {"value": 35, "name": "SetReadBuffer"}, {"value": 35, "name": "SetReadDeadline"}, {"value": 35, "name": "SetWriteBuffer"}, {"value": 35, "name": "SetWriteDeadline"}, {"value": 44, "name": "Write"}, {"value": 867, "name": "WriteMsgUDP"}, {"value": 1247, "name": "WriteTo"}, {"value": 725, "name": "WriteToUDP"}, {"value": 112, "name": "dnsRoundTrip"}, {"value": 762, "name": "readFrom"}, {"value": 932, "name": "readMsg"}, {"value": 499, "name": "writeMsg"}, {"value": 368, "name": "writeTo"}], "name": "(*UDPConn)."}, {"children": [{"value": 24, "name": "Network"}, {"value": 50, "name": "String"}, {"value": 10, "name": "family"}, {"value": 32, "name": "isWildcard"}, {"value": 220, "name": "sockaddr"}, {"value": 23, "name": "toLocal"}], "name": "(*UnixAddr)."}, {"children": [{"value": 35, "name": "Close"}, {"value": 582, "name": "CloseRead"}, {"value": 582, "name": "CloseWrite"}, {"value": 44, "name": "File"}, {"value": 35, "name": "LocalAddr"}, {"value": 44, "name": "Read"}, {"value": 780, "name": "ReadFrom"}, {"value": 688, "name": "ReadFromUnix"}, {"value": 871, "name": "ReadMsgUnix"}, {"value": 35, "name": "RemoteAddr"}, {"value": 35, "name": "SetDeadline"}, {"value": 35, "name": "SetReadBuffer"}, {"value": 35, "name": "SetReadDeadline"}, {"value": 35, "name": "SetWriteBuffer"}, {"value": 35, "name": "SetWriteDeadline"}, {"value": 44, "name": "Write"}, {"value": 867, "name": "WriteMsgUnix"}, {"value": 1247, "name": "WriteTo"}, {"value": 725, "name": "WriteToUnix"}, {"value": 511, "name": "readFrom"}, {"value": 650, "name": "readMsg"}, {"value": 613, "name": "writeMsg"}, {"value": 544, "name": "writeTo"}], "name": "(*UnixConn)."}, {"children": [{"value": 636, "name": "Accept"}, {"value": 606, "name": "AcceptUnix"}, {"value": 27, "name": "Addr"}, {"value": 578, "name": "Close"}, {"value": 585, "name": "File"}, {"value": 627, "name": "SetDeadline"}, {"value": 14, "name": "SetUnlinkOnClose"}, {"value": 217, "name": "accept"}, {"value": 142, "name": "close"}, {"children": [{"value": 102, "name": "func1"}], "name": "close."}, {"value": 138, "name": "file"}], "name": "(*UnixListener)."}, {"children": [{"value": 225, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*UnknownNetworkError)."}, {"children": [{"value": 186, "name": "Error"}, {"value": 168, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*addrinfoErrno)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 376, "name": "Swap"}], "name": "(*byMaskLength)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 214, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*byPref)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 240, "name": "Less"}, {"value": 309, "name": "Swap"}], "name": "(*byPriorityWeight)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 1173, "name": "Less"}, {"value": 939, "name": "Swap"}], "name": "(*byRFC6724)."}, {"children": [{"value": 93, "name": "canUseCgo"}, {"value": 3354, "name": "hostLookupOrder"}, {"children": [{"value": 245, "name": "func1"}], "name": "hostLookupOrder."}], "name": "(*conf)."}, {"children": [{"value": 553, "name": "Close"}, {"value": 480, "name": "File"}, {"value": 68, "name": "LocalAddr"}, {"value": 733, "name": "Read"}, {"value": 68, "name": "RemoteAddr"}, {"value": 627, "name": "SetDeadline"}, {"value": 591, "name": "SetReadBuffer"}, {"value": 627, "name": "SetReadDeadline"}, {"value": 591, "name": "SetWriteBuffer"}, {"value": 627, "name": "SetWriteDeadline"}, {"value": 641, "name": "Write"}], "name": "(*conn)."}, {"children": [{"value": 53, "name": "Dial"}, {"value": 53, "name": "DialContext"}, {"value": 53, "name": "dialDNS"}], "name": "(*dialParam)."}, {"children": [{"value": 110, "name": "Close"}, {"value": 111, "name": "Error"}, {"value": 110, "name": "LocalAddr"}, {"value": 157, "name": "Read"}, {"value": 110, "name": "RemoteAddr"}, {"value": 141, "name": "SetDeadline"}, {"value": 141, "name": "SetReadDeadline"}, {"value": 141, "name": "SetWriteDeadline"}, {"value": 157, "name": "Write"}], "name": "(*dialResult.1)."}, {"children": [{"value": 1541, "name": "nameList"}, {"value": 40, "name": "serverOffset"}], "name": "(*dnsConfig)."}, {"children": [{"value": 593, "name": "Walk"}], "name": "(*dnsHeader)."}, {"children": [{"value": 406, "name": "IsResponseTo"}, {"value": 1395, "name": "Pack"}, {"value": 1265, "name": "String"}, {"value": 2345, "name": "Unpack"}, {"value": 22, "name": "Walk"}], "name": "(*dnsMsg)."}, {"children": [{"value": 781, "name": "Walk"}], "name": "(*dnsMsgHdr)."}, {"children": [{"value": 314, "name": "Walk"}], "name": "(*dnsQuestion)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 178, "name": "Walk"}], "name": "(*dnsRR_A)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 235, "name": "Walk"}], "name": "(*dnsRR_AAAA)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 178, "name": "Walk"}], "name": "(*dnsRR_CNAME)."}, {"children": [{"value": 11, "name": "Header"}, {"value": 502, "name": "Walk"}], "name": "(*dnsRR_Header)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 268, "name": "Walk"}], "name": "(*dnsRR_MX)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 178, "name": "Walk"}], "name": "(*dnsRR_NS)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 178, "name": "Walk"}], "name": "(*dnsRR_PTR)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 741, "name": "Walk"}], "name": "(*dnsRR_SOA)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 456, "name": "Walk"}], "name": "(*dnsRR_SRV)."}, {"children": [{"value": 13, "name": "Header"}, {"value": 462, "name": "Walk"}], "name": "(*dnsRR_TXT)."}, {"children": [{"value": 192, "name": "decref"}, {"value": 203, "name": "incref"}, {"value": 384, "name": "increfAndClose"}, {"value": 475, "name": "rwlock"}, {"value": 327, "name": "rwunlock"}], "name": "(*fdMutex)."}, {"children": [{"value": 63, "name": "close"}, {"value": 488, "name": "getLineFromData"}, {"value": 490, "name": "readLine"}], "name": "(*file)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*hostLookupOrder)."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 17, "name": "RLock"}, {"value": 35, "name": "RLocker"}, {"value": 17, "name": "RUnlock"}, {"value": 17, "name": "Unlock"}, {"value": 1094, "name": "update"}], "name": "(*ipv6ZoneCache)."}, {"children": [{"value": 162, "name": "Close"}, {"value": 1046, "name": "Read"}, {"value": 1059, "name": "Write"}, {"value": 1301, "name": "accept"}, {"value": 166, "name": "addrFunc"}, {"children": [{"value": 19, "name": "func1"}], "name": "addrFunc."}, {"value": 89, "name": "closeRead"}, {"value": 89, "name": "closeWrite"}, {"value": 2773, "name": "connect"}, {"children": [{"value": 202, "name": "func1"}, {"value": 481, "name": "func2"}], "name": "connect."}, {"value": 87, "name": "decref"}, {"value": 146, "name": "destroy"}, {"value": 1267, "name": "dial"}, {"value": 424, "name": "dup"}, {"value": 123, "name": "incref"}, {"value": 124, "name": "init"}, {"value": 1123, "name": "listenDatagram"}, {"value": 903, "name": "listenStream"}, {"value": 314, "name": "name"}, {"value": 1016, "name": "readFrom"}, {"value": 128, "name": "readLock"}, {"value": 1179, "name": "readMsg"}, {"value": 92, "name": "readUnlock"}, {"value": 222, "name": "setAddr"}, {"value": 117, "name": "setDeadline"}, {"value": 117, "name": "setReadDeadline"}, {"value": 117, "name": "setWriteDeadline"}, {"value": 410, "name": "shutdown"}, {"value": 128, "name": "writeLock"}, {"value": 962, "name": "writeMsg"}, {"value": 815, "name": "writeTo"}, {"value": 92, "name": "writeUnlock"}], "name": "(*netFD)."}, {"children": [{"value": 242, "name": "Classify"}], "name": "(*policyTable)."}, {"children": [{"value": 90, "name": "close"}, {"value": 78, "name": "evict"}, {"value": 201, "name": "init"}, {"value": 107, "name": "prepare"}, {"value": 89, "name": "prepareRead"}, {"value": 89, "name": "prepareWrite"}, {"value": 107, "name": "wait"}, {"value": 89, "name": "waitRead"}, {"value": 89, "name": "waitWrite"}], "name": "(*pollDesc)."}, {"children": [{"value": 111, "name": "Error"}], "name": "(*racer.2)."}, {"children": [{"value": 59, "name": "(net.init)-fm"}, {"value": 363, "name": "init"}, {"value": 85, "name": "releaseSema"}, {"value": 115, "name": "tryAcquireSema"}, {"value": 724, "name": "tryUpdate"}], "name": "(*resolverConfig)."}, {"children": [{"value": 22, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "(*timeoutError)."}, {"children": [{"value": 157, "name": "Write"}], "name": "(*writerOnly)."}, {"value": 354, "name": "CIDRMask"}, {"value": 8, "name": "DefaultResolver"}, {"value": 231, "name": "Dial"}, {"value": 244, "name": "DialTimeout"}, {"value": 1922, "name": "DialUDP"}, {"value": 1569, "name": "DialUnix"}, {"value": 16, "name": "ErrWriteToConnected"}, {"children": [{"value": 365, "name": "String"}], "name": "Flags."}, {"children": [{"value": 699, "name": "String"}], "name": "HardwareAddr."}, {"children": [{"value": 298, "name": "DefaultMask"}, {"value": 608, "name": "Equal"}, {"value": 372, "name": "IsGlobalUnicast"}, {"value": 49, "name": "IsInterfaceLocalMulticast"}, {"value": 221, "name": "IsLinkLocalMulticast"}, {"value": 203, "name": "IsLinkLocalUnicast"}, {"value": 215, "name": "IsLoopback"}, {"value": 171, "name": "IsMulticast"}, {"value": 218, "name": "IsUnspecified"}, {"value": 559, "name": "MarshalText"}, {"value": 599, "name": "Mask"}, {"value": 1514, "name": "String"}, {"value": 403, "name": "To16"}, {"value": 277, "name": "To4"}, {"value": 726, "name": "matchAddrFamily"}], "name": "IP."}, {"children": [{"value": 141, "name": "Size"}, {"value": 139, "name": "String"}], "name": "IPMask."}, {"value": 281, "name": "IPv4"}, {"value": 199, "name": "IPv4Mask"}, {"value": 24, "name": "IPv4allrouter"}, {"value": 24, "name": "IPv4allsys"}, {"value": 24, "name": "IPv4bcast"}, {"value": 24, "name": "IPv4zero"}, {"value": 24, "name": "IPv6loopback"}, {"value": 24, "name": "IPv6unspecified"}, {"value": 24, "name": "IPv6zero"}, {"value": 377, "name": "JoinHostPort"}, {"value": 1759, "name": "Listen"}, {"value": 1374, "name": "ListenTCP"}, {"value": 1634, "name": "ListenUnix"}, {"value": 1559, "name": "ListenUnixgram"}, {"value": 172, "name": "LookupHost"}, {"value": 1382, "name": "ParseCIDR"}, {"value": 232, "name": "ParseIP"}, {"value": 754, "name": "ResolveTCPAddr"}, {"value": 754, "name": "ResolveUDPAddr"}, {"value": 2054, "name": "SplitHostPort"}, {"children": [{"value": 250, "name": "func1"}], "name": "SplitHostPort."}, {"children": [{"value": 120, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "UnknownNetworkError."}, {"value": 308, "name": "_C2func_getaddrinfo"}, {"value": 539, "name": "_C2func_getnameinfo"}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 80, "name": "_Cfunc_GoString"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 121, "name": "_Cfunc_freeaddrinfo"}, {"value": 169, "name": "_Cfunc_gai_strerror"}, {"value": 8, "name": "_cgo_cb4050e05860_C2func_getaddrinfo"}, {"value": 8, "name": "_cgo_cb4050e05860_C2func_getnameinfo"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc_free"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc_freeaddrinfo"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc_gai_strerror"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 24, "name": "aLongTimeAgo"}, {"value": 257, "name": "absDomainName"}, {"value": 1341, "name": "accept"}, {"value": 8, "name": "accept4Func"}, {"value": 8, "name": "acceptFunc"}, {"children": [{"value": 210, "name": "first"}, {"value": 840, "name": "partition"}], "name": "addrList."}, {"value": 1557, "name": "addrRecordList"}, {"value": 1272, "name": "addrTable"}, {"children": [{"value": 93, "name": "Error"}, {"value": 17, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "addrinfoErrno."}, {"value": 48, "name": "allFF"}, {"value": 2447, "name": "answer"}, {"value": 464, "name": "appendHex"}, {"value": 158, "name": "avoidDNS"}, {"children": [{"value": 11, "name": "Len"}, {"value": 219, "name": "Less"}, {"value": 269, "name": "Swap"}], "name": "byMaskLength."}, {"children": [{"value": 11, "name": "Len"}, {"value": 84, "name": "Less"}, {"value": 202, "name": "Swap"}, {"value": 368, "name": "sort"}], "name": "byPref."}, {"children": [{"value": 11, "name": "Len"}, {"value": 110, "name": "Less"}, {"value": 202, "name": "Swap"}, {"value": 379, "name": "shuffleByWeight"}, {"value": 382, "name": "sort"}], "name": "byPriorityWeight."}, {"value": 122, "name": "bytesEqual"}, {"value": 255, "name": "cgoIPLookup"}, {"value": 1194, "name": "cgoLookupAddrPTR"}, {"value": 993, "name": "cgoLookupCNAME"}, {"value": 677, "name": "cgoLookupHost"}, {"value": 1028, "name": "cgoLookupIP"}, {"value": 2247, "name": "cgoLookupIPCNAME"}, {"children": [{"value": 113, "name": "func1"}, {"value": 474, "name": "func2"}, {"value": 113, "name": "func3"}], "name": "cgoLookupIPCNAME."}, {"value": 1924, "name": "cgoLookupPTR"}, {"value": 2029, "name": "cgoLookupPort"}, {"value": 1414, "name": "cgoLookupServicePort"}, {"children": [{"value": 113, "name": "func1"}, {"value": 354, "name": "func2"}, {"value": 113, "name": "func3"}], "name": "cgoLookupServicePort."}, {"value": 169, "name": "cgoNameinfoPTR"}, {"value": 200, "name": "cgoPortLookup"}, {"value": 241, "name": "cgoReverseLookup"}, {"value": 781, "name": "cgoSockaddr"}, {"value": 24, "name": "classAMask"}, {"value": 24, "name": "classBMask"}, {"value": 24, "name": "classCMask"}, {"value": 395, "name": "classifyScope"}, {"value": 8, "name": "closeFunc"}, {"value": 486, "name": "commonPrefixLen"}, {"value": 12, "name": "confOnce"}, {"value": 8, "name": "confVal"}, {"value": 8, "name": "connectFunc"}, {"value": 301, "name": "convertErr"}, {"value": 489, "name": "copyIP"}, {"value": 51, "name": "count"}, {"value": 162, "name": "countAnyByte"}, {"value": 24, "name": "defaultNS"}, {"value": 820, "name": "dialIP"}, {"value": 2094, "name": "dialParallel"}, {"children": [{"value": 531, "name": "func1"}], "name": "dialParallel."}, {"children": [{"value": 108, "name": "Close"}, {"value": 108, "name": "Error"}, {"value": 108, "name": "LocalAddr"}, {"value": 167, "name": "Read"}, {"value": 108, "name": "RemoteAddr"}, {"value": 145, "name": "SetDeadline"}, {"value": 145, "name": "SetReadDeadline"}, {"value": 145, "name": "SetWriteDeadline"}, {"value": 167, "name": "Write"}], "name": "dialResult.1."}, {"value": 2453, "name": "dialSerial"}, {"value": 2591, "name": "dialSingle"}, {"children": [{"value": 124, "name": "func1"}], "name": "dialSingle."}, {"value": 287, "name": "dialTCP"}, {"value": 391, "name": "dialUDP"}, {"value": 347, "name": "dialUnix"}, {"value": 488, "name": "dnsDefaultSearch"}, {"value": 4363, "name": "dnsReadConfig"}, {"value": 1556, "name": "dnsRoundTripTCP"}, {"value": 674, "name": "dnsRoundTripUDP"}, {"value": 887, "name": "doDialTCP"}, {"value": 135, "name": "dtoi"}, {"value": 478, "name": "dupCloseOnExec"}, {"value": 430, "name": "dupCloseOnExecOld"}, {"value": 147, "name": "equalASCIILabel"}, {"value": 16, "name": "errCanceled"}, {"value": 16, "name": "errClosing"}, {"value": 16, "name": "errInvalidInterface"}, {"value": 16, "name": "errInvalidInterfaceIndex"}, {"value": 16, "name": "errInvalidInterfaceName"}, {"value": 16, "name": "errMissingAddress"}, {"value": 16, "name": "errNoSuchHost"}, {"value": 16, "name": "errNoSuchInterface"}, {"value": 16, "name": "errNoSuchMulticastInterface"}, {"value": 16, "name": "errNoSuitableAddress"}, {"value": 16, "name": "errTimeout"}, {"value": 1876, "name": "exchange"}, {"value": 519, "name": "favoriteAddrFamily"}, {"value": 1008, "name": "filterAddrList"}, {"value": 24, "name": "flagNames"}, {"value": 484, "name": "foreachField"}, {"value": 389, "name": "foreachLine"}, {"value": 197, "name": "genericReadFrom"}, {"value": 121, "name": "getFields"}, {"value": 8, "name": "getHostname"}, {"value": 8, "name": "getsockoptIntFunc"}, {"children": [{"value": 84, "name": "func1"}, {"value": 84, "name": "func10"}, {"value": 167, "name": "func11"}, {"value": 1, "name": "func12"}, {"value": 1, "name": "func14"}, {"value": 84, "name": "func2"}, {"value": 84, "name": "func3"}, {"value": 84, "name": "func4"}, {"value": 84, "name": "func5"}, {"value": 84, "name": "func6"}, {"value": 84, "name": "func7"}, {"value": 84, "name": "func8"}, {"value": 84, "name": "func9"}], "name": "glob."}, {"value": 366, "name": "goDebugNetDNS"}, {"children": [{"value": 165, "name": "func1"}], "name": "goDebugNetDNS."}, {"value": 589, "name": "goDebugString"}, {"value": 209, "name": "goLookupCNAME"}, {"value": 1004, "name": "goLookupHostOrder"}, {"value": 222, "name": "goLookupIP"}, {"value": 2960, "name": "goLookupIPCNAMEOrder"}, {"children": [{"value": 318, "name": "func1"}], "name": "goLookupIPCNAMEOrder."}, {"value": 709, "name": "goLookupIPFiles"}, {"value": 796, "name": "goLookupPTR"}, {"value": 151, "name": "goLookupPort"}, {"value": 275, "name": "hexString"}, {"children": [{"value": 241, "name": "String"}], "name": "hostLookupOrder."}, {"value": 96, "name": "hosts"}, {"value": 4909, "name": "init"}, {"children": [{"value": 239, "name": "1"}, {"value": 87, "name": "2"}], "name": "init."}, {"value": 788, "name": "initConfVal"}, {"children": [{"value": 255, "name": "func1"}], "name": "initConfVal."}, {"value": 1, "name": "initdone."}, {"value": 1060, "name": "interfaceAddrTable"}, {"value": 349, "name": "interfaceByIndex"}, {"value": 498, "name": "interfaceMulticastAddrTable"}, {"value": 1696, "name": "interfaceTable"}, {"value": 359, "name": "internetSocket"}, {"value": 492, "name": "ipAddrsEface"}, {"value": 254, "name": "ipAttrOf"}, {"value": 136, "name": "ipEmptyString"}, {"value": 1856, "name": "ipToSockaddr"}, {"value": 95, "name": "ipv4only"}, {"value": 108, "name": "ipv6only"}, {"value": 349, "name": "isDomainName"}, {"value": 100, "name": "isGateway"}, {"value": 450, "name": "isIPv4"}, {"value": 297, "name": "isLocalhost"}, {"value": 45, "name": "isZeros"}, {"value": 188, "name": "itoa"}, {"value": 79, "name": "last"}, {"value": 8, "name": "listenFunc"}, {"value": 388, "name": "listenTCP"}, {"value": 480, "name": "listenUnix"}, {"value": 347, "name": "listenUnixgram"}, {"value": 8, "name": "listenerBacklog"}, {"value": 1105, "name": "lookup"}, {"value": 16, "name": "lookupGroup"}, {"value": 8, "name": "lookupOrderName"}, {"value": 1186, "name": "lookupPortMap"}, {"value": 128, "name": "lookupProtocol"}, {"value": 524, "name": "lookupProtocolMap"}, {"value": 599, "name": "lookupStaticAddr"}, {"value": 681, "name": "lookupStaticHost"}, {"value": 55, "name": "lowerASCIIBytes"}, {"value": 378, "name": "maxListenerBacklog"}, {"value": 271, "name": "mustCIDR"}, {"value": 1, "name": "netCgo"}, {"value": 1, "name": "netGo"}, {"value": 443, "name": "networkNumberAndMask"}, {"value": 1185, "name": "newAddr"}, {"value": 593, "name": "newLink"}, {"value": 146, "name": "newTCPConn"}, {"value": 24, "name": "noDeadline"}, {"children": [{"value": 1062, "name": "standardCriteria"}], "name": "nssSource."}, {"value": 12, "name": "onceReadProtocols"}, {"value": 12, "name": "onceReadServices"}, {"value": 383, "name": "open"}, {"value": 511, "name": "packDomainName"}, {"value": 514, "name": "packRR"}, {"value": 456, "name": "packStruct"}, {"children": [{"value": 1291, "name": "func1"}], "name": "packStruct."}, {"value": 199, "name": "parseCriteria"}, {"children": [{"value": 1099, "name": "func1"}], "name": "parseCriteria."}, {"value": 700, "name": "parseIPv4"}, {"value": 1941, "name": "parseIPv6"}, {"value": 387, "name": "parseLiteralIP"}, {"value": 453, "name": "parseNSSConf"}, {"children": [{"value": 2479, "name": "func1"}], "name": "parseNSSConf."}, {"value": 339, "name": "parseNSSConfFile"}, {"value": 2014, "name": "parseNetwork"}, {"value": 422, "name": "parsePort"}, {"value": 1622, "name": "parseProcNetIGMP"}, {"value": 1507, "name": "parseProcNetIGMP6"}, {"value": 550, "name": "partialDeadline"}, {"children": [{"value": 270, "name": "Classify"}], "name": "policyTable."}, {"value": 481, "name": "printStruct"}, {"children": [{"value": 2455, "name": "func1"}], "name": "printStruct."}, {"value": 221, "name": "probeIPv4Stack"}, {"value": 792, "name": "probeIPv6Stack"}, {"value": 8, "name": "protocols"}, {"children": [{"value": 108, "name": "Error"}], "name": "racer.2."}, {"value": 699, "name": "readFull"}, {"value": 2883, "name": "readHosts"}, {"value": 753, "name": "readProtocols"}, {"value": 869, "name": "readServices"}, {"value": 83, "name": "releaseThread"}, {"value": 180, "name": "removeComment"}, {"value": 80, "name": "resolvConf"}, {"value": 1779, "name": "reverseaddr"}, {"value": 24, "name": "rfc6724policyTable"}, {"value": 8, "name": "rr_mk"}, {"value": 60, "name": "runtimeNano"}, {"value": 69, "name": "runtime_Semacquire"}, {"value": 60, "name": "runtime_Semrelease"}, {"value": 220, "name": "runtime_pollClose"}, {"value": 309, "name": "runtime_pollOpen"}, {"value": 125, "name": "runtime_pollReset"}, {"value": 62, "name": "runtime_pollServerInit"}, {"value": 1229, "name": "runtime_pollSetDeadline"}, {"value": 523, "name": "runtime_pollUnblock"}, {"value": 288, "name": "runtime_pollWait"}, {"value": 313, "name": "selfConnect"}, {"value": 1233, "name": "sendFile"}, {"value": 12, "name": "serverInit"}, {"value": 8, "name": "services"}, {"value": 292, "name": "setDeadlineImpl"}, {"value": 288, "name": "setDefaultListenerSockopts"}, {"value": 288, "name": "setDefaultMulticastSockopts"}, {"value": 367, "name": "setDefaultSockopts"}, {"value": 431, "name": "setKeepAlive"}, {"value": 800, "name": "setKeepAlivePeriod"}, {"value": 477, "name": "setLinger"}, {"value": 431, "name": "setNoDelay"}, {"value": 428, "name": "setReadBuffer"}, {"value": 428, "name": "setWriteBuffer"}, {"value": 167, "name": "simpleMaskLength"}, {"value": 570, "name": "sockaddrToIP"}, {"value": 604, "name": "sockaddrToTCP"}, {"value": 604, "name": "sockaddrToUDP"}, {"value": 293, "name": "sockaddrToUnix"}, {"value": 293, "name": "sockaddrToUnixgram"}, {"value": 293, "name": "sockaddrToUnixpacket"}, {"value": 1146, "name": "socket"}, {"value": 8, "name": "socketFunc"}, {"value": 167, "name": "sortByRFC6724"}, {"value": 1039, "name": "sortByRFC6724withSrcs"}, {"value": 236, "name": "sotypeToNet"}, {"value": 686, "name": "splitAtBytes"}, {"value": 180, "name": "splitHostZone"}, {"value": 865, "name": "srcAddrs"}, {"value": 319, "name": "stat"}, {"value": 112, "name": "statictmp_1672"}, {"value": 4, "name": "statictmp_1939"}, {"value": 24, "name": "statictmp_196"}, {"value": 40, "name": "statictmp_2107"}, {"value": 112, "name": "statictmp_2132"}, {"value": 96, "name": "statictmp_2358"}, {"value": 24, "name": "statictmp_2600"}, {"value": 4, "name": "statictmp_3119"}, {"value": 4, "name": "statictmp_3307"}, {"value": 16, "name": "statictmp_3818"}, {"value": 128, "name": "statictmp_392"}, {"value": 12, "name": "statictmp_4076"}, {"value": 144, "name": "statictmp_4077"}, {"value": 48, "name": "statictmp_4078"}, {"value": 32, "name": "statictmp_4079"}, {"value": 80, "name": "statictmp_4080"}, {"value": 16, "name": "statictmp_4081"}, {"value": 16, "name": "statictmp_4082"}, {"value": 16, "name": "statictmp_4083"}, {"value": 1, "name": "statictmp_4087"}, {"value": 40, "name": "statictmp_4090"}, {"value": 80, "name": "statictmp_4091"}, {"value": 80, "name": "statictmp_4107"}, {"value": 40, "name": "statictmp_4108"}, {"value": 16, "name": "statictmp_4114"}, {"value": 8, "name": "statictmp_4115"}, {"value": 208, "name": "statictmp_4119"}, {"value": 104, "name": "statictmp_4120"}, {"value": 3, "name": "statictmp_54"}, {"value": 24, "name": "statictmp_549"}, {"value": 32, "name": "statictmp_551"}, {"value": 16, "name": "statictmp_96"}, {"value": 147, "name": "stringsEqualFold"}, {"value": 150, "name": "stringsHasSuffixFold"}, {"value": 1, "name": "supportsIPv4"}, {"value": 1, "name": "supportsIPv4map"}, {"value": 1, "name": "supportsIPv6"}, {"value": 1113, "name": "sysSocket"}, {"value": 86, "name": "systemConf"}, {"value": 8, "name": "testHookCanceledDial"}, {"value": 8, "name": "testHookDNSDialer"}, {"value": 8, "name": "testHookDialTCP"}, {"value": 16, "name": "testHookHostsPath"}, {"value": 8, "name": "testHookLookupIP"}, {"value": 8, "name": "testHookSetKeepAlive"}, {"value": 8, "name": "threadLimit"}, {"value": 246, "name": "trimSpace"}, {"value": 4, "name": "tryDupCloexec"}, {"value": 1612, "name": "tryOneName"}, {"value": 301, "name": "uitoa"}, {"value": 1445, "name": "unixSocket"}, {"value": 718, "name": "unpackDomainName"}, {"value": 621, "name": "unpackRR"}, {"value": 456, "name": "unpackStruct"}, {"children": [{"value": 1362, "name": "func1"}], "name": "unpackStruct."}, {"value": 24, "name": "v4InV6Prefix"}, {"children": [{"value": 158, "name": "Write"}], "name": "writerOnly."}, {"value": 170, "name": "xtoi"}, {"value": 178, "name": "xtoi2"}, {"value": 64, "name": "zoneCache"}, {"value": 323, "name": "zoneToInt"}, {"value": 335, "name": "zoneToString"}], "name": "net."}, {"children": [{"children": [{"value": 40, "name": "go.itab.*ProtocolError,error"}, {"value": 40, "name": "go.itab.*ServeMux,net/http.Handler"}, {"value": 40, "name": "go.itab.*Transport,net/http.RoundTripper"}, {"value": 40, "name": "go.itab.*badStringError,error"}, {"value": 48, "name": "go.itab.*body,io.ReadCloser"}, {"value": 48, "name": "go.itab.*bodyEOFSignal,io.ReadCloser"}, {"value": 40, "name": "go.itab.*bodyEOFSignal,io.Reader"}, {"value": 40, "name": "go.itab.*byteReader,io.Reader"}, {"value": 48, "name": "go.itab.*cancelTimerBody,io.ReadCloser"}, {"value": 40, "name": "go.itab.*chunkWriter,io.Writer"}, {"value": 40, "name": "go.itab.*connReader,io.Reader"}, {"value": 40, "name": "go.itab.*countingWriter,io.Writer"}, {"value": 40, "name": "go.itab.*exactSig,net/http.sniffSig"}, {"value": 48, "name": "go.itab.*expectContinueReader,io.ReadCloser"}, {"value": 40, "name": "go.itab.*fileHandler,net/http.Handler"}, {"value": 48, "name": "go.itab.*gzipReader,io.ReadCloser"}, {"value": 56, "name": "go.itab.*headerSorter,sort.Interface"}, {"value": 48, "name": "go.itab.*http2ContinuationFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2ContinuationFrame,net/http.http2headersOrContinuation"}, {"value": 48, "name": "go.itab.*http2DataFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2GoAwayFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2HeadersFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2HeadersFrame,net/http.http2headersOrContinuation"}, {"value": 48, "name": "go.itab.*http2MetaHeadersFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2PingFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2PriorityFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2PushPromiseFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2RSTStreamFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2SettingsFrame,net/http.http2Frame"}, {"value": 40, "name": "go.itab.*http2Transport,net/http.RoundTripper"}, {"value": 48, "name": "go.itab.*http2UnknownFrame,net/http.http2Frame"}, {"value": 48, "name": "go.itab.*http2WindowUpdateFrame,net/http.http2Frame"}, {"value": 40, "name": "go.itab.*http2badStringError,error"}, {"value": 40, "name": "go.itab.*http2bufferedWriter,io.Writer"}, {"value": 48, "name": "go.itab.*http2clientConnPool,net/http.http2ClientConnPool"}, {"value": 56, "name": "go.itab.*http2fixedBuffer,net/http.http2pipeBuffer"}, {"value": 48, "name": "go.itab.*http2gzipReader,io.ReadCloser"}, {"value": 40, "name": "go.itab.*http2httpError,error"}, {"value": 72, "name": "go.itab.*http2randomWriteScheduler,net/http.http2WriteScheduler"}, {"value": 48, "name": "go.itab.*http2requestBody,io.ReadCloser"}, {"value": 56, "name": "go.itab.*http2responseWriter,net/http.ResponseWriter"}, {"value": 64, "name": "go.itab.*http2serverConn,net/http.http2writeContext"}, {"value": 56, "name": "go.itab.*http2sorter,sort.Interface"}, {"value": 48, "name": "go.itab.*http2writeData,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.*http2writeGoAway,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.*http2writePushPromise,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.*http2writeResHeaders,net/http.http2writeFramer"}, {"value": 40, "name": "go.itab.*httpError,error"}, {"value": 40, "name": "go.itab.*maskedSig,net/http.sniffSig"}, {"value": 48, "name": "go.itab.*maxBytesReader,io.ReadCloser"}, {"value": 40, "name": "go.itab.*persistConn,io.Reader"}, {"value": 40, "name": "go.itab.*redirectHandler,net/http.Handler"}, {"value": 40, "name": "go.itab.*response,io.Writer"}, {"value": 56, "name": "go.itab.*response,net/http.ResponseWriter"}, {"value": 40, "name": "go.itab.HandlerFunc,net/http.Handler"}, {"value": 40, "name": "go.itab.badRequestError,error"}, {"value": 40, "name": "go.itab.bodyLocked,io.Reader"}, {"value": 40, "name": "go.itab.checkConnErrorWriter,io.Writer"}, {"value": 40, "name": "go.itab.errorReader,io.Reader"}, {"value": 48, "name": "go.itab.fakeLocker,sync.Locker"}, {"value": 40, "name": "go.itab.finishAsyncByteRead,io.Reader"}, {"value": 40, "name": "go.itab.globalOptionsHandler,net/http.Handler"}, {"value": 40, "name": "go.itab.htmlSig,net/http.sniffSig"}, {"value": 40, "name": "go.itab.http2ConnectionError,error"}, {"value": 40, "name": "go.itab.http2GoAwayError,error"}, {"value": 40, "name": "go.itab.http2StreamError,error"}, {"value": 48, "name": "go.itab.http2StreamError,net/http.http2writeFramer"}, {"value": 40, "name": "go.itab.http2chunkWriter,io.Writer"}, {"value": 40, "name": "go.itab.http2connError,error"}, {"value": 40, "name": "go.itab.http2duplicatePseudoHeaderError,error"}, {"value": 40, "name": "go.itab.http2erringRoundTripper,net/http.RoundTripper"}, {"value": 48, "name": "go.itab.http2flushFrameWriter,net/http.http2writeFramer"}, {"value": 40, "name": "go.itab.http2goAwayFlowError,error"}, {"value": 48, "name": "go.itab.http2handlerPanicRST,net/http.http2writeFramer"}, {"value": 40, "name": "go.itab.http2headerFieldNameError,error"}, {"value": 40, "name": "go.itab.http2headerFieldValueError,error"}, {"value": 48, "name": "go.itab.http2noDialClientConnPool,net/http.http2ClientConnPool"}, {"value": 40, "name": "go.itab.http2noDialH2RoundTripper,net/http.RoundTripper"}, {"value": 40, "name": "go.itab.http2pseudoHeaderError,error"}, {"value": 40, "name": "go.itab.http2stickyErrWriter,io.Writer"}, {"value": 48, "name": "go.itab.http2transportResponseBody,io.ReadCloser"}, {"value": 48, "name": "go.itab.http2write100ContinueHeadersFrame,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.http2writePingAck,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.http2writeSettings,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.http2writeSettingsAck,net/http.http2writeFramer"}, {"value": 48, "name": "go.itab.http2writeWindowUpdate,net/http.http2writeFramer"}, {"value": 40, "name": "go.itab.initNPNRequest,net/http.Handler"}, {"value": 40, "name": "go.itab.mp4Sig,net/http.sniffSig"}, {"value": 48, "name": "go.itab.noBody,io.ReadCloser"}, {"value": 40, "name": "go.itab.nothingWrittenError,error"}, {"value": 40, "name": "go.itab.persistConnWriter,io.Writer"}, {"value": 40, "name": "go.itab.stringWriter,net/http.writeStringer"}, {"value": 56, "name": "go.itab.tcpKeepAliveListener,net.Listener"}, {"value": 40, "name": "go.itab.textSig,net/http.sniffSig"}, {"value": 40, "name": "go.itab.tlsHandshakeTimeoutError,error"}, {"value": 40, "name": "go.itab.transportReadFromServerError,error"}, {"value": 40, "name": "go.itab.writerOnly,io.Writer"}, {"children": [{"value": 4383, "name": "Do"}, {"children": [{"value": 664, "name": "func1"}], "name": "Do."}, {"value": 220, "name": "Get"}, {"value": 220, "name": "Head"}, {"value": 307, "name": "Post"}, {"value": 309, "name": "PostForm"}, {"value": 139, "name": "checkRedirect"}, {"value": 243, "name": "deadline"}, {"value": 1063, "name": "makeHeadersCopier"}, {"children": [{"value": 1604, "name": "func1"}], "name": "makeHeadersCopier."}, {"value": 540, "name": "send"}], "name": "(*Client)."}, {"children": [{"value": 212, "name": "String"}], "name": "(*ConnState)."}, {"children": [{"value": 1807, "name": "String"}], "name": "(*Cookie)."}, {"children": [{"value": 196, "name": "ServeHTTP"}], "name": "(*HandlerFunc)."}, {"children": [{"value": 206, "name": "Add"}, {"value": 186, "name": "Del"}, {"value": 206, "name": "Get"}, {"value": 206, "name": "Set"}, {"value": 206, "name": "Write"}, {"value": 216, "name": "WriteSubset"}], "name": "(*Header)."}, {"children": [{"value": 23, "name": "Error"}], "name": "(*ProtocolError)."}, {"children": [{"value": 661, "name": "AddCookie"}, {"value": 221, "name": "BasicAuth"}, {"value": 60, "name": "Context"}, {"value": 175, "name": "Cookie"}, {"value": 112, "name": "Cookies"}, {"value": 543, "name": "FormFile"}, {"value": 208, "name": "FormValue"}, {"value": 406, "name": "MultipartReader"}, {"value": 1041, "name": "ParseForm"}, {"value": 1759, "name": "ParseMultipartForm"}, {"value": 208, "name": "PostFormValue"}, {"value": 55, "name": "ProtoAtLeast"}, {"value": 105, "name": "Referer"}, {"value": 220, "name": "SetBasicAuth"}, {"value": 105, "name": "UserAgent"}, {"value": 321, "name": "WithContext"}, {"value": 123, "name": "Write"}, {"value": 123, "name": "WriteProxy"}, {"value": 76, "name": "closeBody"}, {"value": 178, "name": "expectsContinue"}, {"value": 1800, "name": "multipartReader"}, {"value": 178, "name": "wantsClose"}, {"value": 214, "name": "wantsHttp10KeepAlive"}, {"value": 3590, "name": "write"}, {"children": [{"value": 81, "name": "func1"}], "name": "write."}], "name": "(*Request)."}, {"children": [{"value": 94, "name": "Cookies"}, {"value": 283, "name": "Location"}, {"value": 55, "name": "ProtoAtLeast"}, {"value": 2843, "name": "Write"}], "name": "(*Response)."}, {"children": [{"value": 1801, "name": "Handle"}, {"value": 102, "name": "HandleFunc"}, {"value": 747, "name": "Handler"}, {"value": 324, "name": "ServeHTTP"}, {"value": 554, "name": "handler"}, {"value": 742, "name": "match"}], "name": "(*ServeMux)."}, {"children": [{"value": 59, "name": "(net/http.onceSetNextProtoDefaults)-fm"}, {"value": 59, "name": "(net/http.onceSetNextProtoDefaults_Serve)-fm"}, {"value": 481, "name": "Close"}, {"value": 264, "name": "ListenAndServe"}, {"value": 1463, "name": "ListenAndServeTLS"}, {"value": 1421, "name": "Serve"}, {"value": 276, "name": "SetKeepAlivesEnabled"}, {"value": 718, "name": "Shutdown"}, {"value": 225, "name": "closeDoneChanLocked"}, {"value": 505, "name": "closeIdleConns"}, {"value": 381, "name": "closeListenersLocked"}, {"value": 83, "name": "doKeepAlives"}, {"value": 275, "name": "getDoneChan"}, {"value": 182, "name": "logf"}, {"value": 186, "name": "newConn"}, {"value": 238, "name": "onceSetNextProtoDefaults"}, {"value": 85, "name": "onceSetNextProtoDefaults_Serve"}, {"value": 134, "name": "setupHTTP2_ListenAndServeTLS"}, {"value": 134, "name": "setupHTTP2_Serve"}, {"value": 139, "name": "shouldConfigureHTTP2ForServe"}, {"value": 18, "name": "shuttingDown"}, {"value": 393, "name": "trackConn"}, {"value": 532, "name": "trackListener"}], "name": "(*Server)."}, {"children": [{"value": 59, "name": "(net/http.onceSetNextProtoDefaults)-fm"}, {"value": 94, "name": "CancelRequest"}, {"value": 666, "name": "CloseIdleConnections"}, {"value": 958, "name": "RegisterProtocol"}, {"value": 3629, "name": "RoundTrip"}, {"value": 238, "name": "cancelRequest"}, {"value": 843, "name": "connectMethodForRequest"}, {"value": 623, "name": "dial"}, {"value": 8095, "name": "dialConn"}, {"children": [{"value": 99, "name": "func1"}, {"value": 140, "name": "func2"}, {"value": 190, "name": "func3"}], "name": "dialConn."}, {"value": 3258, "name": "getConn"}, {"children": [{"value": 1, "name": "func1"}, {"value": 142, "name": "func2"}, {"children": [{"value": 162, "name": "1"}], "name": "func2."}, {"value": 101, "name": "func3"}, {"value": 227, "name": "func4"}], "name": "getConn."}, {"value": 1378, "name": "getIdleConn"}, {"value": 670, "name": "getIdleConnCh"}, {"value": 448, "name": "onceSetNextProtoDefaults"}, {"value": 111, "name": "putOrCloseIdleConn"}, {"value": 151, "name": "removeIdleConn"}, {"value": 1199, "name": "removeIdleConnLocked"}, {"value": 391, "name": "replaceReqCanceler"}, {"value": 415, "name": "setReqCanceler"}, {"value": 2819, "name": "tryPutIdleConn"}], "name": "(*Transport)."}, {"children": [{"value": 68, "name": "(net/http.isSet)-fm"}, {"value": 17, "name": "isSet"}, {"value": 13, "name": "setTrue"}], "name": "(*atomicBool)."}, {"children": [{"value": 225, "name": "Error"}], "name": "(*badRequestError)."}, {"children": [{"value": 262, "name": "Error"}], "name": "(*badStringError)."}, {"children": [{"value": 646, "name": "Close"}, {"value": 328, "name": "Read"}, {"value": 166, "name": "bodyRemains"}, {"value": 163, "name": "didEarlyClose"}, {"value": 736, "name": "readLocked"}, {"value": 985, "name": "readTrailer"}, {"value": 194, "name": "registerOnHitEOF"}], "name": "(*body)."}, {"children": [{"value": 428, "name": "Close"}, {"value": 623, "name": "Read"}, {"value": 208, "name": "condfn"}], "name": "(*bodyEOFSignal)."}, {"children": [{"value": 226, "name": "Read"}], "name": "(*bodyLocked)."}, {"children": [{"value": 133, "name": "Read"}], "name": "(*byteReader)."}, {"children": [{"value": 122, "name": "Close"}, {"value": 594, "name": "Read"}], "name": "(*cancelTimerBody)."}, {"children": [{"value": 226, "name": "Write"}], "name": "(*checkConnErrorWriter)."}, {"children": [{"value": 833, "name": "Write"}, {"value": 266, "name": "close"}, {"value": 121, "name": "flush"}, {"value": 6101, "name": "writeHeader"}, {"children": [{"value": 356, "name": "func1"}], "name": "writeHeader."}], "name": "(*chunkWriter)."}, {"children": [{"value": 83, "name": "close"}, {"value": 146, "name": "closeWriteAndWait"}, {"value": 221, "name": "finalFlush"}, {"value": 1181, "name": "hijackLocked"}, {"value": 169, "name": "hijacked"}, {"value": 4067, "name": "readRequest"}, {"children": [{"value": 197, "name": "func1"}], "name": "readRequest."}, {"value": 4803, "name": "serve"}, {"children": [{"value": 651, "name": "func1"}], "name": "serve."}, {"value": 276, "name": "setState"}], "name": "(*conn)."}, {"children": [{"value": 599, "name": "add"}], "name": "(*connLRU)."}, {"children": [{"value": 59, "name": "(net/http.startBackgroundRead)-fm"}, {"value": 804, "name": "Read"}, {"value": 317, "name": "abortPendingRead"}, {"value": 378, "name": "backgroundRead"}, {"value": 177, "name": "closeNotify"}, {"value": 60, "name": "closeNotifyFromPipelinedRequest"}, {"value": 77, "name": "handleReadError"}, {"value": 218, "name": "lock"}, {"value": 338, "name": "startBackgroundRead"}, {"value": 66, "name": "unlock"}], "name": "(*connReader)."}, {"children": [{"value": 116, "name": "addr"}, {"value": 386, "name": "key"}, {"value": 248, "name": "proxyAuth"}, {"value": 188, "name": "tlsHost"}], "name": "(*connectMethod)."}, {"children": [{"value": 201, "name": "String"}], "name": "(*connectMethodKey)."}, {"children": [{"value": 122, "name": "String"}], "name": "(*contextKey)."}, {"children": [{"value": 43, "name": "Write"}], "name": "(*countingWriter)."}, {"children": [{"value": 59, "name": "(net/http.init)-fm"}, {"value": 125, "name": "Get"}, {"value": 226, "name": "init"}], "name": "(*envOnce)."}, {"children": [{"value": 180, "name": "Read"}], "name": "(*errorReader)."}, {"children": [{"value": 178, "name": "match"}], "name": "(*exactSig)."}, {"children": [{"value": 93, "name": "Close"}, {"value": 458, "name": "Read"}], "name": "(*expectContinueReader)."}, {"children": [{"value": 194, "name": "Write"}], "name": "(*extraHeader)."}, {"children": [{"value": 150, "name": "Lock"}, {"value": 150, "name": "Unlock"}], "name": "(*fakeLocker)."}, {"children": [{"value": 407, "name": "ServeHTTP"}], "name": "(*fileHandler)."}, {"children": [{"value": 309, "name": "Read"}], "name": "(*finishAsyncByteRead)."}, {"children": [{"value": 188, "name": "ServeHTTP"}], "name": "(*globalOptionsHandler)."}, {"children": [{"value": 83, "name": "Close"}, {"value": 506, "name": "Read"}], "name": "(*gzipReader)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 157, "name": "Less"}, {"value": 379, "name": "Swap"}], "name": "(*headerSorter)."}, {"children": [{"value": 250, "name": "match"}], "name": "(*htmlSig)."}, {"children": [{"value": 59, "name": "(net/http.onIdleTimeout)-fm"}, {"value": 269, "name": "CanTakeNewRequest"}, {"value": 139, "name": "Ping"}, {"value": 5123, "name": "RoundTrip"}, {"children": [{"value": 626, "name": "func1"}], "name": "RoundTrip."}, {"value": 445, "name": "closeIfIdle"}, {"value": 4861, "name": "encodeHeaders"}, {"value": 490, "name": "encodeTrailers"}, {"value": 73, "name": "forgetStreamID"}, {"value": 403, "name": "frameScratchBuffer"}, {"value": 113, "name": "logf"}, {"value": 804, "name": "newStream"}, {"value": 60, "name": "onIdleTimeout"}, {"value": 1193, "name": "ping"}, {"value": 558, "name": "putFrameScratchBuffer"}, {"value": 421, "name": "readLoop"}, {"value": 701, "name": "setGoAway"}, {"value": 493, "name": "streamByID"}, {"value": 113, "name": "vlogf"}, {"value": 519, "name": "writeHeader"}, {"value": 583, "name": "writeHeaders"}, {"value": 160, "name": "writeStreamReset"}], "name": "(*http2ClientConn)."}, {"children": [{"value": 184, "name": "Error"}], "name": "(*http2ConnectionError)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2ContinuationFrame)."}, {"children": [{"value": 94, "name": "Data"}, {"value": 150, "name": "Header"}, {"value": 22, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2DataFrame)."}, {"children": [{"value": 184, "name": "String"}], "name": "(*http2ErrCode)."}, {"children": [{"value": 173, "name": "Has"}], "name": "(*http2Flags)."}, {"children": [{"value": 247, "name": "Header"}, {"value": 195, "name": "String"}, {"value": 134, "name": "checkValid"}, {"value": 9, "name": "invalidate"}], "name": "(*http2FrameHeader)."}, {"children": [{"value": 185, "name": "String"}], "name": "(*http2FrameType)."}, {"children": [{"value": 331, "name": "Consume"}, {"value": 206, "name": "DataSize"}, {"value": 213, "name": "StreamID"}, {"value": 213, "name": "String"}, {"value": 375, "name": "replyToWriter"}], "name": "(*http2FrameWriteRequest)."}, {"children": [{"value": 24, "name": "ErrorDetail"}, {"value": 1895, "name": "ReadFrame"}, {"value": 25, "name": "SetMaxReadFrameSize"}, {"value": 699, "name": "WriteContinuation"}, {"value": 170, "name": "WriteData"}, {"value": 1308, "name": "WriteDataPadded"}, {"value": 1012, "name": "WriteGoAway"}, {"value": 1986, "name": "WriteHeaders"}, {"value": 549, "name": "WritePing"}, {"value": 873, "name": "WritePriority"}, {"value": 1635, "name": "WritePushPromise"}, {"value": 589, "name": "WriteRSTStream"}, {"value": 578, "name": "WriteRawFrame"}, {"value": 823, "name": "WriteSettings"}, {"value": 263, "name": "WriteSettingsAck"}, {"value": 666, "name": "WriteWindowUpdate"}, {"value": 1864, "name": "checkFrameOrder"}, {"value": 378, "name": "endWrite"}, {"value": 821, "name": "logWrite"}, {"value": 2613, "name": "readMetaFrame"}, {"children": [{"value": 1402, "name": "func1"}, {"value": 1, "name": "func2"}], "name": "readMetaFrame."}], "name": "(*http2Framer)."}, {"children": [{"value": 209, "name": "Error"}], "name": "(*http2GoAwayError)."}, {"children": [{"value": 94, "name": "DebugData"}, {"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2GoAwayFrame)."}, {"children": [{"value": 22, "name": "HasPriority"}, {"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 22, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2HeadersFrame)."}, {"children": [{"value": 23, "name": "HasPriority"}, {"value": 153, "name": "Header"}, {"value": 45, "name": "HeaderBlockFragment"}, {"value": 23, "name": "HeadersEnded"}, {"value": 351, "name": "PseudoFields"}, {"value": 550, "name": "PseudoValue"}, {"value": 387, "name": "RegularFields"}, {"value": 23, "name": "StreamEnded"}, {"value": 117, "name": "String"}, {"value": 1571, "name": "checkPseudos"}, {"value": 20, "name": "invalidate"}], "name": "(*http2MetaHeadersFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 22, "name": "IsAck"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2PingFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 73, "name": "IsZero"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2PriorityFrame)."}, {"children": [{"value": 189, "name": "IsZero"}], "name": "(*http2PriorityParam)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "HeaderBlockFragment"}, {"value": 22, "name": "HeadersEnded"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2PushPromiseFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2RSTStreamFrame)."}, {"children": [{"value": 4209, "name": "ServeConn"}], "name": "(*http2Server)."}, {"children": [{"value": 193, "name": "String"}, {"value": 379, "name": "Valid"}], "name": "(*http2Setting)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*http2SettingID)."}, {"children": [{"value": 303, "name": "ForeachSetting"}, {"value": 150, "name": "Header"}, {"value": 22, "name": "IsAck"}, {"value": 114, "name": "String"}, {"value": 232, "name": "Value"}, {"value": 17, "name": "invalidate"}], "name": "(*http2SettingsFrame)."}, {"children": [{"value": 209, "name": "Error"}, {"value": 170, "name": "staysWithinBuffer"}, {"value": 229, "name": "writeFrame"}], "name": "(*http2StreamError)."}, {"children": [{"value": 171, "name": "(net/http.dialTLSDefault)-fm"}, {"value": 235, "name": "(net/http.initConnPool)-fm"}, {"value": 127, "name": "CloseIdleConnections"}, {"value": 115, "name": "NewClientConn"}, {"value": 111, "name": "RoundTrip"}, {"value": 1230, "name": "RoundTripOpt"}, {"value": 125, "name": "connPool"}, {"value": 416, "name": "dialClientConn"}, {"value": 173, "name": "dialTLS"}, {"value": 1112, "name": "dialTLSDefault"}, {"value": 1067, "name": "getBodyWriterState"}, {"children": [{"value": 290, "name": "func1"}, {"value": 72, "name": "func2"}], "name": "getBodyWriterState."}, {"value": 100, "name": "logf"}, {"value": 3884, "name": "newClientConn"}, {"value": 783, "name": "newTLSConfig"}, {"value": 123, "name": "vlogf"}], "name": "(*http2Transport)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 94, "name": "Payload"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2UnknownFrame)."}, {"children": [{"value": 150, "name": "Header"}, {"value": 114, "name": "String"}, {"value": 17, "name": "invalidate"}], "name": "(*http2WindowUpdateFrame)."}, {"children": [{"value": 391, "name": "run"}], "name": "(*http2addConnCall)."}, {"children": [{"value": 262, "name": "Error"}], "name": "(*http2badStringError)."}, {"children": [{"value": 41, "name": "Available"}, {"value": 385, "name": "Flush"}, {"value": 421, "name": "Write"}], "name": "(*http2bufferedWriter)."}, {"children": [{"value": 226, "name": "Write"}], "name": "(*http2chunkWriter)."}, {"children": [{"value": 128, "name": "GetClientConn"}, {"value": 736, "name": "MarkDead"}, {"value": 1134, "name": "addConnIfNeeded"}, {"value": 1176, "name": "addConnLocked"}, {"value": 373, "name": "closeIdleConnections"}, {"value": 730, "name": "getClientConn"}, {"value": 602, "name": "getStartDialLocked"}], "name": "(*http2clientConnPool)."}, {"children": [{"value": 1429, "name": "cleanup"}, {"value": 88, "name": "endStream"}, {"value": 422, "name": "endStreamError"}, {"value": 3301, "name": "handleResponse"}, {"children": [{"value": 200, "name": "func1"}], "name": "handleResponse."}, {"value": 1622, "name": "processData"}, {"value": 293, "name": "processGoAway"}, {"value": 1044, "name": "processHeaders"}, {"value": 585, "name": "processPing"}, {"value": 544, "name": "processResetStream"}, {"value": 565, "name": "processSettings"}, {"children": [{"value": 643, "name": "func1"}], "name": "processSettings."}, {"value": 1187, "name": "processTrailers"}, {"value": 430, "name": "processWindowUpdate"}, {"value": 3091, "name": "run"}], "name": "(*http2clientConnReadLoop)."}, {"children": [{"value": 59, "name": "(net/http.copyTrailers)-fm"}, {"value": 272, "name": "abortRequestBodyWrite"}, {"value": 558, "name": "awaitFlowControl"}, {"value": 626, "name": "awaitRequestCancel"}, {"value": 178, "name": "cancelStream"}, {"value": 427, "name": "checkResetOrDone"}, {"value": 511, "name": "copyTrailers"}, {"value": 2354, "name": "writeRequestBody"}, {"children": [{"value": 175, "name": "func1"}], "name": "writeRequestBody."}], "name": "(*http2clientStream)."}, {"children": [{"value": 166, "name": "Close"}, {"value": 112, "name": "Init"}, {"value": 187, "name": "Wait"}], "name": "(*http2closeWaiter)."}, {"children": [{"value": 202, "name": "Error"}], "name": "(*http2connError)."}, {"children": [{"value": 415, "name": "dial"}], "name": "(*http2dialCall)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*http2duplicatePseudoHeaderError)."}, {"children": [{"value": 180, "name": "RoundTrip"}], "name": "(*http2erringRoundTripper)."}, {"children": [{"value": 22, "name": "Len"}, {"value": 283, "name": "Read"}, {"value": 399, "name": "Write"}], "name": "(*http2fixedBuffer)."}, {"children": [{"value": 179, "name": "take"}], "name": "(*http2flow)."}, {"children": [{"value": 159, "name": "staysWithinBuffer"}, {"value": 198, "name": "writeFrame"}], "name": "(*http2flushFrameWriter)."}, {"children": [{"value": 188, "name": "Done"}, {"value": 187, "name": "Wait"}], "name": "(*http2gate)."}, {"children": [{"value": 175, "name": "Error"}], "name": "(*http2goAwayFlowError)."}, {"children": [{"value": 88, "name": "Close"}, {"value": 430, "name": "Read"}], "name": "(*http2gzipReader)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 204, "name": "writeFrame"}], "name": "(*http2handlerPanicRST)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*http2headerFieldNameError)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*http2headerFieldValueError)."}, {"children": [{"value": 23, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 14, "name": "Timeout"}], "name": "(*http2httpError)."}, {"children": [{"value": 226, "name": "GetClientConn"}, {"value": 18, "name": "MarkDead"}, {"value": 18, "name": "closeIdleConnections"}], "name": "(*http2noDialClientConnPool)."}, {"children": [{"value": 206, "name": "RoundTrip"}], "name": "(*http2noDialH2RoundTripper)."}, {"children": [{"value": 100, "name": "BreakWithError"}, {"value": 100, "name": "CloseWithError"}, {"value": 277, "name": "Done"}, {"value": 211, "name": "Err"}, {"value": 173, "name": "Len"}, {"value": 569, "name": "Read"}, {"value": 445, "name": "Write"}, {"value": 132, "name": "closeDoneLocked"}, {"value": 513, "name": "closeWithError"}, {"value": 101, "name": "closeWithErrorAndCode"}], "name": "(*http2pipe)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*http2pseudoHeaderError)."}, {"children": [{"value": 1, "name": "AdjustStream"}, {"value": 199, "name": "CloseStream"}, {"value": 1, "name": "OpenStream"}, {"value": 457, "name": "Pop"}, {"value": 1215, "name": "Push"}], "name": "(*http2randomWriteScheduler)."}, {"children": [{"value": 133, "name": "Close"}, {"value": 488, "name": "Read"}], "name": "(*http2requestBody)."}, {"children": [{"value": 344, "name": "CloseNotify"}, {"children": [{"value": 122, "name": "func1"}], "name": "CloseNotify."}, {"value": 219, "name": "Flush"}, {"value": 259, "name": "Header"}, {"value": 147, "name": "Push"}, {"value": 159, "name": "Write"}, {"value": 158, "name": "WriteHeader"}, {"value": 151, "name": "WriteString"}, {"value": 161, "name": "handlerDone"}, {"value": 4090, "name": "push"}, {"value": 649, "name": "write"}], "name": "(*http2responseWriter)."}, {"children": [{"value": 79, "name": "(net/http.declareTrailer)-fm"}, {"value": 629, "name": "declareTrailer"}, {"value": 835, "name": "promoteUndeclaredTrailers"}, {"value": 2640, "name": "writeChunk"}, {"value": 157, "name": "writeHeader"}], "name": "(*http2responseWriterState)."}, {"children": [{"value": 97, "name": "(net/http.processSetting)-fm"}, {"value": 89, "name": "CloseConn"}, {"value": 84, "name": "Flush"}, {"value": 15, "name": "Framer"}, {"value": 29, "name": "HeaderEncoder"}, {"value": 270, "name": "awaitGracefulShutdown"}, {"value": 581, "name": "canonicalHeader"}, {"value": 262, "name": "closeAllStreamsOnConnClose"}, {"value": 722, "name": "closeStream"}, {"value": 399, "name": "condlogf"}, {"value": 90, "name": "curOpenStreams"}, {"value": 114, "name": "goAway"}, {"value": 164, "name": "goAwayIn"}, {"value": 186, "name": "logf"}, {"value": 1007, "name": "newStream"}, {"value": 2622, "name": "newWriterAndRequest"}, {"value": 3776, "name": "newWriterAndRequestNoBody"}, {"value": 162, "name": "noteBodyRead"}, {"value": 569, "name": "noteBodyReadFromHandler"}, {"value": 265, "name": "notePanic"}, {"value": 1968, "name": "processData"}, {"value": 1535, "name": "processFrame"}, {"value": 1814, "name": "processFrameFromReader"}, {"value": 335, "name": "processGoAway"}, {"value": 2017, "name": "processHeaders"}, {"value": 310, "name": "processPing"}, {"value": 298, "name": "processPriority"}, {"value": 332, "name": "processResetStream"}, {"value": 994, "name": "processSetting"}, {"value": 399, "name": "processSettingInitialWindowSize"}, {"value": 334, "name": "processSettings"}, {"value": 499, "name": "processWindowUpdate"}, {"value": 795, "name": "readFrames"}, {"value": 815, "name": "readPreface"}, {"children": [{"value": 676, "name": "func1"}], "name": "readPreface."}, {"value": 473, "name": "rejectConn"}, {"value": 253, "name": "resetStream"}, {"value": 184, "name": "runHandler"}, {"children": [{"value": 805, "name": "func1"}], "name": "runHandler."}, {"value": 620, "name": "scheduleFrameWrite"}, {"value": 176, "name": "sendWindowUpdate"}, {"value": 474, "name": "sendWindowUpdate32"}, {"value": 3977, "name": "serve"}, {"value": 98, "name": "setConnState"}, {"value": 195, "name": "shutDownIn"}, {"value": 1520, "name": "startFrameWrite"}, {"value": 77, "name": "startGracefulShutdown"}, {"value": 816, "name": "startPush"}, {"children": [{"value": 1282, "name": "func1"}], "name": "startPush."}, {"value": 283, "name": "state"}, {"value": 95, "name": "stopShutdownTimer"}, {"value": 123, "name": "vlogf"}, {"value": 148, "name": "write100ContinueHeaders"}, {"value": 1177, "name": "writeDataFromHandler"}, {"value": 694, "name": "writeFrame"}, {"value": 232, "name": "writeFrameAsync"}, {"value": 404, "name": "writeFrameFromHandler"}, {"value": 810, "name": "writeHeaders"}, {"value": 1035, "name": "wroteFrame"}], "name": "(*http2serverConn)."}, {"children": [{"value": 545, "name": "Keys"}, {"value": 15, "name": "Len"}, {"value": 157, "name": "Less"}, {"value": 247, "name": "SortStrings"}, {"value": 256, "name": "Swap"}], "name": "(*http2sorter)."}, {"children": [{"value": 250, "name": "Write"}], "name": "(*http2stickyErrWriter)."}, {"children": [{"value": 59, "name": "(net/http.copyTrailersToHandlerRequest)-fm"}, {"value": 423, "name": "copyTrailersToHandlerRequest"}, {"value": 527, "name": "endStream"}, {"value": 1413, "name": "processTrailerHeaders"}], "name": "(*http2stream)."}, {"children": [{"value": 200, "name": "String"}], "name": "(*http2streamState)."}, {"children": [{"value": 186, "name": "Close"}, {"value": 226, "name": "Read"}], "name": "(*http2transportResponseBody)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 204, "name": "writeFrame"}], "name": "(*http2write100ContinueHeadersFrame)."}, {"children": [{"value": 324, "name": "String"}, {"value": 29, "name": "staysWithinBuffer"}, {"value": 150, "name": "writeFrame"}], "name": "(*http2writeData)."}, {"children": [{"value": 6, "name": "staysWithinBuffer"}, {"value": 239, "name": "writeFrame"}], "name": "(*http2writeGoAway)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 206, "name": "writeFrame"}], "name": "(*http2writePingAck)."}, {"children": [{"value": 166, "name": "(net/http.writeHeaderBlock)-fm"}, {"value": 6, "name": "staysWithinBuffer"}, {"value": 685, "name": "writeFrame"}, {"value": 426, "name": "writeHeaderBlock"}], "name": "(*http2writePushPromise)."}, {"children": [{"value": 710, "name": "consume"}, {"value": 578, "name": "shift"}], "name": "(*http2writeQueue)."}, {"children": [{"value": 302, "name": "put"}], "name": "(*http2writeQueuePool)."}, {"children": [{"value": 166, "name": "(net/http.writeHeaderBlock)-fm"}, {"value": 6, "name": "staysWithinBuffer"}, {"value": 743, "name": "writeFrame"}, {"value": 418, "name": "writeHeaderBlock"}], "name": "(*http2writeResHeaders)."}, {"children": [{"value": 184, "name": "staysWithinBuffer"}, {"value": 224, "name": "writeFrame"}], "name": "(*http2writeSettings)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 198, "name": "writeFrame"}], "name": "(*http2writeSettingsAck)."}, {"children": [{"value": 170, "name": "staysWithinBuffer"}, {"value": 211, "name": "writeFrame"}], "name": "(*http2writeWindowUpdate)."}, {"children": [{"value": 23, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 14, "name": "Timeout"}], "name": "(*httpError)."}, {"children": [{"value": 205, "name": "ServeHTTP"}], "name": "(*initNPNRequest)."}, {"children": [{"value": 305, "name": "match"}], "name": "(*maskedSig)."}, {"children": [{"value": 89, "name": "Close"}, {"value": 674, "name": "Read"}], "name": "(*maxBytesReader)."}, {"children": [{"value": 218, "name": "match"}], "name": "(*mp4Sig)."}, {"children": [{"value": 172, "name": "Close"}, {"value": 187, "name": "Read"}, {"value": 181, "name": "WriteTo"}], "name": "(*noBody)."}, {"children": [{"value": 110, "name": "Error"}], "name": "(*nothingWrittenError)."}, {"children": [{"value": 79, "name": "(net/http.cancelRequest)-fm"}, {"value": 59, "name": "(net/http.closeConnIfStillIdle)-fm"}, {"value": 566, "name": "Read"}, {"value": 253, "name": "cancelRequest"}, {"value": 195, "name": "canceled"}, {"value": 182, "name": "close"}, {"value": 271, "name": "closeConnIfStillIdle"}, {"value": 333, "name": "closeLocked"}, {"value": 296, "name": "gotIdleConnTrace"}, {"value": 120, "name": "isBroken"}, {"value": 113, "name": "isReused"}, {"value": 700, "name": "mapRoundTripErrorAfterClosed"}, {"value": 582, "name": "mapRoundTripErrorFromReadLoop"}, {"value": 102, "name": "markReused"}, {"value": 4979, "name": "readLoop"}, {"children": [{"value": 105, "name": "func1"}, {"value": 348, "name": "func2"}, {"value": 104, "name": "func3"}, {"value": 347, "name": "func4"}], "name": "readLoop."}, {"value": 685, "name": "readLoopPeekFailLocked"}, {"value": 656, "name": "readResponse"}, {"value": 3611, "name": "roundTrip"}, {"value": 903, "name": "shouldRetryRequest"}, {"value": 227, "name": "waitForContinue"}, {"children": [{"value": 526, "name": "func1"}], "name": "waitForContinue."}, {"value": 1116, "name": "writeLoop"}, {"value": 452, "name": "wroteRequest"}], "name": "(*persistConn)."}, {"children": [{"value": 226, "name": "Write"}], "name": "(*persistConnWriter)."}, {"children": [{"value": 111, "name": "ServeHTTP"}], "name": "(*redirectHandler)."}, {"children": [{"value": 79, "name": "(net/http.declareTrailer)-fm"}, {"value": 175, "name": "CloseNotify"}, {"value": 115, "name": "Flush"}, {"value": 175, "name": "Header"}, {"value": 518, "name": "Hijack"}, {"value": 1589, "name": "ReadFrom"}, {"value": 159, "name": "Write"}, {"value": 761, "name": "WriteHeader"}, {"value": 151, "name": "WriteString"}, {"value": 187, "name": "bodyAllowed"}, {"value": 117, "name": "closedRequestBodyEarly"}, {"value": 561, "name": "declareTrailer"}, {"value": 1156, "name": "finalTrailers"}, {"value": 267, "name": "finishRequest"}, {"value": 137, "name": "requestTooLarge"}, {"value": 160, "name": "sendExpectationFailed"}, {"value": 300, "name": "shouldReuseConnection"}, {"value": 655, "name": "write"}], "name": "(*response)."}, {"children": [{"value": 196, "name": "ServeHTTP"}], "name": "(*serverHandler)."}, {"children": [{"value": 225, "name": "WriteString"}], "name": "(*stringWriter)."}, {"children": [{"value": 206, "name": "Accept"}, {"value": 45, "name": "AcceptTCP"}, {"value": 36, "name": "Addr"}, {"value": 36, "name": "Close"}, {"value": 45, "name": "File"}, {"value": 36, "name": "SetDeadline"}], "name": "(*tcpKeepAliveListener)."}, {"children": [{"value": 218, "name": "match"}], "name": "(*textSig)."}, {"children": [{"value": 175, "name": "Error"}, {"value": 159, "name": "Temporary"}, {"value": 159, "name": "Timeout"}], "name": "(*tlsHandshakeTimeoutError)."}, {"children": [{"value": 1621, "name": "fixTransferEncoding"}], "name": "(*transferReader)."}, {"children": [{"value": 1922, "name": "WriteBody"}, {"value": 1878, "name": "WriteHeader"}, {"value": 1628, "name": "probeRequestBody"}, {"children": [{"value": 222, "name": "func1"}], "name": "probeRequestBody."}, {"value": 643, "name": "shouldSendChunkedRequestBody"}, {"value": 530, "name": "shouldSendContentLength"}], "name": "(*transferWriter)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*transportReadFromServerError)."}, {"children": [{"value": 18, "name": "AddCookie"}, {"value": 59, "name": "BasicAuth"}, {"value": 36, "name": "Context"}, {"value": 45, "name": "Cookie"}, {"value": 45, "name": "Cookies"}, {"value": 63, "name": "FormFile"}, {"value": 36, "name": "FormValue"}, {"value": 45, "name": "MultipartReader"}, {"value": 36, "name": "ParseForm"}, {"value": 36, "name": "ParseMultipartForm"}, {"value": 36, "name": "PostFormValue"}, {"value": 23, "name": "ProtoAtLeast"}, {"value": 36, "name": "Referer"}, {"value": 18, "name": "SetBasicAuth"}, {"value": 36, "name": "UserAgent"}, {"value": 27, "name": "WithContext"}, {"value": 36, "name": "Write"}, {"value": 36, "name": "WriteProxy"}], "name": "(*transportRequest)."}, {"children": [{"value": 157, "name": "Write"}], "name": "(*writerOnly)."}, {"children": [{"value": 94, "name": "ServeHTTP-fm"}], "name": "(Handler)."}, {"children": [{"value": 79, "name": "(net/http.on100)-fm"}], "name": "(http2bodyWriterState)."}, {"children": [{"value": 87, "name": "Done-fm"}], "name": "(http2gate)."}, {"children": [{"value": 10, "name": "1"}, {"value": 14, "name": "10"}, {"value": 5, "name": "11"}, {"value": 5, "name": "12"}, {"value": 7, "name": "13"}, {"value": 7, "name": "14"}, {"value": 3, "name": "15"}, {"value": 4, "name": "16"}, {"value": 5, "name": "17"}, {"value": 6, "name": "18"}, {"value": 2, "name": "19"}, {"value": 24, "name": "2"}, {"value": 6, "name": "20"}, {"value": 6, "name": "21"}, {"value": 2, "name": "22"}, {"value": 5, "name": "23"}, {"value": 3, "name": "24"}, {"value": 2, "name": "25"}, {"value": 4, "name": "26"}, {"value": 5, "name": "27"}, {"value": 5, "name": "28"}, {"value": 5, "name": "29"}, {"value": 2, "name": "3"}, {"value": 11, "name": "30"}, {"value": 4, "name": "31"}, {"value": 4, "name": "32"}, {"value": 4, "name": "33"}, {"value": 4, "name": "34"}, {"value": 4, "name": "35"}, {"value": 4, "name": "36"}, {"value": 6, "name": "37"}, {"value": 6, "name": "38"}, {"value": 8, "name": "39"}, {"value": 2, "name": "4"}, {"value": 3, "name": "40"}, {"value": 2, "name": "41"}, {"value": 14, "name": "42"}, {"value": 14, "name": "43"}, {"value": 4, "name": "44"}, {"value": 12, "name": "45"}, {"value": 12, "name": "46"}, {"value": 12, "name": "47"}, {"value": 12, "name": "48"}, {"value": 4, "name": "49"}, {"value": 12, "name": "5"}, {"value": 4, "name": "50"}, {"value": 5, "name": "51"}, {"value": 5, "name": "52"}, {"value": 8, "name": "53"}, {"value": 8, "name": "54"}, {"value": 3, "name": "55"}, {"value": 3, "name": "56"}, {"value": 12, "name": "57"}, {"value": 12, "name": "58"}, {"value": 4, "name": "59"}, {"value": 10, "name": "6"}, {"value": 7, "name": "60"}, {"value": 4, "name": "61"}, {"value": 3, "name": "62"}, {"value": 4, "name": "63"}, {"value": 3, "name": "64"}, {"value": 2, "name": "65"}, {"value": 4, "name": "66"}, {"value": 17, "name": "7"}, {"value": 16, "name": "8"}, {"value": 6, "name": "9"}], "name": ".gobytes."}, {"value": 90, "name": "CanonicalHeaderKey"}, {"children": [{"value": 106, "name": "String"}], "name": "ConnState."}, {"value": 8, "name": "DefaultClient"}, {"value": 8, "name": "DefaultServeMux"}, {"value": 16, "name": "DefaultTransport"}, {"value": 409, "name": "DetectContentType"}, {"value": 16, "name": "ErrAbortHandler"}, {"value": 16, "name": "ErrBodyNotAllowed"}, {"value": 16, "name": "ErrBodyReadAfterClose"}, {"value": 16, "name": "ErrContentLength"}, {"value": 16, "name": "ErrHandlerTimeout"}, {"value": 16, "name": "ErrHijacked"}, {"value": 16, "name": "ErrLineTooLong"}, {"value": 8, "name": "ErrMissingBoundary"}, {"value": 16, "name": "ErrMissingFile"}, {"value": 16, "name": "ErrNoCookie"}, {"value": 16, "name": "ErrNoLocation"}, {"value": 8, "name": "ErrNotMultipart"}, {"value": 8, "name": "ErrNotSupported"}, {"value": 16, "name": "ErrServerClosed"}, {"value": 16, "name": "ErrSkipAltProtocol"}, {"value": 8, "name": "ErrUnexpectedTrailer"}, {"value": 16, "name": "ErrUseLastResponse"}, {"value": 16, "name": "ErrWriteAfterFlush"}, {"value": 416, "name": "Error"}, {"value": 112, "name": "Get"}, {"value": 102, "name": "Handle"}, {"value": 92, "name": "HandleFunc"}, {"children": [{"value": 85, "name": "ServeHTTP"}], "name": "HandlerFunc."}, {"children": [{"value": 100, "name": "Add"}, {"value": 80, "name": "Del"}, {"value": 100, "name": "Get"}, {"value": 100, "name": "Set"}, {"value": 109, "name": "Write"}, {"value": 948, "name": "WriteSubset"}, {"value": 593, "name": "clone"}, {"value": 1155, "name": "sortedKeyValues"}], "name": "Header."}, {"value": 8, "name": "LocalAddrContextKey"}, {"value": 2632, "name": "NewRequest"}, {"children": [{"value": 290, "name": "func1"}, {"value": 325, "name": "func2"}, {"value": 253, "name": "func3"}, {"value": 112, "name": "func4"}], "name": "NewRequest."}, {"value": 100, "name": "NotFound"}, {"value": 758, "name": "ParseHTTPVersion"}, {"value": 316, "name": "ParseTime"}, {"value": 174, "name": "Post"}, {"value": 1298, "name": "ProxyFromEnvironment"}, {"value": 2497, "name": "ReadResponse"}, {"value": 1682, "name": "Redirect"}, {"value": 8, "name": "ServerContextKey"}, {"value": 24, "name": "aLongTimeAgo"}, {"value": 6, "name": "alwaysFalse"}, {"value": 1488, "name": "appendTime"}, {"children": [{"value": 120, "name": "Error"}], "name": "badRequestError."}, {"value": 266, "name": "basicAuth"}, {"children": [{"value": 178, "name": "Read"}], "name": "bodyLocked."}, {"value": 24, "name": "bufioReaderPool"}, {"value": 24, "name": "bufioWriter2kPool"}, {"value": 24, "name": "bufioWriter4kPool"}, {"value": 300, "name": "canonicalAddr"}, {"children": [{"value": 266, "name": "Write"}], "name": "checkConnErrorWriter."}, {"value": 499, "name": "checkIfMatch"}, {"value": 556, "name": "checkIfModifiedSince"}, {"value": 832, "name": "checkIfNoneMatch"}, {"value": 660, "name": "checkIfRange"}, {"value": 433, "name": "checkIfUnmodifiedSince"}, {"value": 913, "name": "checkPreconditions"}, {"value": 420, "name": "cleanHost"}, {"value": 324, "name": "cleanPath"}, {"value": 593, "name": "cloneHeader"}, {"value": 111, "name": "cloneTLSConfig"}, {"value": 24, "name": "colonSpace"}, {"value": 80, "name": "connStateInterface"}, {"children": [{"value": 307, "name": "String"}], "name": "connectMethodKey."}, {"value": 8, "name": "cookieNameSanitizer"}, {"value": 24, "name": "copyBufPool"}, {"value": 710, "name": "copyValues"}, {"value": 24, "name": "crlf"}, {"value": 191, "name": "defaultCheckRedirect"}, {"value": 40, "name": "defaultServeMux"}, {"value": 1392, "name": "dirList"}, {"children": [{"value": 235, "name": "func1"}], "name": "dirList."}, {"value": 24, "name": "doubleCRLF"}, {"value": 16, "name": "errCloseIdleConns"}, {"value": 16, "name": "errConnBroken"}, {"value": 16, "name": "errIdleConnTimeout"}, {"value": 16, "name": "errKeepAlivesDisabled"}, {"value": 16, "name": "errMissingHost"}, {"value": 16, "name": "errNoOverlap"}, {"value": 16, "name": "errNotCachingH2Conn"}, {"value": 16, "name": "errReadLoopExiting"}, {"value": 16, "name": "errReadOnClosedResBody"}, {"value": 16, "name": "errRequestCanceled"}, {"value": 16, "name": "errRequestCanceledConn"}, {"value": 16, "name": "errSeeker"}, {"value": 16, "name": "errServerClosedIdle"}, {"value": 16, "name": "errTimeout"}, {"value": 16, "name": "errTooLarge"}, {"value": 16, "name": "errTooManyIdle"}, {"value": 16, "name": "errTooManyIdleHost"}, {"value": 16, "name": "errTrailerEOF"}, {"value": 16, "name": "errWantIdle"}, {"children": [{"value": 30, "name": "Read"}], "name": "errorReader."}, {"children": [{"value": 859, "name": "Write"}], "name": "extraHeader."}, {"value": 24, "name": "extraHeaderKeys"}, {"children": [{"value": 1, "name": "Lock"}, {"value": 1, "name": "Unlock"}], "name": "fakeLocker."}, {"children": [{"value": 224, "name": "Read"}], "name": "finishAsyncByteRead."}, {"value": 1921, "name": "fixLength"}, {"value": 772, "name": "fixTrailer"}, {"children": [{"value": 664, "name": "func1"}], "name": "fixTrailer."}, {"value": 375, "name": "foreachHeaderElement"}, {"children": [{"value": 192, "name": "func2"}, {"value": 354, "name": "func3"}, {"value": 84, "name": "func4"}, {"value": 447, "name": "func5"}, {"value": 93, "name": "func6"}, {"value": 84, "name": "func7"}, {"value": 84, "name": "func8"}, {"value": 192, "name": "func9"}], "name": "glob."}, {"children": [{"value": 403, "name": "ServeHTTP"}], "name": "globalOptionsHandler."}, {"value": 173, "name": "hasPort"}, {"value": 528, "name": "hasToken"}, {"value": 24, "name": "headerContentLength"}, {"value": 24, "name": "headerDate"}, {"value": 8, "name": "headerNewlineToSpace"}, {"value": 24, "name": "headerSorterPool"}, {"value": 557, "name": "hexEscapeNonASCII"}, {"value": 102, "name": "htmlEscape"}, {"value": 8, "name": "htmlReplacer"}, {"children": [{"value": 290, "name": "match"}], "name": "htmlSig."}, {"value": 1664, "name": "http2ConfigureServer"}, {"children": [{"value": 175, "name": "func1"}], "name": "http2ConfigureServer."}, {"children": [{"value": 198, "name": "Error"}], "name": "http2ConnectionError."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2ContinuationFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2DataFrame."}, {"value": 1, "name": "http2DebugGoroutines"}, {"children": [{"value": 275, "name": "String"}], "name": "http2ErrCode."}, {"value": 16, "name": "http2ErrFrameTooLarge"}, {"value": 16, "name": "http2ErrNoCachedConn"}, {"value": 16, "name": "http2ErrPushLimitReached"}, {"value": 16, "name": "http2ErrRecursivePush"}, {"children": [{"value": 22, "name": "Has"}], "name": "http2Flags."}, {"children": [{"value": 39, "name": "Header"}, {"value": 287, "name": "String"}, {"value": 957, "name": "writeDebug"}], "name": "http2FrameHeader."}, {"children": [{"value": 287, "name": "String"}], "name": "http2FrameType."}, {"children": [{"value": 1085, "name": "Consume"}, {"value": 62, "name": "DataSize"}, {"value": 74, "name": "StreamID"}, {"value": 656, "name": "String"}], "name": "http2FrameWriteRequest."}, {"children": [{"value": 304, "name": "Error"}], "name": "http2GoAwayError."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2GoAwayFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2HeadersFrame."}, {"children": [{"value": 53, "name": "HasPriority"}, {"value": 150, "name": "Header"}, {"value": 112, "name": "HeaderBlockFragment"}, {"value": 53, "name": "HeadersEnded"}, {"value": 53, "name": "StreamEnded"}, {"value": 114, "name": "String"}, {"value": 40, "name": "invalidate"}], "name": "http2MetaHeadersFrame."}, {"value": 509, "name": "http2NewFramer"}, {"children": [{"value": 230, "name": "func1"}], "name": "http2NewFramer."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2PingFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 71, "name": "IsZero"}, {"value": 112, "name": "String"}], "name": "http2PriorityFrame."}, {"children": [{"value": 40, "name": "IsZero"}], "name": "http2PriorityParam."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2PushPromiseFrame."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2RSTStreamFrame."}, {"children": [{"value": 254, "name": "String"}, {"value": 337, "name": "Valid"}], "name": "http2Setting."}, {"children": [{"value": 289, "name": "String"}], "name": "http2SettingID."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2SettingsFrame."}, {"children": [{"value": 580, "name": "Error"}, {"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "http2StreamError."}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2UnknownFrame."}, {"value": 240, "name": "http2ValidTrailerHeader"}, {"value": 1, "name": "http2VerboseLogs"}, {"children": [{"value": 148, "name": "Header"}, {"value": 112, "name": "String"}], "name": "http2WindowUpdateFrame."}, {"value": 806, "name": "http2authorityAddr"}, {"value": 8, "name": "http2badTrailer"}, {"children": [{"value": 67, "name": "cancel"}, {"value": 128, "name": "on100"}, {"children": [{"value": 70, "name": "func1"}], "name": "on100."}, {"value": 162, "name": "scheduleBodyWrite"}], "name": "http2bodyWriterState."}, {"value": 24, "name": "http2bufWriterPool"}, {"value": 1260, "name": "http2checkConnHeaders"}, {"value": 714, "name": "http2checkValidHTTP2RequestHeaders"}, {"children": [{"value": 120, "name": "Write"}], "name": "http2chunkWriter."}, {"value": 24, "name": "http2clientPreface"}, {"value": 593, "name": "http2cloneHeader"}, {"value": 70, "name": "http2cloneTLSConfig"}, {"children": [{"value": 60, "name": "Close"}, {"value": 81, "name": "Wait"}], "name": "http2closeWaiter."}, {"value": 1162, "name": "http2commaSeparatedTrailers"}, {"value": 8, "name": "http2commonCanonHeader"}, {"value": 8, "name": "http2commonLowerHeader"}, {"value": 1986, "name": "http2configureTransport"}, {"children": [{"value": 417, "name": "func1"}], "name": "http2configureTransport."}, {"children": [{"value": 260, "name": "Error"}], "name": "http2connError."}, {"value": 24, "name": "http2connHeaders"}, {"value": 189, "name": "http2contextWithCancel"}, {"value": 1124, "name": "http2curGoroutineID"}, {"children": [{"value": 213, "name": "Error"}], "name": "http2duplicatePseudoHeaderError."}, {"value": 512, "name": "http2encKV"}, {"value": 855, "name": "http2encodeHeaders"}, {"value": 24, "name": "http2errChanPool"}, {"value": 16, "name": "http2errClientConnClosed"}, {"value": 16, "name": "http2errClientConnGotGoAway"}, {"value": 16, "name": "http2errClientConnGotGoAwayAfterSomeReqBody"}, {"value": 16, "name": "http2errClientConnUnusable"}, {"value": 16, "name": "http2errClientDisconnected"}, {"value": 16, "name": "http2errClosedBody"}, {"value": 16, "name": "http2errClosedPipeWrite"}, {"value": 16, "name": "http2errClosedResponseBody"}, {"value": 8, "name": "http2errCodeName"}, {"value": 16, "name": "http2errDepStreamID"}, {"value": 16, "name": "http2errHandlerComplete"}, {"value": 16, "name": "http2errHandlerPanicked"}, {"value": 16, "name": "http2errInvalidHeaderFieldName"}, {"value": 16, "name": "http2errInvalidHeaderFieldValue"}, {"value": 16, "name": "http2errInvalidTrailers"}, {"value": 16, "name": "http2errMixPseudoHeaderTypes"}, {"value": 16, "name": "http2errPadLength"}, {"value": 16, "name": "http2errPseudoAfterRegular"}, {"value": 16, "name": "http2errPseudoTrailers"}, {"value": 16, "name": "http2errReadEmpty"}, {"value": 16, "name": "http2errRequestCanceled"}, {"value": 16, "name": "http2errResponseHeaderListSize"}, {"value": 16, "name": "http2errStopReqBodyWrite"}, {"value": 16, "name": "http2errStopReqBodyWriteAndCancel"}, {"value": 16, "name": "http2errStreamClosed"}, {"value": 16, "name": "http2errStreamID"}, {"value": 16, "name": "http2errTimeout"}, {"value": 16, "name": "http2errTransportVersion"}, {"value": 16, "name": "http2errWriteFull"}, {"children": [{"value": 30, "name": "RoundTrip"}], "name": "http2erringRoundTripper."}, {"value": 481, "name": "http2filterOutClientConn"}, {"value": 8, "name": "http2flagName"}, {"children": [{"value": 6, "name": "staysWithinBuffer"}, {"value": 86, "name": "writeFrame"}], "name": "http2flushFrameWriter."}, {"value": 375, "name": "http2foreachHeaderElement"}, {"value": 8, "name": "http2frameName"}, {"value": 8, "name": "http2frameParsers"}, {"children": [{"value": 82, "name": "Done"}, {"value": 81, "name": "Wait"}], "name": "http2gate."}, {"value": 231, "name": "http2getRequestBodyBuf"}, {"children": [{"value": 22, "name": "Error"}], "name": "http2goAwayFlowError."}, {"children": [{"value": 166, "name": "check"}, {"value": 166, "name": "checkNotOn"}], "name": "http2goroutineLock."}, {"value": 24, "name": "http2goroutineSpace"}, {"value": 143, "name": "http2h1ServerKeepAlivesDisabled"}, {"value": 195, "name": "http2h1ServerShutdownChan"}, {"value": 163, "name": "http2handleHeaderListTooLong"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "http2handlerPanicRST."}, {"children": [{"value": 213, "name": "Error"}], "name": "http2headerFieldNameError."}, {"children": [{"value": 213, "name": "Error"}], "name": "http2headerFieldValueError."}, {"value": 166, "name": "http2httpCodeString"}, {"value": 8, "name": "http2httpCodeStringCommon"}, {"value": 1, "name": "http2inTests"}, {"value": 167, "name": "http2isClosedConnError"}, {"value": 184, "name": "http2isConnectionCloseRequest"}, {"value": 24, "name": "http2littleBuf"}, {"value": 1, "name": "http2logFrameReads"}, {"value": 1, "name": "http2logFrameWrites"}, {"value": 186, "name": "http2lowerHeader"}, {"value": 137, "name": "http2mustUint31"}, {"value": 148, "name": "http2new400Handler"}, {"children": [{"value": 117, "name": "func1"}], "name": "http2new400Handler."}, {"value": 90, "name": "http2newGoroutineLock"}, {"value": 16, "name": "http2noBody"}, {"children": [{"value": 128, "name": "GetClientConn"}, {"value": 92, "name": "MarkDead"}, {"value": 82, "name": "closeIdleConnections"}], "name": "http2noDialClientConnPool."}, {"children": [{"value": 241, "name": "RoundTrip"}], "name": "http2noDialH2RoundTripper."}, {"value": 24, "name": "http2padZeros"}, {"value": 348, "name": "http2parseContinuationFrame"}, {"value": 687, "name": "http2parseDataFrame"}, {"value": 516, "name": "http2parseGoAwayFrame"}, {"value": 1015, "name": "http2parseHeadersFrame"}, {"value": 368, "name": "http2parsePingFrame"}, {"value": 678, "name": "http2parsePriorityFrame"}, {"value": 722, "name": "http2parsePushPromise"}, {"value": 360, "name": "http2parseRSTStreamFrame"}, {"value": 688, "name": "http2parseSettingsFrame"}, {"value": 1192, "name": "http2parseUintBytes"}, {"value": 198, "name": "http2parseUnknownFrame"}, {"value": 526, "name": "http2parseWindowUpdateFrame"}, {"children": [{"value": 213, "name": "Error"}], "name": "http2pseudoHeaderError."}, {"value": 123, "name": "http2putRequestBodyBuf"}, {"value": 409, "name": "http2readFrameHeader"}, {"value": 213, "name": "http2registerHTTPSProtocol"}, {"children": [{"value": 223, "name": "func1"}], "name": "http2registerHTTPSProtocol."}, {"value": 8, "name": "http2reqBodyCache"}, {"value": 110, "name": "http2requestTrace"}, {"value": 126, "name": "http2requestWithContext"}, {"value": 24, "name": "http2responseWriterStatePool"}, {"value": 613, "name": "http2serverConnBaseContext"}, {"value": 8, "name": "http2settingName"}, {"value": 881, "name": "http2shouldRetryRequest"}, {"value": 24, "name": "http2sorterPool"}, {"value": 378, "name": "http2splitHeaderBlock"}, {"value": 80, "name": "http2stateName"}, {"children": [{"value": 279, "name": "Write"}], "name": "http2stickyErrWriter."}, {"value": 186, "name": "http2strSliceContains"}, {"children": [{"value": 69, "name": "String"}], "name": "http2streamState."}, {"value": 2371, "name": "http2summarizeFrame"}, {"children": [{"value": 364, "name": "func1"}], "name": "http2summarizeFrame."}, {"value": 8, "name": "http2testHookGetServerConn"}, {"value": 8, "name": "http2testHookOnConn"}, {"value": 8, "name": "http2testHookOnPanic"}, {"value": 8, "name": "http2testHookOnPanicMu"}, {"value": 8, "name": "http2testh1ServerShutdownChan"}, {"value": 69, "name": "http2traceFirstResponseByte"}, {"value": 69, "name": "http2traceGot100Continue"}, {"value": 487, "name": "http2traceGotConn"}, {"value": 69, "name": "http2traceWait100Continue"}, {"value": 69, "name": "http2traceWroteHeaders"}, {"value": 91, "name": "http2traceWroteRequest"}, {"children": [{"value": 518, "name": "Close"}, {"value": 1469, "name": "Read"}], "name": "http2transportResponseBody."}, {"value": 245, "name": "http2validWireHeaderFieldName"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 405, "name": "writeFrame"}], "name": "http2write100ContinueHeadersFrame."}, {"value": 24, "name": "http2writeDataPool"}, {"value": 302, "name": "http2writeEndsStream"}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 119, "name": "writeFrame"}], "name": "http2writePingAck."}, {"children": [{"value": 32, "name": "staysWithinBuffer"}, {"value": 133, "name": "writeFrame"}], "name": "http2writeSettings."}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 100, "name": "writeFrame"}], "name": "http2writeSettingsAck."}, {"children": [{"value": 17, "name": "staysWithinBuffer"}, {"value": 116, "name": "writeFrame"}], "name": "http2writeWindowUpdate."}, {"value": 8, "name": "httpProxyEnv"}, {"children": [{"value": 349, "name": "contentRange"}, {"value": 602, "name": "mimeHeader"}], "name": "httpRange."}, {"value": 8, "name": "httpsProxyEnv"}, {"value": 303, "name": "idnaASCII"}, {"value": 13099, "name": "init"}, {"children": [{"value": 442, "name": "1"}, {"value": 224, "name": "2"}, {"value": 280, "name": "3"}], "name": "init."}, {"children": [{"value": 658, "name": "ServeHTTP"}], "name": "initNPNRequest."}, {"value": 1, "name": "initdone."}, {"value": 46, "name": "isASCII"}, {"value": 346, "name": "isCommonNetReadError"}, {"value": 258, "name": "isCookieDomainName"}, {"value": 117, "name": "isCookieNameValid"}, {"value": 65, "name": "isNotToken"}, {"value": 282, "name": "localRedirect"}, {"value": 418, "name": "mergeSetHeader"}, {"value": 24, "name": "mp4"}, {"children": [{"value": 581, "name": "match"}], "name": "mp4Sig."}, {"value": 24, "name": "mp4ftype"}, {"value": 8, "name": "multipartByReader"}, {"value": 780, "name": "newBufioReader"}, {"value": 643, "name": "newBufioWriterSize"}, {"value": 265, "name": "newTextprotoReader"}, {"value": 2378, "name": "newTransferWriter"}, {"children": [{"value": 19, "name": "Close"}, {"value": 34, "name": "Read"}, {"value": 28, "name": "WriteTo"}], "name": "noBody."}, {"value": 8, "name": "noProxyEnv"}, {"value": 1, "name": "nop"}, {"children": [{"value": 108, "name": "Error"}], "name": "nothingWrittenError."}, {"value": 49, "name": "numLeadingCRorLF"}, {"value": 581, "name": "parseBasicAuth"}, {"value": 403, "name": "parseContentLength"}, {"value": 264, "name": "parseCookieValue"}, {"value": 1127, "name": "parsePostForm"}, {"value": 2219, "name": "parseRange"}, {"value": 427, "name": "parseRequestLine"}, {"children": [{"value": 148, "name": "Write"}], "name": "persistConnWriter."}, {"value": 8, "name": "portMap"}, {"value": 285, "name": "putBufioReader"}, {"value": 264, "name": "putBufioWriter"}, {"value": 128, "name": "putTextprotoReader"}, {"value": 318, "name": "rangesMIMESize"}, {"value": 1559, "name": "readCookies"}, {"value": 3076, "name": "readRequest"}, {"children": [{"value": 196, "name": "func1"}], "name": "readRequest."}, {"value": 4111, "name": "readSetCookies"}, {"value": 3889, "name": "readTransfer"}, {"value": 429, "name": "redirectBehavior"}, {"value": 433, "name": "refererForURL"}, {"value": 505, "name": "registerOnHitEOF"}, {"value": 280, "name": "removeEmptyPort"}, {"value": 453, "name": "removeZone"}, {"value": 8, "name": "reqWriteExcludeHeader"}, {"value": 548, "name": "requestBodyRemains"}, {"value": 8, "name": "respExcludeHeader"}, {"value": 102, "name": "sanitizeCookieName"}, {"value": 123, "name": "sanitizeCookiePath"}, {"value": 300, "name": "sanitizeCookieValue"}, {"value": 818, "name": "sanitizeOrWarn"}, {"value": 459, "name": "scanETag"}, {"value": 217, "name": "seeUpcomingDoubleCRLF"}, {"value": 2408, "name": "send"}, {"children": [{"value": 232, "name": "func1"}], "name": "send."}, {"value": 3637, "name": "serveContent"}, {"children": [{"value": 569, "name": "func1"}], "name": "serveContent."}, {"value": 2955, "name": "serveFile"}, {"children": [{"value": 92, "name": "func1"}], "name": "serveFile."}, {"children": [{"value": 292, "name": "ServeHTTP"}], "name": "serverHandler."}, {"value": 317, "name": "setLastModified"}, {"value": 1029, "name": "setRequestCancel"}, {"children": [{"value": 268, "name": "func1"}, {"value": 99, "name": "func2"}, {"children": [{"value": 59, "name": "1"}], "name": "func2."}, {"value": 392, "name": "func3"}], "name": "setRequestCancel."}, {"value": 387, "name": "shouldClose"}, {"value": 853, "name": "shouldCopyHeaderOnRedirect"}, {"value": 8, "name": "shutdownPollInterval"}, {"value": 24, "name": "singleCRLF"}, {"value": 24, "name": "sniffSignatures"}, {"value": 394, "name": "srcIsRegularFile"}, {"value": 8, "name": "stateName"}, {"value": 12, "name": "statictmp_1016"}, {"value": 12, "name": "statictmp_1019"}, {"value": 752, "name": "statictmp_1787"}, {"value": 24, "name": "statictmp_1940"}, {"value": 24, "name": "statictmp_2044"}, {"value": 24, "name": "statictmp_2347"}, {"value": 24, "name": "statictmp_255"}, {"value": 48, "name": "statictmp_2681"}, {"value": 1, "name": "statictmp_2779"}, {"value": 16, "name": "statictmp_2830"}, {"value": 16, "name": "statictmp_2898"}, {"value": 32, "name": "statictmp_3590"}, {"value": 32, "name": "statictmp_3596"}, {"value": 32, "name": "statictmp_3598"}, {"value": 32, "name": "statictmp_3712"}, {"value": 64, "name": "statictmp_3772"}, {"value": 16, "name": "statictmp_4062"}, {"value": 16, "name": "statictmp_4215"}, {"value": 24, "name": "statictmp_4280"}, {"value": 24, "name": "statictmp_4387"}, {"value": 24, "name": "statictmp_4391"}, {"value": 96, "name": "statictmp_4670"}, {"value": 24, "name": "statictmp_4759"}, {"value": 24, "name": "statictmp_49"}, {"value": 16, "name": "statictmp_5181"}, {"value": 16, "name": "statictmp_5565"}, {"value": 24, "name": "statictmp_5667"}, {"value": 168, "name": "statictmp_5784"}, {"value": 168, "name": "statictmp_5796"}, {"value": 40, "name": "statictmp_6028"}, {"value": 72, "name": "statictmp_6248"}, {"value": 48, "name": "statictmp_6367"}, {"value": 24, "name": "statictmp_6368"}, {"value": 80, "name": "statictmp_6369"}, {"value": 48, "name": "statictmp_6370"}, {"value": 16, "name": "statictmp_6371"}, {"value": 16, "name": "statictmp_6372"}, {"value": 16, "name": "statictmp_6373"}, {"value": 16, "name": "statictmp_6374"}, {"value": 16, "name": "statictmp_6378"}, {"value": 16, "name": "statictmp_6379"}, {"value": 16, "name": "statictmp_6380"}, {"value": 72, "name": "statictmp_6381"}, {"value": 8, "name": "statictmp_6382"}, {"value": 8, "name": "statictmp_6383"}, {"value": 8, "name": "statictmp_6384"}, {"value": 8, "name": "statictmp_6385"}, {"value": 8, "name": "statictmp_6386"}, {"value": 688, "name": "statictmp_6387"}, {"value": 24, "name": "statictmp_6388"}, {"value": 24, "name": "statictmp_6389"}, {"value": 24, "name": "statictmp_6390"}, {"value": 24, "name": "statictmp_6391"}, {"value": 24, "name": "statictmp_6392"}, {"value": 24, "name": "statictmp_6393"}, {"value": 24, "name": "statictmp_6394"}, {"value": 24, "name": "statictmp_6395"}, {"value": 24, "name": "statictmp_6396"}, {"value": 24, "name": "statictmp_6397"}, {"value": 24, "name": "statictmp_6398"}, {"value": 24, "name": "statictmp_6399"}, {"value": 24, "name": "statictmp_6400"}, {"value": 24, "name": "statictmp_6401"}, {"value": 24, "name": "statictmp_6402"}, {"value": 24, "name": "statictmp_6403"}, {"value": 24, "name": "statictmp_6404"}, {"value": 72, "name": "statictmp_6405"}, {"value": 40, "name": "statictmp_6406"}, {"value": 40, "name": "statictmp_6407"}, {"value": 72, "name": "statictmp_6408"}, {"value": 72, "name": "statictmp_6409"}, {"value": 72, "name": "statictmp_6410"}, {"value": 40, "name": "statictmp_6411"}, {"value": 40, "name": "statictmp_6412"}, {"value": 40, "name": "statictmp_6413"}, {"value": 40, "name": "statictmp_6414"}, {"value": 40, "name": "statictmp_6415"}, {"value": 72, "name": "statictmp_6416"}, {"value": 40, "name": "statictmp_6417"}, {"value": 72, "name": "statictmp_6418"}, {"value": 72, "name": "statictmp_6419"}, {"value": 72, "name": "statictmp_6420"}, {"value": 72, "name": "statictmp_6421"}, {"value": 72, "name": "statictmp_6422"}, {"value": 72, "name": "statictmp_6423"}, {"value": 72, "name": "statictmp_6424"}, {"value": 40, "name": "statictmp_6425"}, {"value": 40, "name": "statictmp_6426"}, {"value": 40, "name": "statictmp_6427"}, {"value": 40, "name": "statictmp_6428"}, {"value": 48, "name": "statictmp_6431"}, {"value": 32, "name": "statictmp_6432"}, {"value": 56, "name": "statictmp_6433"}, {"value": 32, "name": "statictmp_6434"}, {"value": 56, "name": "statictmp_6435"}, {"value": 32, "name": "statictmp_6436"}, {"value": 56, "name": "statictmp_6437"}, {"value": 32, "name": "statictmp_6438"}, {"value": 232, "name": "statictmp_6439"}, {"value": 24, "name": "statictmp_6440"}, {"value": 64, "name": "statictmp_6445"}, {"value": 56, "name": "statictmp_6448"}, {"value": 224, "name": "statictmp_6449"}, {"value": 10, "name": "statictmp_6453"}, {"value": 160, "name": "statictmp_6454"}, {"value": 2, "name": "statictmp_6460"}, {"value": 32, "name": "statictmp_6461"}, {"value": 4, "name": "statictmp_6465"}, {"value": 64, "name": "statictmp_6466"}, {"value": 1, "name": "statictmp_6470"}, {"value": 16, "name": "statictmp_6471"}, {"value": 1, "name": "statictmp_6475"}, {"value": 16, "name": "statictmp_6476"}, {"value": 1, "name": "statictmp_6480"}, {"value": 16, "name": "statictmp_6481"}, {"value": 2, "name": "statictmp_6485"}, {"value": 32, "name": "statictmp_6486"}, {"value": 12, "name": "statictmp_6506"}, {"value": 96, "name": "statictmp_6507"}, {"value": 336, "name": "statictmp_6512"}, {"value": 21, "name": "statictmp_6513"}, {"value": 64, "name": "statictmp_6517"}, {"value": 80, "name": "statictmp_6520"}, {"value": 5, "name": "statictmp_6521"}, {"value": 48, "name": "statictmp_6525"}, {"value": 3, "name": "statictmp_6526"}, {"value": 160, "name": "statictmp_6530"}, {"value": 40, "name": "statictmp_6533"}, {"value": 80, "name": "statictmp_6534"}, {"value": 472, "name": "statictmp_6538"}, {"value": 944, "name": "statictmp_6539"}, {"value": 32, "name": "statictmp_6543"}, {"value": 32, "name": "statictmp_6544"}, {"value": 16, "name": "statictmp_859"}, {"value": 1132, "name": "statusLine"}, {"value": 8, "name": "statusLines"}, {"value": 24, "name": "statusMu"}, {"value": 8, "name": "statusText"}, {"value": 186, "name": "strSliceContains"}, {"children": [{"value": 166, "name": "WriteString"}], "name": "stringWriter."}, {"value": 44, "name": "sumRangesSize"}, {"value": 24, "name": "suppressedHeaders304"}, {"value": 24, "name": "suppressedHeadersNoBody"}, {"children": [{"value": 213, "name": "Accept"}, {"value": 112, "name": "AcceptTCP"}, {"value": 58, "name": "Addr"}, {"value": 102, "name": "Close"}, {"value": 112, "name": "File"}, {"value": 133, "name": "SetDeadline"}], "name": "tcpKeepAliveListener."}, {"value": 8, "name": "testHookEnterRoundTrip"}, {"value": 16, "name": "testHookMu"}, {"value": 8, "name": "testHookPostPendingDial"}, {"value": 8, "name": "testHookPrePendingDial"}, {"value": 8, "name": "testHookReadLoopBeforeNextRead"}, {"value": 8, "name": "testHookRoundTripRetried"}, {"value": 8, "name": "testHookServerServe"}, {"value": 8, "name": "testHookWaitResLoop"}, {"children": [{"value": 176, "name": "match"}], "name": "textSig."}, {"value": 24, "name": "textprotoReaderPool"}, {"value": 24, "name": "timeFormats"}, {"children": [{"value": 22, "name": "Error"}, {"value": 6, "name": "Temporary"}, {"value": 6, "name": "Timeout"}], "name": "tlsHandshakeTimeoutError."}, {"value": 229, "name": "toHTTPError"}, {"children": [{"value": 173, "name": "Error"}], "name": "transportReadFromServerError."}, {"children": [{"value": 92, "name": "AddCookie"}, {"value": 134, "name": "BasicAuth"}, {"value": 82, "name": "Context"}, {"value": 135, "name": "Cookie"}, {"value": 112, "name": "Cookies"}, {"value": 171, "name": "FormFile"}, {"value": 122, "name": "FormValue"}, {"value": 112, "name": "MultipartReader"}, {"value": 102, "name": "ParseForm"}, {"value": 112, "name": "ParseMultipartForm"}, {"value": 122, "name": "PostFormValue"}, {"value": 86, "name": "ProtoAtLeast"}, {"value": 102, "name": "Referer"}, {"value": 122, "name": "SetBasicAuth"}, {"value": 102, "name": "UserAgent"}, {"value": 112, "name": "WithContext"}, {"value": 122, "name": "Write"}, {"value": 122, "name": "WriteProxy"}], "name": "transportRequest."}, {"value": 8, "name": "uniqNameNext"}, {"value": 24, "name": "unixEpochTime"}, {"value": 1631, "name": "useProxy"}, {"value": 211, "name": "validCookieDomain"}, {"value": 96, "name": "validCookieExpires"}, {"value": 27, "name": "validCookiePathByte"}, {"value": 43, "name": "validCookieValueByte"}, {"value": 107, "name": "validMethod"}, {"value": 51, "name": "validPort"}, {"value": 325, "name": "writeNotModified"}, {"children": [{"value": 158, "name": "Write"}], "name": "writerOnly."}, {"value": 88, "name": "zeroDialer"}], "name": "http."}, {"children": [{"children": [{"value": 40, "name": "go.itab.*FlushAfterChunkWriter,io.Writer"}, {"value": 40, "name": "go.itab.*chunkedReader,io.Reader"}, {"value": 48, "name": "go.itab.*chunkedWriter,io.WriteCloser"}, {"children": [{"value": 27, "name": "Available"}, {"value": 27, "name": "Buffered"}, {"value": 36, "name": "Flush"}, {"value": 45, "name": "ReadFrom"}, {"value": 18, "name": "Reset"}, {"value": 45, "name": "Write"}, {"value": 36, "name": "WriteByte"}, {"value": 45, "name": "WriteRune"}, {"value": 45, "name": "WriteString"}], "name": "(*FlushAfterChunkWriter)."}, {"children": [{"value": 930, "name": "Read"}, {"value": 381, "name": "beginChunk"}, {"value": 160, "name": "chunkHeaderAvailable"}], "name": "(*chunkedReader)."}, {"children": [{"value": 113, "name": "Close"}, {"value": 716, "name": "Write"}], "name": "(*chunkedWriter)."}, {"value": 16, "name": "ErrLineTooLong"}, {"children": [{"value": 53, "name": "Available"}, {"value": 46, "name": "Buffered"}, {"value": 102, "name": "Flush"}, {"value": 135, "name": "ReadFrom"}, {"value": 200, "name": "Reset"}, {"value": 145, "name": "Write"}, {"value": 111, "name": "WriteByte"}, {"value": 120, "name": "WriteRune"}, {"value": 135, "name": "WriteString"}], "name": "FlushAfterChunkWriter."}, {"value": 199, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 409, "name": "parseHexUint"}, {"value": 608, "name": "readChunkLine"}, {"value": 216, "name": "removeChunkExtension"}, {"value": 149, "name": "trimTrailingWhitespace"}], "name": "internal."}, {"children": [{"value": 24, "name": "endOfTime"}, {"value": 16, "name": "errIllegalDomain"}, {"value": 16, "name": "errMalformedDomain"}, {"value": 16, "name": "errNoHostname"}, {"value": 550, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "cookiejar."}, {"children": [{"value": 160, "name": "ContextClientTrace"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "httptrace."}, {"children": [{"children": [{"value": 205, "name": "ServeHTTP"}], "name": "(*handler)."}, {"value": 317, "name": "Cmdline"}, {"value": 640, "name": "Index"}, {"value": 682, "name": "Profile"}, {"value": 2127, "name": "Symbol"}, {"value": 714, "name": "Trace"}, {"children": [{"value": 754, "name": "ServeHTTP"}], "name": "handler."}, {"value": 8, "name": "indexTmpl"}, {"value": 311, "name": "init"}, {"children": [{"value": 298, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 352, "name": "sleep"}], "name": "pprof."}], "name": "http/"}, {"children": [{"value": 40, "name": "go.itab.*Error,error"}, {"value": 40, "name": "go.itab.*dotReader,io.Reader"}, {"value": 40, "name": "go.itab.ProtocolError,error"}, {"children": [{"value": 262, "name": "Error"}], "name": "(*Error)."}, {"children": [{"value": 206, "name": "Add"}, {"value": 186, "name": "Del"}, {"value": 206, "name": "Get"}, {"value": 206, "name": "Set"}], "name": "(*MIMEHeader)."}, {"children": [{"value": 171, "name": "Error"}], "name": "(*ProtocolError)."}, {"children": [{"value": 221, "name": "DotReader"}, {"value": 296, "name": "ReadCodeLine"}, {"value": 170, "name": "ReadContinuedLine"}, {"value": 282, "name": "ReadContinuedLineBytes"}, {"value": 137, "name": "ReadDotBytes"}, {"value": 534, "name": "ReadDotLines"}, {"value": 170, "name": "ReadLine"}, {"value": 282, "name": "ReadLineBytes"}, {"value": 1808, "name": "ReadMIMEHeader"}, {"value": 856, "name": "ReadResponse"}, {"value": 196, "name": "closeDot"}, {"value": 245, "name": "readCodeLine"}, {"value": 1507, "name": "readContinuedLineSlice"}, {"value": 560, "name": "readLineSlice"}, {"value": 226, "name": "skipSpace"}, {"value": 311, "name": "upcomingHeaderNewlines"}], "name": "(*Reader)."}, {"children": [{"value": 1159, "name": "Read"}], "name": "(*dotReader)."}, {"value": 428, "name": "CanonicalMIMEHeaderKey"}, {"children": [{"value": 439, "name": "Add"}, {"value": 126, "name": "Del"}, {"value": 227, "name": "Get"}, {"value": 274, "name": "Set"}], "name": "MIMEHeader."}, {"children": [{"value": 21, "name": "Error"}], "name": "ProtocolError."}, {"value": 215, "name": "TrimString"}, {"value": 439, "name": "canonicalMIMEHeaderKey"}, {"value": 8, "name": "commonHeader"}, {"value": 235, "name": "init"}, {"children": [{"value": 290, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 127, "name": "isTokenTable"}, {"value": 989, "name": "parseCodeLine"}, {"value": 624, "name": "statictmp_173"}, {"value": 181, "name": "trim"}], "name": "textproto."}, {"children": [{"value": 40, "name": "go.itab.*Error,error"}, {"value": 40, "name": "go.itab.EscapeError,error"}, {"value": 40, "name": "go.itab.InvalidHostError,error"}, {"children": [{"value": 217, "name": "Error"}, {"value": 127, "name": "Temporary"}, {"value": 127, "name": "Timeout"}], "name": "(*Error)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*EscapeError)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*InvalidHostError)."}, {"children": [{"value": 354, "name": "EscapedPath"}, {"value": 93, "name": "Hostname"}, {"value": 20, "name": "IsAbs"}, {"value": 144, "name": "MarshalBinary"}, {"value": 173, "name": "Parse"}, {"value": 93, "name": "Port"}, {"value": 83, "name": "Query"}, {"value": 415, "name": "RequestURI"}, {"value": 1001, "name": "ResolveReference"}, {"value": 1088, "name": "String"}, {"value": 244, "name": "UnmarshalBinary"}, {"value": 432, "name": "setPath"}], "name": "(*URL)."}, {"children": [{"value": 32, "name": "Password"}, {"value": 251, "name": "String"}, {"value": 23, "name": "Username"}], "name": "(*Userinfo)."}, {"children": [{"value": 529, "name": "Add"}, {"value": 208, "name": "Del"}, {"value": 186, "name": "Encode"}, {"value": 252, "name": "Get"}, {"value": 356, "name": "Set"}], "name": "(*Values)."}, {"children": [{"value": 147, "name": "Error"}], "name": "EscapeError."}, {"children": [{"value": 172, "name": "Error"}], "name": "InvalidHostError."}, {"value": 1004, "name": "Parse"}, {"value": 165, "name": "ParseQuery"}, {"value": 380, "name": "ParseRequestURI"}, {"value": 99, "name": "QueryEscape"}, {"value": 119, "name": "QueryUnescape"}, {"children": [{"value": 415, "name": "Add"}, {"value": 102, "name": "Del"}, {"value": 1276, "name": "Encode"}, {"value": 194, "name": "Get"}, {"value": 250, "name": "Set"}], "name": "Values."}, {"value": 802, "name": "escape"}, {"value": 526, "name": "getscheme"}, {"value": 111, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 2503, "name": "parse"}, {"value": 1431, "name": "parseAuthority"}, {"value": 1560, "name": "parseHost"}, {"value": 1071, "name": "parseQuery"}, {"value": 396, "name": "portOnly"}, {"value": 1161, "name": "resolvePath"}, {"value": 411, "name": "shouldEscape"}, {"value": 318, "name": "split"}, {"value": 363, "name": "stripPort"}, {"value": 2031, "name": "unescape"}, {"value": 250, "name": "validEncodedPath"}, {"value": 241, "name": "validOptionalPort"}], "name": "url."}], "name": "net/"}, {"children": [{"value": 40, "name": "go.itab.*File,io.Closer"}, {"value": 48, "name": "go.itab.*File,io.ReadCloser"}, {"value": 48, "name": "go.itab.*File,io.ReadSeeker"}, {"value": 40, "name": "go.itab.*File,io.Reader"}, {"value": 48, "name": "go.itab.*File,io.WriteCloser"}, {"value": 40, "name": "go.itab.*File,io.Writer"}, {"value": 64, "name": "go.itab.*File,mime/multipart.File"}, {"value": 40, "name": "go.itab.*LinkError,error"}, {"value": 40, "name": "go.itab.*PathError,error"}, {"value": 40, "name": "go.itab.*SyscallError,error"}, {"value": 80, "name": "go.itab.*fileStat,os.FileInfo"}, {"children": [{"value": 665, "name": "Chdir"}, {"value": 723, "name": "Chmod"}, {"value": 685, "name": "Chown"}, {"value": 122, "name": "Close"}, {"value": 32, "name": "Fd"}, {"value": 27, "name": "Name"}, {"value": 797, "name": "Read"}, {"value": 932, "name": "ReadAt"}, {"value": 193, "name": "Readdir"}, {"value": 193, "name": "Readdirnames"}, {"value": 834, "name": "Seek"}, {"value": 534, "name": "Stat"}, {"value": 665, "name": "Sync"}, {"value": 675, "name": "Truncate"}, {"value": 814, "name": "Write"}, {"value": 862, "name": "WriteAt"}, {"value": 170, "name": "WriteString"}, {"value": 152, "name": "pread"}, {"value": 152, "name": "pwrite"}, {"value": 136, "name": "read"}, {"value": 969, "name": "readdir"}, {"value": 1199, "name": "readdirnames"}, {"value": 116, "name": "seek"}, {"value": 295, "name": "write"}], "name": "(*File)."}, {"children": [{"value": 168, "name": "IsDir"}, {"value": 168, "name": "IsRegular"}, {"value": 165, "name": "Perm"}, {"value": 184, "name": "String"}], "name": "(*FileMode)."}, {"children": [{"value": 284, "name": "Error"}], "name": "(*LinkError)."}, {"children": [{"value": 217, "name": "Error"}], "name": "(*PathError)."}, {"children": [{"value": 80, "name": "Kill"}, {"value": 80, "name": "Release"}, {"value": 100, "name": "Signal"}, {"value": 90, "name": "Wait"}, {"value": 571, "name": "blockUntilWaitable"}, {"value": 18, "name": "done"}, {"value": 104, "name": "kill"}, {"value": 115, "name": "release"}, {"value": 14, "name": "setDone"}, {"value": 792, "name": "signal"}, {"value": 801, "name": "wait"}], "name": "(*Process)."}, {"children": [{"value": 21, "name": "Exited"}, {"value": 14, "name": "Pid"}, {"value": 911, "name": "String"}, {"value": 41, "name": "Success"}, {"value": 98, "name": "Sys"}, {"value": 27, "name": "SysUsage"}, {"value": 46, "name": "SystemTime"}, {"value": 39, "name": "UserTime"}], "name": "(*ProcessState)."}, {"children": [{"value": 172, "name": "Error"}], "name": "(*SyscallError)."}, {"children": [{"value": 482, "name": "close"}], "name": "(*file)."}, {"children": [{"value": 21, "name": "IsDir"}, {"value": 31, "name": "ModTime"}, {"value": 13, "name": "Mode"}, {"value": 23, "name": "Name"}, {"value": 15, "name": "Size"}, {"value": 29, "name": "Sys"}], "name": "(*fileStat)."}, {"value": 24, "name": "Args"}, {"value": 117, "name": "Create"}, {"value": 80, "name": "Environ"}, {"value": 16, "name": "ErrClosed"}, {"value": 16, "name": "ErrExist"}, {"value": 16, "name": "ErrInvalid"}, {"value": 16, "name": "ErrNotExist"}, {"value": 16, "name": "ErrPermission"}, {"value": 77, "name": "Exit"}, {"value": 951, "name": "Expand"}, {"value": 102, "name": "ExpandEnv"}, {"children": [{"value": 17, "name": "IsDir"}, {"value": 17, "name": "IsRegular"}, {"value": 14, "name": "Perm"}, {"value": 584, "name": "String"}], "name": "FileMode."}, {"value": 90, "name": "FindProcess"}, {"value": 90, "name": "Getenv"}, {"value": 60, "name": "Getgid"}, {"value": 60, "name": "Getpagesize"}, {"value": 60, "name": "Getpid"}, {"value": 60, "name": "Getppid"}, {"value": 60, "name": "Getuid"}, {"value": 3106, "name": "Getwd"}, {"value": 90, "name": "Hostname"}, {"value": 16, "name": "Interrupt"}, {"value": 79, "name": "IsExist"}, {"value": 79, "name": "IsNotExist"}, {"value": 79, "name": "IsPermission"}, {"value": 16, "name": "Kill"}, {"value": 99, "name": "LookupEnv"}, {"value": 474, "name": "Lstat"}, {"value": 410, "name": "Mkdir"}, {"value": 829, "name": "MkdirAll"}, {"value": 337, "name": "NewFile"}, {"value": 117, "name": "Open"}, {"value": 501, "name": "OpenFile"}, {"value": 859, "name": "Pipe"}, {"value": 597, "name": "Readlink"}, {"value": 487, "name": "Remove"}, {"value": 1443, "name": "RemoveAll"}, {"value": 110, "name": "Rename"}, {"value": 159, "name": "StartProcess"}, {"value": 474, "name": "Stat"}, {"value": 8, "name": "Stderr"}, {"value": 8, "name": "Stdin"}, {"value": 8, "name": "Stdout"}, {"value": 447, "name": "Symlink"}, {"value": 110, "name": "TempDir"}, {"value": 164, "name": "basename"}, {"value": 113, "name": "epipecheck"}, {"value": 16, "name": "errFinished"}, {"value": 16, "name": "executablePath"}, {"value": 16, "name": "executablePathErr"}, {"value": 570, "name": "fillFileStatFromSys"}, {"value": 97, "name": "findProcess"}, {"value": 565, "name": "getShellName"}, {"value": 24, "name": "getwdCache"}, {"children": [{"value": 111, "name": "func1"}, {"value": 6, "name": "func2"}], "name": "glob."}, {"value": 642, "name": "hostname"}, {"value": 1066, "name": "init"}, {"children": [{"value": 119, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 252, "name": "isExist"}, {"value": 187, "name": "isNotExist"}, {"value": 252, "name": "isPermission"}, {"value": 188, "name": "itoa"}, {"value": 8, "name": "lstat"}, {"value": 147, "name": "newProcess"}, {"value": 866, "name": "rename"}, {"value": 280, "name": "runtime_args"}, {"value": 1, "name": "runtime_beforeExit"}, {"value": 62, "name": "sigpipe"}, {"value": 1195, "name": "startProcess"}, {"value": 112, "name": "statictmp_218"}, {"value": 8, "name": "statictmp_606"}, {"value": 8, "name": "statictmp_607"}, {"value": 301, "name": "uitoa"}, {"value": 290, "name": "underlyingError"}, {"value": 8, "name": "useSyscallwd"}], "name": "os."}, {"children": [{"children": [{"value": 40, "name": "go.itab.*Error,error"}, {"value": 40, "name": "go.itab.*ExitError,error"}, {"value": 48, "name": "go.itab.*closeOnce,io.WriteCloser"}, {"value": 40, "name": "go.itab.*prefixSuffixSaver,io.Writer"}, {"value": 40, "name": "go.itab.closerFunc,io.Closer"}, {"children": [{"value": 607, "name": "CombinedOutput"}, {"value": 763, "name": "Output"}, {"value": 132, "name": "Run"}, {"value": 2765, "name": "Start"}, {"children": [{"value": 118, "name": "func1"}, {"value": 319, "name": "func2"}], "name": "Start."}, {"value": 1096, "name": "StderrPipe"}, {"value": 1323, "name": "StdinPipe"}, {"value": 1096, "name": "StdoutPipe"}, {"value": 1018, "name": "Wait"}, {"value": 109, "name": "closeDescriptors"}, {"value": 127, "name": "envv"}, {"value": 258, "name": "stderr"}, {"value": 1748, "name": "stdin"}, {"children": [{"value": 246, "name": "func1"}], "name": "stdin."}, {"value": 108, "name": "stdout"}, {"value": 1785, "name": "writerDescriptor"}, {"children": [{"value": 151, "name": "func1"}], "name": "writerDescriptor."}], "name": "(*Cmd)."}, {"children": [{"value": 243, "name": "Error"}], "name": "(*Error)."}, {"children": [{"value": 83, "name": "Error"}, {"value": 23, "name": "Exited"}, {"value": 27, "name": "Pid"}, {"value": 36, "name": "String"}, {"value": 23, "name": "Success"}, {"value": 36, "name": "Sys"}, {"value": 36, "name": "SysUsage"}, {"value": 27, "name": "SystemTime"}, {"value": 27, "name": "UserTime"}], "name": "(*ExitError)."}, {"children": [{"value": 59, "name": "(os/exec.close)-fm"}, {"value": 79, "name": "(os/exec.safeClose)-fm"}, {"value": 36, "name": "Chdir"}, {"value": 36, "name": "Chmod"}, {"value": 36, "name": "Chown"}, {"value": 125, "name": "Close"}, {"value": 27, "name": "Fd"}, {"value": 36, "name": "Name"}, {"value": 45, "name": "Read"}, {"value": 45, "name": "ReadAt"}, {"value": 63, "name": "Readdir"}, {"value": 63, "name": "Readdirnames"}, {"value": 45, "name": "Seek"}, {"value": 54, "name": "Stat"}, {"value": 36, "name": "Sync"}, {"value": 36, "name": "Truncate"}, {"value": 218, "name": "Write"}, {"value": 45, "name": "WriteAt"}, {"value": 202, "name": "WriteString"}, {"value": 116, "name": "close"}, {"value": 149, "name": "safeClose"}], "name": "(*closeOnce)."}, {"children": [{"value": 186, "name": "Close"}], "name": "(*closerFunc)."}, {"children": [{"value": 820, "name": "Bytes"}, {"value": 1355, "name": "Write"}], "name": "(*prefixSuffixSaver)."}, {"value": 844, "name": "Command"}, {"value": 16, "name": "ErrNotFound"}, {"children": [{"value": 52, "name": "Exited"}, {"value": 45, "name": "Pid"}, {"value": 102, "name": "String"}, {"value": 72, "name": "Success"}, {"value": 120, "name": "Sys"}, {"value": 58, "name": "SysUsage"}, {"value": 77, "name": "SystemTime"}, {"value": 70, "name": "UserTime"}], "name": "ExitError."}, {"value": 1060, "name": "LookPath"}, {"children": [{"value": 102, "name": "Chdir"}, {"value": 113, "name": "Chmod"}, {"value": 134, "name": "Chown"}, {"value": 62, "name": "Fd"}, {"value": 58, "name": "Name"}, {"value": 167, "name": "Read"}, {"value": 180, "name": "ReadAt"}, {"value": 167, "name": "Readdir"}, {"value": 167, "name": "Readdirnames"}, {"value": 150, "name": "Seek"}, {"value": 134, "name": "Stat"}, {"value": 102, "name": "Sync"}, {"value": 115, "name": "Truncate"}, {"value": 180, "name": "WriteAt"}], "name": "closeOnce."}, {"children": [{"value": 75, "name": "Close"}], "name": "closerFunc."}, {"value": 204, "name": "findExecutable"}, {"value": 234, "name": "init"}, {"children": [{"value": 100, "name": "1"}, {"children": [{"value": 259, "name": "func1"}], "name": "1."}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 170, "name": "interfaceEqual"}, {"children": [{"value": 60, "name": "func1"}], "name": "interfaceEqual."}, {"value": 8, "name": "skipStdinCopyError"}], "name": "exec."}, {"children": [{"value": 40, "name": "go.itab.UnknownUserIdError,error"}, {"children": [{"value": 186, "name": "Error"}], "name": "(*UnknownUserIdError)."}, {"children": [{"value": 110, "name": "GroupIds"}], "name": "(*User)."}, {"children": [{"value": 63, "name": "free"}, {"children": [{"value": 113, "name": "func1"}], "name": "free."}, {"value": 128, "name": "resize"}, {"children": [{"value": 136, "name": "func1"}], "name": "resize."}], "name": "(*memBuffer)."}, {"value": 80, "name": "Current"}, {"children": [{"value": 137, "name": "Error"}], "name": "UnknownUserIdError."}, {"value": 170, "name": "_Cfunc_CString"}, {"value": 80, "name": "_Cfunc_GoString"}, {"value": 70, "name": "_Cfunc__CMalloc"}, {"value": 121, "name": "_Cfunc_free"}, {"value": 249, "name": "_Cfunc_mygetgrouplist"}, {"value": 309, "name": "_Cfunc_mygetpwuid_r"}, {"value": 197, "name": "_Cfunc_realloc"}, {"value": 169, "name": "_Cfunc_sysconf"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_free"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_mygetgrouplist"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_mygetpwuid_r"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_realloc"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_sysconf"}, {"value": 128, "name": "_cgo_cmalloc"}, {"value": 178, "name": "alloc"}, {"children": [{"value": 125, "name": "initialSize"}], "name": "bufferKind."}, {"value": 710, "name": "buildUser"}, {"value": 94, "name": "current"}, {"value": 96, "name": "getGroupList"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1989, "name": "listGroups"}, {"children": [{"value": 113, "name": "func1"}], "name": "listGroups."}, {"value": 845, "name": "lookupUnixUid"}, {"children": [{"value": 107, "name": "func1"}, {"children": [{"value": 452, "name": "1"}], "name": "func1."}], "name": "lookupUnixUid."}, {"value": 371, "name": "retryWithBuffer"}], "name": "user."}, {"children": [{"value": 713, "name": "Notify"}, {"children": [{"value": 217, "name": "func1"}], "name": "Notify."}, {"value": 414, "name": "Stop"}, {"value": 59, "name": "disableSignal"}, {"value": 59, "name": "enableSignal"}, {"value": 536, "name": "handlers"}, {"value": 106, "name": "init"}, {"children": [{"value": 82, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 101, "name": "loop"}, {"value": 482, "name": "process"}, {"value": 121, "name": "signal_disable"}, {"value": 193, "name": "signal_enable"}, {"value": 321, "name": "signal_recv"}, {"value": 98, "name": "signum"}], "name": "signal."}], "name": "os/"}, {"children": [{"value": 280, "name": "go.itab.*rtype,reflect.Type"}, {"children": [{"value": 186, "name": "String"}], "name": "(*ChanDir)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Kind)."}, {"children": [{"value": 215, "name": "Get"}, {"value": 224, "name": "Lookup"}], "name": "(*StructTag)."}, {"children": [{"value": 214, "name": "Addr"}, {"value": 193, "name": "Bool"}, {"value": 214, "name": "Bytes"}, {"value": 250, "name": "Call"}, {"value": 250, "name": "CallSlice"}, {"value": 171, "name": "CanAddr"}, {"value": 193, "name": "CanInterface"}, {"value": 177, "name": "CanSet"}, {"value": 194, "name": "Cap"}, {"value": 184, "name": "Close"}, {"value": 208, "name": "Complex"}, {"value": 234, "name": "Convert"}, {"value": 214, "name": "Elem"}, {"value": 224, "name": "Field"}, {"value": 250, "name": "FieldByIndex"}, {"value": 234, "name": "FieldByName"}, {"value": 224, "name": "FieldByNameFunc"}, {"value": 196, "name": "Float"}, {"value": 224, "name": "Index"}, {"value": 194, "name": "Int"}, {"value": 204, "name": "Interface"}, {"value": 222, "name": "InterfaceData"}, {"value": 193, "name": "IsNil"}, {"value": 168, "name": "IsValid"}, {"value": 167, "name": "Kind"}, {"value": 194, "name": "Len"}, {"value": 250, "name": "MapIndex"}, {"value": 214, "name": "MapKeys"}, {"value": 224, "name": "Method"}, {"value": 234, "name": "MethodByName"}, {"value": 194, "name": "NumField"}, {"value": 194, "name": "NumMethod"}, {"value": 217, "name": "OverflowComplex"}, {"value": 205, "name": "OverflowFloat"}, {"value": 203, "name": "OverflowInt"}, {"value": 203, "name": "OverflowUint"}, {"value": 194, "name": "Pointer"}, {"value": 223, "name": "Recv"}, {"value": 214, "name": "Send"}, {"value": 214, "name": "Set"}, {"value": 193, "name": "SetBool"}, {"value": 214, "name": "SetBytes"}, {"value": 194, "name": "SetCap"}, {"value": 208, "name": "SetComplex"}, {"value": 196, "name": "SetFloat"}, {"value": 194, "name": "SetInt"}, {"value": 194, "name": "SetLen"}, {"value": 250, "name": "SetMapIndex"}, {"value": 194, "name": "SetPointer"}, {"value": 204, "name": "SetString"}, {"value": 194, "name": "SetUint"}, {"value": 234, "name": "Slice"}, {"value": 250, "name": "Slice3"}, {"value": 204, "name": "String"}, {"value": 223, "name": "TryRecv"}, {"value": 223, "name": "TrySend"}, {"value": 204, "name": "Type"}, {"value": 194, "name": "Uint"}, {"value": 194, "name": "UnsafeAddr"}], "name": "(*Value)."}, {"children": [{"value": 328, "name": "Error"}], "name": "(*ValueError)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcType)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed128)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed16)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed32)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed4)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed64)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*funcTypeFixed8)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 467, "name": "Method"}, {"value": 520, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 15, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*interfaceType)."}, {"children": [{"value": 229, "name": "name"}], "name": "(*name)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*ptrType)."}, {"children": [{"value": 15, "name": "Align"}, {"value": 259, "name": "AssignableTo"}, {"value": 304, "name": "Bits"}, {"value": 149, "name": "ChanDir"}, {"value": 33, "name": "Comparable"}, {"value": 221, "name": "ConvertibleTo"}, {"value": 382, "name": "Elem"}, {"value": 338, "name": "Field"}, {"value": 15, "name": "FieldAlign"}, {"value": 373, "name": "FieldByIndex"}, {"value": 375, "name": "FieldByName"}, {"value": 356, "name": "FieldByNameFunc"}, {"value": 329, "name": "Implements"}, {"value": 243, "name": "In"}, {"value": 159, "name": "IsVariadic"}, {"value": 177, "name": "Key"}, {"value": 18, "name": "Kind"}, {"value": 149, "name": "Len"}, {"value": 2256, "name": "Method"}, {"value": 848, "name": "MethodByName"}, {"value": 198, "name": "Name"}, {"value": 149, "name": "NumField"}, {"value": 149, "name": "NumIn"}, {"value": 133, "name": "NumMethod"}, {"value": 216, "name": "NumOut"}, {"value": 303, "name": "Out"}, {"value": 243, "name": "PkgPath"}, {"value": 14, "name": "Size"}, {"value": 221, "name": "String"}, {"value": 11, "name": "common"}, {"value": 1233, "name": "exportedMethods"}, {"value": 78, "name": "nameOff"}, {"value": 1397, "name": "ptrTo"}, {"value": 78, "name": "textOff"}, {"value": 78, "name": "typeOff"}, {"value": 181, "name": "uncommon"}], "name": "(*rtype)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 57, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 57, "name": "FieldByIndex"}, {"value": 65, "name": "FieldByName"}, {"value": 65, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*sliceType)."}, {"children": [{"value": 26, "name": "Align"}, {"value": 22, "name": "AssignableTo"}, {"value": 26, "name": "Bits"}, {"value": 26, "name": "ChanDir"}, {"value": 22, "name": "Comparable"}, {"value": 22, "name": "ConvertibleTo"}, {"value": 35, "name": "Elem"}, {"value": 847, "name": "Field"}, {"value": 26, "name": "FieldAlign"}, {"value": 557, "name": "FieldByIndex"}, {"value": 841, "name": "FieldByName"}, {"children": [{"value": 106, "name": "func1"}], "name": "FieldByName."}, {"value": 3073, "name": "FieldByNameFunc"}, {"value": 22, "name": "Implements"}, {"value": 35, "name": "In"}, {"value": 22, "name": "IsVariadic"}, {"value": 35, "name": "Key"}, {"value": 26, "name": "Kind"}, {"value": 26, "name": "Len"}, {"value": 48, "name": "Method"}, {"value": 53, "name": "MethodByName"}, {"value": 35, "name": "Name"}, {"value": 26, "name": "NumField"}, {"value": 26, "name": "NumIn"}, {"value": 26, "name": "NumMethod"}, {"value": 26, "name": "NumOut"}, {"value": 35, "name": "Out"}, {"value": 35, "name": "PkgPath"}, {"value": 26, "name": "Size"}, {"value": 35, "name": "String"}, {"value": 26, "name": "common"}, {"value": 26, "name": "uncommon"}], "name": "(*structType)."}, {"value": 410, "name": "Append"}, {"value": 572, "name": "AppendSlice"}, {"children": [{"value": 260, "name": "String"}], "name": "ChanDir."}, {"value": 938, "name": "Copy"}, {"value": 709, "name": "DeepEqual"}, {"value": 3968, "name": "FuncOf"}, {"value": 165, "name": "Indirect"}, {"children": [{"value": 202, "name": "String"}], "name": "Kind."}, {"value": 306, "name": "MakeMap"}, {"value": 695, "name": "MakeSlice"}, {"value": 288, "name": "New"}, {"value": 112, "name": "NewAt"}, {"value": 139, "name": "PtrTo"}, {"value": 987, "name": "SliceOf"}, {"children": [{"value": 110, "name": "Get"}, {"value": 593, "name": "Lookup"}], "name": "StructTag."}, {"value": 1957, "name": "Swapper"}, {"children": [{"value": 109, "name": "func1"}, {"value": 142, "name": "func2"}, {"value": 205, "name": "func3"}, {"value": 252, "name": "func4"}, {"value": 72, "name": "func5"}, {"value": 68, "name": "func6"}, {"value": 72, "name": "func7"}, {"value": 70, "name": "func8"}, {"value": 319, "name": "func9"}], "name": "Swapper."}, {"value": 35, "name": "TypeOf"}, {"children": [{"value": 191, "name": "Addr"}, {"value": 81, "name": "Bool"}, {"value": 228, "name": "Bytes"}, {"value": 223, "name": "Call"}, {"value": 223, "name": "CallSlice"}, {"value": 19, "name": "CanAddr"}, {"value": 189, "name": "CanInterface"}, {"value": 25, "name": "CanSet"}, {"value": 321, "name": "Cap"}, {"value": 134, "name": "Close"}, {"value": 267, "name": "Complex"}, {"value": 602, "name": "Convert"}, {"value": 504, "name": "Elem"}, {"value": 433, "name": "Field"}, {"value": 692, "name": "FieldByIndex"}, {"value": 385, "name": "FieldByName"}, {"value": 343, "name": "FieldByNameFunc"}, {"value": 241, "name": "Float"}, {"value": 701, "name": "Index"}, {"value": 336, "name": "Int"}, {"value": 105, "name": "Interface"}, {"value": 100, "name": "InterfaceData"}, {"value": 331, "name": "IsNil"}, {"value": 16, "name": "IsValid"}, {"value": 15, "name": "Kind"}, {"value": 420, "name": "Len"}, {"value": 605, "name": "MapIndex"}, {"value": 901, "name": "MapKeys"}, {"value": 487, "name": "Method"}, {"value": 514, "name": "MethodByName"}, {"value": 83, "name": "NumField"}, {"value": 228, "name": "NumMethod"}, {"value": 341, "name": "OverflowComplex"}, {"value": 272, "name": "OverflowFloat"}, {"value": 257, "name": "OverflowInt"}, {"value": 247, "name": "OverflowUint"}, {"value": 405, "name": "Pointer"}, {"value": 171, "name": "Recv"}, {"value": 159, "name": "Send"}, {"value": 277, "name": "Set"}, {"value": 95, "name": "SetBool"}, {"value": 273, "name": "SetBytes"}, {"value": 195, "name": "SetCap"}, {"value": 269, "name": "SetComplex"}, {"value": 243, "name": "SetFloat"}, {"value": 319, "name": "SetInt"}, {"value": 186, "name": "SetLen"}, {"value": 632, "name": "SetMapIndex"}, {"value": 132, "name": "SetPointer"}, {"value": 139, "name": "SetString"}, {"value": 340, "name": "SetUint"}, {"value": 1037, "name": "Slice"}, {"value": 732, "name": "Slice3"}, {"value": 294, "name": "String"}, {"value": 171, "name": "TryRecv"}, {"value": 171, "name": "TrySend"}, {"value": 583, "name": "Type"}, {"value": 366, "name": "Uint"}, {"value": 272, "name": "UnsafeAddr"}, {"value": 948, "name": "assignTo"}, {"value": 5300, "name": "call"}, {"value": 194, "name": "pointer"}, {"value": 695, "name": "recv"}, {"value": 228, "name": "runes"}, {"value": 421, "name": "send"}, {"value": 273, "name": "setRunes"}], "name": "Value."}, {"value": 284, "name": "ValueOf"}, {"value": 320, "name": "Zero"}, {"value": 509, "name": "addReflectOff"}, {"value": 1577, "name": "addTypeBits"}, {"value": 543, "name": "cacheGet"}, {"value": 223, "name": "cachePut"}, {"value": 5, "name": "call"}, {"value": 1, "name": "callGC"}, {"value": 846, "name": "callMethod"}, {"value": 30, "name": "chancap"}, {"value": 60, "name": "chanclose"}, {"value": 29, "name": "chanlen"}, {"value": 110, "name": "chanrecv"}, {"value": 125, "name": "chansend"}, {"value": 1337, "name": "convertOp"}, {"value": 224, "name": "cvtBytesString"}, {"value": 185, "name": "cvtComplex"}, {"value": 205, "name": "cvtDirect"}, {"value": 170, "name": "cvtFloat"}, {"value": 174, "name": "cvtFloatInt"}, {"value": 212, "name": "cvtFloatUint"}, {"value": 302, "name": "cvtI2I"}, {"value": 168, "name": "cvtInt"}, {"value": 177, "name": "cvtIntFloat"}, {"value": 204, "name": "cvtIntString"}, {"value": 224, "name": "cvtRunesString"}, {"value": 227, "name": "cvtStringBytes"}, {"value": 227, "name": "cvtStringRunes"}, {"value": 447, "name": "cvtT2I"}, {"value": 168, "name": "cvtUint"}, {"value": 209, "name": "cvtUintFloat"}, {"value": 204, "name": "cvtUintString"}, {"value": 4966, "name": "deepValueEqual"}, {"children": [{"value": 27, "name": "func1"}], "name": "deepValueEqual."}, {"value": 200, "name": "directlyAssignable"}, {"value": 24, "name": "dummy"}, {"children": [{"value": 212, "name": "mustBe"}, {"value": 546, "name": "mustBeAssignable"}, {"value": 363, "name": "mustBeExported"}], "name": "flag."}, {"value": 52, "name": "fnv1"}, {"value": 3229, "name": "funcLayout"}, {"children": [{"value": 81, "name": "func1"}], "name": "funcLayout."}, {"value": 32, "name": "funcLookupCache"}, {"value": 2505, "name": "funcStr"}, {"value": 756, "name": "grow"}, {"value": 454, "name": "haveIdenticalType"}, {"value": 3183, "name": "haveIdenticalUnderlyingType"}, {"value": 175, "name": "ifaceE2I"}, {"value": 1456, "name": "implements"}, {"value": 271, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "kindNames"}, {"value": 32, "name": "layoutCache"}, {"value": 32, "name": "lookupCache"}, {"value": 246, "name": "makeBytes"}, {"value": 208, "name": "makeComplex"}, {"value": 182, "name": "makeFloat"}, {"value": 210, "name": "makeInt"}, {"value": 733, "name": "makeMethodValue"}, {"value": 246, "name": "makeRunes"}, {"value": 233, "name": "makeString"}, {"value": 97, "name": "makemap"}, {"value": 103, "name": "mapaccess"}, {"value": 118, "name": "mapassign"}, {"value": 80, "name": "mapdelete"}, {"value": 111, "name": "mapiterinit"}, {"value": 14, "name": "mapiterkey"}, {"value": 60, "name": "mapiternext"}, {"value": 29, "name": "maplen"}, {"value": 70, "name": "memclrNoHeapPointers"}, {"value": 32, "name": "methodCache"}, {"value": 146, "name": "methodName"}, {"value": 1240, "name": "methodReceiver"}, {"value": 74, "name": "methodValueCall"}, {"children": [{"value": 8, "name": "args_stackmap"}], "name": "methodValueCall."}, {"children": [{"value": 68, "name": "name"}, {"value": 346, "name": "pkgPath"}, {"value": 194, "name": "tag"}, {"value": 103, "name": "tagLen"}], "name": "name."}, {"value": 952, "name": "newName"}, {"value": 322, "name": "packEface"}, {"value": 32, "name": "ptrMap"}, {"value": 78, "name": "resolveNameOff"}, {"value": 68, "name": "resolveReflectName"}, {"value": 78, "name": "resolveTextOff"}, {"value": 78, "name": "resolveTypeOff"}, {"value": 1, "name": "statictmp_1048"}, {"value": 40, "name": "statictmp_1511"}, {"value": 96, "name": "statictmp_1680"}, {"value": 96, "name": "statictmp_1683"}, {"value": 24, "name": "statictmp_1821"}, {"value": 24, "name": "statictmp_1825"}, {"value": 24, "name": "statictmp_1860"}, {"value": 24, "name": "statictmp_1862"}, {"value": 24, "name": "statictmp_1929"}, {"value": 24, "name": "statictmp_1962"}, {"value": 24, "name": "statictmp_1963"}, {"value": 24, "name": "statictmp_2017"}, {"value": 24, "name": "statictmp_2238"}, {"value": 24, "name": "statictmp_2239"}, {"value": 432, "name": "statictmp_2443"}, {"value": 80, "name": "statictmp_373"}, {"value": 80, "name": "statictmp_379"}, {"value": 104, "name": "statictmp_558"}, {"value": 1, "name": "statictmp_617"}, {"value": 1, "name": "statictmp_875"}, {"value": 1, "name": "statictmp_878"}, {"value": 80, "name": "typedmemmove"}, {"value": 331, "name": "typedmemmovepartial"}, {"value": 269, "name": "typedslicecopy"}, {"value": 1136, "name": "typelinks"}, {"value": 1026, "name": "typesByString"}, {"value": 417, "name": "typesMustMatch"}, {"value": 8, "name": "uint8Type"}, {"value": 70, "name": "unsafe_New"}, {"value": 80, "name": "unsafe_NewArray"}, {"value": 546, "name": "valueInterface"}], "name": "reflect."}, {"children": [{"value": 40, "name": "go.itab.*Regexp,github.com/cockroachdb/cockroach/pkg/gossip.stringMatcher"}, {"value": 72, "name": "go.itab.*inputBytes,regexp.input"}, {"value": 72, "name": "go.itab.*inputReader,regexp.input"}, {"value": 72, "name": "go.itab.*inputString,regexp.input"}, {"value": 56, "name": "go.itab.runeSlice,sort.Interface"}, {"children": [{"value": 149, "name": "Copy"}, {"value": 339, "name": "Expand"}, {"value": 289, "name": "ExpandString"}, {"value": 411, "name": "Find"}, {"value": 470, "name": "FindAll"}, {"children": [{"value": 391, "name": "func1"}], "name": "FindAll."}, {"value": 390, "name": "FindAllIndex"}, {"children": [{"value": 299, "name": "func1"}], "name": "FindAllIndex."}, {"value": 417, "name": "FindAllString"}, {"children": [{"value": 370, "name": "func1"}], "name": "FindAllString."}, {"value": 386, "name": "FindAllStringIndex"}, {"children": [{"value": 299, "name": "func1"}], "name": "FindAllStringIndex."}, {"value": 417, "name": "FindAllStringSubmatch"}, {"children": [{"value": 677, "name": "func1"}], "name": "FindAllStringSubmatch."}, {"value": 386, "name": "FindAllStringSubmatchIndex"}, {"children": [{"value": 279, "name": "func1"}], "name": "FindAllStringSubmatchIndex."}, {"value": 470, "name": "FindAllSubmatch"}, {"children": [{"value": 644, "name": "func1"}], "name": "FindAllSubmatch."}, {"value": 390, "name": "FindAllSubmatchIndex"}, {"children": [{"value": 279, "name": "func1"}], "name": "FindAllSubmatchIndex."}, {"value": 318, "name": "FindIndex"}, {"value": 314, "name": "FindReaderIndex"}, {"value": 296, "name": "FindReaderSubmatchIndex"}, {"value": 384, "name": "FindString"}, {"value": 314, "name": "FindStringIndex"}, {"value": 788, "name": "FindStringSubmatch"}, {"value": 296, "name": "FindStringSubmatchIndex"}, {"value": 796, "name": "FindSubmatch"}, {"value": 300, "name": "FindSubmatchIndex"}, {"value": 32, "name": "LiteralPrefix"}, {"value": 10, "name": "Longest"}, {"value": 138, "name": "Match"}, {"value": 137, "name": "MatchReader"}, {"value": 137, "name": "MatchString"}, {"value": 88, "name": "MatchString-fm"}, {"value": 15, "name": "NumSubexp"}, {"value": 446, "name": "ReplaceAll"}, {"children": [{"value": 432, "name": "func1"}], "name": "ReplaceAll."}, {"value": 290, "name": "ReplaceAllFunc"}, {"children": [{"value": 389, "name": "func1"}], "name": "ReplaceAllFunc."}, {"value": 269, "name": "ReplaceAllLiteral"}, {"children": [{"value": 262, "name": "func1"}], "name": "ReplaceAllLiteral."}, {"value": 267, "name": "ReplaceAllLiteralString"}, {"children": [{"value": 268, "name": "func1"}], "name": "ReplaceAllLiteralString."}, {"value": 408, "name": "ReplaceAllString"}, {"children": [{"value": 269, "name": "func1"}], "name": "ReplaceAllString."}, {"value": 270, "name": "ReplaceAllStringFunc"}, {"children": [{"value": 379, "name": "func1"}], "name": "ReplaceAllStringFunc."}, {"value": 1257, "name": "Split"}, {"value": 23, "name": "String"}, {"value": 33, "name": "SubexpNames"}, {"value": 893, "name": "allMatches"}, {"value": 1525, "name": "doExecute"}, {"value": 244, "name": "doMatch"}, {"value": 3027, "name": "expand"}, {"value": 293, "name": "get"}, {"value": 268, "name": "pad"}, {"value": 334, "name": "put"}, {"value": 2260, "name": "replaceAll"}], "name": "(*Regexp)."}, {"children": [{"value": 464, "name": "push"}, {"value": 594, "name": "reset"}], "name": "(*bitState)."}, {"children": [{"value": 6, "name": "canCheckPrefix"}, {"value": 266, "name": "context"}, {"value": 122, "name": "hasPrefix"}, {"value": 171, "name": "index"}, {"value": 213, "name": "step"}], "name": "(*inputBytes)."}, {"children": [{"value": 6, "name": "canCheckPrefix"}, {"value": 6, "name": "context"}, {"value": 6, "name": "hasPrefix"}, {"value": 10, "name": "index"}, {"value": 206, "name": "step"}], "name": "(*inputReader)."}, {"children": [{"value": 6, "name": "canCheckPrefix"}, {"value": 228, "name": "context"}, {"value": 113, "name": "hasPrefix"}, {"value": 146, "name": "index"}, {"value": 199, "name": "step"}], "name": "(*inputString)."}, {"children": [{"value": 2013, "name": "add"}, {"value": 869, "name": "backtrack"}, {"value": 455, "name": "clear"}, {"value": 113, "name": "init"}, {"value": 1523, "name": "match"}, {"value": 1902, "name": "onepass"}, {"value": 2125, "name": "step"}, {"value": 2183, "name": "tryBacktrack"}], "name": "(*machine)."}, {"children": [{"value": 22, "name": "MatchEmptyWidth"}, {"value": 22, "name": "MatchRune"}, {"value": 26, "name": "MatchRunePos"}, {"value": 35, "name": "String"}], "name": "(*onePassInst)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 203, "name": "Less"}, {"value": 200, "name": "Swap"}], "name": "(*runeSlice)."}, {"children": [{"value": 14, "name": "1"}], "name": ".gobytes."}, {"value": 112, "name": "Compile"}, {"value": 381, "name": "MustCompile"}, {"value": 548, "name": "QuoteMeta"}, {"value": 24, "name": "anyRune"}, {"value": 24, "name": "anyRuneNotNL"}, {"value": 727, "name": "cleanupOnePass"}, {"value": 1093, "name": "compile"}, {"value": 593, "name": "compileOnePass"}, {"value": 813, "name": "extract"}, {"value": 126, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 1431, "name": "makeOnePass"}, {"children": [{"value": 8637, "name": "func1"}], "name": "makeOnePass."}, {"value": 1244, "name": "mergeRuneSets"}, {"children": [{"value": 183, "name": "func1"}, {"value": 625, "name": "func2"}], "name": "mergeRuneSets."}, {"value": 24, "name": "noNext"}, {"value": 24, "name": "noRune"}, {"value": 8, "name": "notBacktrack"}, {"value": 8, "name": "notOnePass"}, {"value": 1102, "name": "onePassCopy"}, {"value": 167, "name": "onePassNext"}, {"value": 739, "name": "onePassPrefix"}, {"value": 1104, "name": "progMachine"}, {"value": 235, "name": "quote"}, {"children": [{"value": 11, "name": "Len"}, {"value": 73, "name": "Less"}, {"value": 70, "name": "Swap"}], "name": "runeSlice."}, {"value": 110, "name": "special"}, {"value": 24, "name": "specialBytes"}, {"value": 16, "name": "statictmp_594"}, {"value": 4, "name": "statictmp_832"}, {"value": 16, "name": "statictmp_833"}, {"value": 8, "name": "statictmp_834"}], "name": "regexp."}, {"children": [{"value": 40, "name": "go.itab.*Error,error"}, {"value": 56, "name": "go.itab.ranges,sort.Interface"}, {"children": [{"value": 195, "name": "Error"}], "name": "(*Error)."}, {"children": [{"value": 171, "name": "String"}], "name": "(*ErrorCode)."}, {"children": [{"value": 546, "name": "MatchEmptyWidth"}, {"value": 84, "name": "MatchRune"}, {"value": 475, "name": "MatchRunePos"}, {"value": 223, "name": "String"}], "name": "(*Inst)."}, {"children": [{"value": 226, "name": "String"}], "name": "(*InstOp)."}, {"children": [{"value": 445, "name": "Prefix"}, {"value": 156, "name": "StartCond"}, {"value": 223, "name": "String"}, {"value": 127, "name": "skipNop"}], "name": "(*Prog)."}, {"children": [{"value": 190, "name": "CapNames"}, {"value": 882, "name": "Equal"}, {"value": 174, "name": "MaxCap"}, {"value": 5560, "name": "Simplify"}, {"value": 223, "name": "String"}, {"value": 296, "name": "capNames"}], "name": "(*Regexp)."}, {"children": [{"value": 664, "name": "alt"}, {"value": 142, "name": "cat"}, {"value": 7134, "name": "compile"}, {"value": 446, "name": "init"}, {"value": 101, "name": "plus"}, {"value": 560, "name": "quest"}, {"value": 900, "name": "rune"}, {"value": 568, "name": "star"}], "name": "(*compiler)."}, {"children": [{"value": 659, "name": "alternate"}, {"value": 611, "name": "appendGroup"}, {"value": 1755, "name": "collapse"}, {"value": 594, "name": "concat"}, {"value": 7257, "name": "factor"}, {"value": 100, "name": "literal"}, {"value": 798, "name": "maybeConcat"}, {"value": 419, "name": "newLiteral"}, {"value": 349, "name": "op"}, {"value": 3312, "name": "parseClass"}, {"value": 469, "name": "parseClassChar"}, {"value": 2106, "name": "parseEscape"}, {"value": 319, "name": "parseInt"}, {"value": 931, "name": "parseNamedClass"}, {"value": 462, "name": "parsePerlClassEscape"}, {"value": 1976, "name": "parsePerlFlags"}, {"value": 721, "name": "parseRepeat"}, {"value": 802, "name": "parseRightParen"}, {"value": 2705, "name": "parseUnicodeClass"}, {"value": 122, "name": "parseVerticalBar"}, {"value": 898, "name": "push"}, {"value": 993, "name": "removeLeadingRegexp"}, {"value": 809, "name": "removeLeadingString"}, {"value": 2174, "name": "repeat"}, {"value": 911, "name": "swapVerticalBar"}], "name": "(*parser)."}, {"children": [{"value": 179, "name": "Len"}, {"value": 255, "name": "Less"}, {"value": 245, "name": "Swap"}], "name": "(*ranges)."}, {"value": 930, "name": "Compile"}, {"value": 214, "name": "EmptyOpContext"}, {"children": [{"value": 21, "name": "String"}], "name": "ErrorCode."}, {"children": [{"value": 113, "name": "String"}], "name": "InstOp."}, {"value": 5165, "name": "Parse"}, {"value": 24, "name": "anyRune"}, {"value": 24, "name": "anyRuneNotNL"}, {"value": 8, "name": "anyTable"}, {"value": 209, "name": "appendClass"}, {"value": 209, "name": "appendFoldedClass"}, {"value": 715, "name": "appendFoldedRange"}, {"value": 226, "name": "appendLiteral"}, {"value": 314, "name": "appendNegatedClass"}, {"value": 749, "name": "appendNegatedTable"}, {"value": 351, "name": "appendRange"}, {"value": 624, "name": "appendTable"}, {"value": 123, "name": "bw"}, {"value": 363, "name": "checkUTF8"}, {"value": 628, "name": "cleanAlt"}, {"value": 303, "name": "cleanClass"}, {"value": 24, "name": "code1"}, {"value": 24, "name": "code10"}, {"value": 24, "name": "code11"}, {"value": 24, "name": "code12"}, {"value": 24, "name": "code13"}, {"value": 24, "name": "code14"}, {"value": 24, "name": "code15"}, {"value": 24, "name": "code16"}, {"value": 24, "name": "code17"}, {"value": 24, "name": "code2"}, {"value": 24, "name": "code3"}, {"value": 24, "name": "code4"}, {"value": 24, "name": "code5"}, {"value": 24, "name": "code6"}, {"value": 24, "name": "code7"}, {"value": 24, "name": "code8"}, {"value": 24, "name": "code9"}, {"value": 2228, "name": "dumpInst"}, {"value": 599, "name": "dumpProg"}, {"value": 774, "name": "escape"}, {"value": 6234, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "instOpNames"}, {"value": 222, "name": "isValidCaptureName"}, {"value": 597, "name": "literalRegexp"}, {"value": 241, "name": "matchRune"}, {"value": 800, "name": "mergeCharClass"}, {"value": 148, "name": "minFoldRune"}, {"value": 345, "name": "negateClass"}, {"value": 370, "name": "nextRune"}, {"children": [{"value": 156, "name": "append"}, {"value": 101, "name": "patch"}], "name": "patchList."}, {"value": 8, "name": "perlGroup"}, {"value": 8, "name": "posixGroup"}, {"children": [{"value": 28, "name": "Len"}, {"value": 124, "name": "Less"}, {"value": 114, "name": "Swap"}], "name": "ranges."}, {"value": 300, "name": "repeatIsValid"}, {"value": 8, "name": "statictmp_100"}, {"value": 12, "name": "statictmp_1000"}, {"value": 8, "name": "statictmp_1001"}, {"value": 24, "name": "statictmp_1002"}, {"value": 32, "name": "statictmp_1003"}, {"value": 24, "name": "statictmp_1004"}, {"value": 16, "name": "statictmp_1005"}, {"value": 8, "name": "statictmp_1006"}, {"value": 16, "name": "statictmp_1007"}, {"value": 16, "name": "statictmp_1008"}, {"value": 8, "name": "statictmp_1009"}, {"value": 8, "name": "statictmp_1010"}, {"value": 8, "name": "statictmp_1011"}, {"value": 8, "name": "statictmp_1012"}, {"value": 32, "name": "statictmp_1013"}, {"value": 16, "name": "statictmp_1014"}, {"value": 8, "name": "statictmp_1015"}, {"value": 32, "name": "statictmp_1016"}, {"value": 24, "name": "statictmp_1017"}, {"value": 176, "name": "statictmp_1018"}, {"value": 8, "name": "statictmp_53"}, {"value": 32, "name": "statictmp_761"}, {"value": 16, "name": "statictmp_764"}, {"value": 64, "name": "statictmp_800"}, {"value": 64, "name": "statictmp_803"}, {"value": 64, "name": "statictmp_806"}, {"value": 64, "name": "statictmp_809"}, {"value": 16, "name": "statictmp_812"}, {"value": 16, "name": "statictmp_815"}, {"value": 32, "name": "statictmp_818"}, {"value": 16, "name": "statictmp_821"}, {"value": 32, "name": "statictmp_825"}, {"value": 16, "name": "statictmp_828"}, {"value": 32, "name": "statictmp_831"}, {"value": 64, "name": "statictmp_835"}, {"value": 32, "name": "statictmp_838"}, {"value": 32, "name": "statictmp_841"}, {"value": 16, "name": "statictmp_996"}, {"value": 8, "name": "statictmp_997"}, {"value": 56, "name": "statictmp_998"}, {"value": 6, "name": "statictmp_999"}, {"value": 90, "name": "u32"}, {"value": 3023, "name": "writeRegexp"}], "name": "regexp/syntax."}, {"children": [{"children": [{"value": 56, "name": "go.itab.*keysByCount,sort.Interface"}, {"value": 48, "name": "go.itab.runtimeProfile,runtime/pprof.countProfile"}, {"value": 48, "name": "go.itab.stackProfile,runtime/pprof.countProfile"}, {"value": 56, "name": "go.itab.stackProfile,sort.Interface"}, {"children": [{"value": 832, "name": "Add"}, {"value": 219, "name": "Count"}, {"value": 23, "name": "Name"}, {"value": 205, "name": "Remove"}, {"value": 1083, "name": "WriteTo"}], "name": "(*Profile)."}, {"children": [{"value": 15, "name": "Len"}, {"value": 341, "name": "Less"}, {"value": 256, "name": "Swap"}], "name": "(*keysByCount)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 224, "name": "Stack"}], "name": "(*runtimeProfile)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 211, "name": "Stack"}, {"value": 389, "name": "Swap"}], "name": "(*stackProfile)."}, {"value": 178, "name": "Lookup"}, {"value": 772, "name": "Profiles"}, {"children": [{"value": 145, "name": "func1"}], "name": "Profiles."}, {"value": 428, "name": "StartCPUProfile"}, {"value": 215, "name": "StopCPUProfile"}, {"value": 99, "name": "WriteHeapProfile"}, {"value": 8, "name": "blockProfile"}, {"value": 87, "name": "countBlock"}, {"value": 60, "name": "countGoroutine"}, {"value": 92, "name": "countHeap"}, {"value": 87, "name": "countMutex"}, {"value": 87, "name": "countThreadCreate"}, {"value": 24, "name": "cpu"}, {"value": 8, "name": "goroutineProfile"}, {"value": 8, "name": "heapProfile"}, {"value": 149, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 790, "name": "lockProfiles"}, {"value": 8, "name": "mutexProfile"}, {"value": 4982, "name": "printCountProfile"}, {"children": [{"value": 502, "name": "func1"}], "name": "printCountProfile."}, {"value": 1352, "name": "printStackRecord"}, {"value": 504, "name": "profileWriter"}, {"value": 16, "name": "profiles"}, {"children": [{"value": 11, "name": "Len"}, {"value": 119, "name": "Stack"}], "name": "runtimeProfile."}, {"value": 60, "name": "runtime_cyclesPerSecond"}, {"children": [{"value": 11, "name": "Len"}, {"value": 152, "name": "Less"}, {"value": 81, "name": "Stack"}, {"value": 279, "name": "Swap"}], "name": "stackProfile."}, {"value": 48, "name": "statictmp_491"}, {"value": 48, "name": "statictmp_492"}, {"value": 48, "name": "statictmp_493"}, {"value": 48, "name": "statictmp_494"}, {"value": 48, "name": "statictmp_495"}, {"value": 8, "name": "threadcreateProfile"}, {"value": 62, "name": "unlockProfiles"}, {"value": 2088, "name": "writeBlock"}, {"children": [{"value": 90, "name": "func1"}], "name": "writeBlock."}, {"value": 200, "name": "writeGoroutine"}, {"value": 302, "name": "writeGoroutineStacks"}, {"value": 6495, "name": "writeHeap"}, {"children": [{"value": 106, "name": "func1"}], "name": "writeHeap."}, {"value": 2275, "name": "writeMutex"}, {"children": [{"value": 90, "name": "func1"}], "name": "writeMutex."}, {"value": 380, "name": "writeRuntimeProfile"}, {"value": 136, "name": "writeThreadCreate"}], "name": "pprof."}, {"children": [{"value": 675, "name": "SetTraceback"}, {"value": 239, "name": "Stack"}, {"value": 106, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 213, "name": "setGCPercent"}], "name": "debug."}, {"children": [{"value": 3121, "name": "EncodeMemProfile"}, {"value": 3164, "name": "TranslateCPUProfile"}, {"value": 258, "name": "addMappings"}, {"value": 116, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 268, "name": "scaleHeapSample"}], "name": "pprof/internal/protopprof."}, {"children": [{"value": 150, "name": "Start"}, {"children": [{"value": 107, "name": "func1"}], "name": "Start."}, {"value": 48, "name": "Stop"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "trace."}], "name": "runtime/"}, {"children": [{"value": 56, "name": "go.itab.*reverse,sort.Interface"}, {"value": 56, "name": "go.itab.Float64Slice,sort.Interface"}, {"value": 56, "name": "go.itab.IntSlice,sort.Interface"}, {"value": 40, "name": "go.itab.StringSlice,github.com/cockroachdb/cockroach/vendor/golang.org/x/text/collate.swapper"}, {"value": 56, "name": "go.itab.StringSlice,sort.Interface"}, {"children": [{"value": 163, "name": "Len"}, {"value": 244, "name": "Less"}, {"value": 206, "name": "Search"}, {"value": 184, "name": "Sort"}, {"value": 208, "name": "Swap"}], "name": "(*Float64Slice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 206, "name": "Less"}, {"value": 204, "name": "Search"}, {"value": 184, "name": "Sort"}, {"value": 204, "name": "Swap"}], "name": "(*IntSlice)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 253, "name": "Less"}, {"value": 214, "name": "Search"}, {"value": 184, "name": "Sort"}, {"value": 356, "name": "Swap"}], "name": "(*StringSlice)."}, {"children": [{"value": 100, "name": "Len"}, {"value": 204, "name": "Less"}, {"value": 110, "name": "Swap"}], "name": "(*reverse)."}, {"children": [{"value": 11, "name": "Len"}, {"value": 114, "name": "Less"}, {"value": 102, "name": "Search"}, {"value": 126, "name": "Sort"}, {"value": 78, "name": "Swap"}], "name": "Float64Slice."}, {"value": 126, "name": "Float64s"}, {"value": 138, "name": "Float64sAreSorted"}, {"children": [{"value": 11, "name": "Len"}, {"value": 76, "name": "Less"}, {"value": 100, "name": "Search"}, {"value": 126, "name": "Sort"}, {"value": 74, "name": "Swap"}], "name": "IntSlice."}, {"value": 126, "name": "Ints"}, {"value": 163, "name": "IsSorted"}, {"value": 189, "name": "Search"}, {"value": 181, "name": "SearchFloat64s"}, {"children": [{"value": 67, "name": "func1"}], "name": "SearchFloat64s."}, {"value": 179, "name": "SearchInts"}, {"children": [{"value": 64, "name": "func1"}], "name": "SearchInts."}, {"value": 178, "name": "SearchStrings"}, {"children": [{"value": 134, "name": "func1"}], "name": "SearchStrings."}, {"value": 247, "name": "Slice"}, {"value": 141, "name": "Sort"}, {"value": 100, "name": "Stable"}, {"children": [{"value": 11, "name": "Len"}, {"value": 151, "name": "Less"}, {"value": 110, "name": "Search"}, {"value": 126, "name": "Sort"}, {"value": 249, "name": "Swap"}], "name": "StringSlice."}, {"value": 126, "name": "Strings"}, {"value": 1744, "name": "doPivot"}, {"value": 1569, "name": "doPivot_func"}, {"value": 300, "name": "heapSort"}, {"value": 289, "name": "heapSort_func"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 245, "name": "insertionSort"}, {"value": 227, "name": "insertionSort_func"}, {"value": 32, "name": "maxDepth"}, {"value": 336, "name": "medianOfThree"}, {"value": 267, "name": "medianOfThree_func"}, {"value": 553, "name": "quickSort"}, {"value": 531, "name": "quickSort_func"}, {"children": [{"value": 98, "name": "Len"}, {"value": 95, "name": "Less"}, {"value": 108, "name": "Swap"}], "name": "reverse."}, {"value": 291, "name": "rotate"}, {"value": 326, "name": "siftDown"}, {"value": 295, "name": "siftDown_func"}, {"value": 379, "name": "stable"}, {"value": 137, "name": "swapRange"}, {"value": 1193, "name": "symMerge"}], "name": "sort."}, {"children": [{"value": 40, "name": "go.itab.*NumError,error"}, {"children": [{"value": 318, "name": "Error"}], "name": "(*NumError)."}, {"children": [{"value": 272, "name": "Assign"}, {"value": 214, "name": "Round"}, {"value": 101, "name": "RoundDown"}, {"value": 152, "name": "RoundUp"}, {"value": 270, "name": "RoundedInteger"}, {"value": 223, "name": "Shift"}, {"value": 1023, "name": "String"}, {"value": 905, "name": "floatBits"}, {"value": 704, "name": "set"}], "name": "(*decimal)."}, {"children": [{"value": 281, "name": "AssignComputeBounds"}, {"value": 725, "name": "AssignDecimal"}, {"value": 1117, "name": "FixedDecimal"}, {"value": 125, "name": "Multiply"}, {"value": 177, "name": "Normalize"}, {"value": 1309, "name": "ShortestDecimal"}, {"value": 434, "name": "floatBits"}, {"value": 267, "name": "frexp10"}], "name": "(*extFloat)."}, {"value": 176, "name": "AppendFloat"}, {"value": 167, "name": "AppendInt"}, {"value": 158, "name": "AppendQuote"}, {"value": 133, "name": "AppendQuoteRune"}, {"value": 133, "name": "AppendQuoteRuneToASCII"}, {"value": 158, "name": "AppendQuoteToASCII"}, {"value": 159, "name": "AppendUint"}, {"value": 252, "name": "Atoi"}, {"value": 261, "name": "CanBackquote"}, {"value": 16, "name": "ErrRange"}, {"value": 16, "name": "ErrSyntax"}, {"value": 258, "name": "FormatFloat"}, {"value": 138, "name": "FormatInt"}, {"value": 127, "name": "FormatUint"}, {"value": 805, "name": "IsPrint"}, {"value": 89, "name": "Itoa"}, {"value": 190, "name": "ParseFloat"}, {"value": 1673, "name": "ParseInt"}, {"value": 1149, "name": "ParseUint"}, {"value": 102, "name": "Quote"}, {"value": 102, "name": "QuoteToASCII"}, {"value": 2248, "name": "Unquote"}, {"value": 1714, "name": "UnquoteChar"}, {"value": 260, "name": "adjustLastDigit"}, {"value": 464, "name": "adjustLastDigitFixed"}, {"value": 3677, "name": "appendEscapedRune"}, {"value": 529, "name": "appendQuotedRuneWith"}, {"value": 1128, "name": "appendQuotedWith"}, {"value": 1523, "name": "atof32"}, {"value": 436, "name": "atof32exact"}, {"value": 1524, "name": "atof64"}, {"value": 441, "name": "atof64exact"}, {"value": 986, "name": "bigFtoa"}, {"value": 121, "name": "bsearch16"}, {"value": 118, "name": "bsearch32"}, {"value": 51, "name": "contains"}, {"value": 35, "name": "digitZero"}, {"value": 147, "name": "equalIgnoreCase"}, {"value": 24, "name": "float32info"}, {"value": 24, "name": "float32pow10"}, {"value": 24, "name": "float64info"}, {"value": 24, "name": "float64pow10"}, {"value": 568, "name": "fmtB"}, {"value": 1760, "name": "fmtE"}, {"value": 1058, "name": "fmtF"}, {"value": 1194, "name": "formatBits"}, {"value": 1019, "name": "formatDigits"}, {"value": 239, "name": "frexp10Many"}, {"value": 2340, "name": "genericFtoa"}, {"value": 266, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "isGraphic"}, {"value": 179, "name": "isInGraphicList"}, {"value": 24, "name": "isNotPrint16"}, {"value": 24, "name": "isNotPrint32"}, {"value": 24, "name": "isPrint16"}, {"value": 24, "name": "isPrint32"}, {"value": 551, "name": "leftShift"}, {"value": 24, "name": "leftcheats"}, {"value": 1, "name": "optimize"}, {"value": 2088, "name": "powersOfTen"}, {"value": 24, "name": "powtab"}, {"value": 119, "name": "prefixIsLessThan"}, {"value": 249, "name": "quoteWith"}, {"value": 831, "name": "readFloat"}, {"value": 464, "name": "rightShift"}, {"value": 1019, "name": "roundShortest"}, {"value": 296, "name": "shifts"}, {"value": 192, "name": "smallPowersOfTen"}, {"value": 721, "name": "special"}, {"value": 96, "name": "statictmp_134"}, {"value": 72, "name": "statictmp_609"}, {"value": 184, "name": "statictmp_610"}, {"value": 44, "name": "statictmp_611"}, {"value": 1464, "name": "statictmp_612"}, {"value": 924, "name": "statictmp_613"}, {"value": 278, "name": "statictmp_614"}, {"value": 1512, "name": "statictmp_615"}, {"value": 164, "name": "statictmp_616"}, {"value": 32, "name": "statictmp_617"}, {"value": 105, "name": "trim"}, {"value": 160, "name": "uint64pow10"}], "name": "strconv."}, {"children": [{"value": 48, "name": "go.itab.*Reader,io.ByteScanner"}, {"value": 40, "name": "go.itab.*Reader,io.Reader"}, {"value": 40, "name": "go.itab.*appendSliceWriter,io.Writer"}, {"value": 48, "name": "go.itab.*byteReplacer,strings.replacer"}, {"value": 48, "name": "go.itab.*byteStringReplacer,strings.replacer"}, {"value": 48, "name": "go.itab.*genericReplacer,strings.replacer"}, {"value": 48, "name": "go.itab.*singleStringReplacer,strings.replacer"}, {"value": 40, "name": "go.itab.stringWriter,strings.stringWriterIface"}, {"children": [{"value": 37, "name": "Len"}, {"value": 258, "name": "Read"}, {"value": 361, "name": "ReadAt"}, {"value": 130, "name": "ReadByte"}, {"value": 314, "name": "ReadRune"}, {"value": 115, "name": "Reset"}, {"value": 401, "name": "Seek"}, {"value": 15, "name": "Size"}, {"value": 209, "name": "UnreadByte"}, {"value": 206, "name": "UnreadRune"}, {"value": 359, "name": "WriteTo"}], "name": "(*Reader)."}, {"children": [{"value": 108, "name": "Replace"}, {"value": 147, "name": "WriteString"}], "name": "(*Replacer)."}, {"children": [{"value": 320, "name": "Write"}, {"value": 320, "name": "WriteString"}], "name": "(*appendSliceWriter)."}, {"children": [{"value": 304, "name": "Replace"}, {"value": 578, "name": "WriteString"}], "name": "(*byteReplacer)."}, {"children": [{"value": 572, "name": "Replace"}, {"value": 746, "name": "WriteString"}], "name": "(*byteStringReplacer)."}, {"children": [{"value": 298, "name": "Replace"}, {"value": 1134, "name": "WriteString"}, {"value": 517, "name": "lookup"}], "name": "(*genericReplacer)."}, {"children": [{"value": 1014, "name": "Replace"}, {"value": 768, "name": "WriteString"}], "name": "(*singleStringReplacer)."}, {"children": [{"value": 214, "name": "next"}], "name": "(*stringFinder)."}, {"children": [{"value": 225, "name": "WriteString"}], "name": "(*stringWriter)."}, {"children": [{"value": 2163, "name": "add"}], "name": "(*trieNode)."}, {"value": 105, "name": "Contains"}, {"value": 105, "name": "ContainsAny"}, {"value": 93, "name": "ContainsRune"}, {"value": 253, "name": "Count"}, {"value": 603, "name": "EqualFold"}, {"value": 112, "name": "Fields"}, {"value": 963, "name": "FieldsFunc"}, {"value": 1476, "name": "Index"}, {"value": 563, "name": "IndexAny"}, {"value": 24, "name": "IndexByte"}, {"value": 95, "name": "IndexFunc"}, {"value": 412, "name": "IndexRune"}, {"value": 1195, "name": "Join"}, {"value": 795, "name": "LastIndex"}, {"value": 548, "name": "LastIndexAny"}, {"value": 97, "name": "LastIndexByte"}, {"value": 1019, "name": "Map"}, {"value": 149, "name": "NewReader"}, {"value": 1417, "name": "NewReplacer"}, {"value": 612, "name": "Repeat"}, {"value": 1255, "name": "Replace"}, {"value": 147, "name": "Split"}, {"value": 151, "name": "SplitN"}, {"value": 142, "name": "Title"}, {"children": [{"value": 126, "name": "func1"}], "name": "Title."}, {"value": 102, "name": "ToLower"}, {"value": 102, "name": "ToTitle"}, {"value": 102, "name": "ToUpper"}, {"value": 173, "name": "Trim"}, {"value": 137, "name": "TrimFunc"}, {"value": 173, "name": "TrimLeft"}, {"value": 184, "name": "TrimLeftFunc"}, {"value": 173, "name": "TrimRight"}, {"value": 235, "name": "TrimRightFunc"}, {"value": 102, "name": "TrimSpace"}, {"value": 745, "name": "explode"}, {"value": 1122, "name": "genSplit"}, {"value": 90, "name": "hashStr"}, {"value": 123, "name": "hashStrRev"}, {"value": 264, "name": "indexFunc"}, {"value": 33, "name": "indexShortStr"}, {"value": 101, "name": "init"}, {"children": [{"value": 83, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 242, "name": "isSeparator"}, {"value": 192, "name": "lastIndexFunc"}, {"value": 111, "name": "longestCommonSuffix"}, {"value": 168, "name": "makeASCIISet"}, {"value": 576, "name": "makeCutsetFunc"}, {"children": [{"value": 57, "name": "func1"}, {"value": 63, "name": "func2"}, {"value": 91, "name": "func3"}], "name": "makeCutsetFunc."}, {"value": 654, "name": "makeGenericReplacer"}, {"value": 220, "name": "makeSingleStringReplacer"}, {"value": 872, "name": "makeStringFinder"}, {"value": 8, "name": "shortStringLen"}, {"children": [{"value": 166, "name": "WriteString"}], "name": "stringWriter."}, {"value": 12, "name": "supportAVX2"}], "name": "strings."}, {"value": 48, "name": "go.itab.*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/gossip.is *github.com/cockroachdb/cockroach/pkg/gossip.infoStore; github.com/cockroachdb/cockroach/pkg/gossip.incoming github.com/cockroachdb/cockroach/pkg/gossip.nodeSet; github.com/cockroachdb/cockroach/pkg/gossip.nodeMap map[github.com/cockroachdb/cockroach/pkg/util.UnresolvedAddr]github.com/cockroachdb/cockroach/pkg/gossip.serverInfo; github.com/cockroachdb/cockroach/pkg/gossip.clusterID github.com/cockroachdb/cockroach/pkg/util/uuid.UUID; github.com/cockroachdb/cockroach/pkg/gossip.ready chan struct {} },sync.Locker"}, {"value": 48, "name": "go.itab.*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.Mutex; github.com/cockroachdb/cockroach/pkg/util/stop.quiesce *sync.Cond; github.com/cockroachdb/cockroach/pkg/util/stop.quiescing bool; github.com/cockroachdb/cockroach/pkg/util/stop.numTasks int; github.com/cockroachdb/cockroach/pkg/util/stop.tasks map[github.com/cockroachdb/cockroach/pkg/util/stop.taskKey]int; github.com/cockroachdb/cockroach/pkg/util/stop.closers []github.com/cockroachdb/cockroach/pkg/util/stop.Closer; github.com/cockroachdb/cockroach/pkg/util/stop.cancels []func() },sync.Locker"}, {"value": 48, "name": "go.itab.*struct { github.com/cockroachdb/cockroach/pkg/util/syncutil.RWMutex; github.com/cockroachdb/cockroach/pkg/kv.cache *github.com/cockroachdb/cockroach/pkg/util/cache.OrderedCache },sync.Locker"}, {"children": [{"value": 48, "name": "go.itab.*Mutex,sync.Locker"}, {"value": 48, "name": "go.itab.*rlocker,sync.Locker"}, {"children": [{"value": 86, "name": "Broadcast"}, {"value": 86, "name": "Signal"}, {"value": 179, "name": "Wait"}], "name": "(*Cond)."}, {"children": [{"value": 386, "name": "Lock"}, {"value": 185, "name": "Unlock"}], "name": "(*Mutex)."}, {"children": [{"value": 250, "name": "Do"}], "name": "(*Once)."}, {"children": [{"value": 408, "name": "Get"}, {"value": 499, "name": "Put"}, {"value": 398, "name": "getSlow"}, {"value": 136, "name": "pin"}, {"value": 630, "name": "pinSlow"}], "name": "(*Pool)."}, {"children": [{"value": 119, "name": "Lock"}, {"value": 82, "name": "RLock"}, {"value": 23, "name": "RLocker"}, {"value": 145, "name": "RUnlock"}, {"value": 188, "name": "Unlock"}], "name": "(*RWMutex)."}, {"children": [{"value": 484, "name": "Add"}, {"value": 69, "name": "Done"}, {"value": 253, "name": "Wait"}], "name": "(*WaitGroup)."}, {"children": [{"value": 174, "name": "check"}], "name": "(*copyChecker)."}, {"children": [{"value": 1, "name": "Lock"}], "name": "(*noCopy)."}, {"children": [{"value": 21, "name": "Lock"}, {"value": 21, "name": "Unlock"}], "name": "(*poolLocal)."}, {"children": [{"value": 60, "name": "Lock"}, {"value": 60, "name": "Unlock"}], "name": "(*rlocker)."}, {"value": 24, "name": "allPools"}, {"value": 8, "name": "allPoolsMu"}, {"value": 175, "name": "event"}, {"value": 101, "name": "init"}, {"children": [{"value": 62, "name": "1"}, {"value": 95, "name": "2"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 739, "name": "poolCleanup"}, {"value": 69, "name": "runtime_Semacquire"}, {"value": 69, "name": "runtime_SemacquireMutex"}, {"value": 60, "name": "runtime_Semrelease"}, {"value": 147, "name": "runtime_canSpin"}, {"value": 36, "name": "runtime_doSpin"}, {"value": 19, "name": "runtime_notifyListAdd"}, {"value": 203, "name": "runtime_notifyListCheck"}, {"value": 359, "name": "runtime_notifyListNotifyAll"}, {"value": 500, "name": "runtime_notifyListNotifyOne"}, {"value": 538, "name": "runtime_notifyListWait"}, {"value": 44, "name": "runtime_procPin"}, {"value": 28, "name": "runtime_procUnpin"}, {"value": 96, "name": "runtime_registerPoolCleanup"}, {"value": 62, "name": "throw"}], "name": "sync."}, {"children": [{"value": 40, "name": "go.itab.*SockaddrInet4,syscall.Sockaddr"}, {"value": 40, "name": "go.itab.*SockaddrInet6,syscall.Sockaddr"}, {"value": 40, "name": "go.itab.*SockaddrLinklayer,syscall.Sockaddr"}, {"value": 40, "name": "go.itab.*SockaddrNetlink,syscall.Sockaddr"}, {"value": 40, "name": "go.itab.*SockaddrUnix,syscall.Sockaddr"}, {"value": 40, "name": "go.itab.Errno,error"}, {"value": 48, "name": "go.itab.Signal,os.Signal"}, {"children": [{"value": 186, "name": "Error"}, {"value": 233, "name": "Temporary"}, {"value": 181, "name": "Timeout"}], "name": "(*Errno)."}, {"children": [{"value": 15, "name": "SetLen"}], "name": "(*Iovec)."}, {"children": [{"value": 15, "name": "SetControllen"}], "name": "(*Msghdr)."}, {"children": [{"value": 302, "name": "toWireFormat"}], "name": "(*NetlinkRouteRequest)."}, {"children": [{"value": 150, "name": "Signal"}, {"value": 186, "name": "String"}], "name": "(*Signal)."}, {"children": [{"value": 243, "name": "sockaddr"}], "name": "(*SockaddrInet4)."}, {"children": [{"value": 249, "name": "sockaddr"}], "name": "(*SockaddrInet6)."}, {"children": [{"value": 256, "name": "sockaddr"}], "name": "(*SockaddrLinklayer)."}, {"children": [{"value": 69, "name": "sockaddr"}], "name": "(*SockaddrNetlink)."}, {"children": [{"value": 257, "name": "sockaddr"}], "name": "(*SockaddrUnix)."}, {"children": [{"value": 28, "name": "Nano"}, {"value": 23, "name": "Unix"}], "name": "(*Timespec)."}, {"children": [{"value": 35, "name": "Nano"}, {"value": 30, "name": "Unix"}], "name": "(*Timeval)."}, {"children": [{"value": 168, "name": "Continued"}, {"value": 200, "name": "CoreDump"}, {"value": 183, "name": "ExitStatus"}, {"value": 168, "name": "Exited"}, {"value": 200, "name": "Signal"}, {"value": 183, "name": "Signaled"}, {"value": 184, "name": "StopSignal"}, {"value": 167, "name": "Stopped"}, {"value": 213, "name": "TrapCause"}], "name": "(*WaitStatus)."}, {"children": [{"value": 17, "name": "Lock"}, {"value": 860, "name": "Mmap"}, {"value": 579, "name": "Munmap"}, {"value": 17, "name": "Unlock"}], "name": "(*mmapper)."}, {"value": 408, "name": "Accept"}, {"value": 516, "name": "Accept4"}, {"value": 160, "name": "Bind"}, {"value": 166, "name": "BytePtrFromString"}, {"value": 347, "name": "ByteSliceFromString"}, {"value": 234, "name": "Close"}, {"value": 78, "name": "CloseOnExec"}, {"value": 160, "name": "Connect"}, {"value": 254, "name": "Dup"}, {"value": 581, "name": "Environ"}, {"children": [{"value": 206, "name": "Error"}, {"value": 82, "name": "Temporary"}, {"value": 30, "name": "Timeout"}], "name": "Errno."}, {"value": 87, "name": "Exit"}, {"value": 234, "name": "Fchdir"}, {"value": 236, "name": "Fchmod"}, {"value": 236, "name": "Fchown"}, {"value": 24, "name": "ForkLock"}, {"value": 245, "name": "Fstat"}, {"value": 234, "name": "Fsync"}, {"value": 235, "name": "Ftruncate"}, {"value": 279, "name": "Getcwd"}, {"value": 286, "name": "Getdents"}, {"value": 501, "name": "Getenv"}, {"value": 96, "name": "Getgid"}, {"value": 13, "name": "Getpagesize"}, {"value": 286, "name": "Getpeername"}, {"value": 96, "name": "Getpid"}, {"value": 96, "name": "Getppid"}, {"value": 286, "name": "Getsockname"}, {"value": 149, "name": "GetsockoptInt"}, {"value": 96, "name": "Getuid"}, {"value": 438, "name": "Getwd"}, {"value": 235, "name": "Kill"}, {"value": 235, "name": "Listen"}, {"value": 383, "name": "Lstat"}, {"value": 107, "name": "Mkdir"}, {"value": 375, "name": "Mkdirat"}, {"value": 2339, "name": "NetlinkRIB"}, {"value": 133, "name": "Open"}, {"value": 1224, "name": "ParseDirent"}, {"value": 863, "name": "ParseNetlinkMessage"}, {"value": 1108, "name": "ParseNetlinkRouteAttr"}, {"value": 194, "name": "Pipe"}, {"value": 204, "name": "Pipe2"}, {"value": 323, "name": "Pread"}, {"value": 323, "name": "Pwrite"}, {"value": 86, "name": "RawSyscall"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "RawSyscall."}, {"value": 92, "name": "RawSyscall6"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "RawSyscall6."}, {"value": 120, "name": "Read"}, {"value": 120, "name": "ReadDirent"}, {"value": 151, "name": "Readlink"}, {"value": 385, "name": "Recvfrom"}, {"value": 643, "name": "Recvmsg"}, {"value": 128, "name": "Rename"}, {"value": 561, "name": "Renameat"}, {"value": 108, "name": "Rmdir"}, {"value": 259, "name": "Seek"}, {"value": 120, "name": "Sendfile"}, {"value": 526, "name": "SendmsgN"}, {"value": 218, "name": "Sendto"}, {"value": 196, "name": "SetNonblock"}, {"value": 128, "name": "SetsockoptInt"}, {"value": 119, "name": "SetsockoptLinger"}, {"value": 235, "name": "Shutdown"}, {"children": [{"value": 1, "name": "Signal"}, {"value": 218, "name": "String"}], "name": "Signal."}, {"value": 516, "name": "SlicePtrFromStrings"}, {"value": 208, "name": "Socket"}, {"value": 1, "name": "SocketDisableIPv6"}, {"value": 171, "name": "StartProcess"}, {"value": 383, "name": "Stat"}, {"value": 383, "name": "Statfs"}, {"value": 8, "name": "Stderr"}, {"value": 8, "name": "Stdin"}, {"value": 8, "name": "Stdout"}, {"value": 119, "name": "Symlink"}, {"value": 101, "name": "Syscall"}, {"children": [{"value": 12, "name": "args_stackmap"}], "name": "Syscall."}, {"value": 107, "name": "Syscall6"}, {"children": [{"value": 14, "name": "args_stackmap"}], "name": "Syscall6."}, {"value": 108, "name": "Unlink"}, {"value": 150, "name": "Wait4"}, {"children": [{"value": 17, "name": "Continued"}, {"value": 49, "name": "CoreDump"}, {"value": 33, "name": "ExitStatus"}, {"value": 17, "name": "Exited"}, {"value": 50, "name": "Signal"}, {"value": 32, "name": "Signaled"}, {"value": 34, "name": "StopSignal"}, {"value": 18, "name": "Stopped"}, {"value": 60, "name": "TrapCause"}], "name": "WaitStatus."}, {"value": 120, "name": "Write"}, {"value": 8, "name": "_zero"}, {"value": 288, "name": "accept"}, {"value": 328, "name": "accept4"}, {"value": 897, "name": "anyToSockaddr"}, {"value": 237, "name": "bind"}, {"value": 237, "name": "connect"}, {"value": 491, "name": "copyenv"}, {"value": 117, "name": "direntIno"}, {"value": 135, "name": "direntNamlen"}, {"value": 117, "name": "direntReclen"}, {"value": 8, "name": "env"}, {"value": 24, "name": "envLock"}, {"value": 12, "name": "envOnce"}, {"value": 24, "name": "envs"}, {"value": 16, "name": "errEAGAIN"}, {"value": 16, "name": "errEINVAL"}, {"value": 16, "name": "errENOENT"}, {"value": 2128, "name": "errors"}, {"value": 259, "name": "fcntl"}, {"value": 3938, "name": "forkAndExecInChild"}, {"value": 1959, "name": "forkExec"}, {"value": 379, "name": "forkExecPipe"}, {"value": 259, "name": "getpeername"}, {"value": 259, "name": "getsockname"}, {"value": 290, "name": "getsockopt"}, {"value": 268, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 188, "name": "itoa"}, {"value": 310, "name": "mmap"}, {"value": 235, "name": "munmap"}, {"value": 167, "name": "newNetlinkRouteRequest"}, {"value": 482, "name": "openat"}, {"value": 244, "name": "pipe"}, {"value": 245, "name": "pipe2"}, {"value": 286, "name": "read"}, {"value": 186, "name": "readInt"}, {"value": 366, "name": "readIntLE"}, {"value": 275, "name": "readlen"}, {"value": 502, "name": "readlinkat"}, {"value": 357, "name": "recvfrom"}, {"value": 275, "name": "recvmsg"}, {"value": 40, "name": "runtime_AfterFork"}, {"value": 40, "name": "runtime_BeforeFork"}, {"value": 280, "name": "runtime_envs"}, {"value": 315, "name": "sendfile"}, {"value": 275, "name": "sendmsg"}, {"value": 303, "name": "sendto"}, {"value": 277, "name": "setsockopt"}, {"value": 512, "name": "signals"}, {"value": 259, "name": "socket"}, {"value": 8, "name": "statictmp_1192"}, {"value": 8, "name": "statictmp_1193"}, {"value": 8, "name": "statictmp_1194"}, {"value": 32, "name": "statictmp_1195"}, {"value": 112, "name": "statictmp_128"}, {"value": 495, "name": "symlinkat"}, {"value": 275, "name": "uitoa"}, {"value": 374, "name": "unlinkat"}, {"value": 1, "name": "use"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "use."}, {"value": 328, "name": "wait4"}, {"value": 286, "name": "write"}, {"value": 899, "name": "writeIDMappings"}, {"value": 554, "name": "writeSetgroups"}, {"value": 645, "name": "writeUidGidMappings"}, {"value": 72, "name": "zeroProcAttr"}, {"value": 136, "name": "zeroSysProcAttr"}], "name": "syscall."}, {"children": [{"children": [{"value": 40, "name": "go.itab.*Writer,io.Writer"}, {"children": [{"value": 80, "name": "Flush"}, {"value": 332, "name": "Init"}, {"value": 2162, "name": "Write"}, {"value": 123, "name": "append"}, {"value": 177, "name": "endEscape"}, {"value": 702, "name": "flush"}, {"value": 839, "name": "format"}, {"value": 429, "name": "reset"}, {"value": 235, "name": "updateWidth"}, {"value": 236, "name": "write0"}, {"value": 1200, "name": "writeLines"}, {"value": 191, "name": "writeN"}, {"value": 375, "name": "writePadding"}], "name": "(*Writer)."}, {"children": [{"value": 8, "name": "1"}, {"value": 4, "name": "2"}], "name": ".gobytes."}, {"value": 171, "name": "NewWriter"}, {"value": 304, "name": "handlePanic"}, {"value": 24, "name": "hbar"}, {"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 24, "name": "newline"}, {"value": 1, "name": "statictmp_156"}, {"value": 1, "name": "statictmp_157"}, {"value": 24, "name": "tabs"}, {"value": 24, "name": "vbar"}], "name": "tabwriter."}, {"children": [{"value": 72, "name": "go.itab.*ActionNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*BoolNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*BranchNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*ChainNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*CommandNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*DotNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*FieldNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*IdentifierNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*IfNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*ListNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*NilNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*NumberNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*PipeNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*RangeNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*StringNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*TemplateNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*TextNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*VariableNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*WithNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*elseNode,text/template/parse.Node"}, {"value": 72, "name": "go.itab.*endNode,text/template/parse.Node"}, {"children": [{"value": 284, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 170, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*ActionNode)."}, {"children": [{"value": 200, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 57, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*BoolNode)."}, {"children": [{"value": 1329, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 741, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*BranchNode)."}, {"children": [{"value": 523, "name": "Add"}, {"value": 510, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 348, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*ChainNode)."}, {"children": [{"value": 638, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 578, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*CommandNode)."}, {"children": [{"value": 184, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 22, "name": "String"}, {"value": 10, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*DotNode)."}, {"children": [{"value": 455, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 215, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*FieldNode)."}, {"children": [{"value": 245, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 20, "name": "SetPos"}, {"value": 107, "name": "SetTree"}, {"value": 24, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*IdentifierNode)."}, {"children": [{"value": 449, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 35, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 26, "name": "tree"}], "name": "(*IfNode)."}, {"children": [{"value": 82, "name": "Copy"}, {"value": 613, "name": "CopyList"}, {"value": 46, "name": "Position"}, {"value": 387, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*ListNode)."}, {"children": [{"value": 184, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 22, "name": "String"}, {"value": 10, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*NilNode)."}, {"children": [{"value": 162, "name": "Type"}], "name": "(*NodeType)."}, {"children": [{"value": 179, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 24, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*NumberNode)."}, {"children": [{"value": 82, "name": "Copy"}, {"value": 1664, "name": "CopyPipe"}, {"value": 46, "name": "Position"}, {"value": 705, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*PipeNode)."}, {"children": [{"value": 162, "name": "Position"}], "name": "(*Pos)."}, {"children": [{"value": 449, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 35, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 26, "name": "tree"}], "name": "(*RangeNode)."}, {"children": [{"value": 343, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 24, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*StringNode)."}, {"children": [{"value": 362, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 409, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*TemplateNode)."}, {"children": [{"value": 414, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 199, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*TextNode)."}, {"children": [{"value": 366, "name": "Copy"}, {"value": 880, "name": "ErrorContext"}, {"value": 1296, "name": "Parse"}, {"value": 1595, "name": "action"}, {"value": 420, "name": "add"}, {"value": 2170, "name": "blockControl"}, {"value": 624, "name": "checkPipeline"}, {"value": 1807, "name": "command"}, {"value": 568, "name": "elseControl"}, {"value": 289, "name": "endControl"}, {"value": 163, "name": "error"}, {"value": 465, "name": "errorf"}, {"value": 324, "name": "expect"}, {"value": 337, "name": "expectOneOf"}, {"value": 209, "name": "hasFunction"}, {"value": 444, "name": "ifControl"}, {"value": 802, "name": "itemList"}, {"value": 336, "name": "newField"}, {"value": 2860, "name": "newNumber"}, {"value": 297, "name": "newVariable"}, {"value": 751, "name": "nextNonSpace"}, {"value": 3660, "name": "operand"}, {"value": 4541, "name": "parse"}, {"value": 2321, "name": "parseControl"}, {"value": 1020, "name": "parseDefinition"}, {"value": 277, "name": "parseTemplateName"}, {"value": 772, "name": "peekNonSpace"}, {"value": 4429, "name": "pipeline"}, {"value": 57, "name": "popVars"}, {"value": 444, "name": "rangeControl"}, {"value": 536, "name": "recover"}, {"value": 673, "name": "templateControl"}, {"value": 3354, "name": "term"}, {"value": 608, "name": "textOrAction"}, {"value": 338, "name": "unexpected"}, {"value": 494, "name": "useVar"}, {"value": 444, "name": "withControl"}], "name": "(*Tree)."}, {"children": [{"value": 455, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 293, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*VariableNode)."}, {"children": [{"value": 449, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 35, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 26, "name": "tree"}], "name": "(*WithNode)."}, {"children": [{"value": 202, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 22, "name": "String"}, {"value": 10, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*elseNode)."}, {"children": [{"value": 184, "name": "Copy"}, {"value": 46, "name": "Position"}, {"value": 22, "name": "String"}, {"value": 45, "name": "Type"}, {"value": 15, "name": "tree"}], "name": "(*endNode)."}, {"children": [{"value": 214, "name": "String"}], "name": "(*item)."}, {"children": [{"value": 198, "name": "accept"}, {"value": 180, "name": "acceptRun"}, {"value": 262, "name": "atTerminator"}, {"value": 204, "name": "drain"}, {"value": 417, "name": "emit"}, {"value": 263, "name": "errorf"}, {"value": 194, "name": "next"}, {"value": 141, "name": "peek"}, {"value": 221, "name": "run"}, {"value": 561, "name": "scanNumber"}], "name": "(*lexer)."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "ActionNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "BoolNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "BranchNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "ChainNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "CommandNode."}, {"children": [{"value": 42, "name": "Position"}], "name": "DotNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "FieldNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "IdentifierNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "IfNode."}, {"value": 856, "name": "IsEmptyTree"}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "ListNode."}, {"value": 204, "name": "New"}, {"children": [{"value": 42, "name": "Position"}], "name": "NilNode."}, {"children": [{"value": 11, "name": "Type"}], "name": "NodeType."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "NumberNode."}, {"value": 442, "name": "Parse"}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "PipeNode."}, {"children": [{"value": 11, "name": "Position"}], "name": "Pos."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "RangeNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "StringNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "TemplateNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "TextNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "VariableNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "WithNode."}, {"children": [{"value": 42, "name": "Position"}], "name": "elseNode."}, {"children": [{"value": 42, "name": "Position"}, {"value": 42, "name": "Type"}], "name": "endNode."}, {"value": 316, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 107, "name": "isAlphaNumeric"}, {"children": [{"value": 642, "name": "String"}], "name": "item."}, {"value": 8, "name": "key"}, {"value": 109, "name": "leftTrimLength"}, {"value": 562, "name": "lex"}, {"value": 253, "name": "lexChar"}, {"value": 837, "name": "lexComment"}, {"value": 79, "name": "lexField"}, {"value": 485, "name": "lexFieldOrVariable"}, {"value": 866, "name": "lexIdentifier"}, {"value": 1859, "name": "lexInsideAction"}, {"value": 434, "name": "lexLeftDelim"}, {"value": 751, "name": "lexNumber"}, {"value": 253, "name": "lexQuote"}, {"value": 228, "name": "lexRawQuote"}, {"value": 346, "name": "lexRightDelim"}, {"value": 140, "name": "lexSpace"}, {"value": 559, "name": "lexText"}, {"value": 150, "name": "lexVariable"}, {"value": 109, "name": "rightTrimLength"}, {"value": 160, "name": "statictmp_1125"}, {"value": 80, "name": "statictmp_1126"}, {"value": 16, "name": "statictmp_783"}, {"value": 16, "name": "statictmp_837"}, {"value": 16, "name": "statictmp_990"}, {"value": 16, "name": "textFormat"}], "name": "template/parse."}, {"children": [{"value": 40, "name": "go.itab.ExecError,error"}, {"value": 56, "name": "go.itab.rvFloats,sort.Interface"}, {"value": 56, "name": "go.itab.rvInts,sort.Interface"}, {"value": 56, "name": "go.itab.rvStrings,sort.Interface"}, {"value": 56, "name": "go.itab.rvUints,sort.Interface"}, {"children": [{"value": 213, "name": "Error"}], "name": "(*ExecError)."}, {"children": [{"value": 1375, "name": "AddParseTree"}, {"value": 3437, "name": "Clone"}, {"value": 28, "name": "Copy"}, {"value": 801, "name": "DefinedTemplates"}, {"value": 557, "name": "Delims"}, {"value": 55, "name": "ErrorContext"}, {"value": 120, "name": "Execute"}, {"value": 476, "name": "ExecuteTemplate"}, {"value": 608, "name": "Funcs"}, {"value": 139, "name": "Lookup"}, {"value": 23, "name": "Name"}, {"value": 692, "name": "New"}, {"value": 515, "name": "Option"}, {"value": 1165, "name": "Parse"}, {"value": 504, "name": "ParseFiles"}, {"value": 491, "name": "ParseGlob"}, {"value": 566, "name": "Templates"}, {"value": 419, "name": "associate"}, {"value": 927, "name": "execute"}, {"value": 427, "name": "init"}, {"value": 871, "name": "setOption"}], "name": "(*Template)."}, {"children": [{"value": 46, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 379, "name": "Swap"}], "name": "(*rvFloats)."}, {"children": [{"value": 46, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 379, "name": "Swap"}], "name": "(*rvInts)."}, {"children": [{"value": 46, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 379, "name": "Swap"}], "name": "(*rvStrings)."}, {"children": [{"value": 46, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 379, "name": "Swap"}], "name": "(*rvUints)."}, {"children": [{"value": 163, "name": "Len"}, {"value": 469, "name": "Swap"}], "name": "(*rvs)."}, {"children": [{"value": 1090, "name": "errorf"}, {"value": 4144, "name": "evalArg"}, {"value": 553, "name": "evalBool"}, {"value": 4076, "name": "evalCall"}, {"value": 802, "name": "evalChainNode"}, {"value": 2566, "name": "evalCommand"}, {"value": 512, "name": "evalComplex"}, {"value": 2159, "name": "evalEmptyInterface"}, {"value": 3775, "name": "evalField"}, {"value": 636, "name": "evalFieldChain"}, {"value": 404, "name": "evalFieldNode"}, {"value": 577, "name": "evalFloat"}, {"value": 724, "name": "evalFunction"}, {"value": 575, "name": "evalInteger"}, {"value": 1231, "name": "evalPipeline"}, {"value": 563, "name": "evalString"}, {"value": 575, "name": "evalUnsignedInteger"}, {"value": 725, "name": "evalVariableNode"}, {"value": 764, "name": "idealConstant"}, {"value": 15, "name": "mark"}, {"value": 210, "name": "notAFunction"}, {"value": 51, "name": "pop"}, {"value": 604, "name": "printValue"}, {"value": 2035, "name": "validateType"}, {"value": 487, "name": "varValue"}, {"value": 1560, "name": "walk"}, {"value": 756, "name": "walkIfOrWith"}, {"value": 1972, "name": "walkRange"}, {"children": [{"value": 571, "name": "func1"}], "name": "walkRange."}, {"value": 1114, "name": "walkTemplate"}, {"value": 126, "name": "writeError"}], "name": "(*state)."}, {"children": [{"value": 5, "name": "1"}, {"value": 4, "name": "10"}, {"value": 4, "name": "11"}, {"value": 16, "name": "12"}, {"value": 5, "name": "2"}, {"value": 5, "name": "3"}, {"value": 4, "name": "4"}, {"value": 4, "name": "5"}, {"value": 2, "name": "6"}, {"value": 2, "name": "7"}, {"value": 2, "name": "8"}, {"value": 4, "name": "9"}], "name": ".gobytes."}, {"children": [{"value": 86, "name": "Error"}], "name": "ExecError."}, {"value": 549, "name": "HTMLEscape"}, {"value": 381, "name": "HTMLEscapeString"}, {"value": 124, "name": "HTMLEscaper"}, {"value": 1546, "name": "JSEscape"}, {"value": 373, "name": "JSEscapeString"}, {"value": 124, "name": "JSEscaper"}, {"value": 93, "name": "Must"}, {"children": [{"value": 92, "name": "Copy"}, {"value": 167, "name": "ErrorContext"}], "name": "Template."}, {"value": 124, "name": "URLQueryEscaper"}, {"value": 320, "name": "addFuncs"}, {"value": 1265, "name": "addValueFuncs"}, {"value": 318, "name": "and"}, {"value": 8, "name": "builtinFuncs"}, {"value": 8, "name": "builtins"}, {"value": 3052, "name": "call"}, {"value": 200, "name": "canBeNil"}, {"value": 128, "name": "createValueFuncs"}, {"value": 214, "name": "doublePercent"}, {"value": 2304, "name": "eq"}, {"value": 16, "name": "errBadComparison"}, {"value": 16, "name": "errBadComparisonType"}, {"value": 16, "name": "errNoComparison"}, {"value": 504, "name": "errRecover"}, {"value": 16, "name": "errorType"}, {"value": 414, "name": "evalArgs"}, {"value": 453, "name": "findFunction"}, {"value": 16, "name": "fmtStringerType"}, {"value": 208, "name": "ge"}, {"value": 265, "name": "goodFunc"}, {"value": 329, "name": "goodName"}, {"value": 208, "name": "gt"}, {"value": 24, "name": "hex"}, {"value": 24, "name": "htmlAmp"}, {"value": 24, "name": "htmlApos"}, {"value": 24, "name": "htmlGt"}, {"value": 24, "name": "htmlLt"}, {"value": 24, "name": "htmlQuot"}, {"value": 2365, "name": "index"}, {"value": 267, "name": "indirect"}, {"value": 258, "name": "indirectInterface"}, {"value": 3271, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 613, "name": "isTrue"}, {"value": 24, "name": "jsApos"}, {"value": 24, "name": "jsBackslash"}, {"value": 24, "name": "jsGt"}, {"value": 56, "name": "jsIsSpecial"}, {"value": 24, "name": "jsLowUni"}, {"value": 24, "name": "jsLt"}, {"value": 24, "name": "jsQuot"}, {"value": 339, "name": "le"}, {"value": 570, "name": "length"}, {"value": 1771, "name": "lt"}, {"value": 207, "name": "ne"}, {"value": 92, "name": "not"}, {"value": 315, "name": "or"}, {"value": 1916, "name": "parseFiles"}, {"value": 411, "name": "parseGlob"}, {"value": 805, "name": "prepareArg"}, {"value": 876, "name": "printableValue"}, {"value": 16, "name": "reflectValueType"}, {"children": [{"value": 42, "name": "Len"}, {"value": 213, "name": "Less"}, {"value": 380, "name": "Swap"}], "name": "rvFloats."}, {"children": [{"value": 42, "name": "Len"}, {"value": 208, "name": "Less"}, {"value": 380, "name": "Swap"}], "name": "rvInts."}, {"children": [{"value": 42, "name": "Len"}, {"value": 257, "name": "Less"}, {"value": 380, "name": "Swap"}], "name": "rvStrings."}, {"children": [{"value": 42, "name": "Len"}, {"value": 208, "name": "Less"}, {"value": 380, "name": "Swap"}], "name": "rvUints."}, {"children": [{"value": 11, "name": "Len"}, {"value": 350, "name": "Swap"}], "name": "rvs."}, {"value": 738, "name": "sortKeys"}, {"value": 40, "name": "statictmp_186"}, {"value": 24, "name": "statictmp_593"}, {"value": 40, "name": "statictmp_64"}, {"value": 24, "name": "statictmp_704"}, {"value": 24, "name": "statictmp_718"}, {"value": 24, "name": "statictmp_725"}, {"value": 24, "name": "statictmp_747"}, {"value": 24, "name": "statictmp_752"}, {"value": 24, "name": "statictmp_759"}, {"value": 24, "name": "statictmp_764"}, {"value": 24, "name": "statictmp_768"}, {"value": 24, "name": "statictmp_769"}, {"value": 24, "name": "statictmp_775"}, {"value": 24, "name": "statictmp_823"}, {"value": 24, "name": "statictmp_828"}, {"value": 24, "name": "statictmp_832"}, {"value": 24, "name": "statictmp_837"}, {"value": 24, "name": "statictmp_842"}, {"value": 24, "name": "statictmp_853"}, {"value": 123, "name": "truth"}, {"value": 24, "name": "zero"}], "name": "template."}], "name": "text/"}, {"children": [{"value": 40, "name": "go.itab.*ParseError,error"}, {"children": [{"value": 242, "name": "Hours"}, {"value": 239, "name": "Minutes"}, {"value": 162, "name": "Nanoseconds"}, {"value": 235, "name": "Seconds"}, {"value": 186, "name": "String"}], "name": "(*Duration)."}, {"children": [{"value": 82, "name": "String"}, {"value": 52, "name": "firstZoneUsed"}, {"value": 133, "name": "get"}, {"value": 630, "name": "lookup"}, {"value": 286, "name": "lookupFirstZone"}, {"value": 727, "name": "lookupName"}], "name": "(*Location)."}, {"children": [{"value": 186, "name": "String"}], "name": "(*Month)."}, {"children": [{"value": 910, "name": "Error"}], "name": "(*ParseError)."}, {"children": [{"value": 66, "name": "Stop"}], "name": "(*Ticker)."}, {"children": [{"value": 277, "name": "Add"}, {"value": 246, "name": "AddDate"}, {"value": 199, "name": "After"}, {"value": 284, "name": "AppendFormat"}, {"value": 199, "name": "Before"}, {"value": 212, "name": "Clock"}, {"value": 212, "name": "Date"}, {"value": 192, "name": "Day"}, {"value": 187, "name": "Equal"}, {"value": 222, "name": "Format"}, {"value": 110, "name": "GobDecode"}, {"value": 232, "name": "GobEncode"}, {"value": 192, "name": "Hour"}, {"value": 202, "name": "ISOWeek"}, {"value": 220, "name": "In"}, {"value": 178, "name": "IsZero"}, {"value": 227, "name": "Local"}, {"value": 177, "name": "Location"}, {"value": 232, "name": "MarshalBinary"}, {"value": 232, "name": "MarshalJSON"}, {"value": 232, "name": "MarshalText"}, {"value": 192, "name": "Minute"}, {"value": 192, "name": "Month"}, {"value": 166, "name": "Nanosecond"}, {"value": 220, "name": "Round"}, {"value": 192, "name": "Second"}, {"value": 202, "name": "String"}, {"value": 220, "name": "Sub"}, {"value": 220, "name": "Truncate"}, {"value": 205, "name": "UTC"}, {"value": 175, "name": "Unix"}, {"value": 192, "name": "UnixNano"}, {"value": 1412, "name": "UnmarshalBinary"}, {"value": 342, "name": "UnmarshalJSON"}, {"value": 249, "name": "UnmarshalText"}, {"value": 192, "name": "Weekday"}, {"value": 192, "name": "Year"}, {"value": 192, "name": "YearDay"}, {"value": 212, "name": "Zone"}], "name": "(*Time)."}, {"children": [{"value": 233, "name": "Reset"}, {"value": 162, "name": "Stop"}], "name": "(*Timer)."}, {"children": [{"value": 200, "name": "String"}], "name": "(*Weekday)."}, {"children": [{"value": 324, "name": "big4"}], "name": "(*data)."}, {"value": 73, "name": "After"}, {"value": 250, "name": "AfterFunc"}, {"value": 1639, "name": "Date"}, {"children": [{"value": 91, "name": "Hours"}, {"value": 88, "name": "Minutes"}, {"value": 11, "name": "Nanoseconds"}, {"value": 84, "name": "Seconds"}, {"value": 955, "name": "String"}], "name": "Duration."}, {"value": 453, "name": "LoadLocation"}, {"value": 8, "name": "Local"}, {"children": [{"value": 312, "name": "String"}], "name": "Month."}, {"value": 476, "name": "NewTicker"}, {"value": 336, "name": "NewTimer"}, {"value": 93, "name": "Now"}, {"value": 187, "name": "Parse"}, {"value": 3113, "name": "ParseDuration"}, {"value": 181, "name": "ParseInLocation"}, {"value": 120, "name": "Since"}, {"value": 331, "name": "Sleep"}, {"value": 97, "name": "Tick"}, {"children": [{"value": 123, "name": "Add"}, {"value": 348, "name": "AddDate"}, {"value": 46, "name": "After"}, {"value": 8795, "name": "AppendFormat"}, {"value": 46, "name": "Before"}, {"value": 213, "name": "Clock"}, {"value": 113, "name": "Date"}, {"value": 93, "name": "Day"}, {"value": 37, "name": "Equal"}, {"value": 337, "name": "Format"}, {"value": 137, "name": "GobEncode"}, {"value": 145, "name": "Hour"}, {"value": 709, "name": "ISOWeek"}, {"value": 178, "name": "In"}, {"value": 28, "name": "IsZero"}, {"value": 50, "name": "Local"}, {"value": 25, "name": "Location"}, {"value": 744, "name": "MarshalBinary"}, {"value": 615, "name": "MarshalJSON"}, {"value": 439, "name": "MarshalText"}, {"value": 169, "name": "Minute"}, {"value": 93, "name": "Month"}, {"value": 13, "name": "Nanosecond"}, {"value": 421, "name": "Round"}, {"value": 115, "name": "Second"}, {"value": 119, "name": "String"}, {"value": 224, "name": "Sub"}, {"value": 265, "name": "Truncate"}, {"value": 37, "name": "UTC"}, {"value": 24, "name": "Unix"}, {"value": 41, "name": "UnixNano"}, {"value": 151, "name": "Weekday"}, {"value": 93, "name": "Year"}, {"value": 96, "name": "YearDay"}, {"value": 113, "name": "Zone"}, {"value": 210, "name": "abs"}, {"value": 144, "name": "date"}, {"value": 258, "name": "locabs"}], "name": "Time."}, {"value": 8, "name": "UTC"}, {"value": 135, "name": "Unix"}, {"value": 120, "name": "Until"}, {"children": [{"value": 69, "name": "String"}], "name": "Weekday."}, {"value": 608, "name": "absDate"}, {"value": 760, "name": "appendInt"}, {"value": 258, "name": "atoi"}, {"value": 16, "name": "atoiError"}, {"value": 16, "name": "badData"}, {"value": 202, "name": "byteString"}, {"value": 60, "name": "closefd"}, {"value": 61, "name": "cutspace"}, {"value": 112, "name": "days"}, {"value": 52, "name": "daysBefore"}, {"value": 571, "name": "div"}, {"value": 16, "name": "errBad"}, {"value": 16, "name": "errLeadingInt"}, {"value": 199, "name": "fmtFrac"}, {"value": 165, "name": "fmtInt"}, {"value": 630, "name": "formatNano"}, {"value": 280, "name": "getnum"}, {"value": 113, "name": "goFunc"}, {"value": 868, "name": "init"}, {"value": 571, "name": "initLocal"}, {"value": 1, "name": "initdone."}, {"value": 206, "name": "leadingFraction"}, {"value": 293, "name": "leadingInt"}, {"value": 667, "name": "loadLocation"}, {"value": 4488, "name": "loadZoneData"}, {"value": 533, "name": "loadZoneFile"}, {"value": 4365, "name": "loadZoneZip"}, {"value": 88, "name": "localLoc"}, {"value": 12, "name": "localOnce"}, {"value": 24, "name": "longDayNames"}, {"value": 24, "name": "longMonthNames"}, {"value": 336, "name": "lookup"}, {"value": 125, "name": "match"}, {"value": 192, "name": "months"}, {"value": 4467, "name": "nextStdChunk"}, {"value": 112, "name": "now"}, {"value": 166, "name": "open"}, {"value": 12497, "name": "parse"}, {"value": 309, "name": "parseGMT"}, {"value": 409, "name": "parseNanoseconds"}, {"value": 564, "name": "parseTimeZone"}, {"value": 455, "name": "preadn"}, {"value": 805, "name": "readFile"}, {"value": 60, "name": "runtimeNano"}, {"value": 175, "name": "sendTime"}, {"value": 24, "name": "shortDayNames"}, {"value": 24, "name": "shortMonthNames"}, {"value": 386, "name": "skip"}, {"value": 60, "name": "startTimer"}, {"value": 128, "name": "statictmp_259"}, {"value": 24, "name": "statictmp_356"}, {"value": 24, "name": "statictmp_358"}, {"value": 24, "name": "statictmp_367"}, {"value": 24, "name": "statictmp_369"}, {"value": 24, "name": "statictmp_375"}, {"value": 32, "name": "statictmp_378"}, {"value": 16, "name": "statictmp_381"}, {"value": 32, "name": "statictmp_386"}, {"value": 16, "name": "statictmp_389"}, {"value": 15, "name": "statictmp_626"}, {"value": 32, "name": "statictmp_643"}, {"value": 16, "name": "statictmp_646"}, {"value": 16, "name": "statictmp_841"}, {"value": 112, "name": "statictmp_976"}, {"value": 112, "name": "statictmp_977"}, {"value": 208, "name": "statictmp_978"}, {"value": 208, "name": "statictmp_979"}, {"value": 64, "name": "statictmp_980"}, {"value": 128, "name": "statictmp_983"}, {"value": 64, "name": "statictmp_984"}, {"value": 48, "name": "std0x"}, {"value": 69, "name": "stopTimer"}, {"value": 8, "name": "unitMap"}, {"value": 88, "name": "utcLoc"}, {"value": 117, "name": "when"}, {"value": 24, "name": "zoneDirs"}, {"value": 16, "name": "zoneinfo"}], "name": "time."}, {"children": [{"children": [{"children": [{"value": 64, "name": "go.itab.*chacha20poly1305,crypto/cipher.AEAD"}, {"children": [{"value": 10, "name": "NonceSize"}, {"value": 602, "name": "Open"}, {"value": 10, "name": "Overhead"}, {"value": 478, "name": "Seal"}, {"value": 1104, "name": "open"}, {"value": 1583, "name": "openGeneric"}, {"value": 865, "name": "seal"}, {"value": 1395, "name": "sealGeneric"}], "name": "(*chacha20poly1305)."}, {"value": 240, "name": "andMask"}, {"value": 32, "name": "avx2IncMask"}, {"value": 32, "name": "avx2InitMask"}, {"value": 1, "name": "canUseASM"}, {"value": 32, "name": "chacha20Constants"}, {"value": 18633, "name": "chacha20Poly1305Open"}, {"children": [{"value": 16, "name": "args_stackmap"}], "name": "chacha20Poly1305Open."}, {"value": 21012, "name": "chacha20Poly1305Seal"}, {"children": [{"value": 11, "name": "args_stackmap"}], "name": "chacha20Poly1305Seal."}, {"value": 16, "name": "errOpen"}, {"value": 20, "name": "haveSSSE3"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "haveSSSE3."}, {"value": 199, "name": "init"}, {"children": [{"value": 61, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 32, "name": "polyClampMask"}, {"value": 32, "name": "rol16"}, {"value": 32, "name": "rol8"}, {"value": 199, "name": "setupState"}, {"value": 16, "name": "sseIncMask"}], "name": "chacha20poly1305."}, {"children": [{"value": 698, "name": "XORKeyStream"}, {"value": 1413, "name": "core"}, {"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "chacha20poly1305/internal/chacha20."}, {"children": [{"value": 82, "name": "ScalarBaseMult"}, {"value": 80, "name": "ScalarMult"}, {"value": 8, "name": "_121666_213"}, {"value": 8, "name": "_2P0"}, {"value": 8, "name": "_2P1234"}, {"value": 32, "name": "basePoint"}, {"value": 313, "name": "cswap"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "cswap."}, {"value": 209, "name": "freeze"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "freeze."}, {"value": 1858, "name": "invert"}, {"value": 6034, "name": "ladderstep"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "ladderstep."}, {"value": 708, "name": "mladder"}, {"value": 571, "name": "mul"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "mul."}, {"value": 559, "name": "pack"}, {"value": 403, "name": "scalarMult"}, {"value": 414, "name": "square"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "square."}, {"value": 420, "name": "unpack"}], "name": "curve25519."}, {"children": [{"value": 99, "name": "Sum"}, {"value": 206, "name": "Verify"}, {"value": 329, "name": "poly1305"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "poly1305."}, {"value": 16, "name": "poly1305Mask"}], "name": "poly1305."}], "name": "crypto/"}, {"children": [{"children": [{"value": 40, "name": "go.itab.*normReader,io.Reader"}, {"value": 48, "name": "go.itab.*normWriter,io.WriteCloser"}, {"children": [{"value": 278, "name": "Append"}, {"value": 258, "name": "AppendString"}, {"value": 226, "name": "Bytes"}, {"value": 206, "name": "FirstBoundary"}, {"value": 196, "name": "FirstBoundaryInString"}, {"value": 205, "name": "IsNormal"}, {"value": 195, "name": "IsNormalString"}, {"value": 206, "name": "LastBoundary"}, {"value": 215, "name": "NextBoundary"}, {"value": 205, "name": "NextBoundaryInString"}, {"value": 225, "name": "Properties"}, {"value": 215, "name": "PropertiesString"}, {"value": 206, "name": "QuickSpan"}, {"value": 196, "name": "QuickSpanString"}, {"value": 759, "name": "Reader"}, {"value": 150, "name": "Reset"}, {"value": 241, "name": "Span"}, {"value": 225, "name": "SpanString"}, {"value": 206, "name": "String"}, {"value": 309, "name": "Transform"}, {"value": 577, "name": "Writer"}], "name": "(*Form)."}, {"children": [{"value": 30, "name": "Done"}, {"value": 848, "name": "Init"}, {"value": 844, "name": "InitString"}, {"value": 97, "name": "Next"}, {"value": 18, "name": "Pos"}, {"value": 837, "name": "Seek"}], "name": "(*Iter)."}, {"children": [{"value": 199, "name": "BoundaryAfter"}, {"value": 203, "name": "BoundaryBefore"}, {"value": 210, "name": "CCC"}, {"value": 305, "name": "Decomposition"}, {"value": 195, "name": "LeadCCC"}, {"value": 172, "name": "Size"}, {"value": 195, "name": "TrailCCC"}], "name": "(*Properties)."}, {"children": [{"value": 692, "name": "quickSpan"}], "name": "(*formInfo)."}, {"children": [{"value": 586, "name": "appendSlice"}, {"value": 268, "name": "charinfoNFC"}, {"value": 268, "name": "charinfoNFKC"}, {"value": 452, "name": "hangul"}, {"value": 145, "name": "skipASCII"}, {"value": 141, "name": "skipContinuationBytes"}], "name": "(*input)."}, {"children": [{"value": 829, "name": "lookup"}, {"value": 829, "name": "lookupString"}, {"value": 160, "name": "lookupValue"}], "name": "(*nfcTrie)."}, {"children": [{"value": 829, "name": "lookup"}, {"value": 829, "name": "lookupString"}, {"value": 160, "name": "lookupValue"}], "name": "(*nfkcTrie)."}, {"children": [{"value": 1515, "name": "Read"}], "name": "(*normReader)."}, {"children": [{"value": 178, "name": "Close"}, {"value": 1346, "name": "Write"}], "name": "(*normWriter)."}, {"children": [{"value": 252, "name": "appendRune"}, {"value": 225, "name": "assignRune"}, {"value": 651, "name": "combineHangul"}, {"value": 712, "name": "compose"}, {"value": 220, "name": "decomposeHangul"}, {"value": 128, "name": "doFlush"}, {"value": 338, "name": "flushCopy"}, {"value": 124, "name": "insertCGJ"}, {"value": 746, "name": "insertDecomposed"}, {"value": 437, "name": "insertFlush"}, {"value": 181, "name": "insertOrdered"}, {"value": 306, "name": "insertSingle"}, {"value": 394, "name": "insertUnsafe"}, {"value": 195, "name": "runeAt"}], "name": "(*reorderBuffer)."}, {"children": [{"value": 226, "name": "lookup"}], "name": "(*sparseBlocks)."}, {"children": [{"value": 235, "name": "backwards"}, {"value": 158, "name": "first"}, {"value": 223, "name": "next"}], "name": "(*streamSafe)."}, {"children": [{"value": 416, "name": "Append"}, {"value": 400, "name": "AppendString"}, {"value": 1083, "name": "Bytes"}, {"value": 327, "name": "FirstBoundary"}, {"value": 308, "name": "FirstBoundaryInString"}, {"value": 1339, "name": "IsNormal"}, {"value": 1445, "name": "IsNormalString"}, {"children": [{"value": 223, "name": "func1"}], "name": "IsNormalString."}, {"value": 133, "name": "LastBoundary"}, {"value": 345, "name": "NextBoundary"}, {"value": 323, "name": "NextBoundaryInString"}, {"value": 270, "name": "Properties"}, {"value": 250, "name": "PropertiesString"}, {"value": 389, "name": "QuickSpan"}, {"value": 373, "name": "QuickSpanString"}, {"value": 643, "name": "Reader"}, {"value": 1, "name": "Reset"}, {"value": 475, "name": "Span"}, {"value": 459, "name": "SpanString"}, {"value": 1088, "name": "String"}, {"value": 970, "name": "Transform"}, {"value": 464, "name": "Writer"}, {"value": 1241, "name": "doAppend"}, {"value": 466, "name": "firstBoundary"}, {"value": 707, "name": "nextBoundary"}, {"value": 1671, "name": "transform"}], "name": "Form."}, {"children": [{"value": 60, "name": "BoundaryAfter"}, {"value": 71, "name": "BoundaryBefore"}, {"value": 79, "name": "CCC"}, {"value": 177, "name": "Decomposition"}, {"value": 54, "name": "LeadCCC"}, {"value": 11, "name": "Size"}, {"value": 54, "name": "TrailCCC"}], "name": "Properties."}, {"value": 481, "name": "appendFlush"}, {"value": 427, "name": "appendQuick"}, {"value": 55, "name": "ccc"}, {"value": 254, "name": "cmpNormalBytes"}, {"value": 415, "name": "compInfo"}, {"value": 395, "name": "decomposeHangul"}, {"value": 992, "name": "decomposeSegment"}, {"value": 1323, "name": "decomposeToLastBoundary"}, {"value": 19075, "name": "decomps"}, {"value": 1247, "name": "doAppend"}, {"value": 179, "name": "doAppendInner"}, {"value": 748, "name": "doNormComposed"}, {"value": 732, "name": "doNormDecomposed"}, {"value": 24, "name": "errs"}, {"value": 263, "name": "flushTransform"}, {"value": 24, "name": "formTable"}, {"value": 896, "name": "init"}, {"children": [{"value": 692, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 715, "name": "lastBoundary"}, {"value": 482, "name": "lastRuneStart"}, {"value": 123, "name": "lookupInfoNFC"}, {"value": 123, "name": "lookupInfoNFKC"}, {"value": 72, "name": "newNfcTrie"}, {"value": 72, "name": "newNfkcTrie"}, {"value": 645, "name": "nextASCIIBytes"}, {"value": 604, "name": "nextASCIIString"}, {"value": 375, "name": "nextCGJCompose"}, {"value": 181, "name": "nextCGJDecompose"}, {"value": 2331, "name": "nextComposed"}, {"value": 5213, "name": "nextDecomposed"}, {"value": 28, "name": "nextDone"}, {"value": 661, "name": "nextHangul"}, {"value": 728, "name": "nextMulti"}, {"value": 1338, "name": "nextMultiNorm"}, {"value": 8, "name": "nfcData"}, {"value": 1408, "name": "nfcIndex"}, {"value": 48, "name": "nfcSparse"}, {"value": 24, "name": "nfcSparseOffset"}, {"value": 2752, "name": "nfcSparseValues"}, {"value": 5888, "name": "nfcValues"}, {"value": 8, "name": "nfkcData"}, {"value": 1408, "name": "nfkcIndex"}, {"value": 48, "name": "nfkcSparse"}, {"value": 24, "name": "nfkcSparseOffset"}, {"value": 3500, "name": "nfkcSparseValues"}, {"value": 11776, "name": "nfkcValues"}, {"value": 1393, "name": "patchTail"}, {"value": 8, "name": "recompMap"}, {"value": 552, "name": "statictmp_483"}, {"value": 552, "name": "statictmp_495"}, {"value": 552, "name": "statictmp_558"}, {"value": 8, "name": "statictmp_623"}, {"value": 284, "name": "statictmp_779"}, {"value": 310, "name": "statictmp_780"}, {"value": 48, "name": "statictmp_781"}, {"value": 3760, "name": "statictmp_783"}, {"value": 3760, "name": "statictmp_784"}, {"value": 40, "name": "statictmp_89"}, {"value": 8, "name": "statictmp_90"}], "name": "unicode/norm."}, {"children": [{"value": 48, "name": "go.itab.Transformer,vendor/golang_org/x/text/transform.Transformer"}, {"value": 56, "name": "go.itab.foldTransform,vendor/golang_org/x/text/transform.SpanningTransformer"}, {"children": [{"value": 238, "name": "Bytes"}, {"value": 175, "name": "Reset"}, {"value": 253, "name": "Span"}, {"value": 215, "name": "String"}, {"value": 321, "name": "Transform"}], "name": "(*Transformer)."}, {"children": [{"value": 39, "name": "Reset"}, {"value": 230, "name": "Span"}, {"value": 298, "name": "Transform"}], "name": "(*foldTransform)."}, {"children": [{"value": 810, "name": "lookup"}], "name": "(*widthTrie)."}, {"value": 16, "name": "Fold"}, {"children": [{"value": 204, "name": "Bytes"}, {"value": 66, "name": "Reset"}, {"value": 147, "name": "Span"}, {"value": 172, "name": "String"}, {"value": 215, "name": "Transform"}], "name": "Transformer."}, {"children": [{"value": 32, "name": "Reset"}, {"value": 340, "name": "Span"}, {"value": 1423, "name": "Transform"}], "name": "foldTransform."}, {"value": 165, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 600, "name": "inverseData"}, {"value": 72, "name": "newWidthTrie"}, {"value": 8, "name": "trie"}, {"value": 1408, "name": "widthIndex"}, {"value": 12672, "name": "widthValues"}], "name": "width."}, {"children": [{"children": [{"value": 150, "name": "Reset"}], "name": "(*NopResetter)."}, {"value": 279, "name": "Bytes"}, {"value": 16, "name": "ErrEndOfSpan"}, {"value": 16, "name": "ErrShortDst"}, {"value": 16, "name": "ErrShortSrc"}, {"children": [{"value": 1, "name": "Reset"}], "name": "NopResetter."}, {"value": 3522, "name": "String"}, {"value": 834, "name": "doAppend"}, {"value": 16, "name": "errInconsistentByteCount"}, {"value": 16, "name": "errShortInternal"}, {"value": 538, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "transform."}], "name": "text/"}, {"children": [{"children": [{"value": 40, "name": "go.itab.DecodingError,error"}, {"value": 40, "name": "go.itab.InvalidIndexError,error"}, {"children": [{"value": 284, "name": "Close"}, {"value": 665, "name": "DecodeFull"}, {"children": [{"value": 97, "name": "func1"}, {"value": 300, "name": "func2"}], "name": "DecodeFull."}, {"value": 14, "name": "EmitEnabled"}, {"value": 13, "name": "SetAllowedMaxDynamicTableSize"}, {"value": 14, "name": "SetEmitEnabled"}, {"value": 97, "name": "SetEmitFunc"}, {"value": 70, "name": "SetMaxDynamicTableSize"}, {"value": 15, "name": "SetMaxStringLength"}, {"value": 759, "name": "Write"}, {"value": 196, "name": "callEmit"}, {"value": 518, "name": "parseDynamicTableSizeUpdate"}, {"value": 981, "name": "parseFieldIndexed"}, {"value": 1389, "name": "parseFieldLiteral"}, {"value": 543, "name": "parseHeaderFieldRepr"}, {"value": 1649, "name": "readString"}], "name": "(*Decoder)."}, {"children": [{"value": 195, "name": "Error"}], "name": "(*DecodingError)."}, {"children": [{"value": 93, "name": "SetMaxDynamicTableSize"}, {"value": 84, "name": "SetMaxDynamicTableSizeLimit"}, {"value": 1293, "name": "WriteField"}, {"value": 624, "name": "searchTable"}], "name": "(*Encoder)."}, {"children": [{"value": 221, "name": "IsPseudo"}, {"value": 209, "name": "Size"}, {"value": 214, "name": "String"}], "name": "(*HeaderField)."}, {"children": [{"value": 186, "name": "Error"}], "name": "(*InvalidIndexError)."}, {"children": [{"value": 407, "name": "add"}, {"value": 488, "name": "evict"}, {"value": 473, "name": "search"}, {"value": 67, "name": "setMaxSize"}], "name": "(*dynamicTable)."}, {"value": 363, "name": "AppendHuffmanString"}, {"children": [{"value": 173, "name": "Error"}], "name": "DecodingError."}, {"value": 16, "name": "ErrInvalidHuffman"}, {"value": 16, "name": "ErrStringLength"}, {"children": [{"value": 32, "name": "IsPseudo"}, {"value": 20, "name": "Size"}, {"value": 362, "name": "String"}], "name": "HeaderField."}, {"value": 64, "name": "HuffmanEncodeLength"}, {"children": [{"value": 200, "name": "Error"}], "name": "InvalidIndexError."}, {"value": 164, "name": "NewDecoder"}, {"value": 182, "name": "NewEncoder"}, {"value": 766, "name": "addDecoderNode"}, {"value": 367, "name": "appendByteToHuffmanCode"}, {"value": 479, "name": "appendHpackString"}, {"value": 163, "name": "appendIndexed"}, {"value": 304, "name": "appendIndexedName"}, {"value": 351, "name": "appendNewName"}, {"value": 164, "name": "appendTableSize"}, {"value": 596, "name": "appendVarInt"}, {"value": 24, "name": "bufPool"}, {"value": 119, "name": "constantTimeStringCompare"}, {"value": 16, "name": "errNeedMore"}, {"value": 16, "name": "errVarintOverflow"}, {"children": [{"value": 84, "name": "func1"}], "name": "glob."}, {"value": 256, "name": "huffmanCodeLen"}, {"value": 1024, "name": "huffmanCodes"}, {"value": 851, "name": "huffmanDecode"}, {"value": 12596, "name": "init"}, {"children": [{"value": 206, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 239, "name": "newInternalNode"}, {"value": 190, "name": "pair"}, {"value": 723, "name": "readVarInt"}, {"value": 8, "name": "rootHuffmanNode"}, {"value": 2440, "name": "staticTable"}], "name": "http2/hpack."}, {"children": [{"value": 651, "name": "ToASCII"}, {"value": 208, "name": "adapt"}, {"value": 46, "name": "ascii"}, {"value": 2259, "name": "encode"}, {"value": 167, "name": "encodeDigit"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "idna."}, {"children": [{"value": 170, "name": "HeaderValuesContainsToken"}, {"value": 454, "name": "PunycodeHostPort"}, {"value": 218, "name": "ValidHeaderFieldName"}, {"value": 87, "name": "ValidHeaderFieldValue"}, {"value": 56, "name": "ValidHostHeader"}, {"value": 386, "name": "headerValueContainsToken"}, {"value": 101, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 46, "name": "isASCII"}, {"value": 127, "name": "isTokenTable"}, {"value": 284, "name": "tokenEqual"}, {"value": 166, "name": "trimOWS"}, {"value": 256, "name": "validHostByte"}], "name": "lex/httplex."}], "name": "net/"}], "name": "vendor/golang_org/x/"}, {"children": [{"children": [{"value": 64, "name": "go.itab.boolVal,go/constant.Value"}, {"value": 64, "name": "go.itab.complexVal,go/constant.Value"}, {"value": 64, "name": "go.itab.floatVal,go/constant.Value"}, {"value": 64, "name": "go.itab.int64Val,go/constant.Value"}, {"value": 64, "name": "go.itab.intVal,go/constant.Value"}, {"value": 64, "name": "go.itab.ratVal,go/constant.Value"}, {"value": 64, "name": "go.itab.stringVal,go/constant.Value"}, {"value": 64, "name": "go.itab.unknownVal,go/constant.Value"}, {"children": [{"value": 201, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 201, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*boolVal)."}, {"children": [{"value": 213, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 213, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*complexVal)."}, {"children": [{"value": 186, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 186, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*floatVal)."}, {"children": [{"value": 186, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 186, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*int64Val)."}, {"children": [{"value": 186, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 186, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*intVal)."}, {"children": [{"value": 186, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 186, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*ratVal)."}, {"children": [{"value": 195, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 195, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*stringVal)."}, {"children": [{"value": 175, "name": "ExactString"}, {"value": 163, "name": "Kind"}, {"value": 175, "name": "String"}, {"value": 150, "name": "implementsValue"}], "name": "(*unknownVal)."}, {"value": 5936, "name": "BinaryOp"}, {"value": 2674, "name": "Compare"}, {"value": 894, "name": "Float64Val"}, {"value": 565, "name": "Int64Val"}, {"value": 1467, "name": "MakeFromLiteral"}, {"value": 196, "name": "MakeUint64"}, {"value": 1335, "name": "Shift"}, {"value": 1112, "name": "Sign"}, {"value": 750, "name": "ToFloat"}, {"value": 1310, "name": "ToInt"}, {"value": 3844, "name": "UnaryOp"}, {"value": 119, "name": "add"}, {"children": [{"value": 50, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 50, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "boolVal."}, {"value": 587, "name": "cmpZero"}, {"children": [{"value": 358, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 229, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "complexVal."}, {"children": [{"value": 94, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 1040, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "floatVal."}, {"value": 8, "name": "floatVal0"}, {"value": 84, "name": "i64tof"}, {"value": 96, "name": "i64toi"}, {"value": 96, "name": "i64tor"}, {"value": 306, "name": "init"}, {"value": 1, "name": "initdone."}, {"children": [{"value": 80, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 89, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "int64Val."}, {"children": [{"value": 80, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 80, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "intVal."}, {"value": 84, "name": "itof"}, {"value": 126, "name": "makeFloat"}, {"value": 276, "name": "makeFloatFromLiteral"}, {"value": 243, "name": "makeInt"}, {"value": 604, "name": "makeRat"}, {"value": 4970, "name": "match"}, {"value": 8, "name": "maxInt64"}, {"value": 8, "name": "minInt64"}, {"value": 119, "name": "mul"}, {"value": 95, "name": "newFloat"}, {"value": 448, "name": "ord"}, {"value": 119, "name": "quo"}, {"children": [{"value": 152, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 94, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "ratVal."}, {"value": 465, "name": "rtof"}, {"value": 117, "name": "smallRat"}, {"children": [{"value": 90, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 346, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "stringVal."}, {"value": 119, "name": "sub"}, {"children": [{"value": 22, "name": "ExactString"}, {"value": 10, "name": "Kind"}, {"value": 22, "name": "String"}, {"value": 1, "name": "implementsValue"}], "name": "unknownVal."}], "name": "constant."}, {"children": [{"children": [{"value": 172, "name": "IsKeyword"}, {"value": 172, "name": "IsLiteral"}, {"value": 172, "name": "IsOperator"}, {"value": 307, "name": "Precedence"}, {"value": 186, "name": "String"}], "name": "(*Token)."}, {"children": [{"value": 21, "name": "IsKeyword"}, {"value": 21, "name": "IsLiteral"}, {"value": 21, "name": "IsOperator"}, {"value": 161, "name": "Precedence"}, {"value": 214, "name": "String"}], "name": "Token."}, {"value": 111, "name": "init"}, {"children": [{"value": 234, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 8, "name": "keywords"}, {"value": 1376, "name": "tokens"}], "name": "token."}], "name": "go/"}, {"children": [{"value": 40, "name": "go.itab.devNull,io.Writer"}, {"value": 48, "name": "go.itab.nopCloser,io.ReadCloser"}, {"children": [{"value": 216, "name": "ReadFrom"}, {"value": 182, "name": "Write"}, {"value": 182, "name": "WriteString"}], "name": "(*devNull)."}, {"children": [{"value": 172, "name": "Close"}, {"value": 157, "name": "Read"}], "name": "(*nopCloser)."}, {"value": 16, "name": "Discard"}, {"value": 133, "name": "NopCloser"}, {"value": 135, "name": "ReadAll"}, {"value": 596, "name": "ReadDir"}, {"children": [{"value": 235, "name": "func1"}], "name": "ReadDir."}, {"value": 438, "name": "ReadFile"}, {"value": 815, "name": "TempDir"}, {"value": 614, "name": "TempFile"}, {"value": 313, "name": "WriteFile"}, {"value": 24, "name": "blackHolePool"}, {"children": [{"value": 438, "name": "ReadFrom"}, {"value": 29, "name": "Write"}, {"value": 29, "name": "WriteString"}], "name": "devNull."}, {"children": [{"value": 192, "name": "func1"}], "name": "glob."}, {"value": 126, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 240, "name": "nextSuffix"}, {"children": [{"value": 19, "name": "Close"}, {"value": 158, "name": "Read"}], "name": "nopCloser."}, {"value": 4, "name": "rand"}, {"value": 8, "name": "randmu"}, {"value": 496, "name": "readAll"}, {"children": [{"value": 303, "name": "func1"}], "name": "readAll."}, {"value": 122, "name": "reseed"}, {"value": 8, "name": "statictmp_62"}], "name": "io/ioutil."}, {"children": [{"value": 40, "name": "go.itab.errorString,error"}, {"children": [{"value": 48, "name": "Stack"}], "name": "(*BlockProfileRecord)."}, {"children": [{"value": 1176, "name": "Next"}, {"value": 1137, "name": "cgoNext"}], "name": "(*Frames)."}, {"children": [{"value": 14, "name": "Entry"}, {"value": 105, "name": "FileLine"}, {"value": 80, "name": "Name"}], "name": "(*Func)."}, {"children": [{"value": 21, "name": "InUseBytes"}, {"value": 22, "name": "InUseObjects"}, {"value": 250, "name": "Stack"}], "name": "(*MemProfileRecord)."}, {"children": [{"value": 238, "name": "Stack"}], "name": "(*StackRecord)."}, {"children": [{"value": 627, "name": "Error"}, {"value": 1, "name": "RuntimeError"}], "name": "(*TypeAssertionError)."}, {"children": [{"value": 198, "name": "name"}, {"value": 78, "name": "nameOff"}, {"value": 178, "name": "string"}, {"value": 884, "name": "textOff"}, {"value": 78, "name": "typeOff"}, {"value": 172, "name": "uncommon"}], "name": "(*_type)."}, {"children": [{"value": 108, "name": "bp"}, {"value": 102, "name": "mp"}], "name": "(*bucket)."}, {"children": [{"value": 68, "name": "(runtime.flushlog)-fm"}, {"value": 126, "name": "add"}, {"value": 80, "name": "addNonGo"}, {"children": [{"value": 6, "name": "func1"}], "name": "addNonGo."}, {"value": 519, "name": "addWithFlushlog"}, {"value": 423, "name": "evict"}, {"value": 283, "name": "flushlog"}, {"value": 1558, "name": "getprofile"}], "name": "(*cpuProfile)."}, {"children": [{"value": 225, "name": "Error"}, {"value": 150, "name": "RuntimeError"}], "name": "(*errorString)."}, {"children": [{"value": 453, "name": "alloc"}], "name": "(*fixalloc)."}, {"children": [{"value": 1201, "name": "endCycle"}, {"value": 396, "name": "enlistWorker"}, {"value": 495, "name": "findRunnableGCWorker"}, {"children": [{"value": 57, "name": "func1"}], "name": "findRunnableGCWorker."}, {"value": 991, "name": "startCycle"}], "name": "(*gcControllerState)."}, {"children": [{"value": 237, "name": "block"}, {"value": 22, "name": "numBlocks"}, {"value": 134, "name": "pop"}, {"value": 460, "name": "push"}], "name": "(*gcSweepBuf)."}, {"children": [{"value": 189, "name": "balance"}, {"value": 218, "name": "dispose"}, {"value": 242, "name": "get"}, {"value": 97, "name": "init"}, {"value": 267, "name": "put"}, {"value": 242, "name": "tryGet"}], "name": "(*gcWork)."}, {"children": [{"value": 28, "name": "cas"}], "name": "(*guintptr)."}, {"children": [{"value": 138, "name": "incrnoverflow"}, {"value": 556, "name": "setoverflow"}], "name": "(*hmap)."}, {"children": [{"value": 21, "name": "init"}, {"value": 286, "name": "insert"}, {"value": 288, "name": "insertBack"}, {"value": 308, "name": "remove"}], "name": "(*mSpanList)."}, {"children": [{"value": 640, "name": "nextFree"}, {"children": [{"value": 67, "name": "func1"}], "name": "nextFree."}, {"value": 334, "name": "refill"}, {"value": 182, "name": "releaseAll"}], "name": "(*mcache)."}, {"children": [{"value": 1132, "name": "cacheSpan"}, {"value": 388, "name": "freeSpan"}, {"value": 293, "name": "grow"}, {"value": 272, "name": "uncacheSpan"}], "name": "(*mcentral)."}, {"children": [{"value": 257, "name": "alloc"}, {"children": [{"value": 105, "name": "func1"}], "name": "alloc."}, {"value": 97, "name": "allocLarge"}, {"value": 1205, "name": "allocSpanLocked"}, {"value": 227, "name": "allocStack"}, {"value": 824, "name": "alloc_m"}, {"value": 109, "name": "freeSpan"}, {"children": [{"value": 391, "name": "func1"}], "name": "freeSpan."}, {"value": 1382, "name": "freeSpanLocked"}, {"value": 207, "name": "freeStack"}, {"value": 779, "name": "grow"}, {"value": 1648, "name": "init"}, {"value": 209, "name": "mapBits"}, {"value": 222, "name": "mapSpans"}, {"value": 443, "name": "reclaim"}, {"value": 335, "name": "reclaimList"}, {"value": 756, "name": "scavenge"}, {"value": 1403, "name": "sysAlloc"}], "name": "(*mheap)."}, {"children": [{"value": 143, "name": "countFree"}, {"value": 223, "name": "ensureSwept"}, {"value": 381, "name": "nextFreeIndex"}, {"value": 32, "name": "refillAllocCache"}, {"value": 2646, "name": "sweep"}], "name": "(*mspan)."}, {"children": [{"value": 186, "name": "name"}], "name": "(*name)."}, {"children": [{"value": 171, "name": "Error"}, {"value": 150, "name": "RuntimeError"}], "name": "(*plainError)."}, {"children": [{"value": 214, "name": "alloc"}, {"value": 94, "name": "free"}], "name": "(*pollCache)."}, {"children": [{"value": 316, "name": "reset"}], "name": "(*randomOrder)."}, {"children": [{"value": 302, "name": "preparePanic"}], "name": "(*sigctxt)."}, {"children": [{"value": 279, "name": "alloc"}, {"value": 108, "name": "drop"}], "name": "(*traceAlloc)."}, {"children": [{"value": 122, "name": "varint"}], "name": "(*traceBuf)."}, {"children": [{"value": 1410, "name": "dump"}, {"value": 182, "name": "find"}, {"value": 94, "name": "newStack"}, {"value": 507, "name": "put"}], "name": "(*traceStackTable)."}, {"children": [{"value": 420, "name": "dequeue"}], "name": "(*waitq)."}, {"children": [{"value": 87, "name": "checkempty"}, {"value": 87, "name": "checknonempty"}], "name": "(*workbuf)."}, {"children": [{"value": 16, "name": "4"}, {"value": 13, "name": "5"}, {"value": 42, "name": "6"}], "name": ".gobytes."}, {"value": 474, "name": "BlockProfile"}, {"value": 92, "name": "CPUProfile"}, {"value": 485, "name": "Caller"}, {"value": 124, "name": "Callers"}, {"value": 70, "name": "FuncForPC"}, {"value": 64, "name": "GC"}, {"value": 215, "name": "GOMAXPROCS"}, {"value": 127, "name": "GOROOT"}, {"value": 860, "name": "GoroutineProfile"}, {"children": [{"value": 224, "name": "func1"}, {"value": 105, "name": "func2"}], "name": "GoroutineProfile."}, {"value": 40, "name": "Gosched"}, {"value": 573, "name": "MemProfile"}, {"value": 8, "name": "MemProfileRate"}, {"value": 452, "name": "MutexProfile"}, {"value": 13, "name": "NumCPU"}, {"value": 45, "name": "NumCgoCall"}, {"value": 60, "name": "NumGoroutine"}, {"value": 121, "name": "ReadMemStats"}, {"children": [{"value": 59, "name": "func1"}], "name": "ReadMemStats."}, {"value": 1680, "name": "ReadTrace"}, {"value": 151, "name": "SetBlockProfileRate"}, {"value": 777, "name": "SetCPUProfileRate"}, {"value": 513, "name": "SetCgoTraceback"}, {"value": 2061, "name": "SetFinalizer"}, {"children": [{"value": 63, "name": "func1"}, {"value": 142, "name": "func2"}], "name": "SetFinalizer."}, {"value": 46, "name": "SetMutexProfileFraction"}, {"value": 329, "name": "Stack"}, {"children": [{"value": 437, "name": "func1"}], "name": "Stack."}, {"value": 1548, "name": "StartTrace"}, {"value": 854, "name": "StopTrace"}, {"value": 158, "name": "ThreadCreateProfile"}, {"value": 185, "name": "UnlockOSThread"}, {"value": 22, "name": "Version"}, {"value": 48, "name": "_ExternalCode"}, {"value": 48, "name": "_GC"}, {"value": 48, "name": "_System"}, {"value": 8, "name": "__vdso_clock_gettime_sym"}, {"value": 8, "name": "__vdso_gettimeofday_sym"}, {"value": 8, "name": "__vdso_time_sym"}, {"value": 122, "name": "_cgo_panic_internal"}, {"value": 8, "name": "_cgo_setenv"}, {"value": 8, "name": "_cgo_unsetenv"}, {"value": 1088, "name": "acquireSudog"}, {"value": 107, "name": "acquirep"}, {"value": 409, "name": "acquirep1"}, {"value": 67, "name": "activeModules"}, {"value": 700, "name": "addfinalizer"}, {"value": 1761, "name": "additab"}, {"value": 176, "name": "addrspace_free"}, {"value": 1, "name": "addrspace_vec"}, {"value": 591, "name": "addspecial"}, {"value": 92, "name": "addtimer"}, {"value": 460, "name": "addtimerLocked"}, {"value": 99, "name": "adjustctxt"}, {"value": 231, "name": "adjustdefers"}, {"value": 2066, "name": "adjustframe"}, {"value": 601, "name": "adjustpointers"}, {"value": 134, "name": "adjuststkbar"}, {"value": 108, "name": "adjustsudogs"}, {"value": 20, "name": "aeshash"}, {"value": 51, "name": "aeshash32"}, {"value": 52, "name": "aeshash64"}, {"value": 1356, "name": "aeshashbody"}, {"value": 22, "name": "aeshashstr"}, {"value": 128, "name": "aeskeysched"}, {"value": 128, "name": "afterfork"}, {"value": 224, "name": "algarray"}, {"value": 418, "name": "alginit"}, {"value": 8, "name": "allfin"}, {"value": 608, "name": "allgadd"}, {"value": 8, "name": "allglen"}, {"value": 8, "name": "allglock"}, {"value": 24, "name": "allgs"}, {"value": 8, "name": "allm"}, {"value": 518, "name": "allocm"}, {"value": 167, "name": "allocmcache"}, {"value": 2056, "name": "allp"}, {"value": 223, "name": "archauxv"}, {"value": 4, "name": "argc"}, {"value": 128, "name": "args"}, {"value": 24, "name": "argslice"}, {"value": 8, "name": "argv"}, {"value": 186, "name": "asmcgocall"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "asmcgocall."}, {"value": 1, "name": "asminit"}, {"value": 424, "name": "assertE2I"}, {"value": 183, "name": "assertE2I2"}, {"value": 461, "name": "assertI2I"}, {"value": 197, "name": "assertI2I2"}, {"value": 294, "name": "atoi"}, {"value": 119, "name": "atoi32"}, {"value": 64, "name": "atomicstorep"}, {"value": 41, "name": "badctxt"}, {"value": 63, "name": "badmcall"}, {"value": 63, "name": "badmcall2"}, {"value": 60, "name": "badmorestackg0"}, {"value": 16, "name": "badmorestackg0Msg"}, {"value": 60, "name": "badmorestackgsignal"}, {"value": 16, "name": "badmorestackgsignalMsg"}, {"value": 109, "name": "badreflectcall"}, {"value": 85, "name": "badsignal"}, {"value": 63, "name": "badsystemstack"}, {"value": 63, "name": "badunlockosthread"}, {"value": 8, "name": "bbuckets"}, {"value": 133, "name": "beforefork"}, {"value": 100, "name": "bestFit"}, {"value": 361, "name": "bgsweep"}, {"value": 8, "name": "bgsweepPC"}, {"value": 103, "name": "block"}, {"value": 139, "name": "blockevent"}, {"value": 8, "name": "blockprofilerate"}, {"value": 139, "name": "blocksampled"}, {"value": 8, "name": "bucketmem"}, {"value": 8, "name": "buckhash"}, {"value": 16, "name": "buildVersion"}, {"value": 264, "name": "bulkBarrierBitmap"}, {"value": 940, "name": "bulkBarrierPreWrite"}, {"children": [{"value": 68, "name": "func1"}], "name": "bulkBarrierPreWrite."}, {"value": 59, "name": "c128equal"}, {"value": 112, "name": "c128hash"}, {"value": 57, "name": "c64equal"}, {"value": 112, "name": "c64hash"}, {"value": 135, "name": "cachestats"}, {"value": 178, "name": "call1024"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call1024."}, {"value": 200, "name": "call1048576"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call1048576."}, {"value": 200, "name": "call1073741824"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call1073741824."}, {"value": 175, "name": "call128"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call128."}, {"value": 200, "name": "call131072"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call131072."}, {"value": 200, "name": "call134217728"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call134217728."}, {"value": 200, "name": "call16384"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call16384."}, {"value": 200, "name": "call16777216"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call16777216."}, {"value": 178, "name": "call2048"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call2048."}, {"value": 200, "name": "call2097152"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call2097152."}, {"value": 178, "name": "call256"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call256."}, {"value": 200, "name": "call262144"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call262144."}, {"value": 200, "name": "call268435456"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call268435456."}, {"value": 124, "name": "call32"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call32."}, {"value": 200, "name": "call32768"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call32768."}, {"value": 200, "name": "call33554432"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call33554432."}, {"value": 200, "name": "call4096"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call4096."}, {"value": 200, "name": "call4194304"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call4194304."}, {"value": 178, "name": "call512"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call512."}, {"value": 200, "name": "call524288"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call524288."}, {"value": 200, "name": "call536870912"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call536870912."}, {"value": 124, "name": "call64"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call64."}, {"value": 200, "name": "call65536"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call65536."}, {"value": 200, "name": "call67108864"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call67108864."}, {"value": 200, "name": "call8192"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call8192."}, {"value": 200, "name": "call8388608"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "call8388608."}, {"value": 81, "name": "callCgoMmap"}, {"value": 62, "name": "callCgoSigaction"}, {"value": 126, "name": "callCgoSymbolizer"}, {"value": 252, "name": "callers"}, {"children": [{"value": 184, "name": "func1"}], "name": "callers."}, {"value": 210, "name": "canpanic"}, {"value": 45, "name": "cansemacquire"}, {"value": 517, "name": "casfrom_Gscanstatus"}, {"value": 722, "name": "casgstatus"}, {"children": [{"value": 199, "name": "func1"}, {"value": 63, "name": "func2"}, {"value": 59, "name": "func3"}], "name": "casgstatus."}, {"value": 78, "name": "casp"}, {"value": 259, "name": "castogscanstatus"}, {"value": 167, "name": "cfuncname"}, {"value": 1, "name": "cgoAlwaysFalse"}, {"value": 2265, "name": "cgoCheckArg"}, {"value": 250, "name": "cgoCheckBits"}, {"children": [{"value": 63, "name": "func1"}], "name": "cgoCheckBits."}, {"value": 158, "name": "cgoCheckMemmove"}, {"value": 432, "name": "cgoCheckPointer"}, {"value": 133, "name": "cgoCheckResult"}, {"value": 214, "name": "cgoCheckSliceCopy"}, {"value": 830, "name": "cgoCheckTypedBlock"}, {"children": [{"value": 86, "name": "func1"}, {"value": 63, "name": "func2"}], "name": "cgoCheckTypedBlock."}, {"value": 916, "name": "cgoCheckUnknownPointer"}, {"value": 598, "name": "cgoCheckUsingType"}, {"value": 212, "name": "cgoCheckWriteBarrier"}, {"children": [{"value": 196, "name": "func1"}], "name": "cgoCheckWriteBarrier."}, {"value": 8, "name": "cgoContext"}, {"value": 226, "name": "cgoContextPCs"}, {"value": 1, "name": "cgoHasExtraM"}, {"value": 380, "name": "cgoIsGoPointer"}, {"value": 184, "name": "cgoSigtramp"}, {"value": 8, "name": "cgoSymbolizer"}, {"value": 8, "name": "cgoTraceback"}, {"value": 63, "name": "cgoUse"}, {"value": 409, "name": "cgocall"}, {"value": 72, "name": "cgocallback"}, {"value": 264, "name": "cgocallback_gofunc"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "cgocallback_gofunc."}, {"value": 8, "name": "cgocallback_gofuncPC"}, {"value": 270, "name": "cgocallbackg"}, {"value": 633, "name": "cgocallbackg1"}, {"children": [{"value": 32, "name": "func1"}], "name": "cgocallbackg1."}, {"value": 2457, "name": "chanrecv"}, {"children": [{"value": 65, "name": "func1"}], "name": "chanrecv."}, {"value": 63, "name": "chanrecv1"}, {"value": 72, "name": "chanrecv2"}, {"value": 8, "name": "chanrecvpc"}, {"value": 2451, "name": "chansend"}, {"children": [{"value": 65, "name": "func1"}], "name": "chansend."}, {"value": 87, "name": "chansend1"}, {"value": 8, "name": "chansendpc"}, {"value": 1318, "name": "check"}, {"value": 29, "name": "checkASM"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "checkASM."}, {"value": 1200, "name": "checkdead"}, {"value": 176, "name": "checkmcount"}, {"value": 67, "name": "class_to_allocnpages"}, {"value": 402, "name": "class_to_divmagic"}, {"value": 134, "name": "class_to_size"}, {"value": 250, "name": "clearCheckmarks"}, {"value": 479, "name": "clearpools"}, {"value": 117, "name": "clone"}, {"value": 847, "name": "closechan"}, {"value": 29, "name": "closefd"}, {"value": 26, "name": "closeonexec"}, {"value": 572, "name": "cmpbody"}, {"value": 30, "name": "cmpstring"}, {"value": 108, "name": "concatstring2"}, {"value": 111, "name": "concatstring3"}, {"value": 114, "name": "concatstring4"}, {"value": 114, "name": "concatstring5"}, {"value": 697, "name": "concatstrings"}, {"value": 105, "name": "contains"}, {"value": 172, "name": "convI2I"}, {"value": 162, "name": "convT2E"}, {"value": 171, "name": "convT2I"}, {"value": 1165, "name": "copystack"}, {"value": 4, "name": "cpuid_ebx7"}, {"value": 4, "name": "cpuid_ecx"}, {"value": 4, "name": "cpuid_edx"}, {"value": 27, "name": "cpuid_low"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "cpuid_low."}, {"value": 8, "name": "cpuprof"}, {"value": 8, "name": "cpuprofLock"}, {"value": 32, "name": "cputicks"}, {"value": 58, "name": "crash"}, {"value": 4, "name": "crashing"}, {"value": 107, "name": "createfing"}, {"value": 24, "name": "dbgvars"}, {"value": 8, "name": "deadlock"}, {"value": 68, "name": "debug"}, {"value": 8, "name": "debuglock"}, {"value": 458, "name": "decoderune"}, {"value": 232, "name": "deductSweepCredit"}, {"value": 8, "name": "deferType"}, {"value": 344, "name": "deferproc"}, {"value": 357, "name": "deferreturn"}, {"value": 463, "name": "deltimer"}, {"value": 337, "name": "dequeueRescan"}, {"value": 1, "name": "didothers"}, {"value": 96, "name": "dieFromSignal"}, {"value": 8, "name": "disableSigChan"}, {"value": 16, "name": "divideError"}, {"value": 116, "name": "dopanic"}, {"children": [{"value": 77, "name": "func1"}], "name": "dopanic."}, {"value": 903, "name": "dopanic_m"}, {"value": 166, "name": "dropm"}, {"value": 897, "name": "duffcopy"}, {"value": 305, "name": "duffzero"}, {"value": 451, "name": "dumpgstatus"}, {"value": 2266, "name": "dumpregs"}, {"value": 24, "name": "earlycgocallback"}, {"value": 343, "name": "efaceeq"}, {"value": 152, "name": "emptymspan"}, {"value": 8, "name": "enableSigChan"}, {"value": 325, "name": "encoderune"}, {"value": 25, "name": "endcgo"}, {"value": 320, "name": "ensureSigM"}, {"children": [{"value": 827, "name": "func1"}], "name": "ensureSigM."}, {"value": 62, "name": "entersyscall"}, {"value": 234, "name": "entersyscall_gcwait"}, {"value": 117, "name": "entersyscall_sysmon"}, {"value": 512, "name": "entersyscallblock"}, {"children": [{"value": 348, "name": "func1"}, {"value": 348, "name": "func2"}], "name": "entersyscallblock."}, {"value": 111, "name": "entersyscallblock_handoff"}, {"value": 24, "name": "envs"}, {"value": 24, "name": "eod"}, {"value": 4, "name": "epfd"}, {"value": 16, "name": "epollcreate"}, {"value": 16, "name": "epollcreate1"}, {"value": 29, "name": "epollctl"}, {"value": 30, "name": "epollwait"}, {"value": 122, "name": "eqslice"}, {"value": 36, "name": "eqstring"}, {"children": [{"value": 120, "name": "Error"}, {"value": 1, "name": "RuntimeError"}], "name": "errorString."}, {"value": 2733, "name": "evacuate"}, {"value": 406, "name": "execute"}, {"value": 12, "name": "exit"}, {"value": 620, "name": "exitsyscall"}, {"children": [{"value": 63, "name": "func1"}], "name": "exitsyscall."}, {"value": 455, "name": "exitsyscall0"}, {"value": 306, "name": "exitsyscallfast"}, {"children": [{"value": 168, "name": "func1"}], "name": "exitsyscallfast."}, {"value": 191, "name": "exitsyscallfast_pidle"}, {"value": 182, "name": "exitsyscallfast_reacquired"}, {"children": [{"value": 83, "name": "func1"}], "name": "exitsyscallfast_reacquired."}, {"value": 263, "name": "extendRandom"}, {"value": 8, "name": "externalthreadhandlerp"}, {"value": 4, "name": "extraMWaiters"}, {"value": 8, "name": "extram"}, {"value": 34, "name": "f32equal"}, {"value": 224, "name": "f32hash"}, {"value": 35, "name": "f64equal"}, {"value": 226, "name": "f64hash"}, {"value": 8, "name": "faketime"}, {"value": 264, "name": "fastlog2Table"}, {"value": 43, "name": "fastrand"}, {"value": 4, "name": "featureFlags"}, {"value": 5, "name": "finalizer1"}, {"value": 8, "name": "finc"}, {"value": 350, "name": "findObject"}, {"value": 376, "name": "findfunc"}, {"value": 77140, "name": "findfunctab"}, {"value": 63, "name": "findmoduledatap"}, {"value": 76, "name": "findnull"}, {"value": 2482, "name": "findrunnable"}, {"value": 107, "name": "findsghi"}, {"value": 8, "name": "fing"}, {"value": 4, "name": "fingCreate"}, {"value": 1, "name": "fingRunning"}, {"value": 1, "name": "fingwait"}, {"value": 1, "name": "fingwake"}, {"value": 82, "name": "finishsweep_m"}, {"value": 8, "name": "finlock"}, {"value": 64, "name": "finptrmask"}, {"value": 8, "name": "finq"}, {"value": 8, "name": "firstStackBarrierOffset"}, {"value": 440, "name": "firstmoduledata"}, {"value": 16, "name": "floatError"}, {"value": 99, "name": "flushallmcaches"}, {"value": 142, "name": "flushmcache"}, {"value": 426, "name": "fmtNSAsMS"}, {"value": 1065, "name": "forEachP"}, {"value": 24, "name": "forcegc"}, {"value": 293, "name": "forcegchelper"}, {"value": 8, "name": "forcegchelperPC"}, {"value": 8, "name": "forcegcperiod"}, {"value": 1, "name": "framepointer_enabled"}, {"value": 446, "name": "freeStackSpans"}, {"value": 631, "name": "freedefer"}, {"children": [{"value": 533, "name": "func1"}], "name": "freedefer."}, {"value": 63, "name": "freedeferfn"}, {"value": 63, "name": "freedeferpanic"}, {"value": 91, "name": "freemcache"}, {"children": [{"value": 190, "name": "func1"}], "name": "freemcache."}, {"value": 363, "name": "freespecial"}, {"value": 177, "name": "freezetheworld"}, {"value": 4, "name": "freezing"}, {"value": 32, "name": "funcPC"}, {"value": 237, "name": "funcdata"}, {"value": 103, "name": "funcline"}, {"value": 390, "name": "funcline1"}, {"value": 94, "name": "funcname"}, {"value": 428, "name": "funcspdelta"}, {"value": 40, "name": "futex"}, {"value": 225, "name": "futexsleep"}, {"value": 160, "name": "futexwakeup"}, {"children": [{"value": 184, "name": "func1"}], "name": "futexwakeup."}, {"value": 520, "name": "fwdSig"}, {"value": 400, "name": "g0"}, {"value": 144, "name": "gStatusStrings"}, {"value": 570, "name": "gcAssistAlloc"}, {"children": [{"value": 68, "name": "func1"}], "name": "gcAssistAlloc."}, {"value": 1053, "name": "gcAssistAlloc1"}, {"value": 219, "name": "gcBgMarkStartWorkers"}, {"value": 1380, "name": "gcBgMarkWorker"}, {"children": [{"value": 200, "name": "func1"}, {"value": 262, "name": "func2"}], "name": "gcBgMarkWorker."}, {"value": 8, "name": "gcBgMarkWorkerPC"}, {"value": 40, "name": "gcBitsArenas"}, {"value": 4, "name": "gcBlackenEnabled"}, {"value": 1, "name": "gcBlackenPromptly"}, {"value": 232, "name": "gcController"}, {"value": 997, "name": "gcDrain"}, {"value": 525, "name": "gcDrainN"}, {"value": 1385, "name": "gcDumpObject"}, {"value": 469, "name": "gcFlushBgCredit"}, {"value": 188, "name": "gcInstallStackBarrier"}, {"value": 64, "name": "gcLockStackBarriers"}, {"value": 1491, "name": "gcMark"}, {"value": 555, "name": "gcMarkDone"}, {"children": [{"value": 62, "name": "func1"}, {"children": [{"value": 68, "name": "1"}], "name": "func1."}], "name": "gcMarkDone."}, {"value": 781, "name": "gcMarkRootCheck"}, {"value": 610, "name": "gcMarkRootPrepare"}, {"children": [{"value": 21, "name": "func1"}], "name": "gcMarkRootPrepare."}, {"value": 3154, "name": "gcMarkTermination"}, {"children": [{"value": 62, "name": "func1"}, {"value": 257, "name": "func2"}], "name": "gcMarkTermination."}, {"value": 313, "name": "gcMarkTinyAllocs"}, {"value": 124, "name": "gcMarkWorkAvailable"}, {"value": 48, "name": "gcMarkWorkerModeStrings"}, {"value": 107, "name": "gcMaxStackBarriers"}, {"value": 372, "name": "gcParkAssist"}, {"value": 692, "name": "gcPrintStkbars"}, {"value": 505, "name": "gcRemoveStackBarrier"}, {"value": 242, "name": "gcRemoveStackBarriers"}, {"value": 250, "name": "gcResetMarkState"}, {"value": 1183, "name": "gcStart"}, {"children": [{"value": 48, "name": "func1"}], "name": "gcStart."}, {"value": 590, "name": "gcSweep"}, {"value": 115, "name": "gcTryLockStackBarriers"}, {"value": 255, "name": "gcTryRemoveAllStackBarriers"}, {"value": 68, "name": "gcUnlockStackBarriers"}, {"value": 155, "name": "gcUnwindBarriers"}, {"value": 134, "name": "gcWakeAllAssists"}, {"value": 179, "name": "gcallers"}, {"value": 1622, "name": "gcbss"}, {"value": 31, "name": "gcd"}, {"value": 2458, "name": "gcdata"}, {"value": 159, "name": "gcenable"}, {"value": 294, "name": "gchelper"}, {"value": 135, "name": "gchelperstart"}, {"value": 283, "name": "gcinit"}, {"value": 223, "name": "gcmarknewobject"}, {"value": 249, "name": "gcmarkwb_m"}, {"value": 114, "name": "gcount"}, {"value": 4, "name": "gcpercent"}, {"value": 4, "name": "gcphase"}, {"value": 143, "name": "gcprocs"}, {"value": 275, "name": "gcstopm"}, {"value": 6839, "name": "gentraceback"}, {"value": 474, "name": "getArgInfo"}, {"value": 331, "name": "getRandomData"}, {"value": 11, "name": "getargp"}, {"value": 56, "name": "getcallerpc"}, {"value": 167, "name": "getempty"}, {"value": 939, "name": "getfull"}, {"value": 1215, "name": "getitab"}, {"value": 287, "name": "getproccount"}, {"value": 148, "name": "getsig"}, {"value": 12, "name": "gettid"}, {"value": 615, "name": "gfget"}, {"children": [{"value": 165, "name": "func1"}], "name": "gfget."}, {"value": 373, "name": "gfpurge"}, {"value": 718, "name": "gfput"}, {"value": 24, "name": "globalAlloc"}, {"value": 324, "name": "globrunqget"}, {"value": 321, "name": "goargs"}, {"value": 268, "name": "gobytes"}, {"value": 48, "name": "goenvs"}, {"value": 361, "name": "goenvs_unix"}, {"value": 7, "name": "goexit"}, {"value": 1016, "name": "goexit0"}, {"value": 80, "name": "goexit1"}, {"value": 8, "name": "goexitPC"}, {"value": 334, "name": "gogetenv"}, {"value": 123, "name": "gogo"}, {"value": 8, "name": "gogoPC"}, {"value": 4, "name": "gomaxprocs"}, {"value": 2018, "name": "gopanic"}, {"value": 440, "name": "gopark"}, {"value": 111, "name": "goparkunlock"}, {"value": 78, "name": "gopreempt_m"}, {"value": 101, "name": "goready"}, {"children": [{"value": 73, "name": "func1"}], "name": "goready."}, {"value": 83, "name": "gorecover"}, {"value": 114, "name": "goroutineReady"}, {"value": 699, "name": "goroutineheader"}, {"value": 61, "name": "gosave"}, {"value": 344, "name": "goschedImpl"}, {"value": 78, "name": "gosched_m"}, {"value": 192, "name": "gostartcallfn"}, {"value": 210, "name": "gostring"}, {"value": 191, "name": "gostringn"}, {"value": 82, "name": "gostringnocopy"}, {"value": 110, "name": "gosweepone"}, {"children": [{"value": 72, "name": "func1"}], "name": "gosweepone."}, {"value": 104, "name": "gotraceback"}, {"value": 1241, "name": "greyobject"}, {"value": 175, "name": "growWork"}, {"value": 1451, "name": "growslice"}, {"value": 326, "name": "gwrite"}, {"value": 242, "name": "handoff"}, {"value": 640, "name": "handoffp"}, {"value": 8072, "name": "hash"}, {"value": 563, "name": "hashGrow"}, {"value": 32, "name": "hashkey"}, {"children": [{"value": 49, "name": "clearCheckmarkSpan"}, {"value": 159, "name": "initCheckmarkSpan"}, {"value": 548, "name": "initSpan"}, {"value": 68, "name": "setCheckmarked"}], "name": "heapBits."}, {"value": 1150, "name": "heapBitsForObject"}, {"value": 318, "name": "heapBitsForSpan"}, {"value": 1616, "name": "heapBitsSetType"}, {"value": 950, "name": "heapBitsSetTypeGCProg"}, {"value": 8, "name": "heapminimum"}, {"value": 369, "name": "helpgc"}, {"value": 8, "name": "ifaceLock"}, {"value": 347, "name": "ifaceeq"}, {"value": 107, "name": "incidlelocked"}, {"value": 268, "name": "index"}, {"value": 16, "name": "indexError"}, {"value": 766, "name": "indexShortStr"}, {"value": 291, "name": "indexbytebody"}, {"value": 202, "name": "init"}, {"children": [{"value": 297, "name": "1"}, {"value": 207, "name": "2"}, {"value": 125, "name": "3"}, {"value": 70, "name": "4"}, {"value": 1, "name": "5"}], "name": "init."}, {"value": 250, "name": "initCheckmarks"}, {"value": 8, "name": "initSigmask"}, {"value": 1, "name": "initdone."}, {"value": 482, "name": "initsig"}, {"value": 454, "name": "injectglist"}, {"value": 103, "name": "interequal"}, {"value": 384, "name": "interhash"}, {"value": 220, "name": "intstring"}, {"value": 1, "name": "isarchive"}, {"value": 1, "name": "iscgo"}, {"value": 1, "name": "islibrary"}, {"value": 264, "name": "itabsinit"}, {"value": 228, "name": "itoaDiv"}, {"value": 29, "name": "jmpdefer"}, {"value": 8, "name": "jmpdeferPC"}, {"value": 310, "name": "largeAlloc"}, {"value": 8, "name": "lastmoduledatap"}, {"value": 208, "name": "leaf0"}, {"value": 105, "name": "leaf1"}, {"value": 1, "name": "lfenceBeforeRdtsc"}, {"value": 63, "name": "lfstackpop"}, {"value": 367, "name": "lfstackpush"}, {"value": 24, "name": "linux26"}, {"value": 447, "name": "lock"}, {"value": 215, "name": "lockextra"}, {"value": 1, "name": "lostProfileData"}, {"value": 936, "name": "m0"}, {"value": 124, "name": "mProf_Free"}, {"value": 83, "name": "mProf_GC"}, {"value": 396, "name": "mProf_Malloc"}, {"children": [{"value": 68, "name": "func1"}], "name": "mProf_Malloc."}, {"value": 24, "name": "mSpanStateNames"}, {"value": 195, "name": "mSysStatDec"}, {"value": 185, "name": "mSysStatInc"}, {"value": 24, "name": "madvise"}, {"value": 859, "name": "main"}, {"children": [{"value": 71, "name": "func1"}, {"value": 62, "name": "func2"}], "name": "main."}, {"value": 8, "name": "mainPC"}, {"value": 8, "name": "main_init_done"}, {"value": 679, "name": "makechan"}, {"value": 1300, "name": "makemap"}, {"value": 345, "name": "makeslice"}, {"value": 197, "name": "malg"}, {"children": [{"value": 164, "name": "func1"}], "name": "malg."}, {"value": 2612, "name": "mallocgc"}, {"children": [{"value": 92, "name": "func1"}], "name": "mallocgc."}, {"value": 1406, "name": "mallocinit"}, {"value": 604, "name": "mapaccess1"}, {"value": 455, "name": "mapaccess1_fast32"}, {"value": 458, "name": "mapaccess1_fast64"}, {"value": 1268, "name": "mapaccess1_faststr"}, {"value": 619, "name": "mapaccess2"}, {"value": 470, "name": "mapaccess2_fast32"}, {"value": 473, "name": "mapaccess2_fast64"}, {"value": 1335, "name": "mapaccess2_faststr"}, {"value": 592, "name": "mapaccessK"}, {"value": 1733, "name": "mapassign"}, {"value": 824, "name": "mapdelete"}, {"value": 1457, "name": "mapiterinit"}, {"value": 2042, "name": "mapiternext"}, {"children": [{"value": 14, "name": "setMarked"}], "name": "markBits."}, {"value": 261, "name": "markBitsForAddr"}, {"value": 1159, "name": "markroot"}, {"children": [{"value": 327, "name": "func1"}], "name": "markroot."}, {"value": 163, "name": "markrootBlock"}, {"value": 353, "name": "markrootFreeGStacks"}, {"value": 630, "name": "markrootSpans"}, {"value": 8, "name": "maskUpdatedChan"}, {"value": 264, "name": "maxElems"}, {"value": 4, "name": "maxInputValue"}, {"value": 8, "name": "maxstacksize"}, {"value": 8, "name": "mbuckets"}, {"value": 101, "name": "mcall"}, {"value": 8, "name": "mcallPC"}, {"value": 454, "name": "mcommoninit"}, {"value": 84, "name": "memclrHasPointers"}, {"value": 645, "name": "memclrNoHeapPointers"}, {"value": 316, "name": "memeqbody"}, {"value": 36, "name": "memequal"}, {"value": 6, "name": "memequal0"}, {"value": 44, "name": "memequal128"}, {"value": 27, "name": "memequal16"}, {"value": 24, "name": "memequal32"}, {"value": 27, "name": "memequal64"}, {"value": 26, "name": "memequal8"}, {"value": 35, "name": "memequal_varlen"}, {"value": 890, "name": "memhash"}, {"value": 11, "name": "memhash0"}, {"value": 89, "name": "memhash128"}, {"value": 89, "name": "memhash16"}, {"value": 89, "name": "memhash32"}, {"value": 89, "name": "memhash64"}, {"value": 89, "name": "memhash8"}, {"value": 67, "name": "memhash_varlen"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "memhash_varlen."}, {"value": 1748, "name": "memmove"}, {"value": 16, "name": "memoryError"}, {"value": 5960, "name": "memstats"}, {"value": 12712, "name": "mheap_"}, {"value": 24, "name": "mhelpgc"}, {"value": 27, "name": "mincore"}, {"value": 76, "name": "minit"}, {"value": 216, "name": "minitSignalMask"}, {"value": 209, "name": "minitSignalStack"}, {"value": 53, "name": "minitSignals"}, {"value": 313, "name": "mmap"}, {"children": [{"value": 120, "name": "func1"}], "name": "mmap."}, {"value": 276, "name": "mmap_fixed"}, {"value": 94, "name": "moduledataverify"}, {"value": 2305, "name": "moduledataverify1"}, {"value": 8, "name": "modulesSlice"}, {"value": 841, "name": "modulesinit"}, {"value": 148, "name": "morestack"}, {"value": 8, "name": "morestackPC"}, {"value": 7, "name": "morestack_noctxt"}, {"value": 40, "name": "morestackc"}, {"children": [{"value": 63, "name": "func1"}], "name": "morestackc."}, {"value": 152, "name": "mpreinit"}, {"value": 233, "name": "mprof_GC"}, {"value": 100, "name": "mput"}, {"value": 55, "name": "msigrestore"}, {"value": 61, "name": "msigsave"}, {"value": 21, "name": "mspinning"}, {"value": 110, "name": "mstart"}, {"value": 359, "name": "mstart1"}, {"value": 8, "name": "mstartPC"}, {"value": 39, "name": "munmap"}, {"value": 8, "name": "mutexprofilerate"}, {"children": [{"value": 137, "name": "name"}, {"value": 296, "name": "pkgPath"}, {"value": 194, "name": "tag"}, {"value": 103, "name": "tagLen"}], "name": "name."}, {"value": 127, "name": "nanotime"}, {"value": 4, "name": "ncpu"}, {"value": 150, "name": "needaddgcproc"}, {"value": 264, "name": "needm"}, {"value": 585, "name": "netpoll"}, {"value": 122, "name": "netpollDeadline"}, {"value": 4, "name": "netpollInited"}, {"value": 122, "name": "netpollReadDeadline"}, {"value": 122, "name": "netpollWriteDeadline"}, {"value": 374, "name": "netpollblock"}, {"value": 57, "name": "netpollblockcommit"}, {"value": 115, "name": "netpollclose"}, {"value": 510, "name": "netpolldeadlineimpl"}, {"value": 221, "name": "netpollinit"}, {"value": 16, "name": "netpollinited"}, {"value": 143, "name": "netpollopen"}, {"value": 260, "name": "netpollready"}, {"value": 163, "name": "netpollunblock"}, {"value": 70, "name": "newAllocBits"}, {"value": 188, "name": "newArena"}, {"value": 210, "name": "newBucket"}, {"value": 341, "name": "newMarkBits"}, {"value": 229, "name": "newarray"}, {"value": 579, "name": "newdefer"}, {"children": [{"value": 634, "name": "func1"}, {"value": 327, "name": "func2"}], "name": "newdefer."}, {"value": 149, "name": "newextram"}, {"value": 331, "name": "newm"}, {"value": 83, "name": "newobject"}, {"value": 450, "name": "newosproc"}, {"value": 149, "name": "newproc"}, {"children": [{"value": 98, "name": "func1"}], "name": "newproc."}, {"value": 1358, "name": "newproc1"}, {"value": 4, "name": "newprocs"}, {"value": 349, "name": "newselect"}, {"value": 3339, "name": "newstack"}, {"value": 57, "name": "nextBarrierPC"}, {"value": 196, "name": "nextMarkBitArenaEpoch"}, {"value": 377, "name": "nextSample"}, {"value": 6, "name": "nilfunc"}, {"value": 103, "name": "nilinterequal"}, {"value": 380, "name": "nilinterhash"}, {"value": 160, "name": "noSignalStack"}, {"value": 8, "name": "no_pointers_stackmap"}, {"value": 181, "name": "notesleep"}, {"value": 142, "name": "notetsleep"}, {"value": 306, "name": "notetsleep_internal"}, {"value": 167, "name": "notetsleepg"}, {"value": 192, "name": "notewakeup"}, {"value": 256, "name": "oneBitCount"}, {"value": 599, "name": "oneNewExtraM"}, {"value": 1, "name": "oneptrmask"}, {"value": 38, "name": "open"}, {"value": 60, "name": "osinit"}, {"value": 8, "name": "osyield"}, {"value": 16, "name": "overflowError"}, {"value": 168, "name": "panicCheckMalloc"}, {"value": 103, "name": "panicdivide"}, {"value": 450, "name": "panicdottype"}, {"value": 103, "name": "panicfloat"}, {"value": 103, "name": "panicindex"}, {"value": 4, "name": "panicking"}, {"value": 8, "name": "paniclk"}, {"value": 103, "name": "panicmem"}, {"value": 103, "name": "panicoverflow"}, {"value": 103, "name": "panicslice"}, {"value": 301, "name": "panicwrap"}, {"value": 525, "name": "park_m"}, {"value": 65, "name": "parkunlock_c"}, {"value": 928, "name": "parsedebugvars"}, {"value": 149, "name": "pcdatavalue"}, {"value": 7318030, "name": "pclntab"}, {"value": 1535, "name": "pcvalue"}, {"value": 8192, "name": "pdesc"}, {"value": 183, "name": "persistentalloc"}, {"children": [{"value": 133, "name": "func1"}], "name": "persistentalloc."}, {"value": 786, "name": "persistentalloc1"}, {"value": 8, "name": "physPageSize"}, {"value": 45, "name": "pidleget"}, {"value": 150, "name": "pidleput"}, {"value": 24, "name": "pinnedTypemaps"}, {"children": [{"value": 21, "name": "Error"}, {"value": 1, "name": "RuntimeError"}], "name": "plainError."}, {"value": 210, "name": "pollWork"}, {"value": 16, "name": "pollcache"}, {"value": 8, "name": "poolcleanup"}, {"value": 177, "name": "preemptall"}, {"value": 9, "name": "prefetchnta"}, {"value": 9, "name": "prefetcht0"}, {"value": 9, "name": "prefetcht1"}, {"value": 9, "name": "prefetcht2"}, {"value": 513, "name": "preprintpanics"}, {"children": [{"value": 97, "name": "func1"}], "name": "preprintpanics."}, {"value": 512, "name": "printBacklog"}, {"value": 8, "name": "printBacklogIndex"}, {"value": 387, "name": "printCgoTraceback"}, {"value": 562, "name": "printOneCgoTraceback"}, {"value": 723, "name": "printany"}, {"value": 127, "name": "printbool"}, {"value": 563, "name": "printcreatedby"}, {"value": 166, "name": "printeface"}, {"value": 721, "name": "printfloat"}, {"value": 283, "name": "printhex"}, {"value": 110, "name": "printint"}, {"value": 140, "name": "printlock"}, {"value": 81, "name": "printnl"}, {"value": 272, "name": "printpanics"}, {"value": 60, "name": "printpointer"}, {"value": 200, "name": "printslice"}, {"value": 81, "name": "printsp"}, {"value": 159, "name": "printstring"}, {"value": 270, "name": "printuint"}, {"value": 100, "name": "printunlock"}, {"value": 24, "name": "procAuxv"}, {"value": 4, "name": "processorVersionInfo"}, {"value": 2197, "name": "procresize"}, {"value": 12, "name": "procyield"}, {"value": 8, "name": "prof"}, {"value": 92, "name": "profilealloc"}, {"value": 8, "name": "proflock"}, {"value": 302, "name": "progToPointerMask"}, {"value": 1, "name": "publicationBarrier"}, {"children": [{"value": 8, "name": "args_stackmap"}], "name": "publicationBarrier."}, {"value": 235, "name": "purgecachedstats"}, {"value": 88, "name": "putempty"}, {"value": 88, "name": "putfull"}, {"value": 361, "name": "queueRescan"}, {"value": 633, "name": "queuefinalizer"}, {"value": 21, "name": "raise"}, {"value": 312, "name": "raisebadsignal"}, {"value": 21, "name": "raiseproc"}, {"value": 381, "name": "rawbyteslice"}, {"value": 452, "name": "rawruneslice"}, {"value": 188, "name": "rawstring"}, {"value": 164, "name": "rawstringtmp"}, {"value": 35, "name": "read"}, {"value": 187, "name": "readgogc"}, {"value": 16, "name": "readgstatus"}, {"value": 150, "name": "readmemstats_m"}, {"value": 140, "name": "readvarint"}, {"value": 359, "name": "ready"}, {"value": 105, "name": "readyWithTime"}, {"value": 250, "name": "record"}, {"value": 320, "name": "recordForPanic"}, {"value": 843, "name": "recordspan"}, {"value": 363, "name": "recovery"}, {"value": 463, "name": "recv"}, {"value": 143, "name": "recvDirect"}, {"value": 588, "name": "reentersyscall"}, {"children": [{"value": 252, "name": "func1"}], "name": "reentersyscall."}, {"value": 32, "name": "reflectOffs"}, {"value": 62, "name": "reflectOffsLock"}, {"value": 62, "name": "reflectOffsUnlock"}, {"value": 475, "name": "reflectcall"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "reflectcall."}, {"value": 156, "name": "reflectcallmove"}, {"value": 369, "name": "reimburseSweepCredit"}, {"value": 1122, "name": "releaseSudog"}, {"value": 574, "name": "releasep"}, {"value": 188, "name": "removefinalizer"}, {"value": 564, "name": "removespecial"}, {"value": 243, "name": "resetcpuprofiler"}, {"value": 179, "name": "resetspinning"}, {"value": 811, "name": "resolveNameOff"}, {"value": 894, "name": "resolveTypeOff"}, {"value": 166, "name": "restartg"}, {"value": 710, "name": "retake"}, {"value": 3, "name": "return0"}, {"value": 35, "name": "round2"}, {"value": 498, "name": "rt0_go"}, {"value": 8, "name": "rt0_goPC"}, {"value": 437, "name": "rt_sigaction"}, {"children": [{"value": 100, "name": "func1"}], "name": "rt_sigaction."}, {"value": 46, "name": "rtsigprocmask"}, {"value": 1771, "name": "runGCProg"}, {"value": 193, "name": "runSafePointFn"}, {"value": 1321, "name": "runfinq"}, {"value": 8, "name": "runfinqPC"}, {"value": 55, "name": "runqempty"}, {"value": 238, "name": "runqget"}, {"value": 329, "name": "runqgrab"}, {"value": 261, "name": "runqput"}, {"value": 517, "name": "runqputslow"}, {"value": 236, "name": "runqsteal"}, {"value": 8, "name": "runtimeInitTime"}, {"value": 67, "name": "save"}, {"value": 438, "name": "saveblockevent"}, {"value": 192, "name": "saveg"}, {"value": 401, "name": "scanblock"}, {"value": 1600, "name": "scanframeworker"}, {"value": 640, "name": "scang"}, {"value": 895, "name": "scanobject"}, {"value": 1725, "name": "scanstack"}, {"children": [{"value": 297, "name": "func1"}], "name": "scanstack."}, {"value": 347, "name": "scavengelist"}, {"value": 272, "name": "sched"}, {"value": 27, "name": "sched_getaffinity"}, {"value": 436, "name": "schedinit"}, {"value": 2841, "name": "schedtrace"}, {"value": 836, "name": "schedule"}, {"value": 85, "name": "selectdefault"}, {"value": 210, "name": "selectdefaultImpl"}, {"value": 79, "name": "selectgo"}, {"value": 9242, "name": "selectgoImpl"}, {"children": [{"value": 104, "name": "func1"}, {"value": 104, "name": "func2"}, {"value": 104, "name": "func3"}], "name": "selectgoImpl."}, {"value": 94, "name": "selectnbrecv"}, {"value": 118, "name": "selectnbsend"}, {"value": 126, "name": "selectrecv"}, {"value": 127, "name": "selectrecv2"}, {"value": 325, "name": "selectrecvImpl"}, {"value": 117, "name": "selectsend"}, {"value": 262, "name": "selectsendImpl"}, {"value": 189, "name": "sellock"}, {"value": 157, "name": "selparkcommit"}, {"value": 341, "name": "selunlock"}, {"value": 1162, "name": "semacquire"}, {"value": 958, "name": "semrelease"}, {"value": 16064, "name": "semtable"}, {"value": 301, "name": "send"}, {"value": 143, "name": "sendDirect"}, {"value": 68, "name": "setGCPhase"}, {"value": 194, "name": "setGsignalStack"}, {"value": 108, "name": "setNextBarrierPC"}, {"value": 70, "name": "setcallerpc"}, {"value": 89, "name": "setcpuprofilerate"}, {"children": [{"value": 57, "name": "func1"}], "name": "setcpuprofilerate."}, {"value": 240, "name": "setcpuprofilerate_m"}, {"value": 15, "name": "setg"}, {"value": 22, "name": "setitimer"}, {"value": 186, "name": "setprofilebucket"}, {"value": 165, "name": "setsSP"}, {"value": 373, "name": "setsig"}, {"value": 184, "name": "setsigstack"}, {"value": 66, "name": "settls"}, {"value": 243, "name": "shade"}, {"value": 553, "name": "showframe"}, {"value": 488, "name": "shrinkstack"}, {"value": 566, "name": "siftdownTimer"}, {"value": 362, "name": "siftupTimer"}, {"value": 64, "name": "sig"}, {"value": 160, "name": "sigNotOnStack"}, {"value": 39, "name": "sigaltstack"}, {"value": 57, "name": "sigblock"}, {"value": 399, "name": "sigdisable"}, {"value": 355, "name": "sigenable"}, {"value": 34, "name": "sigfwd"}, {"value": 423, "name": "sigfwdgo"}, {"value": 1765, "name": "sighandler"}, {"value": 1, "name": "signalsOK"}, {"value": 109, "name": "signalstack"}, {"value": 743, "name": "sigpanic"}, {"value": 8, "name": "sigpanicPC"}, {"value": 89, "name": "sigpipe"}, {"value": 64, "name": "sigprocmask"}, {"value": 1552, "name": "sigprof"}, {"value": 256, "name": "sigprofCallers"}, {"value": 4, "name": "sigprofCallersUse"}, {"value": 217, "name": "sigprofNonGo"}, {"value": 223, "name": "sigprofNonGoPC"}, {"value": 11, "name": "sigreturn"}, {"value": 362, "name": "sigsend"}, {"value": 8, "name": "sigset_all"}, {"value": 1560, "name": "sigtable"}, {"value": 107, "name": "sigtramp"}, {"value": 1009, "name": "sigtrampgo"}, {"value": 249, "name": "size_to_class128"}, {"value": 129, "name": "size_to_class8"}, {"value": 8, "name": "sizeof_C_MStats"}, {"value": 16, "name": "sliceError"}, {"value": 205, "name": "slicebytetostring"}, {"value": 488, "name": "slicerunetostring"}, {"value": 66, "name": "stackBarrier"}, {"value": 8, "name": "stackBarrierPC"}, {"value": 424, "name": "stackLarge"}, {"value": 1149, "name": "stackalloc"}, {"value": 234, "name": "stackcache_clear"}, {"value": 250, "name": "stackcacherefill"}, {"value": 300, "name": "stackcacherelease"}, {"value": 25, "name": "stackcheck"}, {"value": 768, "name": "stackfree"}, {"value": 100, "name": "stackinit"}, {"value": 31, "name": "stacklog2"}, {"value": 134, "name": "stackmapdata"}, {"value": 64, "name": "stackpool"}, {"value": 471, "name": "stackpoolalloc"}, {"value": 355, "name": "stackpoolfree"}, {"value": 8, "name": "stackpoolmu"}, {"value": 157, "name": "startTheWorld"}, {"value": 557, "name": "startTheWorldWithSema"}, {"value": 216, "name": "startlockedm"}, {"value": 509, "name": "startm"}, {"value": 40, "name": "startpanic"}, {"value": 531, "name": "startpanic_m"}, {"value": 8, "name": "starttime"}, {"value": 24, "name": "startupRandomData"}, {"value": 32, "name": "statictmp_1590"}, {"value": 12, "name": "statictmp_417"}, {"value": 96, "name": "statictmp_549"}, {"value": 96, "name": "statictmp_552"}, {"value": 144, "name": "statictmp_569"}, {"value": 64, "name": "statictmp_5858"}, {"value": 64, "name": "statictmp_5859"}, {"value": 64, "name": "statictmp_5862"}, {"value": 64, "name": "statictmp_5870"}, {"value": 64, "name": "statictmp_5872"}, {"value": 8, "name": "statictmp_6327"}, {"value": 8, "name": "statictmp_6596"}, {"value": 64, "name": "statictmp_7054"}, {"value": 16, "name": "statictmp_7055"}, {"value": 16, "name": "statictmp_7056"}, {"value": 16, "name": "statictmp_7057"}, {"value": 16, "name": "statictmp_7058"}, {"value": 16, "name": "statictmp_7060"}, {"value": 16, "name": "statictmp_7061"}, {"value": 408, "name": "statictmp_7062"}, {"value": 96, "name": "statictmp_7063"}, {"value": 32, "name": "stealOrder"}, {"value": 297, "name": "step"}, {"value": 845, "name": "stkbucket"}, {"value": 169, "name": "stopTheWorld"}, {"value": 776, "name": "stopTheWorldWithSema"}, {"value": 389, "name": "stoplockedm"}, {"value": 412, "name": "stopm"}, {"value": 112, "name": "strequal"}, {"value": 92, "name": "strhash"}, {"value": 240, "name": "stringtoslicebyte"}, {"value": 426, "name": "stringtoslicerune"}, {"value": 1, "name": "support_avx"}, {"value": 1, "name": "support_avx2"}, {"value": 1, "name": "support_bmi1"}, {"value": 1, "name": "support_bmi2"}, {"value": 32, "name": "sweep"}, {"value": 845, "name": "sweepone"}, {"value": 24, "name": "sym_keys"}, {"value": 357, "name": "syncadjustsudogs"}, {"value": 266, "name": "sysAlloc"}, {"value": 95, "name": "sysFault"}, {"value": 72, "name": "sysFree"}, {"value": 476, "name": "sysMap"}, {"value": 56, "name": "sysMmap"}, {"value": 330, "name": "sysReserve"}, {"value": 32, "name": "sysSigaction"}, {"value": 393, "name": "sysUnused"}, {"value": 114, "name": "sysUsed"}, {"value": 636, "name": "sysargs"}, {"value": 304, "name": "sysauxv"}, {"value": 1128, "name": "sysmon"}, {"value": 172, "name": "systemstack"}, {"value": 8, "name": "systemstackPC"}, {"value": 1, "name": "systemstack_switch"}, {"value": 8, "name": "systemstack_switchPC"}, {"value": 717, "name": "testAtomic64"}, {"value": 8, "name": "test_x64"}, {"value": 8, "name": "test_z64"}, {"value": 615, "name": "testdefersizes"}, {"value": 24, "name": "textsectionmap"}, {"value": 168, "name": "throw"}, {"value": 63, "name": "throwinit"}, {"value": 24, "name": "ticks"}, {"value": 304, "name": "tickspersecond"}, {"value": 122, "name": "timediv"}, {"value": 259, "name": "timejump"}, {"value": 860, "name": "timerproc"}, {"value": 8, "name": "timerprocPC"}, {"value": 56, "name": "timers"}, {"value": 8, "name": "tlsg"}, {"value": 65736, "name": "trace"}, {"value": 181, "name": "traceAcquireBuffer"}, {"value": 308, "name": "traceAppend"}, {"value": 893, "name": "traceEvent"}, {"value": 373, "name": "traceFlush"}, {"value": 600, "name": "traceFrameForPC"}, {"value": 91, "name": "traceGCDone"}, {"value": 91, "name": "traceGCScanDone"}, {"value": 91, "name": "traceGCScanStart"}, {"value": 133, "name": "traceGCStart"}, {"value": 91, "name": "traceGCSweepDone"}, {"value": 91, "name": "traceGCSweepStart"}, {"value": 259, "name": "traceGoCreate"}, {"value": 91, "name": "traceGoEnd"}, {"value": 162, "name": "traceGoPark"}, {"value": 118, "name": "traceGoPreempt"}, {"value": 118, "name": "traceGoSched"}, {"value": 440, "name": "traceGoStart"}, {"value": 232, "name": "traceGoSysBlock"}, {"value": 91, "name": "traceGoSysCall"}, {"value": 238, "name": "traceGoSysExit"}, {"value": 273, "name": "traceGoUnpark"}, {"value": 113, "name": "traceGomaxprocs"}, {"value": 113, "name": "traceHeapAlloc"}, {"value": 193, "name": "traceNextGC"}, {"value": 183, "name": "traceProcFree"}, {"value": 126, "name": "traceProcStart"}, {"value": 232, "name": "traceProcStop"}, {"value": 242, "name": "traceReader"}, {"value": 127, "name": "traceReleaseBuffer"}, {"value": 360, "name": "traceStackID"}, {"value": 629, "name": "traceString"}, {"value": 668, "name": "tracealloc"}, {"children": [{"value": 86, "name": "func1"}], "name": "tracealloc."}, {"value": 99, "name": "traceback"}, {"value": 677, "name": "traceback1"}, {"value": 643, "name": "tracebackCgoContext"}, {"value": 4, "name": "traceback_cache"}, {"value": 4, "name": "traceback_env"}, {"value": 535, "name": "tracebackdefers"}, {"value": 983, "name": "tracebackinit"}, {"value": 787, "name": "tracebackothers"}, {"value": 99, "name": "tracebacktrap"}, {"value": 367, "name": "tracefree"}, {"children": [{"value": 86, "name": "func1"}], "name": "tracefree."}, {"value": 245, "name": "tracegc"}, {"value": 8, "name": "tracelock"}, {"value": 111, "name": "trygetfull"}, {"value": 643, "name": "typeBitsBulkBarrier"}, {"value": 101, "name": "typedmemclr"}, {"value": 182, "name": "typedmemmove"}, {"value": 450, "name": "typedslicecopy"}, {"children": [{"value": 752, "name": "func1"}], "name": "typedslicecopy."}, {"value": 55824, "name": "typelink"}, {"value": 1822, "name": "typelinksinit"}, {"value": 3837, "name": "typesEqual"}, {"value": 80, "name": "typestring"}, {"value": 123, "name": "unblocksig"}, {"value": 75, "name": "unixnanotime"}, {"value": 206, "name": "unlock"}, {"value": 235, "name": "unlockOSThread"}, {"value": 43, "name": "unlockextra"}, {"value": 6, "name": "unminit"}, {"value": 108, "name": "unminitSignals"}, {"value": 209, "name": "unwindm"}, {"value": 953, "name": "updatememstats"}, {"value": 24, "name": "urandom_dev"}, {"value": 1, "name": "useAeshash"}, {"value": 1, "name": "useCheckmark"}, {"value": 1, "name": "useRepMovs"}, {"value": 75, "name": "usleep"}, {"value": 325, "name": "vdso_find_version"}, {"value": 1380, "name": "vdso_init_from_sysinfo_ehdr"}, {"value": 644, "name": "vdso_parse_symbols"}, {"value": 12, "name": "vendorStringBytes"}, {"value": 147, "name": "wakefing"}, {"value": 99, "name": "wakep"}, {"value": 384, "name": "work"}, {"value": 4, "name": "worldsema"}, {"value": 39, "name": "write"}, {"value": 16, "name": "writeBarrier"}, {"value": 90, "name": "writeErr"}, {"value": 209, "name": "writebarrierptr"}, {"children": [{"value": 201, "name": "func1"}], "name": "writebarrierptr."}, {"value": 142, "name": "writebarrierptr_prewrite"}, {"children": [{"value": 63, "name": "func1"}], "name": "writebarrierptr_prewrite."}, {"value": 261, "name": "writebarrierptr_prewrite1"}, {"children": [{"value": 279, "name": "func1"}], "name": "writebarrierptr_prewrite1."}, {"value": 8, "name": "xbuckets"}, {"value": 16, "name": "xgetbv_low"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "xgetbv_low."}, {"value": 1024, "name": "zeroVal"}, {"value": 8, "name": "zerobase"}], "name": "runtime."}, {"value": 48, "name": "go.itab.struct { io.Reader; io.Closer },io.ReadCloser"}, {"children": [{"value": 91, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "hash."}, {"children": [{"value": 102, "name": "EscapeString"}, {"value": 914, "name": "UnescapeString"}, {"value": 8, "name": "entity"}, {"value": 8, "name": "entity2"}, {"value": 8, "name": "htmlEscaper"}, {"value": 9140, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 128, "name": "replacementTable"}, {"value": 160, "name": "statictmp_180"}, {"value": 34208, "name": "statictmp_81"}, {"value": 8552, "name": "statictmp_82"}, {"value": 2020, "name": "unescapeEntity"}], "name": "html."}, {"children": [{"value": 232, "name": "interval_invs"}], "name": "je_arena_run_regind."}, {"children": [{"value": 121, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "log/syslog."}, {"children": [{"value": 96, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 48, "name": "main"}], "name": "main."}, {"children": [{"value": 5, "name": "Acos"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Acos."}, {"value": 5, "name": "Asin"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Asin."}, {"value": 5, "name": "Atan"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Atan."}, {"value": 5, "name": "Atan2"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Atan2."}, {"value": 455, "name": "Cbrt"}, {"value": 126, "name": "Ceil"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Ceil."}, {"value": 5, "name": "Cos"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Cos."}, {"value": 355, "name": "Exp"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Exp."}, {"value": 5, "name": "Exp2"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Exp2."}, {"value": 110, "name": "Floor"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Floor."}, {"value": 5, "name": "Frexp"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Frexp."}, {"value": 71, "name": "Inf"}, {"value": 5, "name": "Ldexp"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Ldexp."}, {"value": 388, "name": "Log"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Log."}, {"value": 5, "name": "Log10"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Log10."}, {"value": 5, "name": "Log1p"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Log1p."}, {"value": 5, "name": "Log2"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Log2."}, {"value": 141, "name": "Max"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Max."}, {"value": 5, "name": "Mod"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Mod."}, {"value": 5, "name": "Modf"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Modf."}, {"value": 241, "name": "Nextafter"}, {"value": 1543, "name": "Pow"}, {"value": 306, "name": "Pow10"}, {"value": 5, "name": "Sin"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Sin."}, {"value": 5, "name": "Tan"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Tan."}, {"value": 77, "name": "Trunc"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "Trunc."}, {"value": 48, "name": "_cos"}, {"value": 48, "name": "_sin"}, {"value": 24, "name": "_tanP"}, {"value": 40, "name": "_tanQ"}, {"value": 86, "name": "acos"}, {"value": 314, "name": "asin"}, {"value": 168, "name": "atan"}, {"value": 1255, "name": "atan2"}, {"value": 583, "name": "cos"}, {"value": 368, "name": "exp2"}, {"value": 234, "name": "expmulti"}, {"value": 295, "name": "frexp"}, {"value": 20, "name": "hasSSE4"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "hasSSE4."}, {"value": 110, "name": "init"}, {"children": [{"value": 146, "name": "1"}], "name": "init."}, {"value": 1, "name": "initdone."}, {"value": 109, "name": "isOddInt"}, {"value": 503, "name": "ldexp"}, {"value": 86, "name": "log10"}, {"value": 1138, "name": "log1p"}, {"value": 179, "name": "log2"}, {"value": 461, "name": "mod"}, {"value": 314, "name": "modf"}, {"value": 560, "name": "pow10tab"}, {"value": 659, "name": "satan"}, {"value": 587, "name": "sin"}, {"value": 492, "name": "tan"}, {"value": 1, "name": "useSSE4"}], "name": "math."}, {"children": [{"value": 2161, "name": "FormatMediaType"}, {"value": 3385, "name": "ParseMediaType"}, {"value": 771, "name": "TypeByExtension"}, {"value": 8, "name": "builtinTypesLower"}, {"value": 741, "name": "checkMediaTypeDisposition"}, {"value": 574, "name": "clone"}, {"value": 1188, "name": "consumeMediaParam"}, {"value": 264, "name": "consumeToken"}, {"value": 768, "name": "consumeValue"}, {"value": 403, "name": "decode2231Enc"}, {"value": 16, "name": "errInvalidWord"}, {"value": 8, "name": "extensions"}, {"value": 521, "name": "init"}, {"children": [{"value": 100, "name": "1"}], "name": "init."}, {"value": 119, "name": "initMime"}, {"value": 144, "name": "initMimeUnix"}, {"value": 1, "name": "initdone."}, {"value": 727, "name": "invert"}, {"value": 70, "name": "isNotTokenChar"}, {"value": 88, "name": "isTSpecial"}, {"value": 117, "name": "isToken"}, {"value": 82, "name": "isTokenChar"}, {"value": 793, "name": "loadMimeFile"}, {"value": 8, "name": "maxBase64Len"}, {"value": 24, "name": "mimeLock"}, {"value": 8, "name": "mimeTypes"}, {"value": 8, "name": "mimeTypesLower"}, {"value": 12, "name": "once"}, {"value": 8, "name": "osInitMime"}, {"value": 986, "name": "percentHexUnescape"}, {"value": 1666, "name": "setExtensionType"}, {"value": 306, "name": "setMimeTypes"}, {"value": 48, "name": "statictmp_432"}, {"value": 160, "name": "statictmp_434"}, {"value": 160, "name": "statictmp_435"}, {"value": 8, "name": "testInitMime"}, {"value": 24, "name": "typeFiles"}], "name": "mime."}, {"children": [{"children": [{"value": 178, "name": "string"}], "name": "(*lazybuf)."}, {"value": 305, "name": "Base"}, {"value": 2346, "name": "Clean"}, {"value": 114, "name": "Dir"}, {"value": 16, "name": "ErrBadPattern"}, {"value": 242, "name": "Join"}, {"value": 169, "name": "Split"}, {"value": 184, "name": "init"}, {"value": 1, "name": "initdone."}], "name": "path."}, {"children": [{"children": [{"value": 283, "name": "string"}], "name": "(*lazybuf)."}, {"value": 110, "name": "Abs"}, {"value": 239, "name": "Base"}, {"value": 3191, "name": "Clean"}, {"value": 16, "name": "ErrBadPattern"}, {"value": 110, "name": "EvalSymlinks"}, {"value": 132, "name": "Ext"}, {"value": 21, "name": "FromSlash"}, {"value": 1310, "name": "Glob"}, {"value": 100, "name": "Join"}, {"value": 804, "name": "Match"}, {"value": 16, "name": "SkipDir"}, {"value": 125, "name": "Split"}, {"value": 100, "name": "SplitList"}, {"value": 357, "name": "Walk"}, {"value": 110, "name": "abs"}, {"value": 110, "name": "evalSymlinks"}, {"value": 409, "name": "getEsc"}, {"value": 1056, "name": "glob"}, {"value": 100, "name": "hasMeta"}, {"value": 281, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 242, "name": "join"}, {"value": 8, "name": "lstat"}, {"value": 1528, "name": "matchChunk"}, {"value": 427, "name": "readDirNames"}, {"value": 236, "name": "scanChunk"}, {"value": 187, "name": "splitList"}, {"value": 416, "name": "unixAbs"}, {"value": 1401, "name": "walk"}, {"value": 534, "name": "walkLink"}, {"value": 1320, "name": "walkLinks"}, {"value": 299, "name": "walkSymlinks"}], "name": "path/filepath."}, {"children": [{"children": [{"value": 92, "name": "Load"}, {"value": 410, "name": "Store"}], "name": "(*Value)."}, {"children": [{"value": 1, "name": "Lock"}], "name": "(*noCopy)."}, {"value": 5, "name": "AddInt32"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "AddInt32."}, {"value": 23, "name": "AddUint32"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "AddUint32."}, {"value": 94, "name": "CompareAndSwapPointer"}, {"value": 27, "name": "CompareAndSwapUint64"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "CompareAndSwapUint64."}, {"value": 5, "name": "CompareAndSwapUintptr"}, {"children": [{"value": 10, "name": "args_stackmap"}], "name": "CompareAndSwapUintptr."}, {"value": 5, "name": "StoreInt32"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "StoreInt32."}, {"value": 75, "name": "StorePointer"}, {"value": 13, "name": "StoreUint32"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "StoreUint32."}, {"value": 15, "name": "StoreUint64"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "StoreUint64."}, {"value": 5, "name": "StoreUintptr"}, {"children": [{"value": 9, "name": "args_stackmap"}], "name": "StoreUintptr."}, {"value": 44, "name": "runtime_procPin"}, {"value": 28, "name": "runtime_procUnpin"}], "name": "sync/atomic."}, {"children": [{"children": [{"value": 200, "name": "ToLower"}, {"value": 200, "name": "ToTitle"}, {"value": 200, "name": "ToUpper"}], "name": "(*SpecialCase)."}, {"children": [{"value": 99, "name": "ToLower-fm"}], "name": "(SpecialCase)."}, {"value": 8, "name": "ASCII_Hex_Digit"}, {"value": 8, "name": "Adlam"}, {"value": 8, "name": "Ahom"}, {"value": 8, "name": "Anatolian_Hieroglyphs"}, {"value": 8, "name": "Arabic"}, {"value": 8, "name": "Armenian"}, {"value": 8, "name": "Avestan"}, {"value": 8, "name": "Balinese"}, {"value": 8, "name": "Bamum"}, {"value": 8, "name": "Bassa_Vah"}, {"value": 8, "name": "Batak"}, {"value": 8, "name": "Bengali"}, {"value": 8, "name": "Bhaiksuki"}, {"value": 8, "name": "Bidi_Control"}, {"value": 8, "name": "Bopomofo"}, {"value": 8, "name": "Brahmi"}, {"value": 8, "name": "Braille"}, {"value": 8, "name": "Buginese"}, {"value": 8, "name": "Buhid"}, {"value": 8, "name": "C"}, {"value": 8, "name": "Canadian_Aboriginal"}, {"value": 8, "name": "Carian"}, {"value": 24, "name": "CaseRanges"}, {"value": 8, "name": "Categories"}, {"value": 8, "name": "Caucasian_Albanian"}, {"value": 8, "name": "Cc"}, {"value": 8, "name": "Cf"}, {"value": 8, "name": "Chakma"}, {"value": 8, "name": "Cham"}, {"value": 8, "name": "Cherokee"}, {"value": 8, "name": "Co"}, {"value": 8, "name": "Common"}, {"value": 8, "name": "Coptic"}, {"value": 8, "name": "Cs"}, {"value": 8, "name": "Cuneiform"}, {"value": 8, "name": "Cypriot"}, {"value": 8, "name": "Cyrillic"}, {"value": 8, "name": "Dash"}, {"value": 8, "name": "Deprecated"}, {"value": 8, "name": "Deseret"}, {"value": 8, "name": "Devanagari"}, {"value": 8, "name": "Diacritic"}, {"value": 8, "name": "Digit"}, {"value": 8, "name": "Duployan"}, {"value": 8, "name": "Egyptian_Hieroglyphs"}, {"value": 8, "name": "Elbasan"}, {"value": 8, "name": "Ethiopic"}, {"value": 8, "name": "Extender"}, {"value": 8, "name": "FoldCategory"}, {"value": 8, "name": "FoldScript"}, {"value": 8, "name": "Georgian"}, {"value": 8, "name": "Glagolitic"}, {"value": 8, "name": "Gothic"}, {"value": 8, "name": "Grantha"}, {"value": 24, "name": "GraphicRanges"}, {"value": 8, "name": "Greek"}, {"value": 8, "name": "Gujarati"}, {"value": 8, "name": "Gurmukhi"}, {"value": 8, "name": "Han"}, {"value": 8, "name": "Hangul"}, {"value": 8, "name": "Hanunoo"}, {"value": 8, "name": "Hatran"}, {"value": 8, "name": "Hebrew"}, {"value": 8, "name": "Hex_Digit"}, {"value": 8, "name": "Hiragana"}, {"value": 8, "name": "Hyphen"}, {"value": 8, "name": "IDS_Binary_Operator"}, {"value": 8, "name": "IDS_Trinary_Operator"}, {"value": 8, "name": "Ideographic"}, {"value": 8, "name": "Imperial_Aramaic"}, {"value": 145, "name": "In"}, {"value": 8, "name": "Inherited"}, {"value": 8, "name": "Inscriptional_Pahlavi"}, {"value": 8, "name": "Inscriptional_Parthian"}, {"value": 237, "name": "Is"}, {"value": 109, "name": "IsDigit"}, {"value": 146, "name": "IsGraphic"}, {"value": 119, "name": "IsLetter"}, {"value": 119, "name": "IsNumber"}, {"value": 145, "name": "IsOneOf"}, {"value": 146, "name": "IsPrint"}, {"value": 157, "name": "IsSpace"}, {"value": 122, "name": "IsUpper"}, {"value": 8, "name": "Javanese"}, {"value": 8, "name": "Join_Control"}, {"value": 8, "name": "Kaithi"}, {"value": 8, "name": "Kannada"}, {"value": 8, "name": "Katakana"}, {"value": 8, "name": "Kayah_Li"}, {"value": 8, "name": "Kharoshthi"}, {"value": 8, "name": "Khmer"}, {"value": 8, "name": "Khojki"}, {"value": 8, "name": "Khudawadi"}, {"value": 8, "name": "L"}, {"value": 8, "name": "Lao"}, {"value": 8, "name": "Latin"}, {"value": 8, "name": "Lepcha"}, {"value": 8, "name": "Letter"}, {"value": 8, "name": "Limbu"}, {"value": 8, "name": "Linear_A"}, {"value": 8, "name": "Linear_B"}, {"value": 8, "name": "Lisu"}, {"value": 8, "name": "Ll"}, {"value": 8, "name": "Lm"}, {"value": 8, "name": "Lo"}, {"value": 8, "name": "Logical_Order_Exception"}, {"value": 8, "name": "Lt"}, {"value": 8, "name": "Lu"}, {"value": 8, "name": "Lycian"}, {"value": 8, "name": "Lydian"}, {"value": 8, "name": "M"}, {"value": 8, "name": "Mahajani"}, {"value": 8, "name": "Malayalam"}, {"value": 8, "name": "Mandaic"}, {"value": 8, "name": "Manichaean"}, {"value": 8, "name": "Marchen"}, {"value": 8, "name": "Mc"}, {"value": 8, "name": "Me"}, {"value": 8, "name": "Meetei_Mayek"}, {"value": 8, "name": "Mende_Kikakui"}, {"value": 8, "name": "Meroitic_Cursive"}, {"value": 8, "name": "Meroitic_Hieroglyphs"}, {"value": 8, "name": "Miao"}, {"value": 8, "name": "Mn"}, {"value": 8, "name": "Modi"}, {"value": 8, "name": "Mongolian"}, {"value": 8, "name": "Mro"}, {"value": 8, "name": "Multani"}, {"value": 8, "name": "Myanmar"}, {"value": 8, "name": "N"}, {"value": 8, "name": "Nabataean"}, {"value": 8, "name": "Nd"}, {"value": 8, "name": "New_Tai_Lue"}, {"value": 8, "name": "Newa"}, {"value": 8, "name": "Nko"}, {"value": 8, "name": "Nl"}, {"value": 8, "name": "No"}, {"value": 8, "name": "Noncharacter_Code_Point"}, {"value": 8, "name": "Number"}, {"value": 8, "name": "Ogham"}, {"value": 8, "name": "Ol_Chiki"}, {"value": 8, "name": "Old_Hungarian"}, {"value": 8, "name": "Old_Italic"}, {"value": 8, "name": "Old_North_Arabian"}, {"value": 8, "name": "Old_Permic"}, {"value": 8, "name": "Old_Persian"}, {"value": 8, "name": "Old_South_Arabian"}, {"value": 8, "name": "Old_Turkic"}, {"value": 8, "name": "Oriya"}, {"value": 8, "name": "Osage"}, {"value": 8, "name": "Osmanya"}, {"value": 8, "name": "Other_Alphabetic"}, {"value": 8, "name": "Other_Default_Ignorable_Code_Point"}, {"value": 8, "name": "Other_Grapheme_Extend"}, {"value": 8, "name": "Other_ID_Continue"}, {"value": 8, "name": "Other_ID_Start"}, {"value": 8, "name": "Other_Lowercase"}, {"value": 8, "name": "Other_Math"}, {"value": 8, "name": "Other_Uppercase"}, {"value": 8, "name": "P"}, {"value": 8, "name": "Pahawh_Hmong"}, {"value": 8, "name": "Palmyrene"}, {"value": 8, "name": "Pattern_Syntax"}, {"value": 8, "name": "Pattern_White_Space"}, {"value": 8, "name": "Pau_Cin_Hau"}, {"value": 8, "name": "Pc"}, {"value": 8, "name": "Pd"}, {"value": 8, "name": "Pe"}, {"value": 8, "name": "Pf"}, {"value": 8, "name": "Phags_Pa"}, {"value": 8, "name": "Phoenician"}, {"value": 8, "name": "Pi"}, {"value": 8, "name": "Po"}, {"value": 8, "name": "Prepended_Concatenation_Mark"}, {"value": 24, "name": "PrintRanges"}, {"value": 8, "name": "Properties"}, {"value": 8, "name": "Ps"}, {"value": 8, "name": "Psalter_Pahlavi"}, {"value": 8, "name": "Quotation_Mark"}, {"value": 8, "name": "Radical"}, {"value": 8, "name": "Rejang"}, {"value": 8, "name": "Runic"}, {"value": 8, "name": "S"}, {"value": 8, "name": "Samaritan"}, {"value": 8, "name": "Saurashtra"}, {"value": 8, "name": "Sc"}, {"value": 8, "name": "Scripts"}, {"value": 8, "name": "Sentence_Terminal"}, {"value": 8, "name": "Sharada"}, {"value": 8, "name": "Shavian"}, {"value": 8, "name": "Siddham"}, {"value": 8, "name": "SignWriting"}, {"value": 338, "name": "SimpleFold"}, {"value": 8, "name": "Sinhala"}, {"value": 8, "name": "Sk"}, {"value": 8, "name": "Sm"}, {"value": 8, "name": "So"}, {"value": 8, "name": "Soft_Dotted"}, {"value": 8, "name": "Sora_Sompeng"}, {"children": [{"value": 127, "name": "ToLower"}, {"value": 127, "name": "ToTitle"}, {"value": 127, "name": "ToUpper"}], "name": "SpecialCase."}, {"value": 8, "name": "Sundanese"}, {"value": 8, "name": "Syloti_Nagri"}, {"value": 8, "name": "Syriac"}, {"value": 8, "name": "Tagalog"}, {"value": 8, "name": "Tagbanwa"}, {"value": 8, "name": "Tai_Le"}, {"value": 8, "name": "Tai_Tham"}, {"value": 8, "name": "Tai_Viet"}, {"value": 8, "name": "Takri"}, {"value": 8, "name": "Tamil"}, {"value": 8, "name": "Tangut"}, {"value": 8, "name": "Telugu"}, {"value": 8, "name": "Terminal_Punctuation"}, {"value": 8, "name": "Thaana"}, {"value": 8, "name": "Thai"}, {"value": 8, "name": "Tibetan"}, {"value": 8, "name": "Tifinagh"}, {"value": 8, "name": "Tirhuta"}, {"value": 112, "name": "To"}, {"value": 105, "name": "ToLower"}, {"value": 105, "name": "ToTitle"}, {"value": 105, "name": "ToUpper"}, {"value": 8, "name": "Ugaritic"}, {"value": 8, "name": "Unified_Ideograph"}, {"value": 8, "name": "Upper"}, {"value": 8, "name": "Vai"}, {"value": 8, "name": "Variation_Selector"}, {"value": 8, "name": "Warang_Citi"}, {"value": 8, "name": "White_Space"}, {"value": 8, "name": "Yi"}, {"value": 8, "name": "Z"}, {"value": 8, "name": "Zl"}, {"value": 8, "name": "Zp"}, {"value": 8, "name": "Zs"}, {"value": 256, "name": "asciiFold"}, {"value": 24, "name": "caseOrbit"}, {"value": 8, "name": "foldCommon"}, {"value": 8, "name": "foldGreek"}, {"value": 8, "name": "foldInherited"}, {"value": 8, "name": "foldL"}, {"value": 8, "name": "foldLl"}, {"value": 8, "name": "foldLt"}, {"value": 8, "name": "foldLu"}, {"value": 8, "name": "foldM"}, {"value": 8, "name": "foldMn"}, {"value": 27303, "name": "init"}, {"value": 1, "name": "initdone."}, {"value": 316, "name": "is16"}, {"value": 291, "name": "is32"}, {"value": 287, "name": "isExcludingLatin"}, {"value": 256, "name": "properties"}, {"value": 1680, "name": "statictmp_100"}, {"value": 56, "name": "statictmp_101"}, {"value": 42, "name": "statictmp_102"}, {"value": 56, "name": "statictmp_103"}, {"value": 618, "name": "statictmp_104"}, {"value": 420, "name": "statictmp_105"}, {"value": 56, "name": "statictmp_106"}, {"value": 576, "name": "statictmp_107"}, {"value": 480, "name": "statictmp_108"}, {"value": 56, "name": "statictmp_109"}, {"value": 30, "name": "statictmp_110"}, {"value": 56, "name": "statictmp_111"}, {"value": 1038, "name": "statictmp_112"}, {"value": 924, "name": "statictmp_113"}, {"value": 56, "name": "statictmp_114"}, {"value": 222, "name": "statictmp_115"}, {"value": 204, "name": "statictmp_116"}, {"value": 56, "name": "statictmp_117"}, {"value": 42, "name": "statictmp_118"}, {"value": 48, "name": "statictmp_119"}, {"value": 56, "name": "statictmp_120"}, {"value": 168, "name": "statictmp_121"}, {"value": 372, "name": "statictmp_122"}, {"value": 56, "name": "statictmp_123"}, {"value": 30, "name": "statictmp_124"}, {"value": 56, "name": "statictmp_125"}, {"value": 66, "name": "statictmp_126"}, {"value": 56, "name": "statictmp_127"}, {"value": 132, "name": "statictmp_128"}, {"value": 56, "name": "statictmp_129"}, {"value": 30, "name": "statictmp_130"}, {"value": 56, "name": "statictmp_131"}, {"value": 36, "name": "statictmp_132"}, {"value": 56, "name": "statictmp_133"}, {"value": 654, "name": "statictmp_134"}, {"value": 432, "name": "statictmp_135"}, {"value": 56, "name": "statictmp_136"}, {"value": 150, "name": "statictmp_137"}, {"value": 56, "name": "statictmp_138"}, {"value": 72, "name": "statictmp_139"}, {"value": 56, "name": "statictmp_140"}, {"value": 138, "name": "statictmp_141"}, {"value": 24, "name": "statictmp_142"}, {"value": 56, "name": "statictmp_143"}, {"value": 258, "name": "statictmp_144"}, {"value": 72, "name": "statictmp_145"}, {"value": 56, "name": "statictmp_146"}, {"value": 606, "name": "statictmp_147"}, {"value": 696, "name": "statictmp_148"}, {"value": 56, "name": "statictmp_149"}, {"value": 36, "name": "statictmp_150"}, {"value": 56, "name": "statictmp_151"}, {"value": 6, "name": "statictmp_152"}, {"value": 56, "name": "statictmp_153"}, {"value": 6, "name": "statictmp_154"}, {"value": 56, "name": "statictmp_155"}, {"value": 36, "name": "statictmp_157"}, {"value": 56, "name": "statictmp_158"}, {"value": 36, "name": "statictmp_160"}, {"value": 56, "name": "statictmp_161"}, {"value": 12, "name": "statictmp_163"}, {"value": 56, "name": "statictmp_164"}, {"value": 126, "name": "statictmp_165"}, {"value": 420, "name": "statictmp_166"}, {"value": 56, "name": "statictmp_167"}, {"value": 36, "name": "statictmp_168"}, {"value": 56, "name": "statictmp_169"}, {"value": 24, "name": "statictmp_171"}, {"value": 56, "name": "statictmp_172"}, {"value": 12, "name": "statictmp_173"}, {"value": 56, "name": "statictmp_174"}, {"value": 6, "name": "statictmp_175"}, {"value": 12, "name": "statictmp_176"}, {"value": 56, "name": "statictmp_177"}, {"value": 24, "name": "statictmp_179"}, {"value": 56, "name": "statictmp_180"}, {"value": 12, "name": "statictmp_181"}, {"value": 56, "name": "statictmp_182"}, {"value": 84, "name": "statictmp_183"}, {"value": 56, "name": "statictmp_184"}, {"value": 48, "name": "statictmp_186"}, {"value": 56, "name": "statictmp_187"}, {"value": 18, "name": "statictmp_188"}, {"value": 56, "name": "statictmp_189"}, {"value": 36, "name": "statictmp_191"}, {"value": 56, "name": "statictmp_192"}, {"value": 6, "name": "statictmp_193"}, {"value": 56, "name": "statictmp_194"}, {"value": 12, "name": "statictmp_195"}, {"value": 56, "name": "statictmp_196"}, {"value": 6, "name": "statictmp_197"}, {"value": 56, "name": "statictmp_198"}, {"value": 12, "name": "statictmp_199"}, {"value": 56, "name": "statictmp_200"}, {"value": 12, "name": "statictmp_202"}, {"value": 56, "name": "statictmp_203"}, {"value": 24, "name": "statictmp_205"}, {"value": 56, "name": "statictmp_206"}, {"value": 24, "name": "statictmp_208"}, {"value": 56, "name": "statictmp_209"}, {"value": 24, "name": "statictmp_210"}, {"value": 56, "name": "statictmp_211"}, {"value": 18, "name": "statictmp_212"}, {"value": 56, "name": "statictmp_213"}, {"value": 558, "name": "statictmp_214"}, {"value": 864, "name": "statictmp_215"}, {"value": 56, "name": "statictmp_216"}, {"value": 18, "name": "statictmp_217"}, {"value": 56, "name": "statictmp_218"}, {"value": 48, "name": "statictmp_220"}, {"value": 56, "name": "statictmp_221"}, {"value": 72, "name": "statictmp_223"}, {"value": 56, "name": "statictmp_224"}, {"value": 48, "name": "statictmp_225"}, {"value": 56, "name": "statictmp_226"}, {"value": 12, "name": "statictmp_228"}, {"value": 56, "name": "statictmp_229"}, {"value": 24, "name": "statictmp_230"}, {"value": 56, "name": "statictmp_231"}, {"value": 60, "name": "statictmp_233"}, {"value": 56, "name": "statictmp_234"}, {"value": 12, "name": "statictmp_236"}, {"value": 56, "name": "statictmp_237"}, {"value": 12, "name": "statictmp_239"}, {"value": 56, "name": "statictmp_240"}, {"value": 192, "name": "statictmp_241"}, {"value": 56, "name": "statictmp_242"}, {"value": 48, "name": "statictmp_243"}, {"value": 56, "name": "statictmp_244"}, {"value": 12, "name": "statictmp_245"}, {"value": 60, "name": "statictmp_246"}, {"value": 56, "name": "statictmp_247"}, {"value": 12, "name": "statictmp_249"}, {"value": 56, "name": "statictmp_250"}, {"value": 180, "name": "statictmp_252"}, {"value": 56, "name": "statictmp_253"}, {"value": 198, "name": "statictmp_254"}, {"value": 36, "name": "statictmp_255"}, {"value": 56, "name": "statictmp_256"}, {"value": 84, "name": "statictmp_257"}, {"value": 56, "name": "statictmp_258"}, {"value": 96, "name": "statictmp_259"}, {"value": 56, "name": "statictmp_260"}, {"value": 66, "name": "statictmp_261"}, {"value": 60, "name": "statictmp_262"}, {"value": 56, "name": "statictmp_263"}, {"value": 84, "name": "statictmp_264"}, {"value": 56, "name": "statictmp_265"}, {"value": 6, "name": "statictmp_266"}, {"value": 56, "name": "statictmp_267"}, {"value": 36, "name": "statictmp_269"}, {"value": 56, "name": "statictmp_270"}, {"value": 54, "name": "statictmp_271"}, {"value": 56, "name": "statictmp_272"}, {"value": 12, "name": "statictmp_273"}, {"value": 24, "name": "statictmp_274"}, {"value": 56, "name": "statictmp_275"}, {"value": 24, "name": "statictmp_277"}, {"value": 56, "name": "statictmp_278"}, {"value": 120, "name": "statictmp_279"}, {"value": 84, "name": "statictmp_280"}, {"value": 56, "name": "statictmp_281"}, {"value": 24, "name": "statictmp_283"}, {"value": 56, "name": "statictmp_284"}, {"value": 24, "name": "statictmp_286"}, {"value": 56, "name": "statictmp_287"}, {"value": 18, "name": "statictmp_288"}, {"value": 56, "name": "statictmp_289"}, {"value": 12, "name": "statictmp_291"}, {"value": 56, "name": "statictmp_292"}, {"value": 84, "name": "statictmp_293"}, {"value": 56, "name": "statictmp_294"}, {"value": 42, "name": "statictmp_295"}, {"value": 12, "name": "statictmp_296"}, {"value": 56, "name": "statictmp_297"}, {"value": 12, "name": "statictmp_298"}, {"value": 56, "name": "statictmp_299"}, {"value": 96, "name": "statictmp_301"}, {"value": 56, "name": "statictmp_302"}, {"value": 24, "name": "statictmp_303"}, {"value": 56, "name": "statictmp_304"}, {"value": 24, "name": "statictmp_306"}, {"value": 56, "name": "statictmp_307"}, {"value": 24, "name": "statictmp_309"}, {"value": 56, "name": "statictmp_310"}, {"value": 108, "name": "statictmp_311"}, {"value": 56, "name": "statictmp_312"}, {"value": 186, "name": "statictmp_313"}, {"value": 56, "name": "statictmp_314"}, {"value": 18, "name": "statictmp_315"}, {"value": 56, "name": "statictmp_316"}, {"value": 30, "name": "statictmp_317"}, {"value": 56, "name": "statictmp_318"}, {"value": 36, "name": "statictmp_320"}, {"value": 56, "name": "statictmp_321"}, {"value": 84, "name": "statictmp_323"}, {"value": 56, "name": "statictmp_324"}, {"value": 6, "name": "statictmp_325"}, {"value": 56, "name": "statictmp_326"}, {"value": 12, "name": "statictmp_328"}, {"value": 56, "name": "statictmp_329"}, {"value": 24, "name": "statictmp_331"}, {"value": 56, "name": "statictmp_332"}, {"value": 12, "name": "statictmp_334"}, {"value": 56, "name": "statictmp_335"}, {"value": 54, "name": "statictmp_336"}, {"value": 56, "name": "statictmp_337"}, {"value": 12, "name": "statictmp_338"}, {"value": 56, "name": "statictmp_339"}, {"value": 24, "name": "statictmp_341"}, {"value": 56, "name": "statictmp_342"}, {"value": 36, "name": "statictmp_344"}, {"value": 56, "name": "statictmp_345"}, {"value": 18, "name": "statictmp_346"}, {"value": 56, "name": "statictmp_347"}, {"value": 24, "name": "statictmp_349"}, {"value": 56, "name": "statictmp_350"}, {"value": 36, "name": "statictmp_352"}, {"value": 56, "name": "statictmp_353"}, {"value": 12, "name": "statictmp_355"}, {"value": 56, "name": "statictmp_356"}, {"value": 36, "name": "statictmp_358"}, {"value": 56, "name": "statictmp_359"}, {"value": 24, "name": "statictmp_361"}, {"value": 56, "name": "statictmp_362"}, {"value": 36, "name": "statictmp_363"}, {"value": 12, "name": "statictmp_364"}, {"value": 56, "name": "statictmp_365"}, {"value": 36, "name": "statictmp_367"}, {"value": 56, "name": "statictmp_368"}, {"value": 60, "name": "statictmp_370"}, {"value": 56, "name": "statictmp_371"}, {"value": 18, "name": "statictmp_372"}, {"value": 56, "name": "statictmp_373"}, {"value": 24, "name": "statictmp_375"}, {"value": 56, "name": "statictmp_376"}, {"value": 24, "name": "statictmp_377"}, {"value": 56, "name": "statictmp_378"}, {"value": 36, "name": "statictmp_380"}, {"value": 56, "name": "statictmp_381"}, {"value": 6, "name": "statictmp_382"}, {"value": 56, "name": "statictmp_383"}, {"value": 6, "name": "statictmp_384"}, {"value": 56, "name": "statictmp_385"}, {"value": 6, "name": "statictmp_386"}, {"value": 56, "name": "statictmp_387"}, {"value": 36, "name": "statictmp_389"}, {"value": 56, "name": "statictmp_390"}, {"value": 12, "name": "statictmp_392"}, {"value": 56, "name": "statictmp_393"}, {"value": 12, "name": "statictmp_395"}, {"value": 56, "name": "statictmp_396"}, {"value": 12, "name": "statictmp_398"}, {"value": 56, "name": "statictmp_399"}, {"value": 24, "name": "statictmp_401"}, {"value": 56, "name": "statictmp_402"}, {"value": 12, "name": "statictmp_404"}, {"value": 56, "name": "statictmp_405"}, {"value": 12, "name": "statictmp_407"}, {"value": 56, "name": "statictmp_408"}, {"value": 84, "name": "statictmp_409"}, {"value": 56, "name": "statictmp_410"}, {"value": 24, "name": "statictmp_412"}, {"value": 56, "name": "statictmp_413"}, {"value": 24, "name": "statictmp_415"}, {"value": 56, "name": "statictmp_416"}, {"value": 60, "name": "statictmp_418"}, {"value": 56, "name": "statictmp_419"}, {"value": 12, "name": "statictmp_421"}, {"value": 56, "name": "statictmp_422"}, {"value": 12, "name": "statictmp_424"}, {"value": 56, "name": "statictmp_425"}, {"value": 6, "name": "statictmp_426"}, {"value": 56, "name": "statictmp_427"}, {"value": 24, "name": "statictmp_429"}, {"value": 56, "name": "statictmp_430"}, {"value": 36, "name": "statictmp_432"}, {"value": 56, "name": "statictmp_433"}, {"value": 12, "name": "statictmp_434"}, {"value": 56, "name": "statictmp_435"}, {"value": 12, "name": "statictmp_436"}, {"value": 56, "name": "statictmp_437"}, {"value": 12, "name": "statictmp_438"}, {"value": 56, "name": "statictmp_439"}, {"value": 12, "name": "statictmp_440"}, {"value": 56, "name": "statictmp_441"}, {"value": 24, "name": "statictmp_443"}, {"value": 56, "name": "statictmp_444"}, {"value": 12, "name": "statictmp_446"}, {"value": 56, "name": "statictmp_447"}, {"value": 24, "name": "statictmp_449"}, {"value": 56, "name": "statictmp_450"}, {"value": 36, "name": "statictmp_452"}, {"value": 56, "name": "statictmp_453"}, {"value": 72, "name": "statictmp_454"}, {"value": 12, "name": "statictmp_455"}, {"value": 56, "name": "statictmp_456"}, {"value": 24, "name": "statictmp_458"}, {"value": 56, "name": "statictmp_459"}, {"value": 12, "name": "statictmp_460"}, {"value": 56, "name": "statictmp_461"}, {"value": 6, "name": "statictmp_462"}, {"value": 56, "name": "statictmp_463"}, {"value": 18, "name": "statictmp_464"}, {"value": 56, "name": "statictmp_465"}, {"value": 12, "name": "statictmp_466"}, {"value": 56, "name": "statictmp_467"}, {"value": 18, "name": "statictmp_468"}, {"value": 56, "name": "statictmp_469"}, {"value": 12, "name": "statictmp_470"}, {"value": 56, "name": "statictmp_471"}, {"value": 30, "name": "statictmp_472"}, {"value": 56, "name": "statictmp_473"}, {"value": 12, "name": "statictmp_474"}, {"value": 56, "name": "statictmp_475"}, {"value": 24, "name": "statictmp_477"}, {"value": 56, "name": "statictmp_478"}, {"value": 96, "name": "statictmp_479"}, {"value": 56, "name": "statictmp_480"}, {"value": 36, "name": "statictmp_482"}, {"value": 56, "name": "statictmp_483"}, {"value": 78, "name": "statictmp_484"}, {"value": 56, "name": "statictmp_485"}, {"value": 6, "name": "statictmp_486"}, {"value": 56, "name": "statictmp_487"}, {"value": 12, "name": "statictmp_488"}, {"value": 56, "name": "statictmp_489"}, {"value": 42, "name": "statictmp_490"}, {"value": 56, "name": "statictmp_491"}, {"value": 18, "name": "statictmp_492"}, {"value": 56, "name": "statictmp_493"}, {"value": 24, "name": "statictmp_495"}, {"value": 56, "name": "statictmp_496"}, {"value": 24, "name": "statictmp_498"}, {"value": 56, "name": "statictmp_499"}, {"value": 6, "name": "statictmp_500"}, {"value": 56, "name": "statictmp_501"}, {"value": 24, "name": "statictmp_503"}, {"value": 56, "name": "statictmp_504"}, {"value": 12, "name": "statictmp_505"}, {"value": 56, "name": "statictmp_506"}, {"value": 18, "name": "statictmp_507"}, {"value": 56, "name": "statictmp_508"}, {"value": 24, "name": "statictmp_509"}, {"value": 56, "name": "statictmp_510"}, {"value": 126, "name": "statictmp_511"}, {"value": 56, "name": "statictmp_512"}, {"value": 42, "name": "statictmp_513"}, {"value": 12, "name": "statictmp_514"}, {"value": 56, "name": "statictmp_515"}, {"value": 726, "name": "statictmp_516"}, {"value": 372, "name": "statictmp_517"}, {"value": 56, "name": "statictmp_518"}, {"value": 138, "name": "statictmp_519"}, {"value": 60, "name": "statictmp_520"}, {"value": 56, "name": "statictmp_521"}, {"value": 36, "name": "statictmp_522"}, {"value": 56, "name": "statictmp_523"}, {"value": 60, "name": "statictmp_524"}, {"value": 56, "name": "statictmp_525"}, {"value": 12, "name": "statictmp_526"}, {"value": 56, "name": "statictmp_527"}, {"value": 6, "name": "statictmp_528"}, {"value": 56, "name": "statictmp_529"}, {"value": 42, "name": "statictmp_530"}, {"value": 84, "name": "statictmp_531"}, {"value": 56, "name": "statictmp_532"}, {"value": 6, "name": "statictmp_533"}, {"value": 56, "name": "statictmp_534"}, {"value": 42, "name": "statictmp_535"}, {"value": 56, "name": "statictmp_536"}, {"value": 12, "name": "statictmp_537"}, {"value": 192, "name": "statictmp_538"}, {"value": 56, "name": "statictmp_539"}, {"value": 876, "name": "statictmp_540"}, {"value": 576, "name": "statictmp_541"}, {"value": 56, "name": "statictmp_542"}, {"value": 42, "name": "statictmp_543"}, {"value": 48, "name": "statictmp_544"}, {"value": 56, "name": "statictmp_545"}, {"value": 90, "name": "statictmp_546"}, {"value": 96, "name": "statictmp_547"}, {"value": 56, "name": "statictmp_548"}, {"value": 24, "name": "statictmp_549"}, {"value": 56, "name": "statictmp_550"}, {"value": 24, "name": "statictmp_551"}, {"value": 56, "name": "statictmp_552"}, {"value": 120, "name": "statictmp_553"}, {"value": 56, "name": "statictmp_554"}, {"value": 420, "name": "statictmp_555"}, {"value": 768, "name": "statictmp_556"}, {"value": 56, "name": "statictmp_557"}, {"value": 12, "name": "statictmp_558"}, {"value": 36, "name": "statictmp_559"}, {"value": 56, "name": "statictmp_560"}, {"value": 168, "name": "statictmp_561"}, {"value": 56, "name": "statictmp_562"}, {"value": 30, "name": "statictmp_563"}, {"value": 56, "name": "statictmp_564"}, {"value": 24, "name": "statictmp_565"}, {"value": 12, "name": "statictmp_566"}, {"value": 56, "name": "statictmp_567"}, {"value": 78, "name": "statictmp_568"}, {"value": 56, "name": "statictmp_569"}, {"value": 18, "name": "statictmp_570"}, {"value": 56, "name": "statictmp_571"}, {"value": 264, "name": "statictmp_572"}, {"value": 264, "name": "statictmp_573"}, {"value": 56, "name": "statictmp_574"}, {"value": 108, "name": "statictmp_575"}, {"value": 156, "name": "statictmp_576"}, {"value": 56, "name": "statictmp_577"}, {"value": 378, "name": "statictmp_578"}, {"value": 372, "name": "statictmp_579"}, {"value": 56, "name": "statictmp_580"}, {"value": 54, "name": "statictmp_581"}, {"value": 48, "name": "statictmp_582"}, {"value": 56, "name": "statictmp_583"}, {"value": 12, "name": "statictmp_584"}, {"value": 12, "name": "statictmp_585"}, {"value": 56, "name": "statictmp_586"}, {"value": 60, "name": "statictmp_587"}, {"value": 6080, "name": "statictmp_588"}, {"value": 352, "name": "statictmp_589"}, {"value": 56, "name": "statictmp_590"}, {"value": 6, "name": "statictmp_591"}, {"value": 56, "name": "statictmp_592"}, {"value": 6, "name": "statictmp_593"}, {"value": 56, "name": "statictmp_594"}, {"value": 12, "name": "statictmp_595"}, {"value": 56, "name": "statictmp_596"}, {"value": 6, "name": "statictmp_597"}, {"value": 56, "name": "statictmp_598"}, {"value": 612, "name": "statictmp_599"}, {"value": 56, "name": "statictmp_60"}, {"value": 60, "name": "statictmp_600"}, {"value": 56, "name": "statictmp_601"}, {"value": 54, "name": "statictmp_602"}, {"value": 56, "name": "statictmp_603"}, {"value": 612, "name": "statictmp_604"}, {"value": 60, "name": "statictmp_605"}, {"value": 56, "name": "statictmp_606"}, {"value": 12, "name": "statictmp_607"}, {"value": 56, "name": "statictmp_608"}, {"value": 12, "name": "statictmp_609"}, {"value": 2142, "name": "statictmp_61"}, {"value": 2148, "name": "statictmp_62"}, {"value": 56, "name": "statictmp_63"}, {"value": 1056, "name": "statictmp_64"}, {"value": 792, "name": "statictmp_65"}, {"value": 56, "name": "statictmp_66"}, {"value": 396, "name": "statictmp_67"}, {"value": 564, "name": "statictmp_68"}, {"value": 56, "name": "statictmp_69"}, {"value": 672, "name": "statictmp_70"}, {"value": 420, "name": "statictmp_71"}, {"value": 56, "name": "statictmp_72"}, {"value": 762, "name": "statictmp_73"}, {"value": 744, "name": "statictmp_74"}, {"value": 56, "name": "statictmp_75"}, {"value": 30, "name": "statictmp_76"}, {"value": 48, "name": "statictmp_77"}, {"value": 40, "name": "statictmp_78"}, {"value": 56, "name": "statictmp_79"}, {"value": 84, "name": "statictmp_80"}, {"value": 84, "name": "statictmp_81"}, {"value": 56, "name": "statictmp_82"}, {"value": 12, "name": "statictmp_83"}, {"value": 56, "name": "statictmp_84"}, {"value": 66, "name": "statictmp_85"}, {"value": 60, "name": "statictmp_86"}, {"value": 56, "name": "statictmp_87"}, {"value": 6, "name": "statictmp_88"}, {"value": 24, "name": "statictmp_89"}, {"value": 56, "name": "statictmp_90"}, {"value": 6, "name": "statictmp_91"}, {"value": 56, "name": "statictmp_92"}, {"value": 702, "name": "statictmp_93"}, {"value": 396, "name": "statictmp_94"}, {"value": 56, "name": "statictmp_95"}, {"value": 240, "name": "statictmp_96"}, {"value": 48, "name": "statictmp_97"}, {"value": 56, "name": "statictmp_98"}, {"value": 1680, "name": "statictmp_99"}, {"value": 260, "name": "to"}], "name": "unicode."}, {"children": [{"value": 363, "name": "DecodeLastRune"}, {"value": 346, "name": "DecodeLastRuneInString"}, {"value": 529, "name": "DecodeRune"}, {"value": 529, "name": "DecodeRuneInString"}, {"value": 325, "name": "EncodeRune"}, {"value": 199, "name": "FullRune"}, {"value": 313, "name": "RuneCount"}, {"value": 313, "name": "RuneCountInString"}, {"value": 361, "name": "Valid"}, {"value": 361, "name": "ValidString"}, {"value": 10, "name": "acceptRanges"}, {"value": 256, "name": "first"}], "name": "unicode/utf8."}, {"value": 383452, "name": "TYPEDATA"}], "name": "go \u00b7 "}, {"children": [{"children": [{"value": 32, "name": "CTL"}], "name": "BSWAP_SHUFB_"}, {"value": 12, "name": "DBApplyBatchRepr"}, {"value": 6, "name": "DBBatchRepr"}, {"value": 1132, "name": "DBBatchReprVerify"}, {"value": 12, "name": "DBClose"}, {"value": 46, "name": "DBCommitAndCloseBatch"}, {"value": 201, "name": "DBCompact"}, {"value": 34, "name": "DBDelete"}, {"value": 691, "name": "DBDeleteIterRange"}, {"value": 57, "name": "DBDeleteRange"}, {"value": 450, "name": "DBDestroy"}, {"value": 628, "name": "DBEngineAddFile"}, {"value": 176, "name": "DBFlush"}, {"value": 34, "name": "DBGet"}, {"value": 5, "name": "DBGetSSTables"}, {"value": 9, "name": "DBGetStats"}, {"value": 5, "name": "DBGetUserProperties"}, {"value": 34, "name": "DBIterDestroy"}, {"value": 746, "name": "DBIterNext"}, {"value": 611, "name": "DBIterPrev"}, {"value": 160, "name": "DBIterSeek"}, {"value": 41, "name": "DBIterSeekToFirst"}, {"value": 41, "name": "DBIterSeekToLast"}, {"value": 34, "name": "DBMerge"}, {"value": 440, "name": "DBMergeOne"}, {"value": 183, "name": "DBNewBatch"}, {"value": 70, "name": "DBNewCache"}, {"value": 13, "name": "DBNewIter"}, {"value": 108, "name": "DBNewSnapshot"}, {"value": 1699, "name": "DBOpen"}, {"value": 34, "name": "DBPut"}, {"value": 178, "name": "DBRefCache"}, {"value": 136, "name": "DBReleaseCache"}, {"value": 761, "name": "DBRunLDB"}, {"value": 303, "name": "DBSstFileWriterAdd"}, {"value": 179, "name": "DBSstFileWriterClose"}, {"value": 466, "name": "DBSstFileWriterNew"}, {"value": 350, "name": "DBSstFileWriterOpen"}, {"value": 512, "name": "K256"}, {"children": [{"value": 128, "name": "AR"}], "name": "K_XMM_"}, {"value": 67, "name": "MVCCComputeStats"}, {"value": 464, "name": "_C_time_locale"}, {"value": 4, "name": "_IO_stdin_used"}, {"value": 104, "name": "ToDBStatus(rocksdb::Status const&)"}, {"value": 63, "name": "ToDBString(rocksdb::Slice const&)"}, {"value": 69, "name": "DecodeUint32(rocksdb::Slice*, unsigned int*)"}, {"value": 156, "name": "DecodeUint64(rocksdb::Slice*, unsigned long*)"}, {"value": 81, "name": "EncodeUint32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)"}, {"value": 128, "name": "EncodeUint64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long)"}, {"value": 2369, "name": "DBMakeOptions(DBOptions)"}, {"value": 332, "name": "MurmurHash64A(void const*, int, unsigned int)"}, {"value": 97, "name": "DecodeTimestamp(rocksdb::Slice*, long*, int*)"}, {"value": 107, "name": "DecodeHLCTimestamp(rocksdb::Slice, cockroach::util::hlc::Timestamp*)"}, {"value": 30, "name": "GetDBBatchInserter(rocksdb::WriteBatchBase*)"}, {"value": 8, "name": "CockroachComparator()"}, {"value": 297, "name": "EncodePrefixNextKey[abi:cxx11](DBSlice)"}, {"value": 1995, "name": "MVCCComputeStatsInternal(rocksdb::Iterator*, DBKey, DBKey, long)"}, {"value": 89, "name": "ToDBKey(rocksdb::Slice const&)"}, {"value": 7, "name": "ToSlice(DBSlice)"}, {"value": 7, "name": "ToSlice(DBString)"}, {"value": 51, "name": "SplitKey(rocksdb::Slice, rocksdb::Slice*, rocksdb::Slice*)"}, {"value": 144, "name": "ToString[abi:cxx11](DBSlice)"}, {"value": 219, "name": "DecodeKey(rocksdb::Slice, rocksdb::Slice*, long*, int*)"}, {"value": 371, "name": "EncodeKey[abi:cxx11](DBKey)"}, {"value": 308, "name": "FmtStatus(char const*, ...)"}, {"value": 84, "name": "KeyPrefix(rocksdb::Slice const&)"}, {"value": 7, "name": "ToDBSlice(DBString const&)"}, {"value": 7, "name": "ToDBSlice(rocksdb::Slice const&)"}, {"children": [{"children": [{"children": [{"value": 32, "name": "instance"}], "name": "Get()::"}, {"value": 126, "name": "~EnvRegistry()"}], "name": "EnvRegistry::"}, {"children": [{"children": [{"value": 24, "name": "ctx"}], "name": "EnterUnbatched(rocksdb::WriteThread::Writer*, rocksdb::InstrumentedMutex*)::"}, {"children": [{"value": 24, "name": "ctx"}], "name": "JoinBatchGroup(rocksdb::WriteThread::Writer*)::"}, {"children": [{"value": 24, "name": "ctx"}], "name": "CompleteParallelWorker(rocksdb::WriteThread::Writer*)::"}, {"value": 536, "name": "AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*)"}, {"value": 74, "name": "ExitUnbatched(rocksdb::WriteThread::Writer*)"}, {"value": 167, "name": "EnterUnbatched(rocksdb::WriteThread::Writer*, rocksdb::InstrumentedMutex*)"}, {"value": 139, "name": "JoinBatchGroup(rocksdb::WriteThread::Writer*)"}, {"value": 307, "name": "BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char)"}, {"value": 581, "name": "CompleteParallelWorker(rocksdb::WriteThread::Writer*)"}, {"value": 250, "name": "EarlyExitParallelGroup(rocksdb::WriteThread::Writer*)"}, {"value": 407, "name": "ExitAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::Writer*, rocksdb::Status)"}, {"value": 52, "name": "CreateMissingNewerLinks(rocksdb::WriteThread::Writer*)"}, {"value": 495, "name": "EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::Writer**, rocksdb::autovector<rocksdb::WriteThread::Writer*, 8ul>*)"}, {"value": 224, "name": "LaunchParallelFollowers(rocksdb::WriteThread::ParallelGroup*, unsigned long)"}, {"value": 52, "name": "LinkOne(rocksdb::WriteThread::Writer*, bool*)"}, {"value": 158, "name": "SetState(rocksdb::WriteThread::Writer*, unsigned char)"}, {"value": 32, "name": "WriteThread(unsigned long, unsigned long)"}], "name": "WriteThread::"}, {"children": [{"children": [{"children": [{"value": 9, "name": "a"}, {"children": [{"value": 33, "name": "~A()"}], "name": "A::"}], "name": "StaticMeta()::"}, {"value": 154, "name": "GetHandler(unsigned int)"}, {"value": 265, "name": "SetHandler(unsigned int, void (*)(void*))"}, {"value": 406, "name": "OnThreadExit(void*)"}, {"value": 63, "name": "AddThreadData(rocksdb::ThreadLocalPtr::ThreadData*)"}, {"value": 209, "name": "CompareAndSwap(unsigned int, void*, void*&)"}, {"value": 403, "name": "GetThreadLocal()"}, {"value": 61, "name": "RemoveThreadData(rocksdb::ThreadLocalPtr::ThreadData*)"}, {"value": 223, "name": "Fold(unsigned int, std::function<void (void*, void*)>, void*)"}, {"value": 188, "name": "Swap(unsigned int, void*)"}, {"value": 8, "name": "tls_"}, {"value": 155, "name": "GetId()"}, {"value": 17, "name": "Mutex()"}, {"value": 185, "name": "Reset(unsigned int, void*)"}, {"value": 277, "name": "Scrape(unsigned int, rocksdb::autovector<void*, 8ul>*, void*)"}, {"value": 516, "name": "ReclaimId(unsigned int)"}, {"value": 682, "name": "StaticMeta()"}, {"value": 47, "name": "Get(unsigned int) const"}, {"value": 108, "name": "PeekId() const"}], "name": "StaticMeta::"}, {"children": [{"value": 16, "name": "inst"}], "name": "Instance()::"}, {"value": 47, "name": "CompareAndSwap(void*, void*&)"}, {"value": 2, "name": "InitSingletons()"}, {"value": 219, "name": "Fold(std::function<void (void*, void*)>, void*)"}, {"value": 32, "name": "Swap(void*)"}, {"value": 32, "name": "Reset(void*)"}, {"value": 50, "name": "Scrape(rocksdb::autovector<void*, 8ul>*, void*)"}, {"value": 115, "name": "Instance()"}, {"value": 120, "name": "ThreadLocalPtr(void (*)(void*))"}, {"value": 78, "name": "~ThreadLocalPtr()"}, {"value": 53, "name": "Get() const"}], "name": "ThreadLocalPtr::"}, {"children": [{"value": 16, "name": "bytewise"}], "name": "BytewiseComparator()::"}, {"children": [{"value": 16, "name": "rbytewise"}], "name": "ReverseBytewiseComparator()::"}, {"children": [{"children": [{"value": 128, "name": "env"}], "name": "Default()::default_"}, {"value": 3, "name": "UnSchedule(void*, rocksdb::Env::Priority)"}, {"value": 1, "name": "WaitForJoin()"}, {"value": 74, "name": "GetThreadList(std::vector<rocksdb::ThreadStatus, std::allocator<rocksdb::ThreadStatus> >*)"}, {"value": 74, "name": "NewRandomRWFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomRWFile, std::default_delete<rocksdb::RandomRWFile> >*, rocksdb::EnvOptions const&)"}, {"value": 698, "name": "GenerateUniqueId[abi:cxx11]()"}, {"value": 205, "name": "ReuseWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 1292, "name": "GetChildrenFileAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::Env::FileAttributes, std::allocator<rocksdb::Env::FileAttributes> >*)"}, {"value": 1, "name": "LowerThreadPoolIOPriority(rocksdb::Env::Priority)"}, {"value": 618, "name": "Default()"}, {"value": 74, "name": "LinkFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 22, "name": "NowNanos()"}, {"value": 7, "name": "~Env()"}, {"value": 50, "name": "GetThreadID() const"}, {"value": 45, "name": "OptimizeForLogWrite(rocksdb::EnvOptions const&, rocksdb::DBOptions const&) const"}, {"value": 3, "name": "GetThreadPoolQueueLen(rocksdb::Env::Priority) const"}, {"value": 5, "name": "GetThreadStatusUpdater() const"}, {"value": 34, "name": "OptimizeForManifestWrite(rocksdb::EnvOptions const&) const"}], "name": "Env::"}, {"children": [{"value": 269, "name": "upheap(unsigned long)"}, {"value": 503, "name": "downheap(unsigned long)"}], "name": "BinaryHeap<rocksdb::IteratorWrapper*, rocksdb::MaxIteratorComparator>::"}, {"children": [{"value": 269, "name": "upheap(unsigned long)"}, {"value": 503, "name": "downheap(unsigned long)"}], "name": "BinaryHeap<rocksdb::IteratorWrapper*, rocksdb::MinIteratorComparator>::"}, {"value": 5150, "name": "BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIterator*, std::unique_ptr<rocksdb::InternalIterator, std::default_delete<rocksdb::InternalIterator> >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > > const*, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, rocksdb::CompressionType, rocksdb::CompressionOptions const&, bool, rocksdb::InternalStats*, rocksdb::TableFileCreationReason, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, int)"}, {"children": [{"value": 490, "name": "GetBoundaryKeys(rocksdb::VersionStorageInfo*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&, rocksdb::Slice*, rocksdb::Slice*)"}, {"value": 65, "name": "SetInputVersion(rocksdb::Version*)"}, {"value": 193, "name": "IsFullCompaction(rocksdb::VersionStorageInfo*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&)"}, {"value": 239, "name": "AddInputDeletions(rocksdb::VersionEdit*)"}, {"value": 247, "name": "IsBottommostLevel(int, rocksdb::VersionStorageInfo*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&)"}, {"value": 240, "name": "ReleaseCompactionFiles(rocksdb::Status)"}, {"children": [{"value": 5, "name": "IsBottommostLevel(int, rocksdb::VersionStorageInfo*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&)"}], "name": "TEST_"}, {"value": 114, "name": "MarkFilesBeingCompacted(bool)"}, {"value": 22, "name": "ResetNextCompactionIndex()"}, {"value": 654, "name": "Summary(char*, int)"}, {"value": 2936, "name": "Compaction(rocksdb::VersionStorageInfo*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> >, int, unsigned long, unsigned long, unsigned int, rocksdb::CompressionType, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >, bool, double, bool, rocksdb::CompactionReason)"}, {"value": 1042, "name": "~Compaction()"}, {"value": 532, "name": "IsTrivialMove() const"}, {"value": 216, "name": "InputLevelSummary(rocksdb::Compaction::InputLevelSummaryBuffer*) const"}, {"value": 29, "name": "IsOutputLevelEmpty() const"}, {"value": 86, "name": "CreateCompactionFilter() const"}, {"value": 206, "name": "CalculateTotalInputSize() const"}, {"value": 108, "name": "ShouldFormSubcompactions() const"}, {"value": 237, "name": "OutputFilePreallocationSize() const"}, {"value": 66, "name": "InputCompressionMatchesOutput() const"}, {"value": 389, "name": "KeyNotExistsBeyondOutputLevel(rocksdb::Slice const&, std::vector<unsigned long, std::allocator<unsigned long> >*) const"}], "name": "Compaction::"}, {"children": [{"value": 7, "name": "~Comparator()"}, {"value": 17, "name": "Equal(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "Comparator::"}, {"value": 397, "name": "CreateFile(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 278, "name": "EnvOptions(rocksdb::DBOptions const&)"}, {"value": 386, "name": "EnvOptions()"}], "name": "EnvOptions::"}, {"children": [{"value": 29, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 29, "name": "FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 32, "name": "RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 16, "name": "UnSchedule(void*, rocksdb::Env::Priority)"}, {"value": 32, "name": "UnlockFile(rocksdb::FileLock*)"}, {"value": 29, "name": "GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 29, "name": "GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 32, "name": "GetHostName(char*, unsigned long)"}, {"value": 16, "name": "StartThread(void (*)(void*), void*)"}, {"value": 13, "name": "WaitForJoin()"}, {"value": 29, "name": "NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*)"}, {"value": 32, "name": "TimeToString[abi:cxx11](unsigned long)"}, {"value": 32, "name": "GetThreadList(std::vector<rocksdb::ThreadStatus, std::allocator<rocksdb::ThreadStatus> >*)"}, {"value": 32, "name": "GetCurrentTime(long*)"}, {"value": 32, "name": "GetAbsolutePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 29, "name": "NewRandomRWFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomRWFile, std::default_delete<rocksdb::RandomRWFile> >*, rocksdb::EnvOptions const&)"}, {"value": 29, "name": "NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 32, "name": "GetTestDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 29, "name": "NewSequentialFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::SequentialFile, std::default_delete<rocksdb::SequentialFile> >*, rocksdb::EnvOptions const&)"}, {"value": 29, "name": "ReuseWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 29, "name": "CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 29, "name": "NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomAccessFile, std::default_delete<rocksdb::RandomAccessFile> >*, rocksdb::EnvOptions const&)"}, {"value": 16, "name": "SetBackgroundThreads(int, rocksdb::Env::Priority)"}, {"value": 16, "name": "SleepForMicroseconds(int)"}, {"value": 32, "name": "GetFileModificationTime(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 29, "name": "GetChildrenFileAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::Env::FileAttributes, std::allocator<rocksdb::Env::FileAttributes> >*)"}, {"value": 16, "name": "LowerThreadPoolIOPriority(rocksdb::Env::Priority)"}, {"value": 16, "name": "IncBackgroundThreadsIfNeeded(int, rocksdb::Env::Priority)"}, {"value": 32, "name": "LinkFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 32, "name": "LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)"}, {"value": 16, "name": "Schedule(void (*)(void*), void*, rocksdb::Env::Priority, void*, void (*)(void*))"}, {"value": 29, "name": "CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 29, "name": "DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 32, "name": "NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)"}, {"value": 13, "name": "NowMicros()"}, {"value": 7, "name": "~EnvWrapper()"}, {"value": 13, "name": "GetThreadID() const"}, {"value": 16, "name": "GetThreadPoolQueueLen(rocksdb::Env::Priority) const"}, {"value": 13, "name": "GetThreadStatusUpdater() const"}], "name": "EnvWrapper::"}, {"value": 33, "name": "EscapeChar(char)"}, {"children": [{"value": 441, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 801, "name": "DoCommand()"}, {"value": 4042, "name": "GetCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~GetCommand()"}], "name": "GetCommand::"}, {"children": [{"value": 20, "name": "MarkKeyMayExist()"}, {"value": 790, "name": "SaveValue(rocksdb::ParsedInternalKey const&, rocksdb::Slice const&, bool)"}, {"value": 77, "name": "SaveValue(rocksdb::Slice const&, unsigned long)"}, {"value": 278, "name": "GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*)"}], "name": "GetContext::"}, {"children": [{"value": 175, "name": "AddValue(char const*)"}, {"value": 166, "name": "JSONWriter()"}, {"value": 325, "name": "operator<<(char const*)"}], "name": "JSONWriter::"}, {"children": [{"value": 479, "name": "Clean()"}, {"value": 371, "name": "JobContext(int, bool)"}, {"value": 288, "name": "~JobContext()"}], "name": "JobContext::"}, {"children": [{"value": 115, "name": "IsValueHex(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"children": [{"children": [{"value": 32, "name": "NAME[abi:cxx11]"}], "name": "CF_"}, {"children": [{"value": 32, "name": "HEX[abi:cxx11]"}], "name": "KEY_"}, {"children": [{"value": 32, "name": "END[abi:cxx11]"}, {"value": 32, "name": "START[abi:cxx11]"}], "name": "TTL_"}, {"children": [{"value": 32, "name": "KEYS[abi:cxx11]"}], "name": "MAX_"}, {"children": [{"value": 32, "name": "VALUE[abi:cxx11]"}], "name": "NO_"}, {"children": [{"value": 32, "name": "SIZE[abi:cxx11]"}], "name": "FILE_"}, {"value": 32, "name": "TIMESTAMP[abi:cxx11]"}, {"children": [{"value": 32, "name": "HEX[abi:cxx11]"}], "name": "VALUE_"}, {"children": [{"value": 32, "name": "SIZE[abi:cxx11]"}], "name": "BLOCK_"}, {"children": [{"value": 32, "name": "BITS[abi:cxx11]"}], "name": "BLOOM_"}, {"children": [{"value": 32, "name": "LEN[abi:cxx11]"}], "name": "FIX_PREFIX_"}, {"children": [{"value": 32, "name": "COMPACTION[abi:cxx11]"}], "name": "AUTO_"}, {"children": [{"value": 32, "name": "TYPE[abi:cxx11]"}, {"children": [{"value": 32, "name": "BYTES[abi:cxx11]"}], "name": "MAX_DICT_"}], "name": "COMPRESSION_"}, {"children": [{"value": 32, "name": "MISSING[abi:cxx11]"}], "name": "CREATE_IF_"}, {"children": [{"value": 32, "name": "SIZE[abi:cxx11]"}], "name": "WRITE_BUFFER_"}, {"children": [{"value": 32, "name": "SIZE[abi:cxx11]"}], "name": "DB_WRITE_BUFFER_"}, {"value": 32, "name": "DB[abi:cxx11]"}, {"value": 32, "name": "TO[abi:cxx11]"}, {"value": 32, "name": "HEX[abi:cxx11]"}, {"value": 32, "name": "TTL[abi:cxx11]"}, {"value": 32, "name": "FROM[abi:cxx11]"}, {"value": 32, "name": "PATH[abi:cxx11]"}], "name": "ARG_"}, {"value": 343, "name": "GetCfHandle()"}, {"value": 222, "name": "HexToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 161, "name": "StringToHex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 189, "name": "~ParsedParams()"}], "name": "ParsedParams::"}, {"value": 54, "name": "SetDBOptions(rocksdb::Options)"}, {"value": 133, "name": "StringToBool(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"}, {"value": 396, "name": "ParseKeyValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool, bool)"}, {"value": 30, "name": "PrintKeyValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)"}, {"value": 559, "name": "PrintKeyValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)"}, {"value": 3111, "name": "SelectCommand(rocksdb::LDBCommand::ParsedParams const&)"}, {"value": 796, "name": "ParseIntOption(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&, rocksdb::LDBCommandExecuteResult&)"}, {"value": 434, "name": "HelpRangeCmdArgs[abi:cxx11]()"}, {"value": 66, "name": "ParseStringOption(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 118, "name": "SetColumnFamilies(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const*)"}, {"value": 417, "name": "ParseBooleanOption(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)"}, {"value": 2399, "name": "BuildCmdLineOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)"}, {"value": 1467, "name": "InitFromCmdLineArgs(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, rocksdb::Options const&, rocksdb::LDBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const*, std::function<rocksdb::LDBCommand* (rocksdb::LDBCommand::ParsedParams const&)> const&)"}, {"value": 694, "name": "InitFromCmdLineArgs(int, char**, rocksdb::Options const&, rocksdb::LDBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const*)"}, {"value": 357, "name": "ValidateCmdLineOptions()"}, {"value": 4816, "name": "PrepareOptionsForOpenDB()"}, {"value": 273, "name": "Run()"}, {"value": 8, "name": "DELIM"}, {"value": 3797, "name": "OpenDB()"}, {"value": 113, "name": "CloseDB()"}, {"value": 115, "name": "IsKeyHex(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 1353, "name": "LDBCommand(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 615, "name": "~LDBCommand()"}], "name": "LDBCommand::"}, {"children": [{"value": 14, "name": "LDBOptions()"}], "name": "LDBOptions::"}, {"children": [{"value": 60, "name": "PrepareOptionsForOpenDB()"}, {"value": 441, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 500, "name": "DoCommand()"}, {"value": 4860, "name": "PutCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~PutCommand()"}], "name": "PutCommand::"}, {"children": [{"value": 370, "name": "SavePoints()"}], "name": "SavePoints::"}, {"children": [{"value": 87, "name": "EraseHandle(rocksdb::FileDescriptor const&, rocksdb::Cache::Handle*)"}, {"value": 1481, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::RangeDelAggregator*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int)"}, {"value": 13, "name": "ReleaseHandle(rocksdb::Cache::Handle*)"}, {"value": 982, "name": "GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool, int, bool)"}, {"value": 795, "name": "GetTableProperties(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, std::shared_ptr<rocksdb::TableProperties const>*, bool)"}, {"value": 13, "name": "GetTableReaderFromHandle(rocksdb::Cache::Handle*)"}, {"value": 256, "name": "GetMemoryUsageByTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&)"}, {"value": 2700, "name": "Get(rocksdb::ReadOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Slice const&, rocksdb::GetContext*, rocksdb::HistogramImpl*, bool, int)"}, {"value": 47, "name": "Evict(rocksdb::Cache*, unsigned long)"}, {"value": 923, "name": "FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)"}, {"value": 444, "name": "TableCache(rocksdb::ImmutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::Cache*)"}, {"value": 44, "name": "~TableCache()"}], "name": "TableCache::"}, {"children": [{"value": 6637, "name": "LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)"}, {"children": [{"value": 76, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 28, "name": "~LogReporter()"}], "name": "LogReporter::"}, {"value": 743, "name": "AddLiveFiles(std::vector<rocksdb::FileDescriptor, std::allocator<rocksdb::FileDescriptor> >*)"}, {"value": 5649, "name": "DumpManifest(rocksdb::Options&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool, bool, bool)"}, {"value": 154, "name": "AppendVersion(rocksdb::ColumnFamilyData*, rocksdb::Version*)"}, {"value": 1873, "name": "WriteSnapshot(rocksdb::log::Writer*)"}, {"value": 265, "name": "ApproximateSize(rocksdb::Version*, rocksdb::FdWithKeyRange const&, rocksdb::Slice const&)"}, {"value": 569, "name": "ApproximateSize(rocksdb::Version*, rocksdb::Slice const&, rocksdb::Slice const&, int, int)"}, {"value": 631, "name": "GetObsoleteFiles(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, unsigned long)"}, {"value": 90, "name": "LogAndApplyHelper(rocksdb::ColumnFamilyData*, rocksdb::VersionBuilder*, rocksdb::Version*, rocksdb::VersionEdit*, rocksdb::InstrumentedMutex*)"}, {"value": 952, "name": "MakeInputIterator(rocksdb::Compaction const*, rocksdb::RangeDelAggregator*)"}, {"value": 515, "name": "CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit*)"}, {"value": 257, "name": "GetMetadataForFile(unsigned long, int*, rocksdb::FileMetaData**, rocksdb::ColumnFamilyData**)"}, {"value": 32, "name": "GetNumLiveVersions(rocksdb::Version*)"}, {"value": 3764, "name": "ListColumnFamilies(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*)"}, {"value": 64, "name": "LogAndApplyCFHelper(rocksdb::VersionEdit*)"}, {"value": 1189, "name": "GetLiveFilesMetaData(std::vector<rocksdb::LiveFileMetaData, std::allocator<rocksdb::LiveFileMetaData> >*)"}, {"value": 535, "name": "GetTotalSstFilesSize(rocksdb::Version*)"}, {"value": 2474, "name": "ReduceNumberOfLevels(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Options const*, rocksdb::EnvOptions const&, int)"}, {"value": 161, "name": "ApproximateSizeLevel0(rocksdb::Version*, rocksdb::LevelFilesBrief const&, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 3, "name": "VerifyCompactionFileConsistency(rocksdb::Compaction*)"}, {"value": 17, "name": "MarkFileNumberUsedDuringRecovery(unsigned long)"}, {"value": 8979, "name": "Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool)"}, {"value": 1070, "name": "VersionSet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ImmutableDBOptions const*, rocksdb::EnvOptions const&, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::WriteController*)"}, {"value": 1322, "name": "~VersionSet()"}], "name": "VersionSet::"}, {"children": [{"value": 1253, "name": "ReadFirstLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long*)"}, {"value": 256, "name": "ArchiveWALFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"value": 847, "name": "GetUpdatesSince(unsigned long, std::unique_ptr<rocksdb::TransactionLogIterator, std::default_delete<rocksdb::TransactionLogIterator> >*, rocksdb::TransactionLogIterator::ReadOptions const&, rocksdb::VersionSet*)"}, {"value": 1788, "name": "ReadFirstRecord(rocksdb::WalFileType, unsigned long, unsigned long*)"}, {"value": 1104, "name": "GetSortedWalFiles(std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >&)"}, {"value": 1749, "name": "GetSortedWalsOfType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >&, rocksdb::WalFileType)"}, {"value": 3445, "name": "PurgeObsoleteWALFiles()"}, {"value": 394, "name": "RetainProbableWalFiles(std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >&, unsigned long)"}, {"children": [{"value": 226, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 28, "name": "~LogReporter()"}], "name": "ReadFirstLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long*)::LogReporter::"}], "name": "WalManager::"}, {"children": [{"value": 216, "name": "PutLogData(rocksdb::Slice const&)"}, {"value": 53, "name": "DeleteRange(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 53, "name": "DeleteRange(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 26, "name": "DeleteRange(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 26, "name": "DeleteRange(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 256, "name": "SetSavePoint()"}, {"value": 38, "name": "SingleDelete(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&)"}, {"value": 38, "name": "SingleDelete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 20, "name": "SingleDelete(rocksdb::SliceParts const&)"}, {"value": 17, "name": "SingleDelete(rocksdb::Slice const&)"}, {"value": 4, "name": "GetWriteBatch()"}, {"value": 281, "name": "RollbackToSavePoint()"}, {"value": 25, "name": "MarkWalTerminationPoint()"}, {"value": 53, "name": "Put(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 53, "name": "Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 23, "name": "Put(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 23, "name": "Put(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 179, "name": "Clear()"}, {"value": 53, "name": "Merge(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 53, "name": "Merge(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 23, "name": "Merge(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 23, "name": "Merge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 38, "name": "Delete(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&)"}, {"value": 38, "name": "Delete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 17, "name": "Delete(rocksdb::SliceParts const&)"}, {"value": 17, "name": "Delete(rocksdb::Slice const&)"}, {"children": [{"value": 79, "name": "MarkCommit(rocksdb::Slice const&)"}, {"value": 79, "name": "MarkRollback(rocksdb::Slice const&)"}, {"value": 1, "name": "SingleDelete(rocksdb::Slice const&)"}, {"value": 74, "name": "DeleteRangeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 79, "name": "MarkEndPrepare(rocksdb::Slice const&)"}, {"value": 106, "name": "SingleDeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 79, "name": "MarkBeginPrepare()"}, {"value": 1, "name": "Put(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 1, "name": "Merge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 109, "name": "PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 1, "name": "Delete(rocksdb::Slice const&)"}, {"value": 1, "name": "LogData(rocksdb::Slice const&)"}, {"value": 109, "name": "MergeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 3, "name": "Continue()"}, {"value": 106, "name": "DeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 7, "name": "~Handler()"}], "name": "Handler::"}, {"value": 190, "name": "WriteBatch(rocksdb::WriteBatch&&)"}, {"value": 346, "name": "WriteBatch(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 348, "name": "WriteBatch(rocksdb::WriteBatch const&)"}, {"value": 246, "name": "WriteBatch(unsigned long)"}, {"value": 398, "name": "~WriteBatch()"}, {"value": 131, "name": "operator=(rocksdb::WriteBatch&&)"}, {"value": 218, "name": "operator=(rocksdb::WriteBatch const&)"}, {"value": 85, "name": "HasRollback() const"}, {"value": 83, "name": "HasEndPrepare() const"}, {"value": 85, "name": "HasDeleteRange() const"}, {"value": 83, "name": "HasBeginPrepare() const"}, {"value": 83, "name": "HasSingleDelete() const"}, {"value": 77, "name": "ComputeContentFlags() const"}, {"value": 8, "name": "Count() const"}, {"value": 82, "name": "HasPut() const"}, {"value": 1722, "name": "Iterate(rocksdb::WriteBatch::Handler*) const"}, {"value": 83, "name": "HasMerge() const"}, {"value": 80, "name": "HasCommit() const"}, {"value": 83, "name": "HasDelete() const"}], "name": "WriteBatch::"}, {"value": 72, "name": "XXH32_init(unsigned int)"}, {"children": [{"value": 224, "name": "autovector()"}, {"value": 308, "name": "~autovector()"}], "name": "autovector<rocksdb::IngestedFileInfo, 8ul>::"}, {"value": 32, "name": "kPropFalse[abi:cxx11]"}, {"children": [{"value": 1, "name": "level"}, {"value": 344, "name": "context"}], "name": "perf_"}, {"children": [{"value": 194, "name": "DecodeFrom(rocksdb::Slice*)"}, {"value": 16, "name": "kNullBlockHandle"}, {"value": 197, "name": "EncodeTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 375, "name": "ToString[abi:cxx11](bool) const"}], "name": "BlockHandle::"}, {"value": 6, "name": "CloseTables(void*, unsigned long)"}, {"children": [{"value": 103, "name": "LogToBuffer(rocksdb::LogBuffer*, rocksdb::JSONWriter const&)"}, {"value": 103, "name": "Log(rocksdb::Logger*, rocksdb::JSONWriter const&)"}, {"value": 103, "name": "Log(rocksdb::JSONWriter const&)"}], "name": "EventLogger::"}, {"children": [{"value": 445, "name": "CalculateLB(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, rocksdb::FileIndexer::IndexLevel*, std::function<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*)>, std::function<void (rocksdb::FileIndexer::IndexUnit*, int)>)"}, {"value": 374, "name": "CalculateRB(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, rocksdb::FileIndexer::IndexLevel*, std::function<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*)>, std::function<void (rocksdb::FileIndexer::IndexUnit*, int)>)"}, {"value": 1528, "name": "UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)"}, {"value": 150, "name": "FileIndexer(rocksdb::Comparator const*)"}, {"value": 23, "name": "NumLevelIndex() const"}, {"value": 61, "name": "LevelIndexSize(unsigned long) const"}, {"value": 167, "name": "GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const"}], "name": "FileIndexer::"}, {"children": [{"value": 5, "name": "~LogFileImpl()"}, {"value": 5, "name": "SizeFileBytes() const"}, {"value": 5, "name": "StartSequence() const"}, {"value": 4, "name": "Type() const"}, {"value": 158, "name": "PathName[abi:cxx11]() const"}, {"value": 5, "name": "LogNumber() const"}], "name": "LogFileImpl::"}, {"value": 80, "name": "LogFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"value": 148, "name": "LogToBuffer(rocksdb::LogBuffer*, char const*, ...)"}, {"value": 130, "name": "LogToBuffer(rocksdb::LogBuffer*, unsigned long, char const*, ...)"}, {"children": [{"value": 1, "name": "MarkReadOnly()"}, {"value": 9, "name": "InsertWithHint(void*, void**)"}, {"value": 70, "name": "InsertConcurrently(void*)"}, {"value": 3, "name": "ApproximateNumEntries(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 9, "name": "GetDynamicPrefixIterator(rocksdb::Arena*)"}, {"value": 137, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 29, "name": "Allocate(unsigned long, char**)"}, {"value": 6, "name": "~MemTableRep()"}, {"value": 3, "name": "IsSnapshotSupported() const"}, {"value": 3, "name": "IsMergeOperatorSupported() const"}, {"value": 64, "name": "UserKey(char const*) const"}], "name": "MemTableRep::"}, {"children": [{"value": 5185, "name": "MergeUntil(rocksdb::InternalIterator*, rocksdb::RangeDelAggregator*, unsigned long, bool)"}, {"value": 290, "name": "FilterMerge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 568, "name": "TimedFullMerge(rocksdb::MergeOperator const*, rocksdb::Slice const&, rocksdb::Slice const*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::Env*, rocksdb::Slice*)"}], "name": "MergeHelper::"}, {"value": 198, "name": "NewLRUCache(unsigned long, int, bool, double)"}, {"value": 421, "name": "ParseUint64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 141, "name": "Reset()"}, {"value": 4032, "name": "ToString[abi:cxx11](bool) const"}], "name": "PerfContext::"}, {"children": [{"value": 333, "name": "GetUniqueIdFromFile(int, char*, unsigned long)"}], "name": "PosixHelper::"}, {"children": [{"value": 749, "name": "Logv(char const*, __va_list_tag*)"}, {"value": 52, "name": "Flush()"}, {"value": 86, "name": "~PosixLogger()"}, {"value": 5, "name": "GetLogFileSize() const"}], "name": "PosixLogger::"}, {"children": [{"value": 60, "name": "ReadOptions(bool, bool)"}, {"value": 62, "name": "ReadOptions()"}], "name": "ReadOptions::"}, {"children": [{"value": 7953, "name": "Run(int, char**)"}], "name": "SSTDumpTool::"}, {"children": [{"value": 1810, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 2841, "name": "DoCommand()"}, {"value": 8520, "name": "ScanCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~ScanCommand()"}], "name": "ScanCommand::"}, {"children": [{"value": 237, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"}, {"value": 32, "name": "SetOptions(rocksdb::ColumnFamilyHandle*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 16, "name": "GetProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 13, "name": "GetSnapshot()"}, {"value": 16, "name": "KeyMayExist(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 16, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 41, "name": "CompactFiles(rocksdb::CompactionOptions const&, rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, int, int)"}, {"value": 32, "name": "CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 36, "name": "GetLiveFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long*, bool)"}, {"value": 32, "name": "NewIterators(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Iterator*, std::allocator<rocksdb::Iterator*> >*)"}, {"value": 16, "name": "NumberLevels(rocksdb::ColumnFamilyHandle*)"}, {"value": 32, "name": "SetDBOptions(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 29, "name": "SingleDelete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 16, "name": "GetIntProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, unsigned long*)"}, {"value": 16, "name": "GetMapProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 32, "name": "GetUpdatesSince(unsigned long, std::unique_ptr<rocksdb::TransactionLogIterator, std::default_delete<rocksdb::TransactionLogIterator> >*, rocksdb::TransactionLogIterator::ReadOptions const&)"}, {"value": 16, "name": "ReleaseSnapshot(rocksdb::Snapshot const*)"}, {"value": 29, "name": "DropColumnFamily(rocksdb::ColumnFamilyHandle*)"}, {"value": 32, "name": "GetSortedWalFiles(std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >&)"}, {"value": 29, "name": "CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyHandle**)"}, {"value": 32, "name": "IngestExternalFile(rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, rocksdb::IngestExternalFileOptions const&)"}, {"value": 35, "name": "EnableFileDeletions(bool)"}, {"value": 20, "name": "GetApproximateSizes(rocksdb::ColumnFamilyHandle*, rocksdb::Range const*, int, unsigned long*, bool)"}, {"value": 32, "name": "PauseBackgroundWork()"}, {"value": 32, "name": "DisableFileDeletions()"}, {"value": 32, "name": "EnableAutoCompaction(std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&)"}, {"value": 16, "name": "GetLiveFilesMetaData(std::vector<rocksdb::LiveFileMetaData, std::allocator<rocksdb::LiveFileMetaData> >*)"}, {"value": 16, "name": "MaxMemCompactionLevel(rocksdb::ColumnFamilyHandle*)"}, {"value": 32, "name": "ContinueBackgroundWork()"}, {"value": 16, "name": "Level0StopWriteTrigger(rocksdb::ColumnFamilyHandle*)"}, {"value": 16, "name": "GetColumnFamilyMetaData(rocksdb::ColumnFamilyHandle*, rocksdb::ColumnFamilyMetaData*)"}, {"value": 16, "name": "GetAggregatedIntProperty(rocksdb::Slice const&, unsigned long*)"}, {"value": 32, "name": "GetPropertiesOfAllTables(rocksdb::ColumnFamilyHandle*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 29, "name": "DestroyColumnFamilyHandle(rocksdb::ColumnFamilyHandle*)"}, {"value": 32, "name": "GetPropertiesOfTablesInRange(rocksdb::ColumnFamilyHandle*, rocksdb::Range const*, unsigned long, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 29, "name": "Get(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 29, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 32, "name": "Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 29, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 29, "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)"}, {"value": 29, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 32, "name": "SyncWAL()"}, {"value": 32, "name": "MultiGet(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 5, "name": "GetBaseDB()"}, {"value": 13, "name": "GetRootDB()"}, {"value": 98, "name": "~StackableDB()"}, {"value": 32, "name": "GetOptions(rocksdb::ColumnFamilyHandle*) const"}, {"value": 32, "name": "GetDBOptions() const"}, {"value": 32, "name": "GetDbIdentity(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const"}, {"value": 13, "name": "DefaultColumnFamily() const"}, {"value": 13, "name": "GetLatestSequenceNumber() const"}, {"value": 13, "name": "GetEnv() const"}, {"value": 19, "name": "GetName[abi:cxx11]() const"}], "name": "StackableDB::"}, {"value": 799, "name": "StringSplit(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)"}, {"value": 1653, "name": "StringToMap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"children": [{"value": 3, "name": "NewRangeTombstoneIterator(rocksdb::ReadOptions const&)"}, {"value": 1, "name": "Close()"}, {"value": 1, "name": "Prepare(rocksdb::Slice const&)"}, {"value": 10, "name": "Prefetch(rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 74, "name": "DumpTable(rocksdb::WritableFile*)"}], "name": "TableReader::"}, {"children": [{"value": 10, "name": "SeekToLast()"}, {"value": 13, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 10, "name": "SeekToFirst()"}, {"value": 10, "name": "Next()"}, {"value": 10, "name": "Prev()"}, {"value": 13, "name": "Seek(rocksdb::Slice const&)"}, {"value": 103, "name": "~TtlIterator()"}, {"value": 10, "name": "key() const"}, {"value": 10, "name": "Valid() const"}, {"value": 20, "name": "value() const"}, {"value": 29, "name": "status() const"}], "name": "TtlIterator::"}, {"children": [{"value": 5762, "name": "DecodeFrom(rocksdb::Slice const&)"}, {"value": 1736, "name": "DecodeNewFile4From(rocksdb::Slice*)"}, {"value": 256, "name": "Clear()"}, {"value": 708, "name": "AddFile(int, unsigned long, unsigned int, unsigned long, rocksdb::InternalKey const&, rocksdb::InternalKey const&, unsigned long const&, unsigned long const&, bool)"}, {"value": 118, "name": "GetLevel(rocksdb::Slice*, int*, char const**)"}, {"value": 702, "name": "VersionEdit(rocksdb::VersionEdit const&)"}, {"value": 293, "name": "VersionEdit()"}, {"value": 180, "name": "~VersionEdit()"}, {"value": 1613, "name": "DebugString[abi:cxx11](bool) const"}, {"value": 3010, "name": "EncodeTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 2750, "name": "DebugJSON[abi:cxx11](int, bool) const"}], "name": "VersionEdit::"}, {"children": [{"value": 288, "name": "CreateNewBackup(rocksdb::DB*, bool, std::function<void ()>)"}, {"value": 243, "name": "Open(rocksdb::Env*, rocksdb::BackupableDBOptions const&, rocksdb::BackupEngine**)"}], "name": "BackupEngine::"}, {"children": [{"value": 442, "name": "Add(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 115, "name": "Reset()"}, {"value": 213, "name": "Finish()"}, {"value": 372, "name": "BlockBuilder(int, bool)"}, {"value": 140, "name": "EstimateSizeAfterKV(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "BlockBuilder::"}, {"children": [{"value": 10, "name": "SetRawData(unsigned char*, unsigned int, unsigned int)"}, {"value": 162, "name": "SetTotalBits(rocksdb::Allocator*, unsigned int, unsigned int, unsigned long, rocksdb::Logger*)"}, {"value": 212, "name": "void AddHash<rocksdb::DynamicBloom::AddHashConcurrently(unsigned int)::{lambda(std::atomic<unsigned char>*, unsigned char)#1}>(unsigned int, rocksdb::DynamicBloom::AddHashConcurrently(unsigned int)::{lambda(std::atomic<unsigned char>*, unsigned char)#1} const&)"}, {"value": 158, "name": "void AddHash<rocksdb::DynamicBloom::AddHash(unsigned int)::{lambda(std::atomic<unsigned char>*, unsigned char)#1}>(unsigned int, rocksdb::DynamicBloom::AddHash(unsigned int)::{lambda(std::atomic<unsigned char>*, unsigned char)#1} const&)"}, {"value": 412, "name": "DynamicBloom(rocksdb::Allocator*, unsigned int, unsigned int, unsigned int, unsigned int (*)(rocksdb::Slice const&), unsigned long, rocksdb::Logger*)"}, {"value": 66, "name": "DynamicBloom(unsigned int, unsigned int (*)(rocksdb::Slice const&))"}], "name": "DynamicBloom::"}, {"children": [{"value": 976, "name": "EnvRegistrar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<rocksdb::Env* (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Env, std::default_delete<rocksdb::Env> >*)>)"}], "name": "EnvRegistrar::"}, {"value": 75, "name": "EscapeString[abi:cxx11](rocksdb::Slice const&)"}, {"children": [{"value": 142, "name": "AppendCurrentTime(rocksdb::JSONWriter*)"}, {"value": 1159, "name": "LogAndNotifyTableFileDeletion(rocksdb::EventLogger*, int, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Status const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&)"}, {"value": 326, "name": "NotifyTableFileCreationStarted(std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::TableFileCreationReason)"}, {"value": 3087, "name": "LogAndNotifyTableFileCreationFinished(rocksdb::EventLogger*, std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::FileDescriptor const&, rocksdb::TableProperties const&, rocksdb::TableFileCreationReason, rocksdb::Status const&)"}], "name": "EventHelpers::"}, {"children": [{"value": 415, "name": "FileMetaData(rocksdb::FileMetaData const&)"}], "name": "FileMetaData::"}, {"children": [{"value": 7, "name": "~FilterPolicy()"}, {"value": 3, "name": "GetFilterBitsReader(rocksdb::Slice const&) const"}, {"value": 3, "name": "GetFilterBitsBuilder() const"}], "name": "FilterPolicy::"}, {"value": 10, "name": "GetPerfLevel()"}, {"children": [{"value": 1, "name": "OnKeyAdded(rocksdb::Slice const&)"}], "name": "IndexBuilder::"}, {"value": 29, "name": "LockFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 110, "name": "InstallNewVersion()"}, {"value": 235, "name": "PickMemtablesToFlush(rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 194, "name": "RollbackMemtableFlush(rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, unsigned long)"}, {"value": 5, "name": "ApproximateMemoryUsage()"}, {"value": 1395, "name": "InstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)"}, {"value": 90, "name": "GetMinLogContainingPrepSection()"}, {"value": 229, "name": "Add(rocksdb::MemTable*, rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 66, "name": "ApproximateUnflushedMemTablesMemoryUsage()"}, {"value": 8, "name": "NumFlushed() const"}, {"value": 8, "name": "NumNotFlushed() const"}, {"value": 23, "name": "IsFlushPending() const"}], "name": "MemTableList::"}, {"children": [{"value": 202, "name": "Initialize()"}, {"value": 424, "name": "PushOperand(rocksdb::Slice const&, bool)"}, {"value": 424, "name": "PushOperandBack(rocksdb::Slice const&, bool)"}, {"value": 182, "name": "~MergeContext()"}], "name": "MergeContext::"}, {"children": [{"value": 1, "name": "EnableReadAhead()"}, {"children": [{"value": 3, "name": "io() const"}], "name": "use_direct_"}, {"value": 3, "name": "ShouldForwardRawRequest() const"}, {"value": 6, "name": "GetRequiredBufferAlignment() const"}], "name": "RandomRWFile::"}, {"value": 10, "name": "SetPerfLevel(rocksdb::PerfLevel)"}, {"children": [{"value": 189, "name": "SetCapacity(unsigned long)"}, {"value": 89, "name": "EraseUnRefEntries()"}, {"value": 99, "name": "ApplyToAllCacheEntries(void (*)(void*, unsigned long), bool)"}, {"value": 170, "name": "SetStrictCapacityLimit(bool)"}, {"value": 72, "name": "Ref(rocksdb::Cache::Handle*)"}, {"value": 97, "name": "Erase(rocksdb::Slice const&)"}, {"value": 12, "name": "NewId()"}, {"value": 164, "name": "Insert(rocksdb::Slice const&, void*, unsigned long, void (*)(rocksdb::Slice const&, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority)"}, {"value": 97, "name": "Lookup(rocksdb::Slice const&, rocksdb::Statistics*)"}, {"value": 72, "name": "Release(rocksdb::Cache::Handle*)"}, {"value": 67, "name": "ShardedCache(unsigned long, int, bool)"}, {"value": 55, "name": "~ShardedCache()"}, {"value": 50, "name": "GetCapacity() const"}, {"value": 93, "name": "GetPinnedUsage() const"}, {"value": 543, "name": "GetPrintableOptions[abi:cxx11]() const"}, {"value": 48, "name": "HasStrictCapacityLimit() const"}, {"value": 12, "name": "GetUsage(rocksdb::Cache::Handle*) const"}, {"value": 93, "name": "GetUsage() const"}], "name": "ShardedCache::"}, {"children": [{"value": 5, "name": "~SnapshotImpl()"}, {"value": 5, "name": "GetSequenceNumber() const"}], "name": "SnapshotImpl::"}, {"children": [{"value": 34, "name": "Logv(char const*, __va_list_tag*)"}, {"value": 28, "name": "~StderrLogger()"}], "name": "StderrLogger::"}, {"children": [{"value": 8, "name": "kSVObsolete"}, {"value": 11, "name": "Ref()"}, {"value": 60, "name": "Init(rocksdb::MemTable*, rocksdb::MemTableListVersion*, rocksdb::Version*)"}, {"value": 20, "name": "Unref()"}, {"value": 4, "name": "dummy"}, {"value": 187, "name": "Cleanup()"}, {"value": 8, "name": "kSVInUse"}, {"value": 404, "name": "~SuperVersion()"}], "name": "SuperVersion::"}, {"value": 273, "name": "SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)"}, {"children": [{"value": 1, "name": "~TableFactory()"}], "name": "TableFactory::"}, {"value": 81, "name": "TempFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 406, "name": "ThreadStatus(rocksdb::ThreadStatus const&)"}], "name": "ThreadStatus::"}, {"value": 33, "name": "UnescapeChar(char)"}, {"children": [{"value": 1, "name": "~WBWIIterator()"}], "name": "WBWIIterator::"}, {"children": [{"value": 3, "name": "GetFileSize()"}, {"value": 102, "name": "PrepareWrite(unsigned long, unsigned long)"}, {"value": 4, "name": "GetIOPriority()"}, {"value": 4, "name": "SetIOPriority(rocksdb::Env::IOPriority)"}, {"value": 74, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 25, "name": "PositionedAppend(rocksdb::Slice const&, unsigned long)"}, {"value": 15, "name": "GetPreallocationStatus(unsigned long*, unsigned long*)"}, {"value": 5, "name": "SetPreallocationBlockSize(unsigned long)"}, {"value": 25, "name": "Fsync()"}, {"value": 10, "name": "Allocate(unsigned long, unsigned long)"}, {"value": 10, "name": "Truncate(unsigned long)"}, {"value": 10, "name": "RangeSync(unsigned long, unsigned long)"}, {"value": 7, "name": "~WritableFile()"}, {"value": 3, "name": "GetUniqueId(char*, unsigned long) const"}, {"children": [{"value": 3, "name": "io() const"}], "name": "use_direct_"}, {"value": 3, "name": "IsSyncThreadSafe() const"}, {"value": 6, "name": "GetRequiredBufferAlignment() const"}], "name": "WritableFile::"}, {"value": 34, "name": "XXH32_digest(void*)"}, {"value": 485, "name": "XXH32_update(void*, void const*, int)"}, {"children": [{"value": 905, "name": "AppendItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 442, "name": "GetNextFile()"}, {"value": 302, "name": "PrepareNextLevel()"}], "name": "FilePicker::"}, {"value": 2077, "name": "DumpSstFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool)"}, {"value": 3409, "name": "DumpWalFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool, rocksdb::LDBCommandExecuteResult*)"}, {"children": [{"value": 451, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 342, "name": "FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 805, "name": "RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 39, "name": "UnlockFile(rocksdb::FileLock*)"}, {"value": 597, "name": "GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 464, "name": "GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 62, "name": "NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*)"}, {"value": 576, "name": "NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 53, "name": "GetTestDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 586, "name": "NewSequentialFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::SequentialFile, std::default_delete<rocksdb::SequentialFile> >*, rocksdb::EnvOptions const&)"}, {"value": 52, "name": "CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 579, "name": "NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomAccessFile, std::default_delete<rocksdb::RandomAccessFile> >*, rocksdb::EnvOptions const&)"}, {"value": 74, "name": "GetFileModificationTime(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 47, "name": "LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)"}, {"value": 412, "name": "CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 25, "name": "DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 180, "name": "~InMemoryEnv()"}], "name": "InMemoryEnv::"}, {"children": [{"value": 198, "name": "GetIterator(rocksdb::Arena*)"}, {"value": 115, "name": "InsertWithHint(void*, void**)"}, {"children": [{"value": 99, "name": "SeekToLast()"}, {"value": 53, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 24, "name": "SeekToFirst()"}, {"value": 266, "name": "Next()"}, {"value": 197, "name": "Prev()"}, {"value": 304, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 77, "name": "~LookaheadIterator()"}, {"value": 9, "name": "key() const"}, {"value": 9, "name": "Valid() const"}], "name": "LookaheadIterator::"}, {"value": 76, "name": "InsertConcurrently(void*)"}, {"value": 375, "name": "ApproximateNumEntries(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 3, "name": "ApproximateMemoryUsage()"}, {"value": 501, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 15, "name": "Insert(void*)"}, {"value": 158, "name": "Allocate(unsigned long, char**)"}, {"children": [{"value": 75, "name": "SeekToLast()"}, {"value": 49, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 16, "name": "SeekToFirst()"}, {"value": 12, "name": "Next()"}, {"value": 185, "name": "Prev()"}, {"value": 49, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 77, "name": "~Iterator()"}, {"value": 9, "name": "key() const"}, {"value": 9, "name": "Valid() const"}], "name": "Iterator::"}, {"value": 5, "name": "~SkipListRep()"}, {"value": 173, "name": "Contains(char const*) const"}], "name": "SkipListRep::"}, {"value": 165, "name": "ParseBoolean(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 1, "name": "SeekToLast()"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 1, "name": "SeekToFirst()"}, {"value": 1, "name": "Next()"}, {"value": 1, "name": "Prev()"}, {"value": 1, "name": "Seek(rocksdb::Slice const&)"}, {"value": 249, "name": "~EmptyIterator()"}, {"value": 8, "name": "key() const"}, {"value": 3, "name": "Valid() const"}, {"value": 8, "name": "value() const"}, {"value": 52, "name": "status() const"}], "name": "EmptyIterator::"}, {"children": [{"value": 1160, "name": "GetIterator(rocksdb::Arena*)"}, {"value": 18, "name": "ApproximateMemoryUsage()"}, {"value": 221, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 1405, "name": "Insert(void*)"}, {"children": [{"value": 151, "name": "SeekToLast()"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 137, "name": "SeekToFirst()"}, {"value": 23, "name": "Next()"}, {"value": 31, "name": "Prev()"}, {"value": 459, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 296, "name": "~Iterator()"}, {"value": 8, "name": "key() const"}, {"value": 130, "name": "Valid() const"}], "name": "Iterator::"}, {"value": 257, "name": "~HashCuckooRep()"}, {"value": 3, "name": "IsSnapshotSupported() const"}, {"value": 3, "name": "IsMergeOperatorSupported() const"}, {"value": 135, "name": "Contains(char const*) const"}, {"children": [{"value": 40, "name": "kMurmurHashSeeds"}], "name": "GetHash(rocksdb::Slice const&, int) const::"}], "name": "HashCuckooRep::"}, {"children": [{"value": 5, "name": "~NoopTransform()"}, {"value": 3, "name": "SameResultWhenAppended(rocksdb::Slice const&) const"}, {"value": 6, "name": "Name() const"}, {"value": 3, "name": "InRange(rocksdb::Slice const&) const"}, {"value": 3, "name": "InDomain(rocksdb::Slice const&) const"}, {"value": 8, "name": "Transform(rocksdb::Slice const&) const"}], "name": "NoopTransform::"}, {"children": [{"value": 104, "name": "~PosixFileLock()"}], "name": "PosixFileLock::"}, {"children": [{"value": 134, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 28, "name": "~StdErrReporter()"}], "name": "StdErrReporter::"}, {"value": 646, "name": "AreEqualOptions(char const*, char const*, rocksdb::OptionTypeInfo const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const*)"}, {"children": [{"value": 883, "name": "GetIterator(rocksdb::Arena*)"}, {"children": [{"value": 34, "name": "Next()"}, {"value": 803, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 89, "name": "~DynamicIterator()"}, {"value": 26, "name": "key() const"}, {"value": 27, "name": "Valid() const"}], "name": "DynamicIterator::"}, {"children": [{"value": 75, "name": "SeekToLast()"}, {"value": 53, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 17, "name": "SeekToFirst()"}, {"value": 13, "name": "Next()"}, {"value": 175, "name": "Prev()"}, {"value": 173, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 171, "name": "~FullListIterator()"}, {"value": 8, "name": "key() const"}, {"value": 9, "name": "Valid() const"}], "name": "FullListIterator::"}, {"children": [{"value": 9, "name": "SeekToHead()"}, {"value": 8, "name": "SeekToLast()"}, {"value": 8, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 8, "name": "SeekToFirst()"}, {"value": 8, "name": "Prev()"}], "name": "LinkListIterator::"}, {"value": 3, "name": "ApproximateMemoryUsage()"}, {"value": 85, "name": "GetDynamicPrefixIterator(rocksdb::Arena*)"}, {"value": 422, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 1059, "name": "Insert(void*)"}, {"value": 41, "name": "Allocate(unsigned long, char**)"}, {"value": 5, "name": "~HashLinkListRep()"}, {"value": 422, "name": "Contains(char const*) const"}], "name": "HashLinkListRep::"}, {"children": [{"value": 463, "name": "GetIterator(rocksdb::Arena*)"}, {"children": [{"value": 46, "name": "SeekToLast()"}, {"value": 46, "name": "SeekToFirst()"}, {"value": 285, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 83, "name": "~DynamicIterator()"}], "name": "DynamicIterator::"}, {"value": 3, "name": "ApproximateMemoryUsage()"}, {"value": 103, "name": "GetDynamicPrefixIterator(rocksdb::Arena*)"}, {"value": 277, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 346, "name": "Insert(void*)"}, {"children": [{"value": 91, "name": "SeekToLast()"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 24, "name": "SeekToFirst()"}, {"value": 13, "name": "Next()"}, {"value": 175, "name": "Prev()"}, {"value": 175, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 167, "name": "~Iterator()"}, {"value": 8, "name": "key() const"}, {"value": 19, "name": "Valid() const"}], "name": "Iterator::"}, {"value": 5, "name": "~HashSkipListRep()"}, {"value": 248, "name": "Contains(char const*) const"}], "name": "HashSkipListRep::"}, {"children": [{"value": 229, "name": "MarkCommit(rocksdb::Slice const&)"}, {"value": 229, "name": "MarkRollback(rocksdb::Slice const&)"}, {"value": 453, "name": "DeleteRangeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 229, "name": "MarkEndPrepare(rocksdb::Slice const&)"}, {"value": 268, "name": "SingleDeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 397, "name": "commonPutMerge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 48, "name": "MarkBeginPrepare()"}, {"value": 126, "name": "PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 126, "name": "MergeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 268, "name": "DeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 28, "name": "~InMemoryHandler()"}], "name": "InMemoryHandler::"}, {"value": 2217, "name": "PrintLevelStats(char*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > const&)"}, {"value": 250, "name": "SeekToMetaBlock(rocksdb::InternalIterator*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*, rocksdb::BlockHandle*)"}, {"value": 979, "name": "DumpManifestFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool, bool)"}, {"children": [{"value": 126, "name": "SeekToLast()"}, {"value": 305, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 126, "name": "SeekToFirst()"}, {"value": 256, "name": "InitDataBlock()"}, {"value": 57, "name": "SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*)"}, {"value": 361, "name": "SetSecondLevelIterator(rocksdb::InternalIterator*)"}, {"value": 238, "name": "SkipEmptyDataBlocksForward()"}, {"value": 238, "name": "SkipEmptyDataBlocksBackward()"}, {"value": 68, "name": "Next()"}, {"value": 68, "name": "Prev()"}, {"value": 171, "name": "Seek(rocksdb::Slice const&)"}, {"value": 237, "name": "TwoLevelIterator(rocksdb::TwoLevelIteratorState*, rocksdb::InternalIterator*, bool)"}, {"value": 171, "name": "~TwoLevelIterator()"}, {"value": 45, "name": "IsKeyPinned() const"}, {"value": 45, "name": "IsValuePinned() const"}, {"value": 9, "name": "key() const"}, {"value": 4, "name": "Valid() const"}, {"value": 10, "name": "value() const"}, {"value": 170, "name": "status() const"}], "name": "TwoLevelIterator::"}, {"children": [{"value": 10, "name": "Sync()"}, {"value": 10, "name": "Close()"}, {"value": 10, "name": "Flush()"}, {"value": 226, "name": "Append(rocksdb::Slice const&)"}, {"value": 10, "name": "Truncate(unsigned long)"}, {"value": 122, "name": "~WritableFileImpl()"}], "name": "WritableFileImpl::"}, {"children": [{"value": 28, "name": "~BloomFilterPolicy()"}, {"value": 137, "name": "KeyMayMatch(rocksdb::Slice const&, rocksdb::Slice const&) const"}, {"value": 326, "name": "CreateFilter(rocksdb::Slice const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 141, "name": "GetFilterBitsReader(rocksdb::Slice const&) const"}, {"value": 64, "name": "GetFilterBitsBuilder() const"}, {"value": 6, "name": "Name() const"}], "name": "BloomFilterPolicy::"}, {"value": 43, "name": "void DeleteCachedEntry<rocksdb::Block>(rocksdb::Slice const&, void*)"}, {"value": 190, "name": "GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&, rocksdb::Tickers, rocksdb::Tickers, rocksdb::Statistics*)"}, {"children": [{"value": 10, "name": "Fsync()"}, {"value": 5, "name": "~InMemoryDirectory()"}], "name": "InMemoryDirectory::"}, {"value": 397, "name": "NormalizeFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"}, {"value": 2549, "name": "ParseOptionHelper(char*, rocksdb::OptionType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1260, "name": "PrepareLevelStats(std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >*, int, int, double, double, double, rocksdb::InternalStats::CompactionStats const&)"}, {"value": 267, "name": "ReadBlockFromFile(rocksdb::RandomAccessFileReader*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableCFOptions const&, bool, rocksdb::Slice const&, rocksdb::PersistentCacheOptions const&, unsigned long, unsigned long)"}, {"value": 314, "name": "appendToReplayLog(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::ValueType, rocksdb::Slice)"}, {"value": 43, "name": "void DeleteHeldResource<rocksdb::Block>(void*, void*)"}, {"value": 204, "name": "IsFeatureSupported(rocksdb::TableProperties const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Logger*)"}, {"value": 9, "name": "ReleaseCachedEntry(void*, void*)"}, {"children": [{"value": 303, "name": "Read(unsigned long, rocksdb::Slice*, char*)"}, {"value": 116, "name": "Skip(unsigned long)"}, {"value": 122, "name": "~SequentialFileImpl()"}], "name": "SequentialFileImpl::"}, {"value": 624, "name": "GetDefaultCFOptions(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, rocksdb::ColumnFamilyOptions*)"}, {"value": 169, "name": "CompareCandidateFile(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)"}, {"children": [{"value": 77, "name": "~FixedPrefixTransform()"}, {"value": 9, "name": "SameResultWhenAppended(rocksdb::Slice const&) const"}, {"value": 5, "name": "Name() const"}, {"value": 12, "name": "InRange(rocksdb::Slice const&) const"}, {"value": 12, "name": "InDomain(rocksdb::Slice const&) const"}, {"value": 8, "name": "Transform(rocksdb::Slice const&) const"}], "name": "FixedPrefixTransform::"}, {"children": [{"value": 198, "name": "MayMatch(rocksdb::Slice const&)"}, {"value": 5, "name": "~FullFilterBitsReader()"}], "name": "FullFilterBitsReader::"}, {"children": [{"value": 22, "name": "SeekToLast()"}, {"value": 158, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 8, "name": "SeekToFirst()"}, {"value": 4, "name": "Next()"}, {"value": 23, "name": "Prev()"}, {"value": 137, "name": "Seek(rocksdb::Slice const&)"}, {"value": 317, "name": "LevelFileNumIterator(rocksdb::InternalKeyComparator const&, rocksdb::LevelFilesBrief const*)"}, {"value": 147, "name": "~LevelFileNumIterator()"}, {"value": 26, "name": "key() const"}, {"value": 14, "name": "Valid() const"}, {"value": 42, "name": "value() const"}, {"value": 10, "name": "status() const"}], "name": "LevelFileNumIterator::"}, {"children": [{"value": 122, "name": "~RandomAccessFileImpl()"}, {"value": 270, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "RandomAccessFileImpl::"}, {"children": [{"value": 77, "name": "~CappedPrefixTransform()"}, {"value": 12, "name": "SameResultWhenAppended(rocksdb::Slice const&) const"}, {"value": 5, "name": "Name() const"}, {"value": 12, "name": "InRange(rocksdb::Slice const&) const"}, {"value": 3, "name": "InDomain(rocksdb::Slice const&) const"}, {"value": 19, "name": "Transform(rocksdb::Slice const&) const"}], "name": "CappedPrefixTransform::"}, {"children": [{"value": 1, "name": "SeekToLast()"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 1, "name": "SeekToFirst()"}, {"value": 1, "name": "Next()"}, {"value": 1, "name": "Prev()"}, {"value": 1, "name": "Seek(rocksdb::Slice const&)"}, {"value": 249, "name": "~EmptyInternalIterator()"}, {"value": 8, "name": "key() const"}, {"value": 3, "name": "Valid() const"}, {"value": 8, "name": "value() const"}, {"value": 52, "name": "status() const"}], "name": "EmptyInternalIterator::"}, {"children": [{"value": 85, "name": "AddKey(rocksdb::Slice const&)"}, {"value": 338, "name": "Finish(std::unique_ptr<char const [], std::default_delete<char const []> >*)"}, {"value": 66, "name": "~FullFilterBitsBuilder()"}], "name": "FullFilterBitsBuilder::"}, {"children": [{"value": 14, "name": "MarkCommit(rocksdb::Slice const&)"}, {"value": 14, "name": "MarkRollback(rocksdb::Slice const&)"}, {"value": 14, "name": "DeleteRangeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 14, "name": "MarkEndPrepare(rocksdb::Slice const&)"}, {"value": 14, "name": "SingleDeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 14, "name": "MarkBeginPrepare()"}, {"value": 14, "name": "PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 14, "name": "MergeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 14, "name": "DeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 5, "name": "~BatchContentClassifier()"}], "name": "BatchContentClassifier::"}, {"children": [{"value": 5, "name": "~BytewiseComparatorImpl()"}, {"value": 60, "name": "FindShortSuccessor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 171, "name": "FindShortestSeparator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const&) const"}, {"value": 6, "name": "Name() const"}, {"value": 38, "name": "Equal(rocksdb::Slice const&, rocksdb::Slice const&) const"}, {"value": 76, "name": "Compare(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "BytewiseComparatorImpl::"}, {"value": 80, "name": "DeleteCachedIndexEntry(rocksdb::Slice const&, void*)"}, {"children": [{"value": 3, "name": "PrefixMayMatch(rocksdb::Slice const&)"}, {"value": 233, "name": "NewSecondaryIterator(rocksdb::Slice const&)"}, {"value": 5, "name": "~LevelFileIteratorState()"}], "name": "LevelFileIteratorState::"}, {"value": 80, "name": "DeleteCachedFilterEntry(rocksdb::Slice const&, void*)"}, {"value": 93, "name": "SuperVersionUnrefHandle(void*)"}, {"value": 955, "name": "ParseSliceTransformHelper(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::SliceTransform const>*)"}, {"children": [{"value": 29, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 13, "name": "Hint(rocksdb::RandomAccessFile::AccessPattern)"}, {"value": 158, "name": "~ReadaheadRandomAccessFile()"}, {"value": 13, "name": "GetUniqueId(char*, unsigned long) const"}, {"children": [{"value": 10, "name": "io() const"}], "name": "use_direct_"}, {"value": 616, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "ReadaheadRandomAccessFile::"}, {"children": [{"value": 5, "name": "~ReverseBytewiseComparatorImpl()"}, {"value": 6, "name": "Name() const"}, {"value": 78, "name": "Compare(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "ReverseBytewiseComparatorImpl::"}, {"value": 204, "name": "trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 423, "name": "ParseInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 121, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 896, "name": "FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 124, "name": "RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 21, "name": "UnSchedule(void*, rocksdb::Env::Priority)"}, {"value": 244, "name": "UnlockFile(rocksdb::FileLock*)"}, {"value": 522, "name": "GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 176, "name": "GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 228, "name": "GetHostName(char*, unsigned long)"}, {"value": 165, "name": "StartThread(void (*)(void*), void*)"}, {"value": 70, "name": "WaitForJoin()"}, {"value": 323, "name": "NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*)"}, {"value": 177, "name": "TimeToString[abi:cxx11](unsigned long)"}, {"value": 28, "name": "GetThreadList(std::vector<rocksdb::ThreadStatus, std::allocator<rocksdb::ThreadStatus> >*)"}, {"value": 160, "name": "GetCurrentTime(long*)"}, {"value": 229, "name": "GetAbsolutePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 451, "name": "NewRandomRWFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomRWFile, std::default_delete<rocksdb::RandomRWFile> >*, rocksdb::EnvOptions const&)"}, {"value": 953, "name": "NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 202, "name": "GetTestDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 690, "name": "NewSequentialFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::SequentialFile, std::default_delete<rocksdb::SequentialFile> >*, rocksdb::EnvOptions const&)"}, {"value": 1108, "name": "ReuseWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 615, "name": "CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 871, "name": "NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::RandomAccessFile, std::default_delete<rocksdb::RandomAccessFile> >*, rocksdb::EnvOptions const&)"}, {"value": 27, "name": "SetBackgroundThreads(int, rocksdb::Env::Priority)"}, {"value": 7, "name": "SleepForMicroseconds(int)"}, {"value": 100, "name": "GetFileModificationTime(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 21, "name": "LowerThreadPoolIOPriority(rocksdb::Env::Priority)"}, {"value": 21, "name": "IncBackgroundThreadsIfNeeded(int, rocksdb::Env::Priority)"}, {"value": 5, "name": "gettid()"}, {"value": 225, "name": "LinkFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 688, "name": "LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)"}, {"value": 40, "name": "NowNanos()"}, {"value": 27, "name": "Schedule(void (*)(void*), void*, rocksdb::Env::Priority, void*, void (*)(void*))"}, {"value": 126, "name": "CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 121, "name": "DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 64, "name": "DirExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 622, "name": "NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)"}, {"value": 37, "name": "NowMicros()"}, {"value": 357, "name": "~PosixEnv()"}, {"value": 5, "name": "GetThreadID() const"}, {"value": 57, "name": "OptimizeForLogWrite(rocksdb::EnvOptions const&, rocksdb::DBOptions const&) const"}, {"value": 24, "name": "GetThreadPoolQueueLen(rocksdb::Env::Priority) const"}, {"value": 46, "name": "OptimizeForManifestWrite(rocksdb::EnvOptions const&) const"}], "name": "PosixEnv::"}, {"children": [{"value": 731, "name": "ArchiveFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 5402, "name": "ExtractMetaData()"}, {"value": 9024, "name": "Run()"}, {"value": 1515, "name": "Repairer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, rocksdb::ColumnFamilyOptions const&, rocksdb::ColumnFamilyOptions const&, bool)"}, {"value": 663, "name": "~Repairer()"}, {"children": [{"value": 124, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 268, "name": "~LogReporter()"}], "name": "ConvertLogToTable(unsigned long)::LogReporter::"}], "name": "Repairer::"}, {"children": [{"value": 135, "name": "Unref()"}], "name": "FileState::"}, {"children": [{"value": 1245, "name": "GetIterator(rocksdb::Arena*)"}, {"value": 47, "name": "MarkReadOnly()"}, {"value": 16, "name": "ApproximateMemoryUsage()"}, {"value": 1223, "name": "Get(rocksdb::LookupKey const&, void*, bool (*)(void*, char const*))"}, {"value": 119, "name": "Insert(void*)"}, {"children": [{"value": 50, "name": "SeekToLast()"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&, char const*)"}, {"value": 32, "name": "SeekToFirst()"}, {"value": 23, "name": "Next()"}, {"value": 31, "name": "Prev()"}, {"value": 387, "name": "Seek(rocksdb::Slice const&, char const*)"}, {"value": 296, "name": "~Iterator()"}, {"value": 8, "name": "key() const"}, {"value": 36, "name": "Valid() const"}, {"value": 310, "name": "DoSort() const"}], "name": "Iterator::"}, {"value": 278, "name": "~VectorRep()"}, {"value": 203, "name": "Contains(char const*) const"}], "name": "VectorRep::"}, {"value": 9, "name": "UnrefEntry(void*, void*)"}, {"value": 15, "name": "void DeleteEntry<rocksdb::TableReader>(rocksdb::Slice const&, void*)"}, {"value": 52, "name": "void DeleteEntry<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(rocksdb::Slice const&, void*)"}, {"value": 48, "name": "lockedFiles[abi:cxx11]"}, {"value": 288, "name": "LockOrUnlock(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)"}, {"value": 88, "name": "bucketMapper"}, {"value": 12, "name": "DeleteTableReader(void*, void*)"}, {"children": [{"value": 40, "name": "lockedFiles"}], "name": "mutex_"}, {"value": 37, "name": "StartThreadWrapper(void*)"}, {"value": 605, "name": "CleanupIteratorState(void*, void*)"}, {"value": 43, "name": "ReleaseSuperVersionFunc(void*)"}, {"children": [{"value": 359, "name": "operator()(rocksdb::(anonymous namespace)::Fsize const&, rocksdb::(anonymous namespace)::Fsize const&) const"}], "name": "SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4::"}], "name": "(anonymous namespace)::"}, {"value": 8, "name": "testFileName"}, {"children": [{"children": [{"value": 32, "name": "THREAD[abi:cxx11]"}, {"children": [{"value": 32, "name": "DIR[abi:cxx11]"}, {"value": 32, "name": "ENV[abi:cxx11]"}], "name": "BACKUP_"}], "name": "ARG_"}, {"value": 956, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 1853, "name": "DoCommand()"}, {"value": 4158, "name": "BackupCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~BackupCommand()"}], "name": "BackupCommand::"}, {"children": [{"value": 1338, "name": "LogCompaction()"}, {"value": 292, "name": "CleanupCompaction()"}, {"value": 228, "name": "RecordDroppedKeys(CompactionIterationStats const&, rocksdb::CompactionJobStats*)"}, {"children": [{"value": 299, "name": "ShouldStopBefore(rocksdb::Slice const&, unsigned long)"}, {"value": 358, "name": "SubcompactionState(rocksdb::CompactionJob::SubcompactionState&&)"}, {"value": 374, "name": "SubcompactionState(rocksdb::Compaction*, rocksdb::Slice*, rocksdb::Slice*, unsigned long)"}, {"value": 199, "name": "~SubcompactionState()"}, {"value": 468, "name": "operator=(rocksdb::CompactionJob::SubcompactionState&&)"}], "name": "SubcompactionState::"}, {"value": 180, "name": "AggregateStatistics()"}, {"value": 589, "name": "UpdateCompactionStats()"}, {"value": 133, "name": "RecordCompactionIOStats()"}, {"value": 221, "name": "ReportStartedCompaction(rocksdb::Compaction*)"}, {"value": 704, "name": "InstallCompactionResults(rocksdb::MutableCFOptions const&)"}, {"value": 1983, "name": "OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)"}, {"value": 6107, "name": "ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)"}, {"value": 3777, "name": "FinishCompactionOutputFile(rocksdb::Status const&, rocksdb::CompactionJob::SubcompactionState*, rocksdb::RangeDelAggregator*, CompactionIterationStats*, rocksdb::Slice const*)"}, {"value": 2723, "name": "GenSubcompactionBoundaries()"}, {"value": 182, "name": "UpdateCompactionInputStatsHelper(int*, unsigned long*, int)"}, {"value": 2035, "name": "Run()"}, {"value": 3338, "name": "Install(rocksdb::MutableCFOptions const&)"}, {"value": 553, "name": "Prepare()"}, {"value": 1326, "name": "CompactionJob(int, rocksdb::Compaction*, rocksdb::ImmutableDBOptions const&, rocksdb::EnvOptions const&, rocksdb::VersionSet*, std::atomic<bool> const*, rocksdb::LogBuffer*, rocksdb::Directory*, rocksdb::Directory*, rocksdb::Statistics*, rocksdb::InstrumentedMutex*, rocksdb::Status*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, std::shared_ptr<rocksdb::Cache>, rocksdb::EventLogger*, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::CompactionJobStats*)"}, {"value": 712, "name": "~CompactionJob()"}, {"value": 428, "name": "UpdateCompactionJobStats(rocksdb::InternalStats::CompactionStats const&) const"}], "name": "CompactionJob::"}, {"value": 152, "name": "CompressBlock(rocksdb::Slice const&, rocksdb::CompressionOptions const&, rocksdb::CompressionType*, unsigned int, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"children": [{"value": 388, "name": "KeyMayExist(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 113, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 851, "name": "SanitizeOptions(int, rocksdb::ColumnFamilyOptions*, rocksdb::Env*)"}, {"value": 31, "name": "CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyHandle**)"}, {"value": 150, "name": "SanityCheckTimestamp(rocksdb::Slice const&)"}, {"value": 168, "name": "CreateColumnFamilyWithTtl(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyHandle**, int)"}, {"value": 624, "name": "Get(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 139, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 139, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 323, "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)"}, {"value": 112, "name": "IsStale(rocksdb::Slice const&, int, rocksdb::Env*)"}, {"value": 122, "name": "StripTS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 209, "name": "AppendTS(rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Env*)"}, {"value": 800, "name": "MultiGet(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 5, "name": "GetBaseDB()"}, {"value": 24, "name": "DBWithTTLImpl(rocksdb::DB*)"}, {"value": 398, "name": "~DBWithTTLImpl()"}, {"children": [{"value": 272, "name": "PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 9, "name": "LogData(rocksdb::Slice const&)"}, {"value": 272, "name": "MergeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 39, "name": "DeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 114, "name": "~Handler()"}], "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)::Handler::"}], "name": "DBWithTTLImpl::"}, {"children": [{"value": 318, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 478, "name": "DoCommand()"}, {"value": 3504, "name": "DeleteCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~DeleteCommand()"}], "name": "DeleteCommand::"}, {"value": 59, "name": "DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)"}, {"children": [{"value": 1, "name": "OnMemTableSealed(rocksdb::MemTableInfo const&)"}, {"value": 1, "name": "OnTableFileCreated(rocksdb::TableFileCreationInfo const&)"}, {"value": 1, "name": "OnTableFileDeleted(rocksdb::TableFileDeletionInfo const&)"}, {"value": 1, "name": "OnExternalFileIngested(rocksdb::DB*, rocksdb::ExternalFileIngestionInfo const&)"}, {"value": 1, "name": "OnTableFileCreationStarted(rocksdb::TableFileCreationBriefInfo const&)"}, {"value": 1, "name": "OnColumnFamilyHandleDeletionStarted(rocksdb::ColumnFamilyHandle*)"}, {"value": 1, "name": "~EventListener()"}], "name": "EventListener::"}, {"value": 289, "name": "FindMetaBlock(rocksdb::InternalIterator*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockHandle*)"}, {"value": 1087, "name": "FindMetaBlock(rocksdb::RandomAccessFileReader*, unsigned long, unsigned long, rocksdb::ImmutableCFOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockHandle*)"}, {"children": [{"value": 9, "name": "Add(unsigned long)"}, {"value": 168, "name": "Clear()"}, {"value": 108, "name": "Merge(rocksdb::Histogram const&)"}, {"value": 246, "name": "Merge(rocksdb::HistogramImpl const&)"}, {"value": 6, "name": "~HistogramImpl()"}, {"value": 395, "name": "Percentile(double) const"}, {"value": 123, "name": "StandardDeviation() const"}, {"value": 5, "name": "max() const"}, {"value": 5, "name": "min() const"}, {"value": 5, "name": "num() const"}, {"value": 9, "name": "Data(rocksdb::HistogramData*) const"}, {"value": 6, "name": "Name() const"}, {"value": 11, "name": "Empty() const"}, {"value": 395, "name": "Median() const"}, {"value": 82, "name": "Average() const"}, {"value": 28, "name": "ToString[abi:cxx11]() const"}], "name": "HistogramImpl::"}, {"children": [{"value": 208, "name": "Add(unsigned long)"}, {"value": 87, "name": "Clear()"}, {"value": 137, "name": "Merge(rocksdb::HistogramStat const&)"}, {"value": 206, "name": "HistogramStat()"}, {"value": 394, "name": "Percentile(double) const"}, {"value": 123, "name": "StandardDeviation() const"}, {"value": 1437, "name": "Data(rocksdb::HistogramData*) const"}, {"value": 11, "name": "Empty() const"}, {"value": 394, "name": "Median() const"}, {"value": 82, "name": "Average() const"}, {"value": 3667, "name": "ToString[abi:cxx11]() const"}], "name": "HistogramStat::"}, {"children": [{"value": 512, "name": "InfoLogPrefix(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 4, "name": "kInfoLogPrefix"}], "name": "InfoLogPrefix(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::"}], "name": "InfoLogPrefix::"}, {"children": [{"value": 6242, "name": "DumpCFStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 2678, "name": "DumpDBStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 36, "name": "HandleStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 13, "name": "HandleCFStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 13, "name": "HandleDBStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 1005, "name": "DumpCFMapStats(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 1895, "name": "DumpCFMapStats(std::map<int, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >, std::less<int>, std::allocator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > > >*, rocksdb::InternalStats::CompactionStats*)"}, {"value": 77, "name": "GetIntProperty(rocksdb::DBPropertyInfo const&, unsigned long*, rocksdb::DBImpl*)"}, {"value": 25, "name": "GetMapProperty(rocksdb::DBPropertyInfo const&, rocksdb::Slice const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 79, "name": "HandleSsTables(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 24, "name": "HandleBaseLevel(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 13, "name": "HandleCFMapStats(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 399, "name": "HandleLevelStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"children": [{"value": 56, "name": "info[abi:cxx11]"}], "name": "ppt_name_to_"}, {"value": 89, "name": "GetStringProperty(rocksdb::DBPropertyInfo const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 13, "name": "HandleNumSnapshots(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 143, "name": "HandleEstimateNumKeys(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 187, "name": "HandleNumFilesAtLevel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 33, "name": "HandleNumLiveVersions(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 13, "name": "HandleBackgroundErrors(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 76, "name": "HandleSizeAllMemTables(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"children": [{"value": 48, "name": "stats"}], "name": "compaction_level_"}, {"value": 52, "name": "HandleCompactionPending(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 42, "name": "HandleNumRunningFlushes(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 33, "name": "HandleTotalSstFilesSize(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 33, "name": "GetIntPropertyOutOfMutex(rocksdb::DBPropertyInfo const&, rocksdb::Version*, unsigned long*)"}, {"value": 29, "name": "HandleMinLogNumberToKeep(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 31, "name": "HandleOldestSnapshotTime(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 76, "name": "HandleCurSizeAllMemTables(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 41, "name": "HandleEstimateLiveDataSize(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 43, "name": "HandleMemTableFlushPending(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 42, "name": "HandleNumImmutableMemTable(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 40, "name": "HandleCurSizeActiveMemTable(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 13, "name": "HandleNumRunningCompactions(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 35, "name": "HandleIsFileDeletionsEnabled(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 40, "name": "HandleNumDeletesImmMemTables(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 40, "name": "HandleNumEntriesImmMemTables(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 36, "name": "HandleEstimateTableReadersMem(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 27, "name": "HandleNumDeletesActiveMemTable(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 27, "name": "HandleNumEntriesActiveMemTable(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 524, "name": "HandleAggregatedTableProperties(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 20, "name": "HandleCurrentSuperVersionNumber(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 42, "name": "HandleNumImmutableMemTableFlushed(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 179, "name": "HandleCompressionRatioAtLevelPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 24, "name": "HandleEstimatePendingCompactionBytes(unsigned long*, rocksdb::DBImpl*, rocksdb::Version*)"}, {"value": 610, "name": "HandleAggregatedTablePropertiesAtLevel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice)"}, {"value": 1125, "name": "InternalStats(int, rocksdb::Env*, rocksdb::ColumnFamilyData*)"}], "name": "InternalStats::"}, {"children": [{"children": [{"value": 268, "name": "Insert(rocksdb::LRUHandle*)"}, {"value": 62, "name": "Remove(rocksdb::LRUHandle*)"}], "name": "LRU_"}, {"value": 380, "name": "SetCapacity(unsigned long)"}, {"value": 481, "name": "EvictFromLRU(unsigned long, rocksdb::autovector<rocksdb::LRUHandle*, 8ul>*)"}, {"children": [{"value": 18, "name": "GetLRUList(rocksdb::LRUHandle**, rocksdb::LRUHandle**)"}], "name": "TEST_"}, {"value": 132, "name": "MaintainPoolSize()"}, {"value": 1023, "name": "EraseUnRefEntries()"}, {"value": 260, "name": "ApplyToAllCacheEntries(void (*)(void*, unsigned long), bool)"}, {"value": 59, "name": "SetStrictCapacityLimit(bool)"}, {"value": 220, "name": "SetHighPriorityPoolRatio(double)"}, {"value": 146, "name": "Ref(rocksdb::Cache::Handle*)"}, {"value": 421, "name": "Erase(rocksdb::Slice const&, unsigned int)"}, {"value": 7, "name": "Unref(rocksdb::LRUHandle*)"}, {"value": 1495, "name": "Insert(rocksdb::Slice const&, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority)"}, {"value": 295, "name": "Lookup(rocksdb::Slice const&, unsigned int)"}, {"value": 481, "name": "Release(rocksdb::Cache::Handle*)"}, {"value": 256, "name": "LRUCacheShard()"}, {"value": 143, "name": "~LRUCacheShard()"}, {"value": 66, "name": "GetPinnedUsage() const"}, {"value": 211, "name": "GetPrintableOptions[abi:cxx11]() const"}, {"value": 50, "name": "GetUsage() const"}], "name": "LRUCacheShard::"}, {"children": [{"value": 173, "name": "SeekToLast()"}, {"value": 173, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 64, "name": "SeekToFirst()"}, {"value": 23, "name": "SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*)"}, {"value": 263, "name": "Next()"}, {"value": 173, "name": "Prev()"}, {"value": 39, "name": "Seek(rocksdb::Slice const&)"}, {"value": 276, "name": "Reset()"}, {"value": 221, "name": "~LevelIterator()"}, {"value": 37, "name": "IsKeyPinned() const"}, {"value": 37, "name": "IsValuePinned() const"}, {"value": 10, "name": "key() const"}, {"value": 4, "name": "Valid() const"}, {"value": 10, "name": "value() const"}, {"value": 140, "name": "status() const"}], "name": "LevelIterator::"}, {"children": [{"value": 6, "name": "~MergeOperator()"}, {"value": 423, "name": "FullMergeV2(rocksdb::MergeOperator::MergeOperationInput const&, rocksdb::MergeOperator::MergeOperationOutput*) const"}, {"value": 3, "name": "PartialMerge(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}, {"value": 529, "name": "PartialMergeMulti(rocksdb::Slice const&, std::deque<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}, {"value": 3, "name": "FullMerge(rocksdb::Slice const&, rocksdb::Slice const*, std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}], "name": "MergeOperator::"}, {"value": 167, "name": "NewDBIterator(rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::Comparator const*, rocksdb::InternalIterator*, unsigned long const&, unsigned long, unsigned long, rocksdb::Slice const*, bool, bool, bool)"}, {"value": 227, "name": "NewEnvFromUri(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Env, std::default_delete<rocksdb::Env> >*)"}, {"value": 70, "name": "NewThreadPool(int)"}, {"value": 1192, "name": "ParseDBOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions*, bool)"}, {"value": 48, "name": "ParseFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, rocksdb::FileType*, rocksdb::WalFileType*)"}, {"value": 1512, "name": "ParseFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, rocksdb::Slice const&, rocksdb::FileType*, rocksdb::WalFileType*)"}, {"children": [{"value": 13, "name": "GetFileSize()"}, {"value": 1121, "name": "MapNewRegion()"}, {"value": 78, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 117, "name": "UnmapCurrentRegion()"}, {"value": 136, "name": "Sync()"}, {"value": 665, "name": "Close()"}, {"value": 10, "name": "Flush()"}, {"value": 136, "name": "Fsync()"}, {"value": 124, "name": "Msync()"}, {"value": 436, "name": "Append(rocksdb::Slice const&)"}, {"value": 78, "name": "Allocate(unsigned long, unsigned long)"}, {"value": 10, "name": "Truncate(unsigned long)"}, {"value": 580, "name": "PosixMmapFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, unsigned long, rocksdb::EnvOptions const&)"}, {"value": 278, "name": "~PosixMmapFile()"}], "name": "PosixMmapFile::"}, {"value": 1761, "name": "ReadMetaBlock(rocksdb::RandomAccessFileReader*, unsigned long, unsigned long, rocksdb::ImmutableCFOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockContents*)"}, {"children": [{"value": 190, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 664, "name": "DoCommand()"}, {"value": 478, "name": "RepairCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~RepairCommand()"}], "name": "RepairCommand::"}, {"children": [{"value": 1048, "name": "GetTableReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 503, "name": "NewTableReader(rocksdb::ImmutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*)"}, {"value": 1174, "name": "ReadSequential(bool, unsigned long, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 352, "name": "SetOldTableOptions()"}, {"value": 327, "name": "ReadTableProperties(std::shared_ptr<rocksdb::TableProperties const>*)"}, {"value": 143, "name": "ReadTableProperties(unsigned long, rocksdb::RandomAccessFileReader*, unsigned long)"}, {"value": 1023, "name": "ShowAllCompressionSizes(unsigned long)"}, {"value": 1742, "name": "CalculateCompressedTableSize(rocksdb::TableBuilderOptions const&, unsigned long)"}, {"value": 1022, "name": "SetTableOptionsByMagicNumber(unsigned long)"}, {"value": 210, "name": "DumpTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1402, "name": "SstFileReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)"}, {"value": 252, "name": "~SstFileReader()"}], "name": "SstFileReader::"}, {"children": [{"value": 119, "name": "InvalidatePageCache(bool)"}, {"value": 526, "name": "Add(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"children": [{"value": 438, "name": "Rep(rocksdb::EnvOptions const&, rocksdb::Options const&, rocksdb::Comparator const*, rocksdb::ColumnFamilyHandle*, bool)"}, {"value": 282, "name": "~Rep()"}], "name": "Rep::"}, {"value": 2165, "name": "Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 790, "name": "Finish(rocksdb::ExternalSstFileInfo*)"}, {"value": 11, "name": "FileSize()"}, {"value": 254, "name": "SstFileWriter(rocksdb::EnvOptions const&, rocksdb::Options const&, rocksdb::Comparator const*, rocksdb::ColumnFamilyHandle*, bool)"}, {"value": 144, "name": "~SstFileWriter()"}], "name": "SstFileWriter::"}, {"value": 251, "name": "TableFileName[abi:cxx11](std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&, unsigned long, unsigned int)"}, {"value": 54, "name": "TotalFileSize(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&)"}, {"value": 36, "name": "isSpecialChar(char)"}, {"value": 102, "name": "AppendNumberTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long)"}, {"children": [{"value": 195, "name": "LogExpired()"}, {"value": 170, "name": "LogInternal(char const*, ...)"}, {"value": 527, "name": "ResetLogger()"}, {"value": 337, "name": "RollLogFile()"}, {"value": 86, "name": "WriteHeaderInfo()"}, {"value": 813, "name": "Logv(char const*, __va_list_tag*)"}, {"value": 330, "name": "Flush()"}, {"value": 413, "name": "LogHeader(char const*, __va_list_tag*)"}, {"value": 1230, "name": "AutoRollLogger(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, rocksdb::InfoLogLevel)"}, {"value": 341, "name": "~AutoRollLogger()"}, {"value": 323, "name": "GetLogFileSize() const"}, {"value": 167, "name": "ValistToString[abi:cxx11](char const*, __va_list_tag*) const"}], "name": "AutoRollLogger::"}, {"value": 1637, "name": "BuildDBOptions(rocksdb::ImmutableDBOptions const&, rocksdb::MutableDBOptions const&)"}, {"children": [{"value": 234, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 74, "name": "CompactFiles(rocksdb::CompactionOptions const&, rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, int, int)"}, {"value": 74, "name": "CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 74, "name": "GetLiveFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long*, bool)"}, {"value": 559, "name": "NewIterators(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Iterator*, std::allocator<rocksdb::Iterator*> >*)"}, {"value": 74, "name": "SingleDelete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 74, "name": "EnableFileDeletions(bool)"}, {"value": 74, "name": "DisableFileDeletions()"}, {"value": 939, "name": "Get(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 74, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 74, "name": "Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 74, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 74, "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)"}, {"value": 74, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 74, "name": "SyncWAL()"}, {"value": 162, "name": "DBImplReadOnly(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 38, "name": "~DBImplReadOnly()"}], "name": "DBImplReadOnly::"}, {"value": 160, "name": "EncodeVarint32(char*, unsigned int)"}, {"children": [{"value": 67, "name": "ScheduleFlush(rocksdb::ColumnFamilyData*)"}, {"value": 119, "name": "TakeNextColumnFamily()"}, {"value": 90, "name": "Clear()"}, {"value": 10, "name": "Empty()"}], "name": "FlushScheduler::"}, {"value": 271, "name": "GetDeletedKeys(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 84, "name": "GetVarint64Ptr(char const*, char const*, unsigned long*)"}, {"children": [{"value": 31, "name": "Reset()"}, {"value": 1241, "name": "ToString[abi:cxx11](bool) const"}], "name": "IOStatsContext::"}, {"children": [{"value": 958, "name": "void Insert<false>(char const*, rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const&>::Splice*, bool)"}, {"value": 974, "name": "void Insert<true>(char const*, rocksdb::InlineSkipList<rocksdb::MemTableRep::KeyComparator const&>::Splice*, bool)"}, {"children": [{"value": 457, "name": "SeekForPrev(char const*)"}, {"value": 145, "name": "Seek(char const*)"}], "name": "Iterator::"}], "name": "InlineSkipList<rocksdb::MemTableRep::KeyComparator const&>::"}, {"children": [{"value": 135, "name": "FindPointer(rocksdb::Slice const&, unsigned int)"}, {"value": 270, "name": "Insert(rocksdb::LRUHandle*)"}, {"value": 148, "name": "Lookup(rocksdb::Slice const&, unsigned int)"}, {"value": 193, "name": "Remove(rocksdb::Slice const&, unsigned int)"}, {"value": 214, "name": "Resize()"}, {"value": 16, "name": "LRUHandleTable()"}, {"value": 378, "name": "~LRUHandleTable()"}], "name": "LRUHandleTable::"}, {"value": 154, "name": "NumberToString[abi:cxx11](unsigned long)"}, {"children": [{"value": 143, "name": "Fsync()"}, {"value": 104, "name": "~PosixDirectory()"}], "name": "PosixDirectory::"}, {"value": 7784, "name": "ReadProperties(rocksdb::Slice const&, rocksdb::RandomAccessFileReader*, rocksdb::Footer const&, rocksdb::ImmutableCFOptions const&, rocksdb::TableProperties**)"}, {"children": [{"children": [{"children": [{"value": 32, "name": "DIR[abi:cxx11]"}, {"children": [{"value": 32, "name": "URI[abi:cxx11]"}], "name": "ENV_"}], "name": "BACKUP_"}, {"children": [{"value": 32, "name": "THREADS[abi:cxx11]"}], "name": "NUM_"}], "name": "ARG_"}, {"value": 960, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 1523, "name": "DoCommand()"}, {"value": 4158, "name": "RestoreCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~RestoreCommand()"}], "name": "RestoreCommand::"}, {"children": [{"value": 25, "name": "PositionedRead(unsigned long, unsigned long, rocksdb::Slice*, char*)"}, {"value": 74, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 7, "name": "~SequentialFile()"}, {"children": [{"value": 3, "name": "io() const"}], "name": "use_direct_"}, {"value": 6, "name": "GetRequiredBufferAlignment() const"}], "name": "SequentialFile::"}, {"value": 933, "name": "SetCurrentFile(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::Directory*)"}, {"children": [{"value": 1, "name": "~SliceFormatter()"}], "name": "SliceFormatter::"}, {"children": [{"value": 1, "name": "~SliceTransform()"}, {"value": 3, "name": "SameResultWhenAppended(rocksdb::Slice const&) const"}], "name": "SliceTransform::"}, {"children": [{"children": [{"value": 22, "name": "mergeThreadValue(void*)"}], "name": "TickerInfo::"}, {"value": 177, "name": "recordTick(unsigned int, unsigned long)"}, {"value": 100, "name": "measureTime(unsigned int, unsigned long)"}, {"children": [{"value": 95, "name": "mergeThreadValue(void*)"}, {"value": 170, "name": "HistogramInfo()"}, {"value": 320, "name": "getMergedHistogram() const"}], "name": "HistogramInfo::"}, {"value": 242, "name": "setTickerCount(unsigned int, unsigned long)"}, {"value": 97, "name": "getThreadTickerInfo(unsigned int)"}, {"value": 257, "name": "getAndResetTickerCount(unsigned int)"}, {"value": 194, "name": "getThreadHistogramInfo(unsigned int)"}, {"value": 2010, "name": "StatisticsImpl(std::shared_ptr<rocksdb::Statistics>, bool)"}, {"value": 556, "name": "~StatisticsImpl()"}, {"value": 115, "name": "histogramData(unsigned int, rocksdb::HistogramData*) const"}, {"value": 213, "name": "getTickerCount(unsigned int) const"}, {"value": 19, "name": "HistEnabledForType(unsigned int) const"}, {"value": 110, "name": "getHistogramString[abi:cxx11](unsigned int) const"}, {"value": 557, "name": "ToString[abi:cxx11]() const"}], "name": "StatisticsImpl::"}, {"children": [{"value": 46, "name": "~StopWriteToken()"}], "name": "StopWriteToken::"}, {"children": [{"value": 412, "name": "UnSchedule(void*)"}, {"value": 59, "name": "PthreadCall(char const*, int)"}, {"value": 218, "name": "JoinAllThreads()"}, {"value": 289, "name": "StartBGThreads()"}, {"value": 121, "name": "LowerIOPriority()"}, {"value": 68, "name": "WakeUpAllThreads()"}, {"value": 10, "name": "SetBackgroundThreads(int)"}, {"value": 7, "name": "IncBackgroundThreadsIfNeeded(int)"}, {"value": 221, "name": "SetBackgroundThreadsInternal(int, bool)"}, {"value": 696, "name": "BGThread(unsigned long)"}, {"value": 679, "name": "Schedule(void (*)(void*), void*, void*, void (*)(void*))"}, {"value": 514, "name": "ThreadPoolImpl()"}, {"value": 376, "name": "~ThreadPoolImpl()"}, {"value": 7, "name": "GetQueueLen() const"}], "name": "ThreadPoolImpl::"}, {"children": [{"value": 8, "name": "MaybeAddFile(rocksdb::VersionStorageInfo*, int, rocksdb::FileMetaData*)"}, {"value": 8, "name": "CheckConsistency(rocksdb::VersionStorageInfo*)"}, {"value": 11, "name": "LoadTableHandlers(rocksdb::InternalStats*, int, bool)"}, {"value": 8, "name": "CheckConsistencyForDeletes(rocksdb::VersionEdit*, unsigned long, int)"}, {"children": [{"value": 179, "name": "MaybeAddFile(rocksdb::VersionStorageInfo*, int, rocksdb::FileMetaData*)"}, {"value": 1006, "name": "CheckConsistency(rocksdb::VersionStorageInfo*)"}, {"value": 720, "name": "LoadTableHandlers(rocksdb::InternalStats*, int, bool)"}, {"value": 498, "name": "CheckConsistencyForDeletes(rocksdb::VersionEdit*, unsigned long, int)"}, {"value": 1374, "name": "Apply(rocksdb::VersionEdit*)"}, {"value": 1329, "name": "SaveTo(rocksdb::VersionStorageInfo*)"}, {"value": 474, "name": "~Rep()"}, {"children": [{"value": 286, "name": "operator()() const"}], "name": "LoadTableHandlers(rocksdb::InternalStats*, int, bool)::{lambda()#1}::"}], "name": "Rep::"}, {"value": 8, "name": "Apply(rocksdb::VersionEdit*)"}, {"value": 8, "name": "SaveTo(rocksdb::VersionStorageInfo*)"}, {"value": 562, "name": "VersionBuilder(rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::VersionStorageInfo*, rocksdb::Logger*)"}, {"value": 86, "name": "~VersionBuilder()"}], "name": "VersionBuilder::"}, {"children": [{"value": 215, "name": "DeleteRange(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 193, "name": "DeleteRange(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 127, "name": "SingleDelete(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&)"}, {"value": 111, "name": "SingleDelete(rocksdb::SliceParts const&)"}, {"value": 212, "name": "Put(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 190, "name": "Put(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 212, "name": "Merge(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 190, "name": "Merge(rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 127, "name": "Delete(rocksdb::ColumnFamilyHandle*, rocksdb::SliceParts const&)"}, {"value": 111, "name": "Delete(rocksdb::SliceParts const&)"}, {"value": 6, "name": "~WriteBatchBase()"}], "name": "WriteBatchBase::"}, {"value": 32, "name": "kNullptrString[abi:cxx11]"}, {"value": 32, "name": "kRangeDelBlock[abi:cxx11]"}, {"children": [{"value": 60, "name": "PrepareOptionsForOpenDB()"}, {"value": 434, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 622, "name": "DoCommand()"}, {"value": 8690, "name": "BatchPutCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 268, "name": "~BatchPutCommand()"}], "name": "BatchPutCommand::"}, {"children": [{"value": 453, "name": "ReadFilter(rocksdb::BlockBasedTable::Rep*)"}, {"value": 125, "name": "GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&, char*)"}, {"value": 154, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::Arena*, bool)"}, {"value": 1482, "name": "DumpKeyValue(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::WritableFile*)"}, {"value": 555, "name": "ReadMetaBlock(rocksdb::BlockBasedTable::Rep*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIterator, std::default_delete<rocksdb::InternalIterator> >*)"}, {"value": 3098, "name": "DumpDataBlocks(rocksdb::WritableFile*)"}, {"value": 2024, "name": "DumpIndexBlock(rocksdb::WritableFile*)"}, {"value": 989, "name": "PrefixMayMatch(rocksdb::Slice const&)"}, {"children": [{"value": 471, "name": "KeyInCache(rocksdb::ReadOptions const&, rocksdb::Slice const&)"}, {"children": [{"value": 16, "name": "preloaded() const"}], "name": "filter_block_"}, {"children": [{"value": 16, "name": "preloaded() const"}], "name": "index_reader_"}], "name": "TEST_"}, {"value": 1755, "name": "NewIndexIterator(rocksdb::ReadOptions const&, rocksdb::BlockIter*, rocksdb::BlockBasedTable::CachableEntry<rocksdb::BlockBasedTable::IndexReader>*)"}, {"value": 1112, "name": "CreateIndexReader(rocksdb::BlockBasedTable::IndexReader**, rocksdb::InternalIterator*)"}, {"value": 97, "name": "SetupForCompaction()"}, {"value": 32, "name": "kFilterBlockPrefix[abi:cxx11]"}, {"value": 256, "name": "ApproximateOffsetOf(rocksdb::Slice const&)"}, {"value": 138, "name": "GenerateCachePrefix(rocksdb::Cache*, rocksdb::WritableFile*, char*, unsigned long*)"}, {"value": 138, "name": "GenerateCachePrefix(rocksdb::Cache*, rocksdb::RandomAccessFile*, char*, unsigned long*)"}, {"value": 1154, "name": "PutDataBlockToCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&, rocksdb::ImmutableCFOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Block*, unsigned int, rocksdb::Slice const&, unsigned long)"}, {"value": 364, "name": "SetupCacheKeyPrefix(rocksdb::BlockBasedTable::Rep*, unsigned long)"}, {"value": 1474, "name": "NewDataBlockIterator(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::Slice const&, rocksdb::BlockIter*)"}, {"value": 1027, "name": "GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ImmutableCFOptions const&, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, unsigned int, rocksdb::Slice const&, unsigned long)"}, {"value": 32, "name": "kFullFilterBlockPrefix[abi:cxx11]"}, {"children": [{"value": 29, "name": "PrefixMayMatch(rocksdb::Slice const&)"}, {"value": 28, "name": "NewSecondaryIterator(rocksdb::Slice const&)"}, {"value": 5, "name": "~BlockEntryIteratorState()"}], "name": "BlockEntryIteratorState::"}, {"value": 2190, "name": "GetKVPairsFromDataBlocks(std::vector<std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::allocator<std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >*)"}, {"value": 1474, "name": "MaybeLoadDataBlockToCache(rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::Slice, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*)"}, {"value": 168, "name": "NewRangeTombstoneIterator(rocksdb::ReadOptions const&)"}, {"value": 2779, "name": "Get(rocksdb::ReadOptions const&, rocksdb::Slice const&, rocksdb::GetContext*, bool)"}, {"children": [{"value": 505, "name": "Rep(rocksdb::ImmutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, bool)"}, {"value": 458, "name": "~Rep()"}], "name": "Rep::"}, {"value": 6353, "name": "Open(rocksdb::ImmutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool, bool, int)"}, {"value": 424, "name": "Close()"}, {"value": 1621, "name": "Prefetch(rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 4849, "name": "DumpTable(rocksdb::WritableFile*)"}, {"value": 201, "name": "~BlockBasedTable()"}, {"children": [{"value": 5, "name": "statistics() const"}], "name": "IndexReader::"}, {"value": 57, "name": "GetTableProperties() const"}, {"value": 276, "name": "FullFilterKeyMayMatch(rocksdb::ReadOptions const&, rocksdb::FilterBlockReader*, rocksdb::Slice const&) const"}, {"value": 70, "name": "ApproximateMemoryUsage() const"}, {"value": 905, "name": "GetFilter(bool) const"}], "name": "BlockBasedTable::"}, {"children": [{"value": 550, "name": "CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)"}, {"value": 4, "name": "GetMaxColumnFamily()"}, {"value": 146, "name": "RemoveColumnFamily(rocksdb::ColumnFamilyData*)"}, {"value": 9, "name": "GetNextColumnFamilyID()"}, {"value": 12, "name": "UpdateMaxColumnFamily(unsigned int)"}, {"value": 580, "name": "FreeDeadColumnFamilies()"}, {"value": 1618, "name": "ColumnFamilySet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ImmutableDBOptions const*, rocksdb::EnvOptions const&, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::WriteController*)"}, {"value": 608, "name": "~ColumnFamilySet()"}, {"value": 8, "name": "GetDefault() const"}, {"value": 150, "name": "GetColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 111, "name": "GetColumnFamily(unsigned int) const"}, {"value": 5, "name": "NumberOfColumnFamilies() const"}], "name": "ColumnFamilySet::"}, {"children": [{"value": 74, "name": "CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 74, "name": "GetLiveFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long*, bool)"}, {"value": 74, "name": "EnableFileDeletions(bool)"}, {"value": 74, "name": "DisableFileDeletions()"}, {"value": 514, "name": "Get(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 74, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 2010, "name": "Init(rocksdb::Options const&)"}, {"value": 488, "name": "Open(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DB**)"}, {"value": 74, "name": "Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 74, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 74, "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)"}, {"value": 74, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 1970, "name": "MultiGet(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 76, "name": "CompactedDBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 38, "name": "~CompactedDBImpl()"}], "name": "CompactedDBImpl::"}, {"children": [{"value": 689, "name": "char* AllocateImpl<rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}>(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&)"}, {"value": 731, "name": "char* AllocateImpl<rocksdb::ConcurrentArena::Allocate(unsigned long)::{lambda()#1}>(unsigned long, bool, rocksdb::ConcurrentArena::Allocate(unsigned long)::{lambda()#1} const&)"}, {"value": 58, "name": "AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)"}, {"value": 115, "name": "Repick()"}, {"value": 33, "name": "Allocate(unsigned long)"}, {"children": [{"value": 4, "name": "cpuid"}], "name": "tls_"}, {"value": 1010, "name": "ConcurrentArena(unsigned long, unsigned long)"}, {"value": 107, "name": "~ConcurrentArena()"}, {"value": 8, "name": "BlockSize() const"}], "name": "ConcurrentArena::"}, {"value": 29, "name": "CurrentFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 5511, "name": "DoDumpCommand()"}, {"children": [{"children": [{"value": 32, "name": "ONLY[abi:cxx11]"}, {"value": 32, "name": "DELIM[abi:cxx11]"}], "name": "COUNT_"}, {"children": [{"value": 32, "name": "BUCKET[abi:cxx11]"}], "name": "TTL_"}, {"value": 32, "name": "STATS[abi:cxx11]"}], "name": "ARG_"}, {"value": 246, "name": "GetFileNameFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 2871, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 1645, "name": "DoCommand()"}, {"value": 11186, "name": "DBDumperCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 260, "name": "~DBDumperCommand()"}], "name": "DBDumperCommand::"}, {"children": [{"children": [{"value": 32, "name": "COMPACT[abi:cxx11]"}, {"children": [{"value": 32, "name": "LOAD[abi:cxx11]"}], "name": "BULK_"}, {"children": [{"value": 32, "name": "WAL[abi:cxx11]"}], "name": "DISABLE_"}], "name": "ARG_"}, {"value": 81, "name": "PrepareOptionsForOpenDB()"}, {"value": 1189, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 1136, "name": "DoCommand()"}, {"value": 5164, "name": "DBLoaderCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~DBLoaderCommand()"}], "name": "DBLoaderCommand::"}, {"children": [{"value": 49, "name": "~DelayWriteToken()"}], "name": "DelayWriteToken::"}, {"children": [{"value": 953, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1531, "name": "MoveToTrash(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 350, "name": "DeleteTrashFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)"}, {"value": 114, "name": "WaitForEmptyTrash()"}, {"value": 196, "name": "GetBackgroundErrors[abi:cxx11]()"}, {"value": 911, "name": "BackgroundEmptyTrash()"}, {"value": 1948, "name": "DeleteScheduler(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, rocksdb::Logger*, rocksdb::SstFileManagerImpl*)"}, {"value": 726, "name": "~DeleteScheduler()"}], "name": "DeleteScheduler::"}, {"value": 150, "name": "DumpMallocStats(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"children": [{"value": 191, "name": "SeekToLast()"}, {"value": 154, "name": "GetProperty(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 191, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 126, "name": "SeekToFirst()"}, {"value": 2537, "name": "SeekInternal(rocksdb::Slice const&, bool)"}, {"value": 479, "name": "UpdateCurrent()"}, {"value": 161, "name": "DeleteIterator(rocksdb::InternalIterator*, bool)"}, {"value": 1804, "name": "RenewIterators()"}, {"value": 130, "name": "FindFileInRange(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, rocksdb::Slice const&, unsigned int, unsigned int)"}, {"value": 739, "name": "RebuildIterators(bool)"}, {"value": 421, "name": "DeleteCurrentIter()"}, {"value": 9, "name": "SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*)"}, {"value": 592, "name": "BuildLevelIterators(rocksdb::VersionStorageInfo const*)"}, {"value": 304, "name": "NeedToSeekImmutable(rocksdb::Slice const&)"}, {"children": [{"value": 262, "name": "CheckDeletedIters(int*, int*)"}], "name": "TEST_"}, {"value": 546, "name": "ResetIncompleteIterators()"}, {"value": 233, "name": "UpdateChildrenPinnedItersMgr()"}, {"value": 1144, "name": "Next()"}, {"value": 191, "name": "Prev()"}, {"value": 173, "name": "Seek(rocksdb::Slice const&)"}, {"value": 688, "name": "Cleanup(bool)"}, {"value": 625, "name": "SVCleanup()"}, {"value": 1060, "name": "ForwardIterator(rocksdb::DBImpl*, rocksdb::ReadOptions const&, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*)"}, {"value": 866, "name": "~ForwardIterator()"}, {"value": 43, "name": "IsKeyPinned() const"}, {"value": 43, "name": "IsValuePinned() const"}, {"value": 71, "name": "IsOverUpperBound(rocksdb::Slice const&) const"}, {"value": 13, "name": "key() const"}, {"value": 23, "name": "Valid() const"}, {"value": 13, "name": "value() const"}, {"value": 168, "name": "status() const"}], "name": "ForwardIterator::"}, {"value": 155, "name": "GetPropertyInfo(rocksdb::Slice const&)"}, {"children": [{"value": 25, "name": "NewIterator(rocksdb::BlockIter*, bool)"}, {"value": 1562, "name": "Create(rocksdb::SliceTransform const*, rocksdb::Footer const&, rocksdb::RandomAccessFileReader*, rocksdb::ImmutableCFOptions const&, rocksdb::Comparator const*, rocksdb::BlockHandle const&, rocksdb::InternalIterator*, rocksdb::BlockBasedTable::IndexReader**, bool, rocksdb::PersistentCacheOptions const&)"}, {"value": 153, "name": "~HashIndexReader()"}, {"children": [{"value": 23, "name": "size() const"}], "name": "usable_"}, {"value": 29, "name": "ApproximateMemoryUsage() const"}, {"value": 9, "name": "size() const"}], "name": "HashIndexReader::"}, {"value": 486, "name": "InfoLogFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 296, "name": "SeekToLast()"}, {"value": 147, "name": "ReleaseIter(bool)"}, {"value": 266, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 245, "name": "SeekToFirst()"}, {"value": 178, "name": "SeekInternal(rocksdb::Slice const&, bool)"}, {"value": 53, "name": "NeedToRebuild()"}, {"value": 481, "name": "UpdateCurrent()"}, {"value": 86, "name": "RebuildIterator()"}, {"value": 39, "name": "Lock()"}, {"value": 1017, "name": "Next()"}, {"value": 1251, "name": "Prev()"}, {"value": 266, "name": "Seek(rocksdb::Slice const&)"}, {"value": 23, "name": "UnLock()"}, {"value": 35, "name": "TryLock()"}, {"value": 1150, "name": "ManagedIterator(rocksdb::DBImpl*, rocksdb::ReadOptions const&, rocksdb::ColumnFamilyData*)"}, {"value": 1058, "name": "~ManagedIterator()"}, {"value": 15, "name": "key() const"}, {"value": 7, "name": "Valid() const"}, {"value": 15, "name": "value() const"}, {"value": 58, "name": "status() const"}], "name": "ManagedIterator::"}, {"children": [{"value": 270, "name": "MemTableOptions(rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&)"}], "name": "MemTableOptions::"}, {"children": [{"value": 73, "name": "ClearHeaps()"}, {"value": 533, "name": "SeekToLast()"}, {"value": 482, "name": "AddIterator(rocksdb::InternalIterator*)"}, {"value": 81, "name": "InitMaxHeap()"}, {"value": 1016, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 478, "name": "SeekToFirst()"}, {"value": 145, "name": "SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*)"}, {"value": 913, "name": "Next()"}, {"value": 1081, "name": "Prev()"}, {"value": 940, "name": "Seek(rocksdb::Slice const&)"}, {"value": 927, "name": "MergingIterator(rocksdb::Comparator const*, rocksdb::InternalIterator**, int, bool, bool)"}, {"value": 270, "name": "~MergingIterator()"}, {"value": 46, "name": "IsKeyPinned() const"}, {"value": 46, "name": "IsValuePinned() const"}, {"value": 16, "name": "key() const"}, {"value": 12, "name": "Valid() const"}, {"value": 16, "name": "value() const"}, {"value": 307, "name": "status() const"}], "name": "MergingIterator::"}, {"value": 112, "name": "NewTableBuilder(rocksdb::ImmutableCFOptions const&, rocksdb::InternalKeyComparator const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > > const*, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::WritableFileWriter*, rocksdb::CompressionType, rocksdb::CompressionOptions const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, bool)"}, {"value": 25, "name": "NewWritableFile(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)"}, {"value": 286, "name": "OptionsFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 261, "name": "InitFromRawData(rocksdb::Slice)"}, {"value": 49, "name": "GetOffset(unsigned int, unsigned int*) const"}], "name": "PlainTableIndex::"}, {"value": 940, "name": "SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)"}, {"value": 330, "name": "SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Options const&)"}, {"value": 979, "name": "SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&)"}, {"value": 561, "name": "SetIdentityFile(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 301, "name": "CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&, rocksdb::MemTableAllocator*, rocksdb::SliceTransform const*, rocksdb::Logger*)"}, {"value": 5, "name": "~SkipListFactory()"}, {"value": 3, "name": "IsInsertConcurrentlySupported() const"}, {"value": 6, "name": "Name() const"}], "name": "SkipListFactory::"}, {"children": [{"value": 732, "name": "SstFileMetaData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)"}, {"value": 716, "name": "SstFileMetaData(rocksdb::SstFileMetaData const&)"}], "name": "SstFileMetaData::"}, {"children": [{"value": 63, "name": "Add(rocksdb::TableProperties const&)"}, {"value": 1115, "name": "TableProperties(rocksdb::TableProperties&&)"}, {"value": 2121, "name": "TableProperties(rocksdb::TableProperties const&)"}, {"value": 234, "name": "~TableProperties()"}, {"value": 665, "name": "operator=(rocksdb::TableProperties&&)"}, {"value": 6491, "name": "ToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}], "name": "TableProperties::"}, {"children": [{"value": 47, "name": "GetStopToken()"}, {"value": 83, "name": "GetDelayToken(unsigned long)"}, {"value": 48, "name": "GetCompactionPressureToken()"}, {"value": 499, "name": "GetDelay(rocksdb::Env*, unsigned long)"}, {"value": 7, "name": "IsStopped() const"}], "name": "WriteController::"}, {"children": [{"value": 88, "name": "context"}], "name": "iostats_"}, {"value": 16, "name": "kMetaDataPrefix"}, {"value": 115, "name": "AppendHumanBytes(unsigned long, char*, int)"}, {"children": [{"children": [{"value": 1609, "name": "StoreToFile(bool)"}, {"value": 5513, "name": "LoadFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > > const&)"}, {"value": 1001, "name": "GetInfoString[abi:cxx11]()"}, {"value": 613, "name": "Delete(bool)"}, {"value": 650, "name": "AddFile(std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo>)"}, {"value": 259, "name": "BackupMeta(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > > >*, rocksdb::Env*)"}, {"value": 231, "name": "~BackupMeta()"}], "name": "BackupMeta::"}, {"value": 8668, "name": "Initialize()"}, {"value": 8, "name": "StopBackup()"}, {"value": 2327, "name": "DeleteBackup(unsigned int)"}, {"value": 2301, "name": "VerifyBackup(unsigned int)"}, {"value": 455, "name": "GetBackupInfo(std::vector<rocksdb::BackupInfo, std::allocator<rocksdb::BackupInfo> >*)"}, {"value": 632, "name": "DeleteChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)"}, {"value": 4006, "name": "GarbageCollect()"}, {"value": 350, "name": "PurgeOldBackups(unsigned int)"}, {"value": 2112, "name": "CopyOrCreateFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, rocksdb::Env*, bool, rocksdb::RateLimiter*, unsigned long*, unsigned int*, unsigned long, std::function<void ()>)"}, {"value": 865, "name": "CalculateChecksum(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, unsigned long, unsigned int*)"}, {"value": 289, "name": "GetCorruptedBackups(std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 5319, "name": "RestoreDBFromBackup(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RestoreOptions const&)"}, {"children": [{"value": 446, "name": "CopyOrCreateWorkItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Env*, rocksdb::Env*, bool, rocksdb::RateLimiter*, unsigned long, std::function<void ()>)"}, {"value": 179, "name": "CopyOrCreateWorkItem(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&&)"}, {"value": 166, "name": "CopyOrCreateWorkItem()"}, {"value": 283, "name": "operator=(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&&)"}], "name": "CopyOrCreateWorkItem::"}, {"value": 7299, "name": "AddBackupFileWorkItem(std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem> >&, unsigned int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RateLimiter*, unsigned long, unsigned long, bool, std::function<void ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 700, "name": "InsertPathnameToSizeBytes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >*)"}, {"value": 40, "name": "RestoreDBFromLatestBackup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RestoreOptions const&)"}, {"value": 11032, "name": "CreateNewBackupWithMetadata(rocksdb::DB*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::function<void ()>)"}, {"children": [{"value": 218, "name": "operator=(rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem&&)"}], "name": "BackupAfterCopyOrCreateWorkItem::"}, {"value": 3132, "name": "BackupEngineImpl(rocksdb::Env*, rocksdb::BackupableDBOptions const&, bool)"}, {"value": 2530, "name": "~BackupEngineImpl()"}, {"value": 235, "name": "GetBackupMetaDir[abi:cxx11]() const"}, {"value": 458, "name": "GetBackupMetaFile[abi:cxx11](unsigned int) const"}, {"value": 1034, "name": "GetPrivateFileRel(unsigned int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 436, "name": "GetFileFromChecksumFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 1166, "name": "GetSharedFileWithChecksum(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, unsigned long) const"}, {"value": 514, "name": "GetSharedFileWithChecksumRel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) const"}], "name": "BackupEngineImpl::"}, {"children": [{"value": 4, "name": "IncrementNumberFailBackup()"}, {"value": 3, "name": "IncrementNumberSuccessBackup()"}, {"value": 4, "name": "GetNumberFailBackup() const"}, {"value": 3, "name": "GetNumberSuccessBackup() const"}, {"value": 165, "name": "ToString[abi:cxx11]() const"}], "name": "BackupStatistics::"}, {"children": [{"value": 1590, "name": "Create(rocksdb::SliceTransform const*, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::BlockPrefixIndex**)"}, {"children": [{"value": 911, "name": "Finish()"}], "name": "Builder::"}, {"value": 131, "name": "GetBlocks(rocksdb::Slice const&, unsigned int**)"}], "name": "BlockPrefixIndex::"}, {"children": [{"value": 5, "name": "SetCurrent(rocksdb::Version*)"}, {"value": 178, "name": "SetDropped()"}, {"value": 370, "name": "SetOptions(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 129, "name": "CompactRange(rocksdb::MutableCFOptions const&, int, int, unsigned int, rocksdb::InternalKey const*, rocksdb::InternalKey const*, rocksdb::InternalKey**, bool*)"}, {"value": 69, "name": "PickCompaction(rocksdb::MutableCFOptions const&, rocksdb::LogBuffer*)"}, {"value": 105, "name": "OldestLogToKeep()"}, {"value": 165, "name": "CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)"}, {"value": 4, "name": "kCompactAllLevels"}, {"value": 55, "name": "InstallSuperVersion(rocksdb::SuperVersion*, rocksdb::InstrumentedMutex*)"}, {"value": 281, "name": "InstallSuperVersion(rocksdb::SuperVersion*, rocksdb::InstrumentedMutex*, rocksdb::MutableCFOptions const&)"}, {"value": 4, "name": "kCompactToBaseLevel"}, {"value": 96, "name": "ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)"}, {"value": 84, "name": "GetReferencedSuperVersion(rocksdb::InstrumentedMutex*)"}, {"value": 228, "name": "GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*)"}, {"value": 260, "name": "ResetThreadLocalSuperVersions()"}, {"value": 38, "name": "ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*)"}, {"value": 2787, "name": "RecalculateWriteStallConditions(rocksdb::MutableCFOptions const&)"}, {"value": 4598, "name": "ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::EnvOptions const&, rocksdb::ColumnFamilySet*)"}, {"value": 2942, "name": "~ColumnFamilyData()"}, {"value": 27, "name": "NeedsCompaction() const"}, {"value": 41, "name": "GetLatestCFOptions() const"}, {"value": 9, "name": "GetNumLiveVersions() const"}, {"value": 9, "name": "GetTotalSstFilesSize() const"}, {"value": 12, "name": "RangeOverlapWithCompaction(rocksdb::Slice const&, rocksdb::Slice const&, int) const"}, {"value": 13, "name": "soptions() const"}], "name": "ColumnFamilyData::"}, {"children": [{"value": 3340, "name": "CompactRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, int, int, unsigned int, rocksdb::InternalKey const*, rocksdb::InternalKey const*, rocksdb::InternalKey**, bool*)"}, {"value": 456, "name": "FormCompaction(rocksdb::CompactionOptions const&, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&, int, rocksdb::VersionStorageInfo*, rocksdb::MutableCFOptions const&, unsigned int)"}, {"value": 237, "name": "GetGrandparents(rocksdb::VersionStorageInfo*, rocksdb::CompactionInputFiles const&, rocksdb::CompactionInputFiles const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)"}, {"value": 1670, "name": "SetupOtherInputs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, rocksdb::CompactionInputFiles*, rocksdb::CompactionInputFiles*, int*, int)"}, {"value": 56, "name": "FilesInCompaction(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&)"}, {"value": 162, "name": "RangeInCompaction(rocksdb::VersionStorageInfo*, rocksdb::InternalKey const*, rocksdb::InternalKey const*, int, int*)"}, {"value": 206, "name": "RegisterCompaction(rocksdb::Compaction*)"}, {"value": 271, "name": "UnregisterCompaction(rocksdb::Compaction*)"}, {"value": 1436, "name": "IsInputNonOverlapping(rocksdb::Compaction*)"}, {"value": 443, "name": "ExpandWhileOverlapping(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionStorageInfo*, rocksdb::CompactionInputFiles*)"}, {"value": 41, "name": "ReleaseCompactionFiles(rocksdb::Compaction*, rocksdb::Status)"}, {"value": 78, "name": "CompactionPicker(rocksdb::ImmutableCFOptions const&, rocksdb::InternalKeyComparator const*)"}, {"value": 407, "name": "~CompactionPicker()"}, {"value": 13, "name": "MaxOutputLevel() const"}, {"value": 169, "name": "RangeOverlapWithCompaction(rocksdb::Slice const&, rocksdb::Slice const&, int) const"}, {"value": 3935, "name": "SanitizeCompactionInputFiles(std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> >*, rocksdb::ColumnFamilyMetaData const&, int) const"}, {"value": 470, "name": "FilesRangeOverlapWithCompaction(std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&, int) const"}, {"value": 1333, "name": "GetCompactionInputsFromFileNumbers(std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> >*, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> >*, rocksdb::VersionStorageInfo const*, rocksdb::CompactionOptions const&) const"}, {"value": 3733, "name": "SanitizeCompactionInputFilesForAllLevels(std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> >*, rocksdb::ColumnFamilyMetaData const&, int) const"}, {"value": 350, "name": "GetRange(rocksdb::CompactionInputFiles const&, rocksdb::InternalKey*, rocksdb::InternalKey*) const"}, {"value": 630, "name": "GetRange(rocksdb::CompactionInputFiles const&, rocksdb::CompactionInputFiles const&, rocksdb::InternalKey*, rocksdb::InternalKey*) const"}, {"value": 484, "name": "GetRange(std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&, rocksdb::InternalKey*, rocksdb::InternalKey*) const"}], "name": "CompactionPicker::"}, {"children": [{"value": 259, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 332, "name": "DoCommand()"}, {"value": 4460, "name": "CompactorCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~CompactorCommand()"}], "name": "CompactorCommand::"}, {"children": [{"children": [{"value": 8, "name": "CMD"}], "name": "DELETE_"}, {"value": 462, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"children": [{"value": 8, "name": "CMD"}], "name": "GET_"}, {"children": [{"value": 8, "name": "CMD"}], "name": "PUT_"}, {"children": [{"value": 8, "name": "CMD"}], "name": "HELP_"}, {"value": 2860, "name": "DoCommand()"}, {"value": 2716, "name": "DBQuerierCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~DBQuerierCommand()"}], "name": "DBQuerierCommand::"}, {"children": [{"value": 270, "name": "EnvRegistryEntry(rocksdb::EnvRegistryEntry const&)"}], "name": "EnvRegistryEntry::"}, {"children": [{"value": 1, "name": "~FilterBitsReader()"}], "name": "FilterBitsReader::"}, {"children": [{"value": 1, "name": "~FlushBlockPolicy()"}], "name": "FlushBlockPolicy::"}, {"value": 59, "name": "FormatFileNumber(unsigned long, unsigned int, char*, unsigned long)"}, {"value": 288, "name": "GetMergeOperands(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, bool*)"}, {"children": [{"value": 205, "name": "OnKeyAdded(rocksdb::Slice const&)"}, {"value": 16, "name": "AddIndexEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const*, rocksdb::BlockHandle const&)"}, {"value": 187, "name": "FlushPendingPrefix()"}, {"value": 512, "name": "Finish(rocksdb::IndexBuilder::IndexBlocks*)"}, {"value": 321, "name": "~HashIndexBuilder()"}, {"value": 19, "name": "EstimatedSize() const"}], "name": "HashIndexBuilder::"}, {"value": 29, "name": "IdentityFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 819, "name": "IngestedFileInfo(rocksdb::IngestedFileInfo const&)"}, {"value": 668, "name": "IngestedFileInfo()"}, {"value": 107, "name": "~IngestedFileInfo()"}], "name": "IngestedFileInfo::"}, {"children": [{"value": 74, "name": "GetProperty(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 1, "name": "SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*)"}, {"value": 3, "name": "IsKeyPinned() const"}, {"value": 3, "name": "IsValuePinned() const"}], "name": "InternalIterator::"}, {"children": [{"value": 434, "name": "RunCommand(int, char**, rocksdb::Options, rocksdb::LDBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const*)"}, {"value": 4757, "name": "PrintHelp(char const*)"}], "name": "LDBCommandRunner::"}, {"children": [{"value": 424, "name": "LiveFileMetaData(rocksdb::LiveFileMetaData&&)"}, {"value": 311, "name": "LiveFileMetaData(rocksdb::LiveFileMetaData const&)"}], "name": "LiveFileMetaData::"}, {"children": [{"value": 213, "name": "DeleteImpl(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ValueType)"}, {"value": 367, "name": "MarkCommit(rocksdb::Slice const&)"}, {"value": 221, "name": "MarkRollback(rocksdb::Slice const&)"}, {"value": 1085, "name": "DeleteRangeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 160, "name": "MarkEndPrepare(rocksdb::Slice const&)"}, {"value": 261, "name": "SingleDeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 260, "name": "MarkBeginPrepare()"}, {"value": 317, "name": "SeekToColumnFamily(unsigned int, rocksdb::Status*)"}, {"value": 1321, "name": "PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 1319, "name": "MergeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 258, "name": "DeleteCF(unsigned int, rocksdb::Slice const&)"}, {"value": 63, "name": "~MemTableInserter()"}], "name": "MemTableInserter::"}, {"children": [{"value": 39, "name": "SeekToLast()"}, {"value": 623, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 39, "name": "SeekToFirst()"}, {"value": 54, "name": "Next()"}, {"value": 54, "name": "Prev()"}, {"value": 529, "name": "Seek(rocksdb::Slice const&)"}, {"value": 471, "name": "MemTableIterator(rocksdb::MemTable const&, rocksdb::ReadOptions const&, rocksdb::Arena*, bool)"}, {"value": 241, "name": "~MemTableIterator()"}, {"value": 3, "name": "IsKeyPinned() const"}, {"value": 4, "name": "IsValuePinned() const"}, {"value": 70, "name": "key() const"}, {"value": 4, "name": "Valid() const"}, {"value": 124, "name": "value() const"}, {"value": 10, "name": "status() const"}], "name": "MemTableIterator::"}, {"value": 74, "name": "MetaDatabaseName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 495, "name": "Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockHandle const&)"}, {"value": 119, "name": "Finish()"}, {"value": 288, "name": "MetaIndexBuilder()"}], "name": "MetaIndexBuilder::"}, {"children": [{"value": 395, "name": "RefreshDerivedOptions(int, rocksdb::CompactionStyle)"}, {"value": 505, "name": "MutableCFOptions(rocksdb::ColumnFamilyOptions const&)"}, {"value": 390, "name": "MutableCFOptions(rocksdb::MutableCFOptions const&)"}, {"value": 15, "name": "MaxFileSizeForLevel(int) const"}, {"value": 803, "name": "Dump(rocksdb::Logger*) const"}], "name": "MutableCFOptions::"}, {"children": [{"value": 112, "name": "MutableDBOptions(rocksdb::DBOptions const&)"}, {"value": 92, "name": "MutableDBOptions()"}, {"value": 128, "name": "Dump(rocksdb::Logger*) const"}], "name": "MutableDBOptions::"}, {"value": 46, "name": "NewEmptyIterator()"}, {"value": 193, "name": "NewErrorIterator(rocksdb::Status const&)"}, {"value": 23, "name": "NewNoopTransform()"}, {"children": [{"value": 504, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::Arena*, bool)"}, {"value": 3224, "name": "PopulateIndex(rocksdb::TableProperties*, int, double, unsigned long, unsigned long)"}, {"value": 75, "name": "MmapDataIfNeeded()"}, {"value": 1, "name": "SetupForCompaction()"}, {"value": 3, "name": "ApproximateOffsetOf(rocksdb::Slice const&)"}, {"value": 147, "name": "AllocateAndFillBloom(int, int, unsigned long, std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 1693, "name": "PopulateIndexRecordList(rocksdb::PlainTableIndexBuilder*, std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 1778, "name": "Get(rocksdb::ReadOptions const&, rocksdb::Slice const&, rocksdb::GetContext*, bool)"}, {"value": 1383, "name": "Open(rocksdb::ImmutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, int, double, unsigned long, unsigned long, bool)"}, {"value": 126, "name": "Prepare(rocksdb::Slice const&)"}, {"value": 83, "name": "FillBloom(std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 1134, "name": "PlainTableReader(rocksdb::ImmutableCFOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::EncodingType, unsigned long, rocksdb::TableProperties const*)"}, {"value": 608, "name": "~PlainTableReader()"}, {"value": 240, "name": "MatchBloom(unsigned int) const"}, {"value": 53, "name": "GetTableProperties() const"}, {"value": 8, "name": "ApproximateMemoryUsage() const"}, {"value": 256, "name": "Next(rocksdb::PlainTableKeyDecoder*, unsigned int*, rocksdb::ParsedInternalKey*, rocksdb::Slice*, rocksdb::Slice*, bool*) const"}, {"value": 1147, "name": "GetOffset(rocksdb::PlainTableKeyDecoder*, rocksdb::Slice const&, rocksdb::Slice const&, unsigned int, bool&, unsigned int*) const"}], "name": "PlainTableReader::"}, {"children": [{"value": 1, "name": "EnableReadAhead()"}, {"value": 74, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 1, "name": "Hint(rocksdb::RandomAccessFile::AccessPattern)"}, {"value": 7, "name": "~RandomAccessFile()"}, {"value": 3, "name": "GetUniqueId(char*, unsigned long) const"}, {"children": [{"value": 3, "name": "io() const"}], "name": "use_direct_"}, {"value": 3, "name": "ShouldForwardRawRequest() const"}, {"value": 6, "name": "GetRequiredBufferAlignment() const"}], "name": "RandomAccessFile::"}, {"value": 630, "name": "ReadFileToString(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"children": [{"value": 129, "name": "RegisterThread(rocksdb::Env const*, rocksdb::ThreadStatus::ThreadType)"}, {"value": 24, "name": "SetThreadState(rocksdb::ThreadStatus::StateType)"}, {"value": 109, "name": "SetColumnFamily(rocksdb::ColumnFamilyData const*, rocksdb::Env const*, bool)"}, {"value": 47, "name": "UnregisterThread()"}, {"value": 26, "name": "EraseDatabaseInfo(rocksdb::DB const*)"}, {"value": 20, "name": "ResetThreadStatus()"}, {"value": 93, "name": "SetThreadOperation(rocksdb::ThreadStatus::OperationType)"}, {"value": 136, "name": "NewColumnFamilyInfo(rocksdb::DB const*, rocksdb::ColumnFamilyData const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env const*)"}, {"value": 26, "name": "EraseColumnFamilyInfo(rocksdb::ColumnFamilyData const*)"}, {"value": 26, "name": "SetThreadOperationStage(rocksdb::ThreadStatus::OperationStage)"}, {"value": 30, "name": "SetThreadOperationProperty(int, unsigned long)"}, {"value": 67, "name": "MaybeInitThreadLocalUpdater(rocksdb::Env const*)"}, {"children": [{"value": 1, "name": "initialized_"}, {"children": [{"value": 8, "name": "cache_"}], "name": "local_"}], "name": "thread_updater_"}, {"value": 30, "name": "IncreaseThreadOperationProperty(int, unsigned long)"}], "name": "ThreadStatusUtil::"}, {"children": [{"value": 257, "name": "~TtlMergeOperator()"}, {"value": 664, "name": "FullMergeV2(rocksdb::MergeOperator::MergeOperationInput const&, rocksdb::MergeOperator::MergeOperationOutput*) const"}, {"value": 753, "name": "PartialMergeMulti(rocksdb::Slice const&, std::deque<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}, {"value": 6, "name": "Name() const"}], "name": "TtlMergeOperator::"}, {"children": [{"value": 463, "name": "CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&, rocksdb::MemTableAllocator*, rocksdb::SliceTransform const*, rocksdb::Logger*)"}, {"value": 5, "name": "~VectorRepFactory()"}, {"value": 6, "name": "Name() const"}], "name": "VectorRepFactory::"}, {"children": [{"children": [{"children": [{"value": 32, "name": "FILE[abi:cxx11]"}], "name": "WAL_"}, {"children": [{"value": 32, "name": "VALUE[abi:cxx11]"}, {"value": 32, "name": "HEADER[abi:cxx11]"}], "name": "PRINT_"}], "name": "ARG_"}, {"value": 946, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 235, "name": "DoCommand()"}, {"value": 3894, "name": "WALDumperCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~WALDumperCommand()"}], "name": "WALDumperCommand::"}, {"children": [{"value": 424, "name": "SeekToLast()"}, {"value": 60, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 173, "name": "SeekToFirst()"}, {"value": 13, "name": "Next()"}, {"value": 175, "name": "Prev()"}, {"value": 173, "name": "Seek(rocksdb::Slice const&)"}, {"value": 5, "name": "~WBWIIteratorImpl()"}, {"value": 151, "name": "Entry() const"}, {"value": 33, "name": "Valid() const"}, {"value": 10, "name": "status() const"}], "name": "WBWIIteratorImpl::"}, {"value": 50, "name": "XXH32_resetState(void*, unsigned int)"}, {"value": 32, "name": "kPropertiesBlock[abi:cxx11]"}, {"value": 433, "name": "AppendHumanMicros(unsigned long, char*, int, bool)"}, {"value": 123, "name": "AppendInternalKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::ParsedInternalKey const&)"}, {"children": [{"value": 262, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 114, "name": "DoCommand()"}, {"value": 5264, "name": "ApproxSizeCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~ApproxSizeCommand()"}], "name": "ApproxSizeCommand::"}, {"value": 176, "name": "ArchivalDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 47, "name": "SeekToLast()"}, {"value": 52, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 47, "name": "SeekToFirst()"}, {"value": 407, "name": "UpdateCurrent()"}, {"value": 415, "name": "Next()"}, {"value": 415, "name": "Prev()"}, {"value": 52, "name": "Seek(rocksdb::Slice const&)"}, {"value": 112, "name": "Advance()"}, {"value": 193, "name": "~BaseDeltaIterator()"}, {"value": 54, "name": "key() const"}, {"value": 28, "name": "Valid() const"}, {"value": 54, "name": "value() const"}, {"value": 141, "name": "status() const"}], "name": "BaseDeltaIterator::"}, {"children": [{"value": 32, "name": "kBloomBlock[abi:cxx11]"}, {"value": 83, "name": "AddKeysHashes(std::vector<unsigned int, std::allocator<unsigned int> > const&)"}, {"value": 10, "name": "Finish()"}], "name": "BloomBlockBuilder::"}, {"children": [{"value": 485, "name": "CompactionJobInfo()"}, {"value": 267, "name": "~CompactionJobInfo()"}], "name": "CompactionJobInfo::"}, {"value": 3838, "name": "DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 215, "name": "MakeStream()"}, {"value": 22, "name": "EventLoggerStream(rocksdb::Logger*)"}, {"value": 40, "name": "EventLoggerStream(rocksdb::LogBuffer*)"}, {"value": 702, "name": "~EventLoggerStream()"}], "name": "EventLoggerStream::"}, {"value": 14, "name": "GetColumnFamilyID(rocksdb::ColumnFamilyHandle*)"}, {"children": [{"value": 5, "name": "LockInternal()"}, {"value": 360, "name": "Lock()"}], "name": "InstrumentedMutex::"}, {"value": 81, "name": "MakeTableFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 33, "name": "DoneAllocating()"}, {"value": 39, "name": "AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)"}, {"value": 39, "name": "Allocate(unsigned long)"}, {"value": 48, "name": "MemTableAllocator(rocksdb::Allocator*, rocksdb::WriteBufferManager*)"}, {"value": 116, "name": "~MemTableAllocator()"}, {"value": 10, "name": "BlockSize() const"}], "name": "MemTableAllocator::"}, {"value": 1426, "name": "NewSstFileManager(rocksdb::Env*, std::shared_ptr<rocksdb::Logger>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, bool, rocksdb::Status*)"}, {"value": 47, "name": "OptimizeBlockSize(unsigned long)"}, {"children": [{"value": 866, "name": "Add(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 2161, "name": "Finish()"}, {"value": 8, "name": "Abandon()"}, {"value": 4462, "name": "PlainTableBuilder(rocksdb::ImmutableCFOptions const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > > const*, unsigned int, rocksdb::WritableFileWriter*, unsigned int, rocksdb::EncodingType, unsigned long, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, unsigned long, double, bool)"}, {"value": 780, "name": "~PlainTableBuilder()"}, {"value": 8, "name": "NumEntries() const"}, {"value": 31, "name": "GetTableProperties() const"}, {"value": 58, "name": "status() const"}, {"value": 8, "name": "FileSize() const"}], "name": "PlainTableBuilder::"}, {"children": [{"value": 5, "name": "GetOptions()"}, {"value": 5, "name": "~PlainTableFactory()"}, {"children": [{"value": 5, "name": "options() const"}], "name": "table_"}, {"value": 102, "name": "NewTableReader(rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const"}, {"value": 180, "name": "NewTableBuilder(rocksdb::TableBuilderOptions const&, unsigned int, rocksdb::WritableFileWriter*) const"}, {"value": 10, "name": "SanitizeOptions(rocksdb::DBOptions const&, rocksdb::ColumnFamilyOptions const&) const"}, {"value": 816, "name": "GetPrintableTableOptions[abi:cxx11]() const"}, {"value": 6, "name": "Name() const"}], "name": "PlainTableFactory::"}, {"children": [{"value": 64, "name": "Sync()"}, {"value": 71, "name": "Close()"}, {"value": 10, "name": "Flush()"}, {"value": 64, "name": "Fsync()"}, {"value": 138, "name": "Write(unsigned long, rocksdb::Slice const&)"}, {"value": 330, "name": "PosixRandomRWFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::EnvOptions const&)"}, {"value": 320, "name": "~PosixRandomRWFile()"}, {"value": 190, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "PosixRandomRWFile::"}, {"children": [{"value": 5, "name": "GetFileSize()"}, {"value": 102, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 134, "name": "PositionedAppend(rocksdb::Slice const&, unsigned long)"}, {"value": 64, "name": "Sync()"}, {"value": 419, "name": "Close()"}, {"value": 10, "name": "Flush()"}, {"value": 64, "name": "Fsync()"}, {"value": 142, "name": "Append(rocksdb::Slice const&)"}, {"value": 252, "name": "Allocate(unsigned long, unsigned long)"}, {"value": 140, "name": "Truncate(unsigned long)"}, {"value": 78, "name": "RangeSync(unsigned long, unsigned long)"}, {"value": 482, "name": "PosixWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::EnvOptions const&)"}, {"value": 278, "name": "~PosixWritableFile()"}, {"value": 8, "name": "GetUniqueId(char*, unsigned long) const"}, {"children": [{"value": 4, "name": "io() const"}], "name": "use_direct_"}, {"value": 3, "name": "IsSyncThreadSafe() const"}, {"value": 6, "name": "GetRequiredBufferAlignment() const"}], "name": "PosixWritableFile::"}, {"value": 3172, "name": "ReadBlockContents(rocksdb::RandomAccessFileReader*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::BlockContents*, rocksdb::ImmutableCFOptions const&, bool, rocksdb::Slice const&, rocksdb::PersistentCacheOptions const&)"}, {"value": 746, "name": "WriteStringToFile(rocksdb::Env*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)"}, {"value": 6, "name": "XXH32_sizeofState()"}, {"value": 8, "name": "kIncSlowdownRatio"}, {"value": 1, "name": "kValueTypeForSeek"}, {"children": [{"value": 10, "name": "SeekToLast()"}, {"value": 243, "name": "GetProperty(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 13, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 10, "name": "SeekToFirst()"}, {"value": 13, "name": "RegisterCleanup(void (*)(void*, void*), void*, void*)"}, {"value": 13, "name": "SetIterUnderDBIter(rocksdb::InternalIterator*)"}, {"value": 10, "name": "GetRangeDelAggregator()"}, {"value": 10, "name": "Next()"}, {"value": 10, "name": "Prev()"}, {"value": 13, "name": "Seek(rocksdb::Slice const&)"}, {"value": 5, "name": "GetArena()"}, {"value": 5, "name": "SetDBIter(rocksdb::DBIter*)"}, {"value": 161, "name": "~ArenaWrappedDBIter()"}, {"value": 10, "name": "key() const"}, {"value": 10, "name": "Valid() const"}, {"value": 10, "name": "value() const"}, {"value": 29, "name": "status() const"}], "name": "ArenaWrappedDBIter::"}, {"children": [{"value": 251, "name": "Mark(unsigned int, unsigned int)"}], "name": "BlockReadAmpBitmap::"}, {"value": 56, "name": "BytewiseComparator()"}, {"children": [{"value": 159, "name": "SeekToFirst()"}, {"value": 3314, "name": "NextFromInput()"}, {"value": 157, "name": "PrepareOutput()"}, {"children": [{"value": 6, "name": "~CompactionProxy()"}, {"children": [{"value": 11, "name": "levels() const"}], "name": "number_"}, {"children": [{"value": 11, "name": "level() const"}], "name": "bottommost_"}, {"value": 19, "name": "GetLargestUserKey() const"}, {"value": 9, "name": "KeyNotExistsBeyondOutputLevel(rocksdb::Slice const&, std::vector<unsigned long, std::allocator<unsigned long> >*) const"}, {"value": 14, "name": "level(unsigned long) const"}], "name": "CompactionProxy::"}, {"value": 29, "name": "ResetRecordCounts()"}, {"value": 463, "name": "Next()"}, {"value": 568, "name": "CompactionIterator(rocksdb::InternalIterator*, rocksdb::Comparator const*, rocksdb::MergeHelper*, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> >*, unsigned long, rocksdb::Env*, bool, rocksdb::RangeDelAggregator*, rocksdb::Compaction const*, rocksdb::CompactionFilter const*, std::atomic<bool> const*)"}, {"value": 1984, "name": "CompactionIterator(rocksdb::InternalIterator*, rocksdb::Comparator const*, rocksdb::MergeHelper*, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> >*, unsigned long, rocksdb::Env*, bool, rocksdb::RangeDelAggregator*, std::unique_ptr<rocksdb::CompactionIterator::CompactionProxy, std::default_delete<rocksdb::CompactionIterator::CompactionProxy> >, rocksdb::CompactionFilter const*, std::atomic<bool> const*)"}, {"value": 798, "name": "~CompactionIterator()"}], "name": "CompactionIterator::"}, {"children": [{"value": 206, "name": "Add(rocksdb::CompactionJobStats const&)"}, {"value": 53, "name": "Reset()"}], "name": "CompactionJobStats::"}, {"value": 136, "name": "CreateDBStatistics()"}, {"value": 85, "name": "DeleteFilesInRange(rocksdb::DB*, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"children": [{"value": 329, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 500, "name": "DoCommand()"}, {"value": 3972, "name": "DeleteRangeCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 164, "name": "~DeleteRangeCommand()"}], "name": "DeleteRangeCommand::"}, {"value": 74, "name": "DescriptorFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"value": 470, "name": "EscapeOptionString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 89, "name": "SetBytesPerSecond(long)"}, {"value": 84, "name": "CalculateRefillBytesPerPeriod(long)"}, {"value": 744, "name": "Refill()"}, {"value": 665, "name": "Request(long, rocksdb::Env::IOPriority)"}, {"value": 1192, "name": "GenericRateLimiter(long, long, int)"}, {"value": 1614, "name": "~GenericRateLimiter()"}, {"value": 91, "name": "GetTotalRequests(rocksdb::Env::IOPriority) const"}, {"value": 5, "name": "GetSingleBurstBytes() const"}, {"value": 91, "name": "GetTotalBytesThrough(rocksdb::Env::IOPriority) const"}], "name": "GenericRateLimiter::"}, {"value": 115, "name": "GetCompressionType(rocksdb::ImmutableCFOptions const&, rocksdb::VersionStorageInfo const*, rocksdb::MutableCFOptions const&, int, int, bool)"}, {"children": [{"value": 2100, "name": "ImmutableCFOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)"}, {"value": 208, "name": "ImmutableCFOptions(rocksdb::Options const&)"}, {"value": 1049, "name": "ImmutableCFOptions(rocksdb::ImmutableCFOptions const&)"}, {"value": 578, "name": "~ImmutableCFOptions()"}], "name": "ImmutableCFOptions::"}, {"children": [{"value": 3612, "name": "ImmutableDBOptions(rocksdb::DBOptions const&)"}, {"value": 262, "name": "ImmutableDBOptions()"}, {"value": 940, "name": "~ImmutableDBOptions()"}, {"value": 1177, "name": "Dump(rocksdb::Logger*) const"}], "name": "ImmutableDBOptions::"}, {"children": [{"value": 1, "name": "~MemTableRepFactory()"}, {"value": 3, "name": "IsInsertConcurrentlySupported() const"}], "name": "MemTableRepFactory::"}, {"value": 192, "name": "NewMergingIterator(rocksdb::Comparator const*, rocksdb::InternalIterator**, int, rocksdb::Arena*, bool)"}, {"value": 61, "name": "NewestFirstBySeqNo(rocksdb::FileMetaData*, rocksdb::FileMetaData*)"}, {"value": 1057, "name": "OldInfoLogFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 184, "name": "SeekToLast()"}, {"value": 184, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 42, "name": "SeekToFirst()"}, {"value": 251, "name": "Next()"}, {"value": 1, "name": "Prev()"}, {"value": 1088, "name": "Seek(rocksdb::Slice const&)"}, {"value": 514, "name": "PlainTableIterator(rocksdb::PlainTableReader*, bool)"}, {"value": 185, "name": "~PlainTableIterator()"}, {"value": 15, "name": "key() const"}, {"value": 28, "name": "Valid() const"}, {"value": 15, "name": "value() const"}, {"value": 58, "name": "status() const"}], "name": "PlainTableIterator::"}, {"children": [{"value": 1825, "name": "AddToBuilder(rocksdb::TableBuilder*, rocksdb::Slice const*, rocksdb::Slice const*, rocksdb::FileMetaData*, CompactionIterationStats*, bool)"}, {"value": 1646, "name": "AddTombstone(rocksdb::RangeTombstone)"}, {"value": 711, "name": "ShouldDelete(rocksdb::ParsedInternalKey const&, rocksdb::RangeDelAggregator::RangePositioningMode)"}, {"value": 93, "name": "ShouldDelete(rocksdb::Slice const&, rocksdb::RangeDelAggregator::RangePositioningMode)"}, {"value": 666, "name": "AddTombstones(std::unique_ptr<rocksdb::InternalIterator, std::default_delete<rocksdb::InternalIterator> >)"}, {"value": 83, "name": "ShouldAddTombstones(bool)"}, {"value": 95, "name": "GetPositionalTombstoneMap(unsigned long)"}, {"value": 68, "name": "InvalidateTombstoneMapPositions()"}, {"value": 663, "name": "InitRep(std::vector<unsigned long, std::allocator<unsigned long> > const&)"}, {"value": 63, "name": "IsEmpty()"}, {"value": 234, "name": "RangeDelAggregator(rocksdb::InternalKeyComparator const&, std::vector<unsigned long, std::allocator<unsigned long> > const&, bool)"}, {"value": 38, "name": "RangeDelAggregator(rocksdb::InternalKeyComparator const&, unsigned long, bool)"}], "name": "RangeDelAggregator::"}, {"value": 677, "name": "ReadFooterFromFile(rocksdb::RandomAccessFileReader*, unsigned long, rocksdb::Footer*, unsigned long)"}, {"children": [{"value": 28, "name": "~ReadableWriteBatch()"}, {"value": 440, "name": "GetEntryFromDataOffset(unsigned long, rocksdb::WriteType*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) const"}], "name": "ReadableWriteBatch::"}, {"children": [{"value": 255, "name": "OnMoveFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 50, "name": "GetTotalSize()"}, {"value": 162, "name": "OnDeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 77, "name": "OnAddFileImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"value": 153, "name": "GetTrackedFiles[abi:cxx11]()"}, {"value": 98, "name": "OnDeleteFileImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 12, "name": "WaitForEmptyTrash()"}, {"value": 31, "name": "ScheduleFileDeletion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 62, "name": "SetMaxAllowedSpaceUsage(unsigned long)"}, {"value": 80, "name": "IsMaxAllowedSpaceReached()"}, {"value": 8, "name": "GetDeleteRateBytesPerSecond()"}, {"value": 196, "name": "OnAddFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 872, "name": "SstFileManagerImpl(rocksdb::Env*, std::shared_ptr<rocksdb::Logger>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)"}, {"value": 546, "name": "~SstFileManagerImpl()"}], "name": "SstFileManagerImpl::"}, {"children": [{"value": 8, "name": "SetFinalized()"}, {"value": 74, "name": "OverlapInLevel(int, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 1387, "name": "CalculateBaseBytes(rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&)"}, {"value": 48, "name": "RemoveCurrentStats(rocksdb::FileMetaData*)"}, {"value": 540, "name": "HasOverlappingUserKey(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const*, int)"}, {"value": 896, "name": "ComputeCompactionScore(rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&)"}, {"value": 159, "name": "UpdateAccumulatedStats(rocksdb::FileMetaData*)"}, {"value": 194, "name": "ComputeCompensatedSizes()"}, {"value": 255, "name": "GenerateLevelFilesBrief()"}, {"value": 70, "name": "UpdateNumNonEmptyLevels()"}, {"value": 4213, "name": "UpdateFilesByCompactionPri(rocksdb::CompactionPri)"}, {"value": 721, "name": "GenerateLevel0NonOverlapping()"}, {"value": 259, "name": "MaxNextLevelOverlappingBytes()"}, {"value": 965, "name": "EstimateCompactionBytesNeeded(rocksdb::MutableCFOptions const&)"}, {"value": 360, "name": "ComputeFilesMarkedForCompaction()"}, {"value": 73, "name": "AddFile(int, rocksdb::FileMetaData*, rocksdb::Logger*)"}, {"value": 215, "name": "Reserve(int, unsigned long)"}, {"value": 2768, "name": "VersionStorageInfo(rocksdb::InternalKeyComparator const*, rocksdb::Comparator const*, int, rocksdb::CompactionStyle, rocksdb::VersionStorageInfo*, bool)"}, {"value": 622, "name": "~VersionStorageInfo()"}, {"value": 387, "name": "LevelSummary(rocksdb::VersionStorageInfo::LevelSummaryStorage*) const"}, {"value": 18, "name": "MaxInputLevel() const"}, {"value": 26, "name": "NumLevelBytes(int) const"}, {"value": 312, "name": "LevelFileSummary(rocksdb::VersionStorageInfo::FileSummaryStorage*, int) const"}, {"value": 12, "name": "MaxBytesForLevel(int) const"}, {"value": 1403, "name": "EstimateLiveDataSize() const"}, {"value": 731, "name": "GetOverlappingInputs(int, rocksdb::InternalKey const*, rocksdb::InternalKey const*, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*, int, int*, bool) const"}, {"value": 308, "name": "GetEstimatedActiveKeys() const"}, {"value": 434, "name": "ExtendOverlappingInputs(int, rocksdb::Slice const&, rocksdb::Slice const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*, unsigned int) const"}, {"value": 375, "name": "GetOverlappingInputsBinarySearch(int, rocksdb::Slice const&, rocksdb::Slice const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*, int, int*) const"}, {"value": 234, "name": "GetEstimatedCompressionRatioAtLevel(int) const"}], "name": "VersionStorageInfo::"}, {"children": [{"value": 752, "name": "WriteDirect()"}, {"value": 115, "name": "RequestToken(unsigned long, bool)"}, {"value": 410, "name": "SyncInternal(bool)"}, {"value": 511, "name": "WriteBuffered(char const*, unsigned long)"}, {"value": 182, "name": "SyncWithoutFlush(bool)"}, {"value": 330, "name": "Sync(bool)"}, {"value": 453, "name": "Close()"}, {"value": 552, "name": "Flush()"}, {"value": 1006, "name": "Append(rocksdb::Slice const&)"}, {"value": 213, "name": "RangeSync(unsigned long, unsigned long)"}, {"value": 288, "name": "WritableFileWriter(std::unique_ptr<rocksdb::WritableFile, std::default_delete<rocksdb::WritableFile> >&&, rocksdb::EnvOptions const&)"}, {"value": 146, "name": "~WritableFileWriter()"}], "name": "WritableFileWriter::"}, {"children": [{"value": 357, "name": "InsertInto(rocksdb::WriteBatch const*, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, unsigned long*, bool*)"}, {"value": 341, "name": "InsertInto(rocksdb::WriteThread::Writer*, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool)"}, {"value": 602, "name": "InsertInto(rocksdb::autovector<rocksdb::WriteThread::Writer*, 8ul> const&, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool)"}, {"value": 105, "name": "InsertNoop(rocksdb::WriteBatch*)"}, {"value": 223, "name": "MarkCommit(rocksdb::WriteBatch*, rocksdb::Slice const&)"}, {"value": 321, "name": "DeleteRange(rocksdb::WriteBatch*, unsigned int, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 463, "name": "DeleteRange(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 45, "name": "SetContents(rocksdb::WriteBatch*, rocksdb::Slice const&)"}, {"value": 8, "name": "SetSequence(rocksdb::WriteBatch*, unsigned long)"}, {"value": 223, "name": "MarkRollback(rocksdb::WriteBatch*, rocksdb::Slice const&)"}, {"value": 294, "name": "SingleDelete(rocksdb::WriteBatch*, unsigned int, rocksdb::SliceParts const&)"}, {"value": 373, "name": "SingleDelete(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&)"}, {"value": 6, "name": "GetFirstOffset(rocksdb::WriteBatch*)"}, {"value": 335, "name": "MarkEndPrepare(rocksdb::WriteBatch*, rocksdb::Slice const&)"}, {"value": 24, "name": "AppendedByteSize(unsigned long, unsigned long)"}, {"value": 321, "name": "Put(rocksdb::WriteBatch*, unsigned int, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 463, "name": "Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 8, "name": "Count(rocksdb::WriteBatch const*)"}, {"value": 321, "name": "Merge(rocksdb::WriteBatch*, unsigned int, rocksdb::SliceParts const&, rocksdb::SliceParts const&)"}, {"value": 463, "name": "Merge(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 127, "name": "Append(rocksdb::WriteBatch*, rocksdb::WriteBatch const*, bool)"}, {"value": 294, "name": "Delete(rocksdb::WriteBatch*, unsigned int, rocksdb::SliceParts const&)"}, {"value": 373, "name": "Delete(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&)"}, {"value": 8, "name": "Sequence(rocksdb::WriteBatch const*)"}, {"value": 8, "name": "SetCount(rocksdb::WriteBatch*, int)"}], "name": "WriteBatchInternal::"}, {"value": 320, "name": "ArchivedLogFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 78, "name": "OldDefaults(int, int)"}, {"value": 48, "name": "OptimizeForSmallDb()"}, {"value": 994, "name": "OptimizeForPointLookup(unsigned long)"}, {"value": 2607, "name": "OptimizeLevelStyleCompaction(unsigned long)"}, {"value": 43, "name": "OptimizeUniversalStyleCompaction(unsigned long)"}, {"value": 4230, "name": "ColumnFamilyOptions(rocksdb::Options const&)"}, {"value": 2610, "name": "ColumnFamilyOptions()"}, {"value": 1425, "name": "ColumnFamilyOptions(rocksdb::ColumnFamilyOptions const&)"}, {"value": 873, "name": "~ColumnFamilyOptions()"}, {"value": 1280, "name": "operator=(rocksdb::ColumnFamilyOptions&&)"}, {"value": 1359, "name": "operator=(rocksdb::ColumnFamilyOptions const&)"}, {"value": 3029, "name": "Dump(rocksdb::Logger*) const"}], "name": "ColumnFamilyOptions::"}, {"children": [{"value": 209, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 4788, "name": "DoCommand()"}, {"value": 478, "name": "DBFileDumperCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~DBFileDumperCommand()"}], "name": "DBFileDumperCommand::"}, {"value": 31, "name": "GetDBOptionsFromMap(rocksdb::DBOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::DBOptions*, bool)"}, {"children": [{"value": 5, "name": "WaitInternal()"}, {"value": 5, "name": "TimedWaitInternal(unsigned long)"}, {"value": 360, "name": "Wait()"}, {"value": 399, "name": "TimedWait(unsigned long)"}], "name": "InstrumentedCondVar::"}, {"children": [{"value": 1, "name": "~IntTblPropCollector()"}, {"value": 3, "name": "NeedCompact() const"}], "name": "IntTblPropCollector::"}, {"children": [{"children": [{"children": [{"value": 32, "name": "ONLY[abi:cxx11]"}, {"value": 32, "name": "DELIM[abi:cxx11]"}], "name": "COUNT_"}, {"children": [{"value": 32, "name": "HEX[abi:cxx11]"}], "name": "INPUT_KEY_"}, {"value": 32, "name": "STATS[abi:cxx11]"}], "name": "ARG_"}, {"value": 1547, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3691, "name": "DoCommand()"}, {"value": 6932, "name": "InternalDumpCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 212, "name": "~InternalDumpCommand()"}], "name": "InternalDumpCommand::"}, {"children": [{"children": [{"value": 32, "name": "VERBOSE[abi:cxx11]"}, {"value": 32, "name": "JSON[abi:cxx11]"}, {"value": 32, "name": "PATH[abi:cxx11]"}], "name": "ARG_"}, {"value": 957, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 1894, "name": "DoCommand()"}, {"value": 3974, "name": "ManifestDumpCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~ManifestDumpCommand()"}], "name": "ManifestDumpCommand::"}, {"children": [{"value": 80, "name": "AddMemTable(rocksdb::MemTable*)"}, {"value": 192, "name": "GetFromList(std::__cxx11::list<rocksdb::MemTable*, std::allocator<rocksdb::MemTable*> >*, rocksdb::LookupKey const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Status*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, unsigned long*, rocksdb::ReadOptions const&)"}, {"value": 262, "name": "TrimHistory(rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 77, "name": "AddIterators(rocksdb::ReadOptions const&, rocksdb::MergeIteratorBuilder*)"}, {"value": 111, "name": "AddIterators(rocksdb::ReadOptions const&, std::vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> >*, rocksdb::Arena*)"}, {"value": 132, "name": "UnrefMemTable(rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::MemTable*)"}, {"value": 210, "name": "GetFromHistory(rocksdb::LookupKey const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Status*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, unsigned long*, rocksdb::ReadOptions const&)"}, {"value": 76, "name": "ApproximateSize(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 166, "name": "AddRangeTombstoneIterators(rocksdb::ReadOptions const&, rocksdb::Arena*, rocksdb::RangeDelAggregator*)"}, {"value": 89, "name": "Add(rocksdb::MemTable*, rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 194, "name": "Get(rocksdb::LookupKey const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Status*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, unsigned long*, rocksdb::ReadOptions const&)"}, {"value": 4, "name": "Ref()"}, {"value": 469, "name": "Unref(rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 214, "name": "Remove(rocksdb::MemTable*, rocksdb::autovector<rocksdb::MemTable*, 8ul>*)"}, {"value": 464, "name": "MemTableListVersion(unsigned long*, rocksdb::MemTableListVersion*)"}, {"value": 100, "name": "MemTableListVersion(unsigned long*, int)"}, {"value": 39, "name": "GetTotalNumDeletes() const"}, {"value": 39, "name": "GetTotalNumEntries() const"}, {"value": 53, "name": "GetEarliestSequenceNumber(bool) const"}], "name": "MemTableListVersion::"}, {"children": [{"value": 144, "name": "SeekToFirst()"}, {"value": 58, "name": "Next()"}, {"value": 312, "name": "MergeOutputIterator(rocksdb::MergeHelper const*)"}], "name": "MergeOutputIterator::"}, {"value": 131, "name": "NewTwoLevelIterator(rocksdb::TwoLevelIteratorState*, rocksdb::InternalIterator*, rocksdb::Arena*, bool)"}, {"value": 345, "name": "NumberToHumanString[abi:cxx11](long)"}, {"value": 9, "name": "PackSequenceAndType(unsigned long, rocksdb::ValueType)"}, {"children": [{"value": 369, "name": "PositionedRead(unsigned long, unsigned long, rocksdb::Slice*, char*)"}, {"value": 102, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 319, "name": "Read(unsigned long, rocksdb::Slice*, char*)"}, {"value": 76, "name": "Skip(unsigned long)"}, {"value": 430, "name": "PosixSequentialFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _IO_FILE*, int, rocksdb::EnvOptions const&)"}, {"value": 246, "name": "~PosixSequentialFile()"}, {"children": [{"value": 4, "name": "io() const"}], "name": "use_direct_"}], "name": "PosixSequentialFile::"}, {"value": 1722, "name": "ReadTableProperties(rocksdb::RandomAccessFileReader*, unsigned long, unsigned long, rocksdb::ImmutableCFOptions const&, rocksdb::TableProperties**)"}, {"value": 38, "name": "SeekToRangeDelBlock(rocksdb::InternalIterator*, bool*, rocksdb::BlockHandle*)"}, {"value": 293, "name": "TempOptionsFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"children": [{"value": 1341, "name": "GetThreadList(std::vector<rocksdb::ThreadStatus, std::allocator<rocksdb::ThreadStatus> >*)"}, {"value": 310, "name": "RegisterThread(rocksdb::ThreadStatus::ThreadType, unsigned long)"}, {"value": 23, "name": "SetThreadState(rocksdb::ThreadStatus::StateType)"}, {"value": 27, "name": "ClearThreadState()"}, {"value": 343, "name": "UnregisterThread()"}, {"value": 666, "name": "EraseDatabaseInfo(void const*)"}, {"value": 156, "name": "ResetThreadStatus()"}, {"value": 101, "name": "SetThreadOperation(rocksdb::ThreadStatus::OperationType)"}, {"value": 846, "name": "NewColumnFamilyInfo(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 8, "name": "data_"}], "name": "thread_status_"}, {"value": 101, "name": "ClearThreadOperation()"}, {"value": 27, "name": "GetLocalThreadStatus()"}, {"value": 634, "name": "EraseColumnFamilyInfo(void const*)"}, {"value": 24, "name": "SetOperationStartTime(unsigned long)"}, {"value": 28, "name": "GetColumnFamilyInfoKey()"}, {"value": 25, "name": "SetColumnFamilyInfoKey(void const*)"}, {"value": 27, "name": "SetThreadOperationStage(rocksdb::ThreadStatus::OperationStage)"}, {"value": 28, "name": "SetThreadOperationProperty(int, unsigned long)"}, {"value": 68, "name": "ClearThreadOperationProperties()"}, {"value": 29, "name": "IncreaseThreadOperationProperty(int, unsigned long)"}, {"value": 185, "name": "~ThreadStatusUpdater()"}], "name": "ThreadStatusUpdater::"}, {"children": [{"value": 91, "name": "~TtlCompactionFilter()"}, {"value": 6, "name": "Name() const"}, {"value": 287, "name": "Filter(int, rocksdb::Slice const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*) const"}], "name": "TtlCompactionFilter::"}, {"children": [{"value": 16, "name": "PutLogData(rocksdb::Slice const&)"}, {"value": 68, "name": "DeleteRange(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 92, "name": "DeleteRange(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 107, "name": "NewIterator(rocksdb::ColumnFamilyHandle*)"}, {"value": 67, "name": "NewIterator()"}, {"value": 585, "name": "GetFromBatch(rocksdb::ColumnFamilyHandle*, rocksdb::DBOptions const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 13, "name": "SetSavePoint()"}, {"value": 65, "name": "SingleDelete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 89, "name": "SingleDelete(rocksdb::Slice const&)"}, {"value": 5, "name": "GetWriteBatch()"}, {"value": 1423, "name": "GetFromBatchAndDB(rocksdb::DB*, rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 94, "name": "GetFromBatchAndDB(rocksdb::DB*, rocksdb::ReadOptions const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 225, "name": "NewIteratorWithBase(rocksdb::ColumnFamilyHandle*, rocksdb::Iterator*)"}, {"value": 182, "name": "NewIteratorWithBase(rocksdb::Iterator*)"}, {"value": 173, "name": "RollbackToSavePoint()"}, {"value": 65, "name": "Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 89, "name": "Put(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"children": [{"value": 257, "name": "ClearIndex()"}, {"value": 218, "name": "AddNewEntry(unsigned int)"}, {"value": 889, "name": "ReBuildIndex()"}, {"value": 199, "name": "AddOrUpdateIndex(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 49, "name": "AddOrUpdateIndex(rocksdb::Slice const&)"}, {"value": 35, "name": "UpdateExistingEntry(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 434, "name": "UpdateExistingEntryWithCfId(unsigned int, rocksdb::Slice const&)"}, {"value": 29, "name": "Clear()"}, {"value": 364, "name": "Rep(rocksdb::Comparator const*, unsigned long, bool)"}], "name": "Rep::"}, {"value": 36, "name": "Clear()"}, {"value": 65, "name": "Merge(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 89, "name": "Merge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 65, "name": "Delete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 89, "name": "Delete(rocksdb::Slice const&)"}, {"value": 226, "name": "WriteBatchWithIndex(rocksdb::Comparator const*, unsigned long, bool)"}, {"value": 225, "name": "~WriteBatchWithIndex()"}], "name": "WriteBatchWithIndex::"}, {"value": 245, "name": "replayGetContextLog(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::GetContext*)"}, {"children": [{"value": 364, "name": "Open(rocksdb::Env*, rocksdb::BackupableDBOptions const&, rocksdb::BackupEngineReadOnly**)"}], "name": "BackupEngineReadOnly::"}, {"children": [{"value": 241, "name": "~ColumnFamilyMetaData()"}], "name": "ColumnFamilyMetaData::"}, {"value": 133, "name": "ConsumeDecimalNumber(rocksdb::Slice*, unsigned long*)"}, {"children": [{"value": 197, "name": "CompactRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, int, int, unsigned int, rocksdb::InternalKey const*, rocksdb::InternalKey const*, rocksdb::InternalKey**, bool*)"}, {"value": 1035, "name": "PickCompaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, rocksdb::LogBuffer*)"}, {"value": 139, "name": "~FIFOCompactionPicker()"}, {"value": 3, "name": "MaxOutputLevel() const"}, {"value": 23, "name": "NeedsCompaction(rocksdb::VersionStorageInfo const*) const"}], "name": "FIFOCompactionPicker::"}, {"value": 785, "name": "GetOptionsFromString(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Options*)"}, {"children": [{"value": 670, "name": "CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&, rocksdb::MemTableAllocator*, rocksdb::SliceTransform const*, rocksdb::Logger*)"}, {"value": 5, "name": "~HashCuckooRepFactory()"}, {"value": 6, "name": "Name() const"}], "name": "HashCuckooRepFactory::"}, {"children": [{"value": 75, "name": "AddIterator(rocksdb::InternalIterator*)"}, {"value": 22, "name": "Finish()"}, {"value": 196, "name": "MergeIteratorBuilder(rocksdb::Comparator const*, rocksdb::Arena*, bool)"}], "name": "MergeIteratorBuilder::"}, {"value": 167, "name": "NewBloomFilterPolicy(int, bool)"}, {"value": 56, "name": "NewPlainTableFactory(rocksdb::PlainTableOptions const&)"}, {"children": [{"value": 3, "name": "CompactRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, int, int, unsigned int, rocksdb::InternalKey const*, rocksdb::InternalKey const*, rocksdb::InternalKey**, bool*)"}, {"value": 3, "name": "PickCompaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, rocksdb::LogBuffer*)"}, {"value": 28, "name": "~NullCompactionPicker()"}, {"value": 3, "name": "NeedsCompaction(rocksdb::VersionStorageInfo const*) const"}], "name": "NullCompactionPicker::"}, {"children": [{"value": 511, "name": "ReadNonMmap(unsigned int, unsigned int, rocksdb::Slice*)"}, {"value": 15, "name": "GetFromBuffer(rocksdb::PlainTableFileReader::Buffer*, unsigned int, unsigned int)"}, {"value": 165, "name": "ReadVarint32NonMmap(unsigned int, unsigned int*, unsigned int*)"}], "name": "PlainTableFileReader::"}, {"children": [{"value": 423, "name": "DecodeSize(unsigned int, rocksdb::PlainTableEntryType*, unsigned int*, unsigned int*)"}, {"value": 66, "name": "NextKeyNoValue(unsigned int, rocksdb::ParsedInternalKey*, rocksdb::Slice*, unsigned int*, bool*)"}, {"value": 496, "name": "ReadInternalKey(unsigned int, unsigned int, rocksdb::ParsedInternalKey*, unsigned int*, bool*, rocksdb::Slice*)"}, {"value": 667, "name": "NextPlainEncodingKey(unsigned int, rocksdb::ParsedInternalKey*, rocksdb::Slice*, unsigned int*, bool*)"}, {"value": 1650, "name": "NextPrefixEncodingKey(unsigned int, rocksdb::ParsedInternalKey*, rocksdb::Slice*, unsigned int*, bool*)"}, {"value": 638, "name": "NextKey(unsigned int, rocksdb::ParsedInternalKey*, rocksdb::Slice*, rocksdb::Slice*, unsigned int*, bool*)"}, {"value": 148, "name": "~PlainTableKeyDecoder()"}], "name": "PlainTableKeyDecoder::"}, {"children": [{"value": 1161, "name": "AppendKey(rocksdb::Slice const&, rocksdb::WritableFileWriter*, unsigned long*, char*, unsigned long*)"}], "name": "PlainTableKeyEncoder::"}, {"children": [{"value": 389, "name": "AddTableProperty(rocksdb::TableProperties const&)"}, {"value": 394, "name": "Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 222, "name": "Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)"}, {"value": 75, "name": "Add(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 117, "name": "Finish()"}, {"value": 232, "name": "PropertyBlockBuilder()"}], "name": "PropertyBlockBuilder::"}, {"children": [{"value": 2023, "name": "EndSection(rocksdb::OptionSection, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 1871, "name": "CheckSection(rocksdb::OptionSection, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)"}, {"value": 1300, "name": "ParseSection(rocksdb::OptionSection*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)"}, {"value": 145, "name": "ValidityCheck()"}, {"value": 773, "name": "ParseStatement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)"}, {"value": 614, "name": "InvalidArgument(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 501, "name": "VerifyCFOptions(rocksdb::ColumnFamilyOptions const&, rocksdb::ColumnFamilyOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const*, rocksdb::OptionsSanityCheckLevel)"}, {"value": 777, "name": "VerifyDBOptions(rocksdb::DBOptions const&, rocksdb::DBOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const*, rocksdb::OptionsSanityCheckLevel)"}, {"value": 633, "name": "ParseVersionNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int*)"}, {"value": 309, "name": "VerifyTableFactory(rocksdb::TableFactory const*, rocksdb::TableFactory const*, rocksdb::OptionsSanityCheckLevel)"}, {"value": 275, "name": "TrimAndRemoveComment(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)"}, {"value": 282, "name": "VerifyBlockBasedTableFactory(rocksdb::BlockBasedTableFactory const*, rocksdb::BlockBasedTableFactory const*, rocksdb::OptionsSanityCheckLevel)"}, {"value": 2001, "name": "VerifyRocksDBOptionsFromFile(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, rocksdb::OptionsSanityCheckLevel)"}, {"value": 4070, "name": "Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*)"}, {"value": 400, "name": "Reset()"}, {"value": 36, "name": "IsSection(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 782, "name": "RocksDBOptionsParser()"}, {"value": 236, "name": "~RocksDBOptionsParser()"}], "name": "RocksDBOptionsParser::"}, {"children": [{"value": 322, "name": "DirectRead(unsigned long, rocksdb::Slice*, char*)"}, {"value": 630, "name": "Read(unsigned long, rocksdb::Slice*, char*)"}, {"value": 75, "name": "Skip(unsigned long)"}], "name": "SequentialFileReader::"}, {"children": [{"value": 32, "name": "kIndexSize[abi:cxx11]"}, {"value": 32, "name": "kComparator[abi:cxx11]"}, {"value": 32, "name": "kFilterSize[abi:cxx11]"}, {"value": 32, "name": "kNumEntries[abi:cxx11]"}, {"value": 32, "name": "kRawKeySize[abi:cxx11]"}, {"value": 32, "name": "kCompression[abi:cxx11]"}, {"value": 32, "name": "kFixedKeyLen[abi:cxx11]"}, {"value": 32, "name": "kFilterPolicy[abi:cxx11]"}, {"value": 32, "name": "kRawValueSize[abi:cxx11]"}, {"value": 32, "name": "kFormatVersion[abi:cxx11]"}, {"value": 32, "name": "kMergeOperator[abi:cxx11]"}, {"value": 32, "name": "kNumDataBlocks[abi:cxx11]"}, {"value": 32, "name": "kColumnFamilyId[abi:cxx11]"}, {"value": 32, "name": "kColumnFamilyName[abi:cxx11]"}, {"value": 32, "name": "kPropertyCollectors[abi:cxx11]"}, {"value": 32, "name": "kPrefixExtractorName[abi:cxx11]"}, {"value": 32, "name": "kDataSize[abi:cxx11]"}], "name": "TablePropertiesNames::"}, {"value": 359, "name": "UnescapeOptionString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 276, "name": "AppendEscapedStringTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const&)"}, {"children": [{"value": 78, "name": "KeyMayMatch(rocksdb::Slice const&, unsigned long)"}, {"value": 3, "name": "IsBlockBased()"}, {"value": 79, "name": "PrefixMayMatch(rocksdb::Slice const&, unsigned long)"}, {"value": 72, "name": "MayMatch(rocksdb::Slice const&)"}, {"value": 254, "name": "FullFilterBlockReader(rocksdb::SliceTransform const*, bool, rocksdb::BlockContents&&, rocksdb::FilterBitsReader*, rocksdb::Statistics*)"}, {"value": 154, "name": "FullFilterBlockReader(rocksdb::SliceTransform const*, bool, rocksdb::Slice const&, rocksdb::FilterBitsReader*, rocksdb::Statistics*)"}, {"value": 179, "name": "~FullFilterBlockReader()"}, {"value": 5, "name": "ApproximateMemoryUsage() const"}], "name": "FullFilterBlockReader::"}, {"children": [{"value": 486, "name": "HistogramBucketMapper()"}, {"value": 44, "name": "~HistogramBucketMapper()"}, {"value": 114, "name": "IndexForValue(unsigned long) const"}], "name": "HistogramBucketMapper::"}, {"children": [{"value": 331, "name": "InternalKeyComparator(rocksdb::Comparator const*)"}, {"value": 104, "name": "~InternalKeyComparator()"}, {"value": 378, "name": "FindShortSuccessor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 407, "name": "FindShortestSeparator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const&) const"}, {"value": 5, "name": "Name() const"}, {"value": 96, "name": "Compare(rocksdb::ParsedInternalKey const&, rocksdb::ParsedInternalKey const&) const"}, {"value": 136, "name": "Compare(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "InternalKeyComparator::"}, {"children": [{"value": 3120, "name": "PickCompaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, rocksdb::LogBuffer*)"}, {"value": 378, "name": "PickCompactionBySize(rocksdb::VersionStorageInfo*, int, int, rocksdb::CompactionInputFiles*, int*, int*)"}, {"value": 1134, "name": "PickFilesMarkedForCompactionExperimental(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionStorageInfo*, rocksdb::CompactionInputFiles*, int*, int*)"}, {"value": 211, "name": "GetPathId(rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, int)"}, {"value": 139, "name": "~LevelCompactionPicker()"}, {"value": 127, "name": "NeedsCompaction(rocksdb::VersionStorageInfo const*) const"}], "name": "LevelCompactionPicker::"}, {"value": 159, "name": "MultiplyCheckOverflow(unsigned long, double)"}, {"value": 81, "name": "NewGenericRateLimiter(long, long, int)"}, {"value": 7469, "name": "PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*)"}, {"children": [{"value": 102, "name": "InsertRawPage(rocksdb::PersistentCacheOptions const&, rocksdb::BlockHandle const&, char const*, unsigned long)"}, {"value": 256, "name": "LookupRawPage(rocksdb::PersistentCacheOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<char [], std::default_delete<char []> >*, unsigned long)"}, {"value": 115, "name": "InsertUncompressedPage(rocksdb::PersistentCacheOptions const&, rocksdb::BlockHandle const&, rocksdb::BlockContents const&)"}, {"value": 387, "name": "LookupUncompressedPage(rocksdb::PersistentCacheOptions const&, rocksdb::BlockHandle const&, rocksdb::BlockContents*)"}], "name": "PersistentCacheHelper::"}, {"children": [{"value": 78, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 396, "name": "PosixMmapReadableFile(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void*, unsigned long, rocksdb::EnvOptions const&)"}, {"value": 284, "name": "~PosixMmapReadableFile()"}, {"value": 149, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "PosixMmapReadableFile::"}, {"children": [{"value": 102, "name": "InvalidateCache(unsigned long, unsigned long)"}, {"value": 118, "name": "Hint(rocksdb::RandomAccessFile::AccessPattern)"}, {"value": 396, "name": "PosixRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::EnvOptions const&)"}, {"value": 212, "name": "~PosixRandomAccessFile()"}, {"value": 8, "name": "GetUniqueId(char*, unsigned long) const"}, {"children": [{"value": 4, "name": "io() const"}], "name": "use_direct_"}, {"value": 477, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "PosixRandomAccessFile::"}, {"children": [{"value": 1612, "name": "PrepareArgs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)"}, {"children": [{"children": [{"value": 32, "name": "LEVELS[abi:cxx11]"}], "name": "NEW_"}, {"children": [{"value": 32, "name": "LEVELS[abi:cxx11]"}], "name": "PRINT_OLD_"}], "name": "ARG_"}, {"value": 1275, "name": "GetOldNumOfLevels(rocksdb::Options&, int*)"}, {"value": 182, "name": "PrepareOptionsForOpenDB()"}, {"value": 693, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 1797, "name": "DoCommand()"}, {"value": 3118, "name": "ReduceDBLevelsCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~ReduceDBLevelsCommand()"}], "name": "ReduceDBLevelsCommand::"}, {"value": 198, "name": "SeekToPropertiesBlock(rocksdb::InternalIterator*, bool*)"}, {"children": [{"value": 173, "name": "AddIndexEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const*, rocksdb::BlockHandle const&)"}, {"value": 44, "name": "Finish(rocksdb::IndexBuilder::IndexBlocks*)"}, {"value": 155, "name": "~ShortenedIndexBuilder()"}, {"value": 5, "name": "EstimatedSize() const"}], "name": "ShortenedIndexBuilder::"}, {"value": 578, "name": "SomeFileOverlapsRange(rocksdb::InternalKeyComparator const&, bool, rocksdb::LevelFilesBrief const&, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 118, "name": "TableFileNameToNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 1, "name": "~TwoLevelIteratorState()"}], "name": "TwoLevelIteratorState::"}, {"value": 14, "name": "UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*)"}, {"value": 32, "name": "kCompressionDictBlock[abi:cxx11]"}, {"children": [{"value": 82, "name": "WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool)"}, {"value": 1222, "name": "WriteBlock(rocksdb::Slice const&, rocksdb::BlockHandle*, bool)"}, {"value": 934, "name": "WriteRawBlock(rocksdb::Slice const&, rocksdb::CompressionType, rocksdb::BlockHandle*)"}, {"value": 480, "name": "InsertBlockInCache(rocksdb::Slice const&, rocksdb::CompressionType, rocksdb::BlockHandle const*)"}, {"children": [{"value": 10, "name": "InternalAdd(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long)"}, {"value": 958, "name": "Finish(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"value": 5, "name": "~BlockBasedTablePropertiesCollector()"}, {"value": 35, "name": "GetReadableProperties[abi:cxx11]() const"}, {"value": 6, "name": "Name() const"}], "name": "BlockBasedTablePropertiesCollector::"}, {"value": 486, "name": "Add(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"children": [{"value": 2303, "name": "Rep(rocksdb::ImmutableCFOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > > const*, unsigned int, rocksdb::WritableFileWriter*, rocksdb::CompressionType, rocksdb::CompressionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 406, "name": "~Rep()"}], "name": "Rep::"}, {"value": 391, "name": "Flush()"}, {"value": 3861, "name": "Finish()"}, {"value": 12, "name": "Abandon()"}, {"value": 1278, "name": "BlockBasedTableBuilder(rocksdb::ImmutableCFOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > > const*, unsigned int, rocksdb::WritableFileWriter*, rocksdb::CompressionType, rocksdb::CompressionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 156, "name": "~BlockBasedTableBuilder()"}, {"value": 12, "name": "NumEntries() const"}, {"value": 69, "name": "NeedCompact() const"}, {"value": 336, "name": "GetTableProperties() const"}, {"value": 62, "name": "status() const"}, {"value": 12, "name": "FileSize() const"}], "name": "BlockBasedTableBuilder::"}, {"children": [{"value": 5, "name": "GetOptions()"}, {"value": 1632, "name": "BlockBasedTableFactory(rocksdb::BlockBasedTableOptions const&)"}, {"value": 55, "name": "~BlockBasedTableFactory()"}, {"children": [{"value": 5, "name": "options() const"}], "name": "table_"}, {"value": 113, "name": "NewTableReader(rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const"}, {"value": 154, "name": "NewTableBuilder(rocksdb::TableBuilderOptions const&, unsigned int, rocksdb::WritableFileWriter*) const"}, {"value": 285, "name": "SanitizeOptions(rocksdb::DBOptions const&, rocksdb::ColumnFamilyOptions const&) const"}, {"value": 2547, "name": "GetPrintableTableOptions[abi:cxx11]() const"}, {"value": 6, "name": "Name() const"}], "name": "BlockBasedTableFactory::"}, {"children": [{"value": 527, "name": "~BlockBasedTableOptions()"}, {"value": 867, "name": "operator=(rocksdb::BlockBasedTableOptions const&)"}], "name": "BlockBasedTableOptions::"}, {"children": [{"value": 200, "name": "ColumnFamilyDescriptor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyOptions const&)"}], "name": "ColumnFamilyDescriptor::"}, {"children": [{"value": 470, "name": "GetDescriptor(rocksdb::ColumnFamilyDescriptor*)"}, {"value": 58, "name": "ColumnFamilyHandleImpl(rocksdb::ColumnFamilyData*, rocksdb::DBImpl*, rocksdb::InstrumentedMutex*)"}, {"value": 1136, "name": "~ColumnFamilyHandleImpl()"}, {"value": 16, "name": "GetComparator() const"}, {"value": 5, "name": "cfd() const"}, {"value": 14, "name": "GetID() const"}, {"value": 16, "name": "GetName[abi:cxx11]() const"}], "name": "ColumnFamilyHandleImpl::"}, {"children": [{"value": 75, "name": "Update(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 5, "name": "~FlushBlockBySizePolicy()"}], "name": "FlushBlockBySizePolicy::"}, {"children": [{"value": 1, "name": "StartBlock(unsigned long)"}, {"value": 3, "name": "IsBlockBased()"}, {"value": 108, "name": "Add(rocksdb::Slice const&)"}, {"value": 46, "name": "Finish()"}, {"value": 66, "name": "FullFilterBlockBuilder(rocksdb::SliceTransform const*, bool, rocksdb::FilterBitsBuilder*)"}, {"value": 135, "name": "~FullFilterBlockBuilder()"}], "name": "FullFilterBlockBuilder::"}, {"value": 255, "name": "GetDBOptionsFromString(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions*)"}, {"value": 199, "name": "GetStringFromDBOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1940, "name": "GetTableFactoryFromMap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::shared_ptr<rocksdb::TableFactory>*)"}, {"value": 68, "name": "GetVarint32PtrFallback(char const*, char const*, unsigned int*)"}, {"children": [{"value": 234, "name": "CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&, rocksdb::MemTableAllocator*, rocksdb::SliceTransform const*, rocksdb::Logger*)"}, {"value": 5, "name": "~HashLinkListRepFactory()"}, {"value": 6, "name": "Name() const"}], "name": "HashLinkListRepFactory::"}, {"children": [{"value": 202, "name": "CreateMemTableRep(rocksdb::MemTableRep::KeyComparator const&, rocksdb::MemTableAllocator*, rocksdb::SliceTransform const*, rocksdb::Logger*)"}, {"value": 5, "name": "~HashSkipListRepFactory()"}, {"value": 6, "name": "Name() const"}], "name": "HashSkipListRepFactory::"}, {"value": 424, "name": "ParsePlainTableOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::PlainTableOptions*, bool)"}, {"children": [{"value": 320, "name": "PersistentCacheOptions(std::shared_ptr<rocksdb::PersistentCache> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Statistics*)"}, {"value": 296, "name": "~PersistentCacheOptions()"}], "name": "PersistentCacheOptions::"}, {"children": [{"value": 313, "name": "ReleasePinnedData()"}, {"value": 12, "name": "ReleaseInternalIterator(void*)"}, {"value": 5, "name": "ReleaseArenaInternalIterator(void*)"}, {"value": 83, "name": "~PinnedIteratorsManager()"}], "name": "PinnedIteratorsManager::"}, {"children": [{"value": 703, "name": "FillIndexes(std::vector<rocksdb::PlainTableIndexBuilder::IndexRecord*, std::allocator<rocksdb::PlainTableIndexBuilder::IndexRecord*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&)"}, {"value": 502, "name": "AddKeyPrefix(rocksdb::Slice, unsigned int)"}, {"value": 82, "name": "AllocateIndex()"}, {"children": [{"value": 160, "name": "AddRecord(unsigned int, unsigned int)"}], "name": "IndexRecordList::"}, {"value": 273, "name": "BucketizeIndexes(std::vector<rocksdb::PlainTableIndexBuilder::IndexRecord*, std::allocator<rocksdb::PlainTableIndexBuilder::IndexRecord*> >*, std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 32, "name": "kPlainTableIndexBlock[abi:cxx11]"}, {"value": 573, "name": "Finish()"}], "name": "PlainTableIndexBuilder::"}, {"value": 8, "name": "kPlainTableMagicNumber"}, {"value": 72, "name": "AppendInternalKeyFooter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long, rocksdb::ValueType)"}, {"children": [{"value": 27, "name": "NewIterator(rocksdb::BlockIter*, bool)"}, {"value": 313, "name": "Create(rocksdb::RandomAccessFileReader*, rocksdb::Footer const&, rocksdb::BlockHandle const&, rocksdb::ImmutableCFOptions const&, rocksdb::Comparator const*, rocksdb::BlockBasedTable::IndexReader**, rocksdb::PersistentCacheOptions const&)"}, {"value": 109, "name": "~BinarySearchIndexReader()"}, {"children": [{"value": 23, "name": "size() const"}], "name": "usable_"}, {"value": 9, "name": "ApproximateMemoryUsage() const"}, {"value": 9, "name": "size() const"}], "name": "BinarySearchIndexReader::"}, {"value": 49, "name": "CancelAllBackgroundWork(rocksdb::DB*, bool)"}, {"children": [{"value": 226, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 548, "name": "DoCommand()"}, {"value": 478, "name": "CheckConsistencyCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~CheckConsistencyCommand()"}], "name": "CheckConsistencyCommand::"}, {"children": [{"value": 49, "name": "~CompactionPressureToken()"}], "name": "CompactionPressureToken::"}, {"value": 1093, "name": "CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)"}, {"value": 87, "name": "DumpRocksDBBuildVersion(rocksdb::Logger*)"}, {"children": [{"value": 1, "name": "~FlushBlockPolicyFactory()"}], "name": "FlushBlockPolicyFactory::"}, {"value": 236, "name": "NewFixedPrefixTransform(unsigned long)"}, {"value": 59, "name": "NewHashCuckooRepFactory(unsigned long, unsigned long, unsigned int)"}, {"value": 11, "name": "PackFileNumberAndPathId(unsigned long, unsigned long)"}, {"value": 4496, "name": "ParseColumnFamilyOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyOptions*, bool)"}, {"children": [{"value": 32, "name": "kBloomVersion[abi:cxx11]"}, {"value": 32, "name": "kEncodingType[abi:cxx11]"}, {"value": 32, "name": "kNumBloomBlocks[abi:cxx11]"}], "name": "PlainTablePropertyNames::"}, {"value": 501, "name": "SerializeSingleDBOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 46, "name": "UncompressBlockContents(char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::Slice const&, rocksdb::ImmutableCFOptions const&)"}, {"value": 32, "name": "kHashIndexPrefixesBlock[abi:cxx11]"}, {"value": 32, "name": "kPropertiesBlockOldName[abi:cxx11]"}, {"children": [{"value": 5, "name": "~AssociativeMergeOperator()"}, {"value": 257, "name": "FullMergeV2(rocksdb::MergeOperator::MergeOperationInput const&, rocksdb::MergeOperator::MergeOperationOutput*) const"}, {"value": 9, "name": "PartialMerge(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}], "name": "AssociativeMergeOperator::"}, {"children": [{"value": 29, "name": "VerifyBackup(unsigned int)"}, {"value": 13, "name": "GetBackupInfo(std::vector<rocksdb::BackupInfo, std::allocator<rocksdb::BackupInfo> >*)"}, {"value": 13, "name": "GetCorruptedBackups(std::vector<unsigned int, std::allocator<unsigned int> >*)"}, {"value": 29, "name": "RestoreDBFromBackup(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RestoreOptions const&)"}, {"value": 29, "name": "RestoreDBFromLatestBackup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RestoreOptions const&)"}, {"value": 91, "name": "~BackupEngineReadOnlyImpl()"}], "name": "BackupEngineReadOnlyImpl::"}, {"value": 588, "name": "BuildColumnFamilyOptions(rocksdb::ColumnFamilyOptions const&, rocksdb::MutableCFOptions const&)"}, {"value": 35, "name": "CFOptionSanityCheckLevel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 35, "name": "DBOptionSanityCheckLevel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 142, "name": "GetSupportedCompressions()"}, {"value": 236, "name": "NewCappedPrefixTransform(unsigned long)"}, {"value": 68, "name": "NewEmptyInternalIterator(rocksdb::Arena*)"}, {"value": 46, "name": "NewEmptyInternalIterator()"}, {"value": 193, "name": "NewErrorInternalIterator(rocksdb::Status const&)"}, {"value": 222, "name": "NewErrorInternalIterator(rocksdb::Status const&, rocksdb::Arena*)"}, {"value": 2242, "name": "ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*)"}, {"value": 217, "name": "Rocks2LevelTableFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 20, "name": "ShouldReportDetailedTime(rocksdb::Env*, rocksdb::Statistics*)"}, {"children": [{"value": 79, "name": "Add(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 3, "name": "NeedCompact() const"}], "name": "TablePropertiesCollector::"}, {"value": 207, "name": "XXH32_intermediateDigest(void*)"}, {"value": 32, "name": "kDefaultColumnFamilyName[abi:cxx11]"}, {"value": 1, "name": "kValueTypeForSeekForPrev"}, {"value": 35, "name": "BBTOptionSanityCheckLevel(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1710, "name": "CheckCompressionSupported(rocksdb::ColumnFamilyOptions const&)"}, {"children": [{"value": 5, "name": "GetColumnFamilyHandle()"}, {"value": 152, "name": "Seek(unsigned int)"}, {"value": 5, "name": "current()"}, {"value": 55, "name": "~ColumnFamilyMemTablesImpl()"}, {"value": 12, "name": "GetMemTable() const"}, {"value": 12, "name": "GetLogNumber() const"}], "name": "ColumnFamilyMemTablesImpl::"}, {"children": [{"value": 264, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 663, "name": "DoCommand()"}, {"value": 1950, "name": "CreateColumnFamilyCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~CreateColumnFamilyCommand()"}], "name": "CreateColumnFamilyCommand::"}, {"value": 421, "name": "DoGenerateLevelFilesBrief(rocksdb::LevelFilesBrief*, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, rocksdb::Arena*)"}, {"value": 128, "name": "GetStringFromTableFactory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::TableFactory const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 5, "name": "~InternalKeySliceTransform()"}, {"value": 10, "name": "Name() const"}, {"value": 47, "name": "InRange(rocksdb::Slice const&) const"}, {"value": 47, "name": "InDomain(rocksdb::Slice const&) const"}, {"value": 47, "name": "Transform(rocksdb::Slice const&) const"}], "name": "InternalKeySliceTransform::"}, {"children": [{"value": 264, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3, "name": "NoDBOpen()"}, {"value": 681, "name": "DoCommand()"}, {"value": 1140, "name": "ListColumnFamiliesCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 116, "name": "~ListColumnFamiliesCommand()"}], "name": "ListColumnFamiliesCommand::"}, {"value": 284, "name": "NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::Comparator const*, unsigned long const&, unsigned long, unsigned long, rocksdb::Slice const*, bool, bool, bool)"}, {"value": 61, "name": "NewBlockBasedTableFactory(rocksdb::BlockBasedTableOptions const&)"}, {"value": 81, "name": "NewHashLinkListRepFactory(unsigned long, unsigned long, int, bool, unsigned int)"}, {"value": 59, "name": "NewHashSkipListRepFactory(unsigned long, int, int)"}, {"value": 56, "name": "ReverseBytewiseComparator()"}, {"children": [{"value": 1216, "name": "PickCompaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, rocksdb::LogBuffer*)"}, {"value": 557, "name": "CalculateSortedRuns(rocksdb::VersionStorageInfo const&, rocksdb::ImmutableCFOptions const&)"}, {"value": 3443, "name": "PickCompactionUniversalReadAmp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, double, unsigned int, unsigned int, std::vector<rocksdb::UniversalCompactionPicker::SortedRun, std::allocator<rocksdb::UniversalCompactionPicker::SortedRun> > const&, rocksdb::LogBuffer*)"}, {"value": 2897, "name": "PickCompactionUniversalSizeAmp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::MutableCFOptions const&, rocksdb::VersionStorageInfo*, double, std::vector<rocksdb::UniversalCompactionPicker::SortedRun, std::allocator<rocksdb::UniversalCompactionPicker::SortedRun> > const&, rocksdb::LogBuffer*)"}, {"value": 136, "name": "GetPathId(rocksdb::ImmutableCFOptions const&, unsigned long)"}, {"value": 139, "name": "~UniversalCompactionPicker()"}, {"value": 13, "name": "MaxOutputLevel() const"}, {"value": 23, "name": "NeedsCompaction(rocksdb::VersionStorageInfo const*) const"}, {"children": [{"value": 109, "name": "DumpSizeInfo(char*, unsigned long, unsigned long) const"}, {"value": 99, "name": "Dump(char*, unsigned long, bool) const"}], "name": "SortedRun::"}], "name": "UniversalCompactionPicker::"}, {"children": [{"value": 28, "name": "~ColumnFamilyHandleInternal()"}, {"value": 5, "name": "cfd() const"}], "name": "ColumnFamilyHandleInternal::"}, {"children": [{"value": 1, "name": "~IntTblPropCollectorFactory()"}], "name": "IntTblPropCollectorFactory::"}, {"value": 2152, "name": "ParseBlockBasedTableOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockBasedTableOptions*, bool)"}, {"value": 212, "name": "ReadKeyFromWriteBatchEntry(rocksdb::Slice*, rocksdb::Slice*, bool)"}, {"value": 38, "name": "SeekToCompressionDictBlock(rocksdb::InternalIterator*, bool*)"}, {"children": [{"children": [{"value": 113, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 24, "name": "Info(char const*)"}, {"value": 28, "name": "~LogReporter()"}], "name": "LogReporter::"}, {"value": 856, "name": "OpenLogFile(rocksdb::LogFile const*, std::unique_ptr<rocksdb::SequentialFileReader, std::default_delete<rocksdb::SequentialFileReader> >*)"}, {"value": 608, "name": "OpenLogReader(rocksdb::LogFile const*)"}, {"value": 40, "name": "RestrictedRead(rocksdb::Slice*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 130, "name": "IsBatchExpected(rocksdb::WriteBatch const*, unsigned long)"}, {"value": 1660, "name": "SeekToStartSequence(unsigned long, bool)"}, {"value": 628, "name": "UpdateCurrentWriteBatch(rocksdb::Slice const&)"}, {"value": 7, "name": "Next()"}, {"value": 20, "name": "Valid()"}, {"value": 52, "name": "status()"}, {"value": 37, "name": "GetBatch()"}, {"value": 1024, "name": "NextImpl(bool)"}, {"value": 750, "name": "TransactionLogIteratorImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ImmutableDBOptions const*, rocksdb::TransactionLogIterator::ReadOptions const&, rocksdb::EnvOptions const&, unsigned long, std::unique_ptr<std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >, std::default_delete<std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > > >, rocksdb::VersionSet const*)"}, {"value": 227, "name": "~TransactionLogIteratorImpl()"}], "name": "TransactionLogIteratorImpl::"}, {"children": [{"value": 131, "name": "CreateCompactionFilter(rocksdb::CompactionFilter::Context const&)"}, {"value": 257, "name": "~TtlCompactionFilterFactory()"}, {"value": 6, "name": "Name() const"}], "name": "TtlCompactionFilterFactory::"}, {"children": [{"value": 138, "name": "KeyMayMatch(rocksdb::Slice const&, unsigned long)"}, {"value": 3, "name": "IsBlockBased()"}, {"value": 139, "name": "PrefixMayMatch(rocksdb::Slice const&, unsigned long)"}, {"value": 122, "name": "MayMatch(rocksdb::Slice const&, unsigned long)"}, {"value": 380, "name": "BlockBasedFilterBlockReader(rocksdb::SliceTransform const*, rocksdb::BlockBasedTableOptions const&, bool, rocksdb::BlockContents&&, rocksdb::Statistics*)"}, {"value": 89, "name": "~BlockBasedFilterBlockReader()"}, {"value": 18, "name": "ApproximateMemoryUsage() const"}, {"value": 1376, "name": "ToString[abi:cxx11]() const"}], "name": "BlockBasedFilterBlockReader::"}, {"children": [{"value": 256, "name": "NeedsFlush(bool*)"}, {"value": 507, "name": "UpdateStats()"}, {"value": 2710, "name": "GetIngestedFileInfo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IngestedFileInfo*)"}, {"value": 103, "name": "IngestedFileFitInLevel(rocksdb::IngestedFileInfo const*, int)"}, {"value": 1238, "name": "AssignLevelForIngestedFile(rocksdb::SuperVersion*, rocksdb::IngestedFileInfo*, bool*)"}, {"value": 701, "name": "AssignGlobalSeqnoForIngestedFile(rocksdb::IngestedFileInfo*, unsigned long)"}, {"value": 630, "name": "IngestedFilesOverlapWithMemtables(rocksdb::SuperVersion*, bool*)"}, {"value": 556, "name": "IngestedFileOverlapWithIteratorRange(rocksdb::IngestedFileInfo const*, rocksdb::InternalIterator*, bool*)"}, {"value": 1249, "name": "Run()"}, {"value": 681, "name": "Cleanup(rocksdb::Status const&)"}, {"value": 4955, "name": "Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}], "name": "ExternalSstFileIngestionJob::"}, {"value": 290, "name": "GetDBOptionsFromMapInternal(rocksdb::DBOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::DBOptions*, bool, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 623, "name": "GetPlainTableOptionsFromMap(rocksdb::PlainTableOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::PlainTableOptions*, bool)"}, {"value": 298, "name": "PutLengthPrefixedSliceParts(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::SliceParts const&)"}, {"value": 6171, "name": "SerializeSingleOptionHelper(char const*, rocksdb::OptionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"children": [{"value": 1827, "name": "GetFromBatch(rocksdb::ImmutableDBOptions const&, rocksdb::WriteBatchWithIndex*, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::MergeContext*, rocksdb::WriteBatchEntryComparator*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool, rocksdb::Status*)"}], "name": "WriteBatchWithIndexInternal::"}, {"value": 8, "name": "kBlockBasedTableMagicNumber"}, {"value": 4, "name": "kCustomTagNonSafeIgnoreMask"}, {"children": [{"value": 68, "name": "StartBlock(unsigned long)"}, {"value": 3, "name": "IsBlockBased()"}, {"value": 480, "name": "GenerateFilter()"}, {"value": 157, "name": "Add(rocksdb::Slice const&)"}, {"value": 309, "name": "Finish()"}, {"value": 221, "name": "AddPrefix(rocksdb::Slice const&)"}, {"value": 212, "name": "BlockBasedFilterBlockBuilder(rocksdb::SliceTransform const*, rocksdb::BlockBasedTableOptions const&)"}, {"value": 223, "name": "~BlockBasedFilterBlockBuilder()"}], "name": "BlockBasedFilterBlockBuilder::"}, {"children": [{"value": 32, "name": "kIndexType[abi:cxx11]"}, {"value": 32, "name": "kPrefixFiltering[abi:cxx11]"}, {"value": 32, "name": "kWholeKeyFiltering[abi:cxx11]"}], "name": "BlockBasedTablePropertyNames::"}, {"children": [{"value": 101, "name": "PrepareOptionsForOpenDB()"}, {"children": [{"children": [{"value": 32, "name": "STYLE[abi:cxx11]"}], "name": "NEW_COMPACTION_"}, {"children": [{"value": 32, "name": "STYLE[abi:cxx11]"}], "name": "OLD_COMPACTION_"}], "name": "ARG_"}, {"value": 1109, "name": "Help(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 3234, "name": "DoCommand()"}, {"value": 6614, "name": "ChangeCompactionStyleCommand(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 28, "name": "~ChangeCompactionStyleCommand()"}], "name": "ChangeCompactionStyleCommand::"}, {"children": [{"value": 32, "name": "kGlobalSeqno[abi:cxx11]"}, {"value": 32, "name": "kVersion[abi:cxx11]"}], "name": "ExternalSstFilePropertyNames::"}, {"value": 1452, "name": "GetMutableOptionsFromStrings(rocksdb::MutableCFOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::MutableCFOptions*)"}, {"value": 136, "name": "GetStringFromCompressionType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::CompressionType)"}, {"value": 389, "name": "LogPropertiesCollectionError(rocksdb::Logger*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 321, "name": "NewReadaheadRandomAccessFile(std::unique_ptr<rocksdb::RandomAccessFile, std::default_delete<rocksdb::RandomAccessFile> >&&, unsigned long)"}, {"value": 8, "name": "kLegacyPlainTableMagicNumber"}, {"children": [{"value": 5, "name": "~FlushBlockBySizePolicyFactory()"}, {"value": 98, "name": "NewFlushBlockPolicy(rocksdb::BlockBasedTableOptions const&, rocksdb::BlockBuilder const&) const"}, {"value": 6, "name": "Name() const"}], "name": "FlushBlockBySizePolicyFactory::"}, {"value": 31, "name": "GetColumnFamilyOptionsFromMap(rocksdb::ColumnFamilyOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::ColumnFamilyOptions*, bool)"}, {"value": 14, "name": "GetColumnFamilyUserComparator(rocksdb::ColumnFamilyHandle*)"}, {"value": 575, "name": "GetIntTblPropCollectorFactory(rocksdb::ImmutableCFOptions const&, std::vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > >*)"}, {"children": [{"children": [{"value": 32, "name": "kBaseLevel[abi:cxx11]"}, {"value": 32, "name": "kLevelStats[abi:cxx11]"}, {"value": 32, "name": "kNumSnapshots[abi:cxx11]"}, {"value": 32, "name": "kEstimateNumKeys[abi:cxx11]"}, {"value": 32, "name": "kNumLiveVersions[abi:cxx11]"}, {"value": 32, "name": "kBackgroundErrors[abi:cxx11]"}, {"value": 32, "name": "kSizeAllMemTables[abi:cxx11]"}, {"value": 32, "name": "kCompactionPending[abi:cxx11]"}, {"value": 32, "name": "kNumRunningFlushes[abi:cxx11]"}, {"value": 32, "name": "kTotalSstFilesSize[abi:cxx11]"}, {"value": 32, "name": "kMinLogNumberToKeep[abi:cxx11]"}, {"value": 32, "name": "kOldestSnapshotTime[abi:cxx11]"}, {"value": 32, "name": "kCurSizeAllMemTables[abi:cxx11]"}, {"value": 32, "name": "kEstimateLiveDataSize[abi:cxx11]"}, {"value": 32, "name": "kMemTableFlushPending[abi:cxx11]"}, {"value": 32, "name": "kNumImmutableMemTable[abi:cxx11]"}, {"value": 32, "name": "kCurSizeActiveMemTable[abi:cxx11]"}, {"value": 32, "name": "kNumFilesAtLevelPrefix[abi:cxx11]"}, {"value": 32, "name": "kNumRunningCompactions[abi:cxx11]"}, {"value": 32, "name": "kIsFileDeletionsEnabled[abi:cxx11]"}, {"value": 32, "name": "kNumDeletesImmMemTables[abi:cxx11]"}, {"value": 32, "name": "kNumEntriesImmMemTables[abi:cxx11]"}, {"value": 32, "name": "kEstimateTableReadersMem[abi:cxx11]"}, {"value": 32, "name": "kNumDeletesActiveMemTable[abi:cxx11]"}, {"value": 32, "name": "kNumEntriesActiveMemTable[abi:cxx11]"}, {"value": 32, "name": "kAggregatedTableProperties[abi:cxx11]"}, {"value": 32, "name": "kCurrentSuperVersionNumber[abi:cxx11]"}, {"value": 32, "name": "kNumImmutableMemTableFlushed[abi:cxx11]"}, {"value": 32, "name": "kCompressionRatioAtLevelPrefix[abi:cxx11]"}, {"value": 32, "name": "kEstimatePendingCompactionBytes[abi:cxx11]"}, {"value": 32, "name": "kAggregatedTablePropertiesAtLevel[abi:cxx11]"}, {"value": 32, "name": "kStats[abi:cxx11]"}, {"value": 32, "name": "kCFStats[abi:cxx11]"}, {"value": 32, "name": "kDBStats[abi:cxx11]"}, {"value": 32, "name": "kSSTables[abi:cxx11]"}], "name": "Properties::"}, {"value": 74, "name": "SetOptions(rocksdb::ColumnFamilyHandle*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 66, "name": "SetOptions(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 139, "name": "DeleteRange(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 61, "name": "GetProperty(rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 12, "name": "KeyMayExist(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 84, "name": "KeyMayExist(rocksdb::ReadOptions const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 56, "name": "NewIterator(rocksdb::ReadOptions const&)"}, {"value": 101, "name": "CompactFiles(rocksdb::CompactionOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, int, int)"}, {"value": 113, "name": "CompactRange(rocksdb::Slice const*, rocksdb::Slice const*, bool, int, unsigned int)"}, {"value": 77, "name": "CompactRange(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*, bool, int, unsigned int)"}, {"value": 89, "name": "CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 41, "name": "NumberLevels()"}, {"value": 131, "name": "SingleDelete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 78, "name": "SingleDelete(rocksdb::WriteOptions const&, rocksdb::Slice const&)"}, {"value": 61, "name": "GetIntProperty(rocksdb::Slice const&, unsigned long*)"}, {"value": 61, "name": "GetMapProperty(rocksdb::Slice const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 1944, "name": "OpenForReadOnly(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DB**, bool)"}, {"value": 1361, "name": "OpenForReadOnly(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool)"}, {"value": 74, "name": "DropColumnFamily(rocksdb::ColumnFamilyHandle*)"}, {"value": 74, "name": "CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyHandle**)"}, {"value": 81, "name": "IngestExternalFile(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, rocksdb::IngestExternalFileOptions const&)"}, {"value": 34, "name": "ListColumnFamilies(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 85, "name": "GetApproximateSizes(rocksdb::Range const*, int, unsigned long*, bool)"}, {"value": 1, "name": "GetLiveFilesMetaData(std::vector<rocksdb::LiveFileMetaData, std::allocator<rocksdb::LiveFileMetaData> >*)"}, {"value": 41, "name": "MaxMemCompactionLevel()"}, {"value": 41, "name": "Level0StopWriteTrigger()"}, {"value": 1, "name": "GetColumnFamilyMetaData(rocksdb::ColumnFamilyHandle*, rocksdb::ColumnFamilyMetaData*)"}, {"value": 66, "name": "GetPropertiesOfAllTables(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 39, "name": "DestroyColumnFamilyHandle(rocksdb::ColumnFamilyHandle*)"}, {"value": 86, "name": "Get(rocksdb::ReadOptions const&, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 147, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 86, "name": "Put(rocksdb::WriteOptions const&, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 1706, "name": "Open(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DB**)"}, {"value": 7592, "name": "Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)"}, {"value": 66, "name": "Flush(rocksdb::FlushOptions const&)"}, {"value": 139, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 86, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 131, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 78, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::Slice const&)"}, {"value": 501, "name": "AddFile(rocksdb::ExternalSstFileInfo const*, bool, bool)"}, {"value": 501, "name": "AddFile(rocksdb::ColumnFamilyHandle*, rocksdb::ExternalSstFileInfo const*, bool, bool)"}, {"value": 501, "name": "AddFile(rocksdb::ColumnFamilyHandle*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)"}, {"value": 309, "name": "AddFile(rocksdb::ColumnFamilyHandle*, std::vector<rocksdb::ExternalSstFileInfo, std::allocator<rocksdb::ExternalSstFileInfo> > const&, bool, bool)"}, {"value": 52, "name": "AddFile(rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool, bool)"}, {"value": 501, "name": "AddFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)"}, {"value": 309, "name": "AddFile(std::vector<rocksdb::ExternalSstFileInfo, std::allocator<rocksdb::ExternalSstFileInfo> > const&, bool, bool)"}, {"value": 97, "name": "AddFile(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool, bool)"}, {"value": 364, "name": "MultiGet(rocksdb::ReadOptions const&, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 4, "name": "GetRootDB()"}, {"value": 7, "name": "~DB()"}, {"value": 61, "name": "GetOptions() const"}], "name": "DB::"}, {"value": 153, "name": "CheckConcurrentWritesSupported(rocksdb::ColumnFamilyOptions const&)"}, {"value": 1388, "name": "GetMutableDBOptionsFromStrings(rocksdb::MutableDBOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::MutableDBOptions*)"}, {"value": 242, "name": "GetPlainTableOptionsFromString(rocksdb::PlainTableOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::PlainTableOptions*)"}, {"children": [{"value": 148, "name": "InternalAdd(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long)"}, {"value": 791, "name": "Finish(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"value": 5, "name": "~InternalKeyPropertiesCollector()"}, {"value": 776, "name": "GetReadableProperties[abi:cxx11]() const"}, {"value": 6, "name": "Name() const"}], "name": "InternalKeyPropertiesCollector::"}, {"children": [{"value": 78, "name": "AutoThreadOperationStageUpdater(rocksdb::ThreadStatus::OperationStage)"}, {"value": 76, "name": "~AutoThreadOperationStageUpdater()"}], "name": "AutoThreadOperationStageUpdater::"}, {"value": 931, "name": "GetMemTableRepFactoryFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::MemTableRepFactory, std::default_delete<rocksdb::MemTableRepFactory> >*)"}, {"children": [{"value": 32, "name": "kDeletedKeys[abi:cxx11]"}, {"value": 32, "name": "kMergeOperands[abi:cxx11]"}], "name": "InternalKeyTablePropertiesNames::"}, {"children": [{"children": [{"value": 4, "name": "kUnknownColumnFamily"}], "name": "Context::"}, {"value": 1, "name": "~TablePropertiesCollectorFactory()"}], "name": "TablePropertiesCollectorFactory::"}, {"children": [{"value": 210, "name": "InternalAdd(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long)"}, {"value": 29, "name": "Finish(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"value": 91, "name": "~UserKeyTablePropertiesCollector()"}, {"value": 10, "name": "NeedCompact() const"}, {"value": 29, "name": "GetReadableProperties[abi:cxx11]() const"}, {"value": 10, "name": "Name() const"}], "name": "UserKeyTablePropertiesCollector::"}, {"value": 32, "name": "kHashIndexPrefixesMetadataBlock[abi:cxx11]"}, {"value": 598, "name": "GetBlockBasedTableOptionsFromMap(rocksdb::BlockBasedTableOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::BlockBasedTableOptions*, bool)"}, {"value": 255, "name": "GetColumnFamilyOptionsFromString(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyOptions*)"}, {"value": 308, "name": "GetStringFromColumnFamilyOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 10, "name": "InternalAdd(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long)"}, {"value": 576, "name": "Finish(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"value": 5, "name": "~SstFileWriterPropertiesCollector()"}, {"value": 438, "name": "GetReadableProperties[abi:cxx11]() const"}, {"value": 6, "name": "Name() const"}], "name": "SstFileWriterPropertiesCollector::"}, {"value": 541, "name": "NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long, std::vector<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> > > > const&, rocksdb::Logger*)"}, {"value": 501, "name": "SerializeSingleColumnFamilyOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 8, "name": "kLegacyBlockBasedTableMagicNumber"}, {"value": 242, "name": "GetBlockBasedTableOptionsFromString(rocksdb::BlockBasedTableOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::BlockBasedTableOptions*)"}, {"value": 199, "name": "GetStringFromBlockBasedTableOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::BlockBasedTableOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 697, "name": "NotifyCollectTableCollectorsOnFinish(std::vector<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> > > > const&, rocksdb::Logger*, rocksdb::PropertyBlockBuilder*)"}, {"value": 501, "name": "SerializeSingleBlockBasedTableOption(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::BlockBasedTableOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 290, "name": "GetColumnFamilyOptionsFromMapInternal(rocksdb::ColumnFamilyOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, rocksdb::ColumnFamilyOptions*, bool, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"children": [{"value": 37, "name": "CreateIntTblPropCollector(unsigned int)"}, {"value": 5, "name": "~InternalKeyPropertiesCollectorFactory()"}, {"value": 6, "name": "Name() const"}], "name": "InternalKeyPropertiesCollectorFactory::"}, {"children": [{"value": 89, "name": "CreateIntTblPropCollector(unsigned int)"}, {"value": 257, "name": "~UserKeyTablePropertiesCollectorFactory()"}, {"value": 10, "name": "Name() const"}], "name": "UserKeyTablePropertiesCollectorFactory::"}, {"children": [{"value": 47, "name": "CreateIntTblPropCollector(unsigned int)"}, {"value": 5, "name": "~SstFileWriterPropertiesCollectorFactory()"}, {"value": 6, "name": "Name() const"}], "name": "SstFileWriterPropertiesCollectorFactory::"}, {"value": 202, "name": "Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)"}, {"value": 143, "name": "Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"value": 181, "name": "Log(rocksdb::Logger*, char const*, ...)"}, {"value": 153, "name": "Log(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"children": [{"children": [{"value": 714, "name": "ReadRecord(rocksdb::Slice*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::WALRecoveryMode)"}, {"value": 39, "name": "ReportDrop(unsigned long, rocksdb::Status const&)"}, {"value": 5, "name": "LastRecordOffset()"}, {"value": 163, "name": "ReportCorruption(unsigned long, char const*)"}, {"value": 486, "name": "ReadPhysicalRecord(rocksdb::Slice*, unsigned long*)"}, {"value": 197, "name": "SkipToInitialBlock()"}, {"value": 317, "name": "ReadMore(unsigned long*, int*)"}, {"children": [{"value": 7, "name": "~Reporter()"}], "name": "Reporter::"}, {"value": 331, "name": "UnmarkEOF()"}, {"value": 606, "name": "Reader(std::shared_ptr<rocksdb::Logger>, std::unique_ptr<rocksdb::SequentialFileReader, std::default_delete<rocksdb::SequentialFileReader> >&&, rocksdb::log::Reader::Reporter*, bool, unsigned long, unsigned long)"}, {"value": 346, "name": "~Reader()"}], "name": "Reader::"}, {"children": [{"value": 415, "name": "EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long)"}, {"value": 472, "name": "AddRecord(rocksdb::Slice const&)"}, {"value": 602, "name": "Writer(std::unique_ptr<rocksdb::WritableFileWriter, std::default_delete<rocksdb::WritableFileWriter> >&&, unsigned long, bool)"}, {"value": 92, "name": "~Writer()"}], "name": "Writer::"}], "name": "log::"}, {"value": 1050, "name": "UncompressBlockContentsForCompressionType(char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::Slice const&, rocksdb::CompressionType, rocksdb::ImmutableCFOptions const&)"}, {"value": 121, "name": "Hash(char const*, unsigned long, unsigned int)"}, {"value": 181, "name": "Info(rocksdb::Logger*, char const*, ...)"}, {"value": 153, "name": "Info(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"value": 181, "name": "Warn(rocksdb::Logger*, char const*, ...)"}, {"value": 153, "name": "Warn(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"children": [{"value": 19, "name": "PhysicalCoreID()"}, {"value": 58, "name": "GetMaxOpenFiles()"}, {"value": 65, "name": "Crash(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)"}, {"children": [{"value": 1, "name": "AssertHeld()"}, {"value": 69, "name": "Lock()"}, {"value": 69, "name": "Unlock()"}, {"value": 142, "name": "Mutex(bool)"}, {"value": 138, "name": "~Mutex()"}], "name": "Mutex::"}, {"children": [{"value": 73, "name": "Wait()"}, {"value": 69, "name": "Signal()"}, {"value": 69, "name": "SignalAll()"}, {"value": 131, "name": "TimedWait(unsigned long)"}, {"value": 150, "name": "CondVar(rocksdb::port::Mutex*)"}, {"value": 138, "name": "~CondVar()"}], "name": "CondVar::"}, {"children": [{"value": 69, "name": "ReadUnlock()"}, {"value": 69, "name": "WriteUnlock()"}, {"value": 69, "name": "ReadLock()"}, {"value": 69, "name": "WriteLock()"}, {"value": 142, "name": "RWMutex()"}, {"value": 138, "name": "~RWMutex()"}], "name": "RWMutex::"}, {"value": 69, "name": "InitOnce(int*, void (*)())"}], "name": "port::"}, {"children": [{"value": 8, "name": "kInlineSize"}, {"value": 8, "name": "kMaxBlockSize"}, {"value": 8, "name": "kMinBlockSize"}, {"value": 307, "name": "AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)"}, {"value": 210, "name": "AllocateFallback(unsigned long, bool)"}, {"value": 308, "name": "AllocateNewBlock(unsigned long)"}, {"value": 201, "name": "AllocateFromHugePage(unsigned long)"}, {"value": 191, "name": "Allocate(unsigned long)"}, {"value": 364, "name": "Arena(unsigned long, unsigned long)"}, {"value": 370, "name": "~Arena()"}, {"value": 8, "name": "BlockSize() const"}], "name": "Arena::"}, {"children": [{"value": 897, "name": "NewIterator(rocksdb::Comparator const*, rocksdb::BlockIter*, bool, rocksdb::Statistics*)"}, {"value": 68, "name": "SetBlockPrefixIndex(rocksdb::BlockPrefixIndex*)"}, {"value": 1194, "name": "Block(rocksdb::BlockContents&&, unsigned long, unsigned long, rocksdb::Statistics*)"}, {"value": 129, "name": "~Block()"}, {"value": 13, "name": "NumRestarts() const"}, {"value": 56, "name": "ApproximateMemoryUsage() const"}], "name": "Block::"}, {"value": 174, "name": "Debug(rocksdb::Logger*, char const*, ...)"}, {"value": 150, "name": "Debug(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"value": 181, "name": "Error(rocksdb::Logger*, char const*, ...)"}, {"value": 153, "name": "Error(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"value": 181, "name": "Fatal(rocksdb::Logger*, char const*, ...)"}, {"value": 153, "name": "Fatal(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"children": [{"value": 570, "name": "Slice(rocksdb::SliceParts const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 391, "name": "ToString[abi:cxx11](bool) const"}, {"value": 431, "name": "DecodeHex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}], "name": "Slice::"}, {"value": 342, "name": "XXH32(void const*, int, unsigned int)"}, {"value": 16, "name": "toHex(unsigned char)"}, {"children": [{"value": 592, "name": "DelayWrite(unsigned long, rocksdb::WriteOptions const&)"}, {"value": 2883, "name": "DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"}, {"value": 2444, "name": "ReFitLevel(rocksdb::ColumnFamilyData*, int, int)"}, {"value": 1673, "name": "SetOptions(rocksdb::ColumnFamilyHandle*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 20, "name": "BGWorkFlush(void*)"}, {"value": 20, "name": "BGWorkPurge(void*)"}, {"children": [{"value": 17, "name": "GetDataDir(unsigned long)"}, {"value": 1692, "name": "SetDirectories(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)"}, {"value": 196, "name": "CreateAndNewDirectory(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*) const"}], "name": "Directories::"}, {"value": 299, "name": "GetProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 4, "name": "GetSnapshot()"}, {"value": 133, "name": "KeyMayExist(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 723, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 1191, "name": "CompactFiles(rocksdb::CompactionOptions const&, rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, int, int)"}, {"value": 1517, "name": "CompactRange(rocksdb::CompactRangeOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 2044, "name": "GetLiveFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, unsigned long*, bool)"}, {"value": 1288, "name": "NewIterators(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Iterator*, std::allocator<rocksdb::Iterator*> >*)"}, {"value": 21, "name": "NumberLevels(rocksdb::ColumnFamilyHandle*)"}, {"value": 1182, "name": "SetDBOptions(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}, {"value": 131, "name": "SingleDelete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"children": [{"value": 262, "name": "~WriteContext()"}], "name": "WriteContext::"}, {"value": 939, "name": "FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, bool)"}, {"value": 68, "name": "SchedulePurge()"}, {"value": 89, "name": "GetIntProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, unsigned long*)"}, {"value": 214, "name": "GetMapProperty(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >*)"}, {"value": 487, "name": "MarkLogsSynced(unsigned long, bool, rocksdb::Status const&)"}, {"value": 725, "name": "MaybeDumpStats()"}, {"value": 335, "name": "PersistOptions()"}, {"value": 2703, "name": "SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)"}, {"value": 1058, "name": "SyncClosedLogs(rocksdb::JobContext*)"}, {"value": 204, "name": "AddToFlushQueue(rocksdb::ColumnFamilyData*)"}, {"value": 813, "name": "BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)"}, {"value": 222, "name": "GetSnapshotImpl(bool)"}, {"value": 179, "name": "GetUpdatesSince(unsigned long, std::unique_ptr<rocksdb::TransactionLogIterator, std::default_delete<rocksdb::TransactionLogIterator> >*, rocksdb::TransactionLogIterator::ReadOptions const&)"}, {"value": 119, "name": "PrintStatistics()"}, {"value": 7510, "name": "RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool)"}, {"value": 93, "name": "ReleaseSnapshot(rocksdb::Snapshot const*)"}, {"value": 145, "name": "ScheduleFlushes(rocksdb::DBImpl::WriteContext*)"}, {"value": 54, "name": "BGWorkCompaction(void*)"}, {"value": 3538, "name": "CheckConsistency()"}, {"value": 4360, "name": "CompactFilesImpl(rocksdb::CompactionOptions const&, rocksdb::ColumnFamilyData*, rocksdb::Version*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, int, int, rocksdb::JobContext*, rocksdb::LogBuffer*)"}, {"value": 2048, "name": "DropColumnFamily(rocksdb::ColumnFamilyHandle*)"}, {"value": 1760, "name": "WriteOptionsFile()"}, {"value": 3710, "name": "FindObsoleteFiles(rocksdb::JobContext*, bool, bool)"}, {"value": 31, "name": "GetSortedWalFiles(std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >&)"}, {"value": 71, "name": "WaitForIngestFile()"}, {"value": 46, "name": "WriteWithCallback(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*)"}, {"value": 2419, "name": "CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyHandle**)"}, {"value": 2763, "name": "DeleteFilesInRange(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const*, rocksdb::Slice const*)"}, {"value": 1984, "name": "IngestExternalFile(rocksdb::ColumnFamilyHandle*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, rocksdb::IngestExternalFileOptions const&)"}, {"value": 288, "name": "MinLogNumberToKeep()"}, {"value": 5666, "name": "PurgeObsoleteFiles(rocksdb::JobContext const&, bool)"}, {"value": 66, "name": "UnscheduleCallback(void*)"}, {"value": 191, "name": "AddManualCompaction(rocksdb::DBImpl::ManualCompaction*)"}, {"value": 1109, "name": "BackgroundCallFlush()"}, {"value": 717, "name": "BackgroundCallPurge()"}, {"value": 458, "name": "DeleteObsoleteFiles()"}, {"value": 449, "name": "EnableFileDeletions(bool)"}, {"value": 648, "name": "GetApproximateSizes(rocksdb::ColumnFamilyHandle*, rocksdb::Range const*, int, unsigned long*, bool)"}, {"value": 147, "name": "NewInternalIterator(rocksdb::Arena*, rocksdb::RangeDelAggregator*, rocksdb::ColumnFamilyHandle*)"}, {"value": 553, "name": "NewInternalIterator(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*)"}, {"value": 144, "name": "PauseBackgroundWork()"}, {"value": 1770, "name": "RunManualCompaction(rocksdb::ColumnFamilyData*, int, int, unsigned int, rocksdb::Slice const*, rocksdb::Slice const*, bool, bool)"}, {"value": 204, "name": "AddToCompactionQueue(rocksdb::ColumnFamilyData*)"}, {"value": 7245, "name": "BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, void*)"}, {"value": 163, "name": "DisableFileDeletions()"}, {"value": 527, "name": "EnableAutoCompaction(std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&)"}, {"value": 97, "name": "GetLiveFilesMetaData(std::vector<rocksdb::LiveFileMetaData, std::allocator<rocksdb::LiveFileMetaData> >*)"}, {"value": 110, "name": "HaveManualCompaction(rocksdb::ColumnFamilyData*)"}, {"value": 242, "name": "SchedulePendingFlush(rocksdb::ColumnFamilyData*)"}, {"value": 508, "name": "SchedulePendingPurge(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::FileType, unsigned long, unsigned int, int)"}, {"value": 457, "name": "WaitForFlushMemTable(rocksdb::ColumnFamilyData*)"}, {"value": 18, "name": "GetAndRefSuperVersion(rocksdb::ColumnFamilyData*)"}, {"value": 59, "name": "GetAndRefSuperVersion(unsigned int)"}, {"value": 50, "name": "GetColumnFamilyHandle(unsigned int)"}, {"value": 3, "name": "MaxMemCompactionLevel(rocksdb::ColumnFamilyHandle*)"}, {"value": 164, "name": "ContinueBackgroundWork()"}, {"value": 802, "name": "DeleteObsoleteFileImpl(rocksdb::Status, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long, unsigned int)"}, {"value": 263, "name": "GetIntPropertyInternal(rocksdb::ColumnFamilyData*, rocksdb::DBPropertyInfo const&, bool, unsigned long*)"}, {"value": 102, "name": "Level0StopWriteTrigger(rocksdb::ColumnFamilyHandle*)"}, {"value": 1499, "name": "NotifyOnFlushCompleted(rocksdb::ColumnFamilyData*, rocksdb::FileMetaData*, rocksdb::MutableCFOptions const&, int, rocksdb::TableProperties)"}, {"value": 360, "name": "NotifyOnMemTableSealed(rocksdb::ColumnFamilyData*, rocksdb::MemTableInfo const&)"}, {"value": 120, "name": "PopFirstFromFlushQueue()"}, {"value": 137, "name": "RemoveManualCompaction(rocksdb::DBImpl::ManualCompaction*)"}, {"value": 398, "name": "CancelAllBackgroundWork(bool)"}, {"value": 147, "name": "CreateArchivalDirectory()"}, {"value": 81, "name": "GetColumnFamilyMetaData(rocksdb::ColumnFamilyHandle*, rocksdb::ColumnFamilyMetaData*)"}, {"value": 1552, "name": "GetLatestSequenceForKey(rocksdb::SuperVersion*, rocksdb::Slice const&, bool, unsigned long*, bool*)"}, {"value": 1239, "name": "BackgroundCallCompaction(void*)"}, {"value": 356, "name": "GetAggregatedIntProperty(rocksdb::Slice const&, unsigned long*)"}, {"value": 142, "name": "GetPropertiesOfAllTables(rocksdb::ColumnFamilyHandle*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 557, "name": "MaybeFlushColumnFamilies()"}, {"value": 420, "name": "ScheduleBgLogWriterClose(rocksdb::JobContext*)"}, {"value": 2347, "name": "FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)"}, {"value": 238, "name": "SchedulePendingCompaction(rocksdb::ColumnFamilyData*)"}, {"value": 1144, "name": "DeleteObsoleteOptionsFiles()"}, {"value": 167, "name": "DeleteRecoveredTransaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 18, "name": "HasPendingManualCompaction()"}, {"value": 276, "name": "InsertRecoveredTransaction(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::WriteBatch*)"}, {"value": 2237, "name": "NotifyOnCompactionCompleted(rocksdb::ColumnFamilyData*, rocksdb::Compaction*, rocksdb::Status const&, rocksdb::CompactionJobStats const&, int)"}, {"value": 120, "name": "PopFirstFromCompactionQueue()"}, {"value": 322, "name": "RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 151, "name": "ShouldntRunManualCompaction(rocksdb::DBImpl::ManualCompaction*)"}, {"value": 2828, "name": "WriteLevel0TableForRecovery(int, rocksdb::ColumnFamilyData*, rocksdb::MemTable*, rocksdb::VersionEdit*)"}, {"value": 173, "name": "FindMinimumEmptyLevelFitting(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, int)"}, {"value": 165, "name": "GetPropertiesOfTablesInRange(rocksdb::ColumnFamilyHandle*, rocksdb::Range const*, unsigned long, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 78, "name": "HasExclusiveManualCompaction()"}, {"value": 1528, "name": "NotifyOnExternalFileIngested(rocksdb::ColumnFamilyData*, rocksdb::ExternalSstFileIngestionJob const&)"}, {"value": 226, "name": "ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*)"}, {"value": 43, "name": "ReturnAndCleanupSuperVersion(unsigned int, rocksdb::SuperVersion*)"}, {"value": 131, "name": "GetAndRefSuperVersionUnlocked(unsigned int)"}, {"value": 132, "name": "GetColumnFamilyHandleUnlocked(unsigned int)"}, {"value": 508, "name": "MarkLogAsContainingPrepSection(unsigned long)"}, {"value": 512, "name": "MaybeScheduleFlushOrCompaction()"}, {"value": 53, "name": "GetEarliestMemTableSequenceNumber(rocksdb::SuperVersion*, bool)"}, {"value": 145, "name": "MarkLogAsHavingPrepSectionFlushed(unsigned long)"}, {"value": 145, "name": "FindMinPrepLogReferencedByMemTable()"}, {"value": 266, "name": "InstallSuperVersionAndScheduleWork(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::MutableCFOptions const&)"}, {"value": 288, "name": "FindMinLogContainingOutstandingPrep()"}, {"value": 10, "name": "GetSnapshotForWriteConflictBoundary()"}, {"value": 38, "name": "ReleaseFileNumberFromPendingOutputs(std::_List_iterator<unsigned long>)"}, {"value": 118, "name": "ReturnAndCleanupSuperVersionUnlocked(unsigned int, rocksdb::SuperVersion*)"}, {"value": 32, "name": "Get(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 147, "name": "Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 84, "name": "CaptureCurrentFileNumberInPendingOutputs()"}, {"value": 171, "name": "InstallSuperVersionAndScheduleWorkWrapper(rocksdb::ColumnFamilyData*, rocksdb::JobContext*, rocksdb::MutableCFOptions const&)"}, {"value": 62, "name": "Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)"}, {"value": 226, "name": "Merge(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 1367, "name": "NewDB()"}, {"value": 49, "name": "Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)"}, {"value": 131, "name": "Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)"}, {"value": 2052, "name": "GetImpl(rocksdb::ReadOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*)"}, {"value": 4405, "name": "Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool)"}, {"value": 1225, "name": "SyncWAL()"}, {"value": 4244, "name": "MultiGet(rocksdb::ReadOptions const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> > const&, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 24, "name": "MCOverlap(rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction*)"}, {"value": 8822, "name": "WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool)"}, {"value": 9836, "name": "DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 9366, "name": "~DBImpl()"}, {"value": 263, "name": "GetOptions(rocksdb::ColumnFamilyHandle*) const"}, {"value": 110, "name": "GetDBOptions() const"}, {"value": 873, "name": "GetDbIdentity(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const"}, {"value": 160, "name": "MaybeIgnoreError(rocksdb::Status*) const"}, {"value": 51, "name": "GetMaxTotalWalSize() const"}, {"value": 8, "name": "DefaultColumnFamily() const"}, {"value": 80, "name": "BGCompactionsAllowed() const"}, {"value": 26, "name": "NewThreadStatusCfInfo(rocksdb::ColumnFamilyData*) const"}, {"value": 7, "name": "IsFileDeletionsEnabled() const"}, {"value": 18, "name": "EraseThreadStatusCfInfo(rocksdb::ColumnFamilyData*) const"}, {"value": 15, "name": "EraseThreadStatusDbInfo() const"}, {"value": 9, "name": "GetLatestSequenceNumber() const"}, {"value": 128, "name": "GetWalPreallocateBlockSize(unsigned long) const"}, {"value": 5, "name": "GetEnv() const"}, {"value": 5, "name": "GetName[abi:cxx11]() const"}, {"children": [{"value": 232, "name": "Corruption(unsigned long, rocksdb::Status const&)"}, {"value": 28, "name": "~LogReporter()"}], "name": "RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool)::LogReporter::"}], "name": "DBImpl::"}, {"children": [{"value": 825, "name": "SeekToLast()"}, {"value": 651, "name": "GetProperty(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 1068, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 871, "name": "SeekToFirst()"}, {"value": 651, "name": "PrevInternal()"}, {"value": 256, "name": "FindNextUserKey()"}, {"value": 731, "name": "FindPrevUserKey()"}, {"value": 93, "name": "FindParseableKey(rocksdb::ParsedInternalKey*, rocksdb::DBIter::Direction)"}, {"value": 341, "name": "ReverseToForward()"}, {"value": 596, "name": "ReverseToBackward()"}, {"value": 1621, "name": "MergeValuesNewToOld()"}, {"value": 8, "name": "GetRangeDelAggregator()"}, {"value": 2073, "name": "FindValueForCurrentKey()"}, {"value": 1565, "name": "FindNextUserEntryInternal(bool, bool)"}, {"value": 1960, "name": "FindValueForCurrentKeyUsingSeek()"}, {"value": 393, "name": "Next()"}, {"value": 134, "name": "Prev()"}, {"value": 1237, "name": "Seek(rocksdb::Slice const&)"}, {"value": 26, "name": "SetIter(rocksdb::InternalIterator*)"}, {"value": 368, "name": "ParseKey(rocksdb::ParsedInternalKey*)"}, {"value": 785, "name": "DBIter(rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::Comparator const*, rocksdb::InternalIterator*, unsigned long, bool, unsigned long, unsigned long, rocksdb::Slice const*, bool, bool, bool)"}, {"value": 837, "name": "~DBIter()"}, {"value": 15, "name": "key() const"}, {"value": 7, "name": "Valid() const"}, {"value": 84, "name": "value() const"}, {"value": 73, "name": "status() const"}], "name": "DBIter::"}, {"children": [{"value": 592, "name": "DecodeFrom(rocksdb::Slice*)"}, {"value": 86, "name": "Footer(unsigned long, unsigned int)"}, {"value": 1114, "name": "EncodeTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 3720, "name": "ToString[abi:cxx11]() const"}], "name": "Footer::"}, {"value": 138, "name": "Header(rocksdb::Logger*, char const*, ...)"}, {"value": 142, "name": "Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)"}, {"children": [{"value": 5, "name": "SetInfoLogLevel(rocksdb::InfoLogLevel)"}, {"value": 137, "name": "Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*)"}, {"value": 1, "name": "Flush()"}, {"value": 9, "name": "LogHeader(char const*, __va_list_tag*)"}, {"value": 7, "name": "~Logger()"}, {"value": 5, "name": "GetLogFileSize() const"}, {"value": 5, "name": "GetInfoLogLevel() const"}, {"children": [{"value": 40, "name": "kInfoLogLevelNames"}], "name": "Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*)::"}], "name": "Logger::"}, {"children": [{"value": 112, "name": "GetTLSInstance()"}, {"children": [{"value": 8, "name": "instance"}, {"children": [{"value": 16, "name": "bytes"}], "name": "instance_"}], "name": "GetTLSInstance()::tls_"}], "name": "Random::"}, {"children": [{"value": 48, "name": "msgs"}, {"value": 46, "name": "CopyState(char const*)"}, {"value": 286, "name": "Status(rocksdb::Status::Code, rocksdb::Status::SubCode, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 545, "name": "ToString[abi:cxx11]() const"}], "name": "Status::"}, {"children": [{"value": 501, "name": "unsigned int ExtendImpl<&rocksdb::crc32c::Fast_CRC32>(unsigned int, char const*, unsigned long)"}, {"value": 501, "name": "unsigned int ExtendImpl<&rocksdb::crc32c::Slow_CRC32>(unsigned int, char const*, unsigned long)"}, {"value": 8, "name": "ChosenExtend"}, {"value": 3, "name": "IsFastCrc32Supported()"}, {"value": 9, "name": "Extend(unsigned int, char const*, unsigned long)"}, {"value": 1024, "name": "table0_"}, {"value": 1024, "name": "table1_"}, {"value": 1024, "name": "table2_"}, {"value": 1024, "name": "table3_"}], "name": "crc32c::"}, {"value": 5, "name": "Fadvise(int, long, unsigned long, int)"}, {"children": [{"value": 267, "name": "TrimAppend(unsigned long, char const*, unsigned long)"}, {"value": 199, "name": "SetInternalKey(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long, rocksdb::ValueType)"}], "name": "IterKey::"}, {"children": [{"value": 171, "name": "Run(int, char**, rocksdb::Options, rocksdb::LDBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const*)"}], "name": "LDBTool::"}, {"children": [{"value": 1, "name": "~LogFile()"}], "name": "LogFile::"}, {"children": [{"value": 134, "name": "OldDefaults(int, int)"}, {"value": 65, "name": "OptimizeForSmallDb()"}, {"value": 143, "name": "PrepareForBulkLoad()"}, {"value": 12, "name": "DumpCFOptions(rocksdb::Logger*) const"}, {"value": 40, "name": "Dump(rocksdb::Logger*) const"}], "name": "Options::"}, {"children": [{"value": 100, "name": "AddIterators(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*)"}, {"value": 159, "name": "AddLiveFiles(std::vector<rocksdb::FileDescriptor, std::allocator<rocksdb::FileDescriptor> >*)"}, {"value": 198, "name": "PrepareApply(rocksdb::MutableCFOptions const&, bool)"}, {"value": 42, "name": "IsFilterSkipped(int, bool)"}, {"value": 638, "name": "AddIteratorsForLevel(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*)"}, {"value": 912, "name": "UpdateAccumulatedStats(bool)"}, {"value": 1189, "name": "GetColumnFamilyMetaData(rocksdb::ColumnFamilyMetaData*)"}, {"value": 230, "name": "GetPropertiesOfAllTables(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*)"}, {"value": 1077, "name": "GetPropertiesOfAllTables(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*, int)"}, {"value": 535, "name": "MaybeInitializeFileMetaData(rocksdb::FileMetaData*)"}, {"value": 1089, "name": "GetAggregatedTableProperties(std::shared_ptr<rocksdb::TableProperties const>*, int)"}, {"value": 236, "name": "GetMemoryUsageByTableReaders()"}, {"value": 1681, "name": "Get(rocksdb::ReadOptions const&, rocksdb::LookupKey const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Status*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, bool*, bool*, unsigned long*)"}, {"value": 7, "name": "Ref()"}, {"value": 46, "name": "Unref()"}, {"value": 432, "name": "Version(rocksdb::ColumnFamilyData*, rocksdb::VersionSet*, unsigned long)"}, {"value": 694, "name": "~Version()"}, {"value": 984, "name": "DebugString[abi:cxx11](bool) const"}, {"value": 1117, "name": "GetTableProperties(std::shared_ptr<rocksdb::TableProperties const>*, rocksdb::FileMetaData const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*) const"}, {"value": 1799, "name": "GetPropertiesOfTablesInRange(rocksdb::Range const*, unsigned long, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::TableProperties const>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > > >*) const"}], "name": "Version::"}, {"children": [{"value": 344, "name": "read(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&)"}, {"value": 309, "name": "write(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&&)"}, {"value": 272, "name": "channel()"}], "name": "channel<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem>::"}, {"value": 64, "name": "fromHex(char)"}, {"value": 1457, "name": "CopyFile(rocksdb::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, bool)"}, {"children": [{"value": 7, "name": "~FileLock()"}], "name": "FileLock::"}, {"value": 120, "name": "FindFile(rocksdb::InternalKeyComparator const&, rocksdb::LevelFilesBrief const&, rocksdb::Slice const&)"}, {"children": [{"value": 452, "name": "PickMemTable()"}, {"value": 3753, "name": "WriteLevel0Table()"}, {"value": 79, "name": "RecordFlushIOStats()"}, {"value": 83, "name": "ReportStartedFlush()"}, {"value": 151, "name": "ReportFlushInputSize(rocksdb::autovector<rocksdb::MemTable*, 8ul> const&)"}, {"value": 2244, "name": "Run(rocksdb::FileMetaData*)"}, {"value": 36, "name": "Cancel()"}, {"value": 1988, "name": "FlushJob(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::ColumnFamilyData*, rocksdb::ImmutableDBOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, std::atomic<bool>*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Directory*, rocksdb::Directory*, rocksdb::CompressionType, rocksdb::Statistics*, rocksdb::EventLogger*, bool)"}, {"value": 434, "name": "~FlushJob()"}], "name": "FlushJob::"}, {"children": [{"value": 182, "name": "GetProperty(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 1, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 217, "name": "~Iterator()"}], "name": "Iterator::"}, {"children": [{"value": 9, "name": "DisownData()"}, {"value": 4, "name": "Value(rocksdb::Cache::Handle*)"}, {"value": 15, "name": "GetShard(int)"}, {"value": 1494, "name": "LRUCache(unsigned long, int, bool, double)"}, {"value": 434, "name": "~LRUCache()"}, {"value": 6, "name": "Name() const"}, {"value": 4, "name": "GetHash(rocksdb::Cache::Handle*) const"}, {"value": 15, "name": "GetShard(int) const"}, {"value": 5, "name": "GetCharge(rocksdb::Cache::Handle*) const"}], "name": "LRUCache::"}, {"value": 12, "name": "LogFlush(rocksdb::Logger*)"}, {"value": 15, "name": "LogFlush(std::shared_ptr<rocksdb::Logger> const&)"}, {"children": [{"value": 74, "name": "NewIterator(rocksdb::ReadOptions const&, rocksdb::Arena*)"}, {"children": [{"value": 151, "name": "~KeyComparator()"}, {"value": 102, "name": "operator()(char const*, rocksdb::Slice const&) const"}, {"value": 157, "name": "operator()(char const*, char const*) const"}], "name": "KeyComparator::"}, {"value": 2046, "name": "UpdateCallback(unsigned long, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 111, "name": "ApproximateSize(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 309, "name": "UpdateFlushState()"}, {"value": 469, "name": "ApproximateMemoryUsage()"}, {"value": 105, "name": "NewRangeTombstoneIterator(rocksdb::ReadOptions const&)"}, {"value": 364, "name": "CountSuccessiveMergeEntries(rocksdb::LookupKey const&)"}, {"value": 52, "name": "RefLogContainingPrepSection(unsigned long)"}, {"value": 8, "name": "GetMinLogContainingPrepSection()"}, {"value": 1297, "name": "Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&, rocksdb::Slice const&, bool, rocksdb::MemTablePostProcessInfo*)"}, {"value": 1196, "name": "Get(rocksdb::LookupKey const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Status*, rocksdb::MergeContext*, rocksdb::RangeDelAggregator*, unsigned long*, rocksdb::ReadOptions const&)"}, {"value": 719, "name": "Update(unsigned long, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 76, "name": "GetLock(rocksdb::Slice const&)"}, {"value": 3764, "name": "MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long)"}, {"value": 798, "name": "~MemTable()"}, {"value": 276, "name": "ShouldFlushNow() const"}], "name": "MemTable::"}, {"value": 247, "name": "RepairDB(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Options const&)"}, {"value": 375, "name": "RepairDB(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&)"}, {"value": 341, "name": "RepairDB(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, rocksdb::ColumnFamilyOptions const&)"}, {"children": [{"value": 834, "name": "Insert(char const* const&)"}, {"children": [{"value": 483, "name": "SeekForPrev(char const* const&)"}], "name": "Iterator::"}], "name": "SkipList<char const*, rocksdb::MemTableRep::KeyComparator const&>::"}, {"children": [{"value": 834, "name": "Insert(rocksdb::WriteBatchIndexEntry* const&)"}, {"children": [{"value": 483, "name": "SeekForPrev(rocksdb::WriteBatchIndexEntry* const&)"}], "name": "Iterator::"}], "name": "SkipList<rocksdb::WriteBatchIndexEntry*, rocksdb::WriteBatchEntryComparator const&>::"}, {"children": [{"value": 7, "name": "~Snapshot()"}], "name": "Snapshot::"}, {"children": [{"value": 461, "name": "BinarySeek(rocksdb::Slice const&, unsigned int, unsigned int, unsigned int*)"}, {"value": 93, "name": "PrefixSeek(rocksdb::Slice const&, unsigned int*)"}, {"value": 103, "name": "SeekToLast()"}, {"value": 435, "name": "SeekForPrev(rocksdb::Slice const&)"}, {"value": 57, "name": "SeekToFirst()"}, {"value": 602, "name": "ParseNextKey()"}, {"value": 318, "name": "CompareBlockKey(unsigned int, rocksdb::Slice const&)"}, {"value": 228, "name": "CorruptionError()"}, {"value": 227, "name": "BinaryBlockIndexSeek(rocksdb::Slice const&, unsigned int*, unsigned int, unsigned int, unsigned int*)"}, {"value": 2, "name": "Next()"}, {"value": 798, "name": "Prev()"}, {"value": 411, "name": "Seek(rocksdb::Slice const&)"}, {"value": 273, "name": "~BlockIter()"}, {"value": 7, "name": "IsKeyPinned() const"}, {"value": 3, "name": "IsValuePinned() const"}, {"value": 9, "name": "key() const"}, {"value": 10, "name": "Valid() const"}, {"value": 89, "name": "value() const"}, {"value": 58, "name": "status() const"}], "name": "BlockIter::"}, {"value": 20, "name": "BloomHash(rocksdb::Slice const&)"}, {"children": [{"value": 74, "name": "RegisterCleanup(void (*)(void*, void*), void*, void*)"}, {"value": 48, "name": "RegisterCleanup(rocksdb::Cleanable::Cleanup*)"}, {"value": 202, "name": "DelegateCleanupsTo(rocksdb::Cleanable*)"}, {"value": 107, "name": "Reset()"}, {"value": 32, "name": "Cleanable()"}, {"value": 204, "name": "~Cleanable()"}], "name": "Cleanable::"}, {"children": [{"value": 57, "name": "OldDefaults(int, int)"}, {"value": 18, "name": "OptimizeForSmallDb()"}, {"value": 76, "name": "IncreaseParallelism(int)"}, {"value": 3770, "name": "DBOptions(rocksdb::Options const&)"}, {"value": 970, "name": "DBOptions()"}, {"value": 1695, "name": "DBOptions(rocksdb::DBOptions const&)"}, {"value": 950, "name": "~DBOptions()"}, {"value": 1320, "name": "operator=(rocksdb::DBOptions&&)"}, {"value": 1360, "name": "operator=(rocksdb::DBOptions const&)"}, {"value": 1268, "name": "Dump(rocksdb::Logger*) const"}], "name": "DBOptions::"}, {"children": [{"value": 883, "name": "Open(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBWithTTL**, int, bool)"}, {"value": 870, "name": "Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DBWithTTL**, std::vector<int, std::allocator<int> >, bool)"}], "name": "DBWithTTL::"}, {"value": 4154, "name": "DestroyDB(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Options const&)"}, {"children": [{"value": 1, "name": "~Directory()"}], "name": "Directory::"}, {"value": 141, "name": "EncodeKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const&)"}, {"children": [{"value": 324, "name": "LevelStat(rocksdb::LevelStat const&)"}], "name": "LevelStat::"}, {"children": [{"value": 288, "name": "AddLogToBuffer(unsigned long, char const*, __va_list_tag*)"}, {"value": 252, "name": "FlushBufferToLog()"}, {"value": 146, "name": "LogBuffer(rocksdb::InfoLogLevel, rocksdb::Logger*)"}], "name": "LogBuffer::"}, {"children": [{"value": 250, "name": "LookupKey(rocksdb::Slice const&, unsigned long)"}], "name": "LookupKey::"}, {"value": 122, "name": "NewMemEnv(rocksdb::Env*)"}, {"children": [{"value": 58, "name": "OpenTtlDB(rocksdb::Options const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::StackableDB**, int, bool)"}], "name": "UtilityDB::"}, {"value": 32, "name": "kPropTrue[abi:cxx11]"}, {"children": [{"value": 32, "name": "level[abi:cxx11]"}], "name": "base_"}, {"value": 32, "name": "levelstats[abi:cxx11]"}, {"children": [{"value": 1184, "name": "DIR[abi:cxx11]"}], "name": "ARCHIVAL_"}, {"children": [{"value": 32, "name": "hints"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "hint_string_"}], "name": "access_"}, {"children": [{"value": 32, "name": "snapshots[abi:cxx11]"}, {"children": [{"value": 32, "name": "versions[abi:cxx11]"}], "name": "live_"}, {"children": [{"value": 32, "name": "flushes[abi:cxx11]"}, {"value": 32, "name": "compactions[abi:cxx11]"}], "name": "running_"}, {"children": [{"value": 32, "name": "table[abi:cxx11]"}, {"children": [{"value": 32, "name": "flushed[abi:cxx11]"}], "name": "table_"}], "name": "immutable_mem_"}, {"children": [{"value": 32, "name": "prefix[abi:cxx11]"}], "name": "files_at_level_"}, {"children": [{"children": [{"value": 32, "name": "tables[abi:cxx11]"}], "name": "imm_mem_"}, {"children": [{"value": 32, "name": "table[abi:cxx11]"}], "name": "active_mem_"}], "name": "deletes_"}, {"children": [{"children": [{"value": 32, "name": "tables[abi:cxx11]"}], "name": "imm_mem_"}, {"children": [{"value": 32, "name": "table[abi:cxx11]"}], "name": "active_mem_"}], "name": "entries_"}], "name": "num_"}, {"value": 2112, "name": "TickersNameMap[abi:cxx11]"}, {"children": [{"value": 32, "name": "prefix[abi:cxx11]"}], "name": "rocksdb_"}, {"value": 88, "name": "BGThreadWrapper(void*)"}, {"value": 32, "name": "kLevelDbTFileExt[abi:cxx11]"}, {"value": 32, "name": "kRocksDbTFileExt[abi:cxx11]"}, {"value": 43, "name": "DeleteCachedBlock(rocksdb::Slice const&, void*)"}, {"value": 83, "name": "GetJemallocStatus(void*, char const*)"}, {"value": 2112, "name": "HistogramsNameMap[abi:cxx11]"}, {"children": [{"value": 32, "name": "errors[abi:cxx11]"}], "name": "background_"}, {"children": [{"children": [{"value": 32, "name": "keys[abi:cxx11]"}], "name": "num_"}, {"children": [{"value": 32, "name": "size[abi:cxx11]"}], "name": "live_data_"}, {"children": [{"value": 32, "name": "mem[abi:cxx11]"}], "name": "table_readers_"}, {"children": [{"value": 32, "name": "bytes[abi:cxx11]"}], "name": "pending_comp_"}], "name": "estimate_"}, {"children": [{"value": 32, "name": "pending[abi:cxx11]"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "style_string_"}, {"children": [{"value": 2640, "name": "properties"}], "name": "operation_"}], "name": "compaction_"}, {"children": [{"value": 648, "name": "list"}], "name": "empty_operand_"}, {"children": [{"children": [{"value": 880, "name": "table"}], "name": "state_"}, {"children": [{"value": 4840, "name": "table"}], "name": "op_stage_"}, {"children": [{"value": 1320, "name": "table"}], "name": "operation_"}], "name": "global_"}, {"value": 16, "name": "kMaxSequenceNumber"}, {"children": [{"value": 320, "name": "titles[abi:cxx11]"}], "name": "opt_section_"}, {"children": [{"value": 32, "name": "header[abi:cxx11]"}], "name": "option_file_"}, {"value": 1184, "name": "kTempFileNameSuffix[abi:cxx11]"}, {"children": [{"value": 32, "name": "tables[abi:cxx11]"}], "name": "size_all_mem_"}, {"children": [{"value": 224, "name": "info[abi:cxx11]"}], "name": "cf_options_type_"}, {"children": [{"value": 224, "name": "info[abi:cxx11]"}], "name": "db_options_type_"}, {"children": [{"value": 32, "name": "time[abi:cxx11]"}], "name": "oldest_snapshot_"}, {"children": [{"value": 32, "name": "size[abi:cxx11]"}], "name": "total_sst_files_"}, {"children": [{"value": 224, "name": "info[abi:cxx11]"}], "name": "plain_table_type_"}, {"children": [{"value": 32, "name": "number[abi:cxx11]"}], "name": "current_version_"}, {"value": 1184, "name": "kOptionsFileNamePrefix[abi:cxx11]"}, {"children": [{"value": 32, "name": "keep[abi:cxx11]"}], "name": "min_log_number_to_"}, {"children": [{"children": [{"value": 32, "name": "tables[abi:cxx11]"}], "name": "all_mem_"}, {"children": [{"value": 32, "name": "table[abi:cxx11]"}], "name": "active_mem_"}], "name": "cur_size_"}, {"children": [{"value": 32, "name": "pending[abi:cxx11]"}], "name": "mem_table_flush_"}, {"children": [{"children": [{"value": 168, "name": "options[abi:cxx11]"}], "name": "cf_"}, {"children": [{"value": 168, "name": "options[abi:cxx11]"}], "name": "db_"}, {"children": [{"value": 168, "name": "options[abi:cxx11]"}], "name": "bbt_"}], "name": "sanity_level_"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "checksum_type_string_"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "encoding_type_string_"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "info_log_level_string_"}, {"children": [{"value": 32, "name": "enabled[abi:cxx11]"}], "name": "is_file_deletions_"}, {"children": [{"value": 1320, "name": "properties"}], "name": "flush_operation_"}, {"children": [{"value": 32, "name": "properties[abi:cxx11]"}, {"children": [{"value": 32, "name": "level[abi:cxx11]"}], "name": "properties_at_"}], "name": "aggregated_table_"}, {"children": [{"children": [{"value": 224, "name": "info[abi:cxx11]"}], "name": "based_table_type_"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "base_table_index_type_string_"}], "name": "block_"}, {"children": [{"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "type_string_"}, {"children": [{"value": 32, "name": "prefix[abi:cxx11]"}], "name": "ratio_at_level_"}], "name": "compression_"}, {"children": [{"value": 224, "name": "map[abi:cxx11]"}], "name": "wal_recovery_mode_string_"}, {"value": 300, "name": "IOError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)"}, {"value": 32, "name": "cfstats[abi:cxx11]"}, {"value": 32, "name": "dbstats[abi:cxx11]"}, {"value": 32, "name": "allstats[abi:cxx11]"}, {"value": 32, "name": "sstables[abi:cxx11]"}, {"value": 1651, "name": "SaveValue(void*, char const*)"}, {"children": [{"value": 299, "name": "DebugString[abi:cxx11](bool) const"}], "name": "InternalKey::"}, {"children": [{"value": 3, "name": "NeedCompact() const"}], "name": "TableBuilder::"}, {"children": [{"value": 3, "name": "IgnoreSnapshots() const"}, {"value": 3, "name": "FilterMergeOperand(int, rocksdb::Slice const&, rocksdb::Slice const&) const"}, {"value": 86, "name": "FilterV2(int, rocksdb::Slice const&, rocksdb::CompactionFilter::ValueType, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}], "name": "CompactionFilter::"}, {"children": [{"value": 5, "name": "statistics() const"}, {"value": 5, "name": "size() const"}, {"value": 84, "name": "ToString[abi:cxx11]() const"}], "name": "FilterBlockReader::"}, {"children": [{"value": 247, "name": "DebugString[abi:cxx11](bool) const"}], "name": "ParsedInternalKey::"}, {"children": [{"value": 205, "name": "Dump(rocksdb::Logger*) const"}], "name": "BackupableDBOptions::"}, {"children": [{"value": 323, "name": "DirectRead(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}, {"value": 1341, "name": "Read(unsigned long, unsigned long, rocksdb::Slice*, char*) const"}], "name": "RandomAccessFileReader::"}, {"children": [{"value": 69, "name": "CompareKey(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&) const"}, {"value": 284, "name": "operator()(rocksdb::WriteBatchIndexEntry const*, rocksdb::WriteBatchIndexEntry const*) const"}], "name": "WriteBatchEntryComparator::"}, {"children": [{"value": 4, "name": "map"}], "name": "EscapeChar(char)::convert_"}, {"children": [{"value": 4, "name": "map"}], "name": "UnescapeChar(char)::convert_"}, {"children": [{"value": 61, "name": "lz4_corrupt_msg"}, {"children": [{"value": 63, "name": "msg"}], "name": "zlib_corrupt_"}, {"children": [{"value": 63, "name": "msg"}], "name": "zstd_corrupt_"}, {"value": 65, "name": "bzip2_corrupt_msg"}, {"value": 65, "name": "lz4hc_corrupt_msg"}, {"children": [{"value": 67, "name": "msg"}], "name": "snappy_corrupt_"}, {"children": [{"value": 67, "name": "msg"}], "name": "xpress_corrupt_"}], "name": "UncompressBlockContentsForCompressionType(char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::Slice const&, rocksdb::CompressionType, rocksdb::ImmutableCFOptions const&)::"}, {"children": [{"value": 5, "name": "suffix"}], "name": "GetInfoLogPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char*, int)::"}], "name": "rocksdb::"}, {"value": 16, "name": "kKeyLocalMax"}, {"value": 16, "name": "kKeyLocalRangeIDPrefix"}, {"children": [{"value": 14, "name": "CommitBatch(bool)"}, {"value": 14, "name": "DeleteRange(DBKey, DBKey)"}, {"value": 14, "name": "ApplyBatchRepr(DBSlice, bool)"}, {"value": 362, "name": "Get(DBKey, DBString*)"}, {"value": 14, "name": "Put(DBKey, DBSlice)"}, {"value": 14, "name": "Merge(DBKey, DBSlice)"}, {"value": 14, "name": "Delete(DBKey)"}, {"value": 107, "name": "NewIter(bool)"}, {"value": 14, "name": "GetStats(DBStatsResult*)"}, {"value": 13, "name": "BatchRepr()"}, {"value": 103, "name": "~DBSnapshot()"}], "name": "DBSnapshot::"}, {"children": [{"value": 2536, "name": "MergeValues(cockroach::storage::engine::enginepb::MVCCMetadata*, cockroach::storage::engine::enginepb::MVCCMetadata const&, bool, rocksdb::Logger*)"}, {"children": [{"value": 18, "name": "~DBComparator()"}, {"value": 1, "name": "FindShortSuccessor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 1, "name": "FindShortestSeparator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Slice const&) const"}, {"value": 8, "name": "Name() const"}, {"value": 38, "name": "Equal(rocksdb::Slice const&, rocksdb::Slice const&) const"}, {"value": 298, "name": "Compare(rocksdb::Slice const&, rocksdb::Slice const&) const"}], "name": "DBComparator::"}, {"value": 324, "name": "DBIterGetState(DBIterator*)"}, {"children": [{"value": 88, "name": "Get(DBString*)"}], "name": "IteratorGetter::"}, {"children": [{"value": 113, "name": "DeleteRangeCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 13, "name": "Put(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 13, "name": "Merge(rocksdb::Slice const&, rocksdb::Slice const&)"}, {"value": 13, "name": "Delete(rocksdb::Slice const&)"}, {"value": 18, "name": "~DBBatchInserter()"}], "name": "DBBatchInserter::"}, {"children": [{"value": 5, "name": "~DBMergeOperator()"}, {"value": 333, "name": "PartialMergeMulti(rocksdb::Slice const&, std::deque<rocksdb::Slice, std::allocator<rocksdb::Slice> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}, {"value": 8, "name": "Name() const"}, {"value": 143, "name": "MergeOne(cockroach::storage::engine::enginepb::MVCCMetadata*, rocksdb::Slice const&, bool, rocksdb::Logger*) const"}, {"value": 417, "name": "FullMerge(rocksdb::Slice const&, rocksdb::Slice const*, std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, rocksdb::Logger*) const"}], "name": "DBMergeOperator::"}, {"value": 619, "name": "ProcessDeltaKey((anonymous namespace)::Getter*, rocksdb::WBWIIterator*, rocksdb::Slice, DBString*)"}, {"children": [{"value": 68, "name": "SeekToLast()"}, {"value": 43, "name": "SeekToFirst()"}, {"value": 382, "name": "ProcessDelta()"}, {"value": 587, "name": "UpdateCurrent(bool)"}, {"value": 245, "name": "MaybeSavePrefixStart()"}, {"value": 438, "name": "Next()"}, {"value": 181, "name": "Prev()"}, {"value": 287, "name": "Seek(rocksdb::Slice const&)"}, {"value": 176, "name": "~BaseDeltaIterator()"}, {"value": 29, "name": "key() const"}, {"value": 35, "name": "Valid() const"}, {"value": 25, "name": "value() const"}, {"value": 133, "name": "status() const"}], "name": "BaseDeltaIterator::"}, {"children": [{"value": 5, "name": "~DBPrefixExtractor()"}, {"value": 8, "name": "Name() const"}, {"value": 38, "name": "InRange(rocksdb::Slice const&) const"}, {"value": 3, "name": "InDomain(rocksdb::Slice const&) const"}, {"value": 84, "name": "Transform(rocksdb::Slice const&) const"}], "name": "DBPrefixExtractor::"}, {"children": [{"value": 5, "name": "~CockroachKeyFormatter()"}, {"value": 386, "name": "Format[abi:cxx11](rocksdb::Slice const&) const"}], "name": "CockroachKeyFormatter::"}, {"value": 10, "name": "TimeSeriesSampleOrdering(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)"}, {"children": [{"value": 331, "name": "Get(DBString*)"}], "name": "DBGetter::"}, {"children": [{"value": 240, "name": "Logv(char const*, __va_list_tag*)"}, {"value": 18, "name": "~DBLogger()"}], "name": "DBLogger::"}, {"value": 8, "name": "kComparator"}], "name": "(anonymous namespace)::"}, {"children": [{"value": 6, "name": "OnFlushCompleted(rocksdb::DB*, rocksdb::FlushJobInfo const&)"}, {"value": 6, "name": "OnCompactionCompleted(rocksdb::DB*, rocksdb::CompactionJobInfo const&)"}, {"value": 44, "name": "DBEventListener()"}, {"value": 5, "name": "~DBEventListener()"}, {"value": 5, "name": "GetFlushes() const"}, {"value": 5, "name": "GetCompactions() const"}], "name": "DBEventListener::"}, {"children": [{"value": 142, "name": "DBSstFileWriter(rocksdb::Options*)"}, {"value": 165, "name": "~DBSstFileWriter()"}], "name": "DBSstFileWriter::"}, {"children": [{"value": 225, "name": "CommitBatch(bool)"}, {"value": 245, "name": "DeleteRange(DBKey, DBKey)"}, {"value": 526, "name": "ApplyBatchRepr(DBSlice, bool)"}, {"value": 14, "name": "Get(DBKey, DBString*)"}, {"value": 170, "name": "Put(DBKey, DBSlice)"}, {"value": 170, "name": "Merge(DBKey, DBSlice)"}, {"value": 132, "name": "Delete(DBKey)"}, {"value": 3, "name": "NewIter(bool)"}, {"value": 14, "name": "GetStats(DBStatsResult*)"}, {"value": 8, "name": "BatchRepr()"}, {"value": 80, "name": "DBWriteOnlyBatch(DBEngine*)"}, {"value": 59, "name": "~DBWriteOnlyBatch()"}], "name": "DBWriteOnlyBatch::"}, {"children": [{"value": 250, "name": "AddUserKey(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::EntryType, unsigned long, unsigned long)"}, {"value": 544, "name": "Finish(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)"}, {"value": 120, "name": "~TimeBoundTblPropCollector()"}, {"value": 35, "name": "GetReadableProperties[abi:cxx11]() const"}, {"value": 8, "name": "Name() const"}], "name": "TimeBoundTblPropCollector::"}, {"children": [{"value": 93, "name": "CreateTablePropertiesCollector(rocksdb::TablePropertiesCollectorFactory::Context)"}, {"value": 5, "name": "~TimeBoundTblPropCollectorFactory()"}, {"value": 8, "name": "Name() const"}], "name": "TimeBoundTblPropCollectorFactory::"}, {"children": [{"value": 14, "name": "CommitBatch(bool)"}, {"value": 456, "name": "DeleteRange(DBKey, DBKey)"}, {"value": 467, "name": "ApplyBatchRepr(DBSlice, bool)"}, {"value": 362, "name": "Get(DBKey, DBString*)"}, {"value": 344, "name": "Put(DBKey, DBSlice)"}, {"value": 344, "name": "Merge(DBKey, DBSlice)"}, {"value": 316, "name": "Delete(DBKey)"}, {"value": 107, "name": "NewIter(bool)"}, {"value": 742, "name": "GetStats(DBStatsResult*)"}, {"value": 13, "name": "BatchRepr()"}, {"value": 771, "name": "~DBImpl()"}], "name": "DBImpl::"}, {"children": [{"children": [{"value": 132, "name": "LogSilencer()"}, {"value": 132, "name": "~LogSilencer()"}], "name": "LogSilencer::"}, {"children": [{"value": 719, "name": "ParseFromArray(void const*, int)"}, {"value": 770, "name": "ParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 364, "name": "MergeFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 422, "name": "ParseFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 305, "name": "ParsePartialFromArray(void const*, int)"}, {"value": 356, "name": "ParsePartialFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 228, "name": "ParseFromZeroCopyStream(google::protobuf::io::ZeroCopyInputStream*)"}, {"value": 95, "name": "ParsePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 315, "name": "ParseFromBoundedZeroCopyStream(google::protobuf::io::ZeroCopyInputStream*, int)"}, {"value": 228, "name": "ParsePartialFromZeroCopyStream(google::protobuf::io::ZeroCopyInputStream*)"}, {"value": 315, "name": "ParsePartialFromBoundedZeroCopyStream(google::protobuf::io::ZeroCopyInputStream*, int)"}, {"value": 87, "name": "~MessageLite()"}, {"value": 476, "name": "AppendToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 482, "name": "SerializeToArray(void*, int) const"}, {"value": 175, "name": "SerializeAsString[abi:cxx11]() const"}, {"value": 60, "name": "SerializeToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 6, "name": "GetMaybeArenaPointer() const"}, {"value": 475, "name": "AppendPartialToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 476, "name": "SerializeToCodedStream(google::protobuf::io::CodedOutputStream*) const"}, {"value": 195, "name": "SerializePartialToArray(void*, int) const"}, {"value": 175, "name": "SerializePartialAsString[abi:cxx11]() const"}, {"value": 60, "name": "SerializePartialToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 110, "name": "InitializationErrorString[abi:cxx11]() const"}, {"value": 134, "name": "SerializeToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream*) const"}, {"value": 638, "name": "SerializePartialToCodedStream(google::protobuf::io::CodedOutputStream*) const"}, {"value": 20, "name": "SerializeWithCachedSizesToArray(unsigned char*) const"}, {"value": 134, "name": "SerializePartialToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream*) const"}, {"value": 564, "name": "InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const"}, {"value": 75, "name": "New(google::protobuf::Arena*) const"}, {"value": 124, "name": "ByteSize() const"}, {"value": 3, "name": "GetArena() const"}], "name": "MessageLite::"}, {"children": [{"value": 130, "name": "ConsumeFromEnd(google::protobuf::StringPiece)"}, {"value": 243, "name": "LogFatalSizeTooBig(unsigned long, char const*)"}, {"value": 67, "name": "CheckedSsizeTFromSizeT(unsigned long)"}, {"value": 8, "name": "npos"}, {"value": 140, "name": "Consume(google::protobuf::StringPiece)"}, {"value": 1008, "name": "StringPiece(google::protobuf::StringPiece, long)"}, {"value": 1558, "name": "StringPiece(google::protobuf::StringPiece, long, long)"}, {"value": 81, "name": "StringPiece(char const*)"}, {"value": 101, "name": "StringPiece(char const*, long)"}, {"children": [{"value": 92, "name": "with(google::protobuf::StringPiece) const"}], "name": "starts_"}, {"value": 49, "name": "CopyToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"children": [{"children": [{"value": 361, "name": "of(google::protobuf::StringPiece, unsigned long) const"}, {"value": 47, "name": "of(char, unsigned long) const"}, {"children": [{"value": 350, "name": "of(google::protobuf::StringPiece, unsigned long) const"}, {"value": 181, "name": "of(char, unsigned long) const"}], "name": "not_"}], "name": "last_"}, {"children": [{"value": 334, "name": "of(google::protobuf::StringPiece, unsigned long) const"}, {"value": 47, "name": "of(char, unsigned long) const"}, {"children": [{"value": 347, "name": "of(google::protobuf::StringPiece, unsigned long) const"}, {"value": 149, "name": "of(char, unsigned long) const"}], "name": "not_"}], "name": "first_"}], "name": "find_"}, {"value": 49, "name": "AppendToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const"}, {"value": 107, "name": "copy(char*, unsigned long, unsigned long) const"}, {"value": 17, "name": "data() const"}, {"value": 261, "name": "find(google::protobuf::StringPiece, unsigned long) const"}, {"value": 175, "name": "find(char, unsigned long) const"}, {"value": 18, "name": "size() const"}, {"value": 261, "name": "rfind(google::protobuf::StringPiece, unsigned long) const"}, {"value": 181, "name": "rfind(char, unsigned long) const"}, {"value": 18, "name": "length() const"}, {"value": 139, "name": "substr(unsigned long, unsigned long) const"}, {"value": 176, "name": "ToString[abi:cxx11]() const"}, {"value": 79, "name": "contains(google::protobuf::StringPiece) const"}, {"children": [{"value": 108, "name": "with(google::protobuf::StringPiece) const"}], "name": "ends_"}], "name": "StringPiece::"}, {"value": 16, "name": "kuint128max"}, {"value": 492, "name": "StringPrintf[abi:cxx11](char const*, ...)"}, {"value": 17, "name": "Uint128Low64(google::protobuf::uint128 const&)"}, {"children": [{"value": 22, "name": "SchedYield()"}, {"value": 1055, "name": "ByteSizeConsistencyError(unsigned long, unsigned long, unsigned long, google::protobuf::MessageLite const&)"}, {"value": 428, "name": "InitializationErrorMessage[abi:cxx11](char const*, google::protobuf::MessageLite const&)"}], "name": "(anonymous namespace)::"}, {"children": [{"value": 133, "name": "InternalDeallocate(google::protobuf::RepeatedField<int>::Rep*, int)"}, {"value": 92, "name": "Add(int const&)"}, {"value": 1486, "name": "Reserve(int)"}, {"value": 52, "name": "CopyArray(int*, int const*, int)"}, {"value": 49, "name": "MoveArray(int*, int*, int)"}, {"value": 61, "name": "GetArenaNoVirtual() const"}, {"value": 505, "name": "Get(int) const"}, {"value": 16, "name": "size() const"}], "name": "RepeatedField<int>::"}, {"value": 364, "name": "SStringPrintf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, ...)"}, {"value": 100, "name": "SetLogHandler(void (*)(google::protobuf::LogLevel, char const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&))"}, {"value": 351, "name": "StringAppendF(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, ...)"}, {"value": 436, "name": "StringAppendV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, __va_list_tag*)"}, {"value": 18, "name": "Uint128High64(google::protobuf::uint128 const&)"}, {"children": [{"value": 121, "name": "FatalException(char const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 216, "name": "~FatalException()"}, {"value": 58, "name": "what() const"}], "name": "FatalException::"}, {"value": 145, "name": "GoogleOnceInit(long*, void (*)())"}, {"children": [{"value": 1, "name": "~ResultCallback()"}], "name": "ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>::"}, {"children": [{"children": [{"value": 83, "name": "array(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}], "name": "as_"}, {"children": [{"value": 256, "name": "block"}], "name": "printf_empty_"}], "name": "string_"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaIdent>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::ReplicaIdent>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::Span>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::Span>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::roachpb::Tier>*)"}], "name": "RepeatedPtrField<cockroach::roachpb::Tier>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>*)"}], "name": "RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>::"}, {"children": [{"value": 168, "name": "UnsafeArenaSwap(google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)"}], "name": "RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::"}, {"value": 164, "name": "GoogleOnceInitImpl(long*, google::protobuf::Closure*)"}, {"value": 1329, "name": "StringPrintfVector(char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 289, "name": "ShutdownProtobufLibrary()"}, {"value": 4, "name": "kStringPrintfVectorMaxArgs"}, {"value": 35, "name": "STLStringResizeUninitialized(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long)"}, {"children": [{"children": [{"value": 104, "name": "NextNonEmpty(google::protobuf::io::ZeroCopyInputStream*, void const**, int*)"}], "name": "(anonymous namespace)::"}, {"children": [{"value": 55, "name": "data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}], "name": "as_string_"}, {"children": [{"value": 156, "name": "Next(void const**, int*)"}, {"value": 312, "name": "Skip(int)"}, {"value": 749, "name": "BackUp(int)"}, {"value": 282, "name": "ArrayInputStream(void const*, int, int)"}, {"value": 131, "name": "~ArrayInputStream()"}, {"value": 18, "name": "ByteCount() const"}], "name": "ArrayInputStream::"}, {"children": [{"value": 31, "name": "LastTagWas(unsigned int)"}, {"value": 520, "name": "ReadString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)"}, {"value": 183, "name": "ReadTagSlow()"}, {"value": 177, "name": "ReadVarint32(unsigned int*)"}, {"value": 164, "name": "ReadVarint64(unsigned long*)"}, {"value": 1726, "name": "ReadTagFallback(unsigned int)"}, {"value": 59, "name": "ReadVarint32Slow(unsigned int*)"}, {"value": 254, "name": "ReadVarint64Slow(unsigned long*)"}, {"value": 127, "name": "ReadLittleEndian32(unsigned int*)"}, {"value": 129, "name": "ReadLittleEndian64(unsigned long*)"}, {"value": 339, "name": "ReadStringFallback(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)"}, {"value": 107, "name": "SetTotalBytesLimit(int, int)"}, {"value": 1672, "name": "ReadVarint32Fallback(unsigned int)"}, {"value": 1011, "name": "ReadVarint64Fallback()"}, {"value": 22, "name": "ConsumedEntireMessage()"}, {"value": 146, "name": "RecomputeBufferLimits()"}, {"value": 117, "name": "GetDirectBufferPointer(void const**, int*)"}, {"value": 83, "name": "ReadLengthAndPushLimit()"}, {"value": 43, "name": "DecrementRecursionDepth()"}, {"value": 36, "name": "IncrementRecursionDepth()"}, {"value": 82, "name": "ReadVarintSizeAsIntSlow()"}, {"children": [{"value": 4, "name": "limit_"}], "name": "default_recursion_"}, {"value": 218, "name": "PrintTotalBytesLimitError()"}, {"value": 152, "name": "ReadLittleEndian32Fallback(unsigned int*)"}, {"value": 152, "name": "ReadLittleEndian64Fallback(unsigned long*)"}, {"value": 37, "name": "ReadLittleEndian32FromArray(unsigned char const*, unsigned int*)"}, {"value": 39, "name": "ReadLittleEndian64FromArray(unsigned char const*, unsigned long*)"}, {"value": 934, "name": "ReadVarintSizeAsIntFallback()"}, {"value": 122, "name": "BackUpInputToCurrentPosition()"}, {"value": 287, "name": "DecrementRecursionDepthAndPopLimit(int)"}, {"value": 65, "name": "IncrementRecursionDepthAndPushLimit(int)"}, {"value": 59, "name": "CheckEntireMessageConsumedAndPopLimit(int)"}, {"value": 323, "name": "Skip(int)"}, {"value": 32, "name": "Advance(int)"}, {"value": 212, "name": "ReadRaw(void*, int)"}, {"value": 1095, "name": "Refresh()"}, {"value": 48, "name": "PopLimit(int)"}, {"value": 145, "name": "PushLimit(int)"}, {"value": 142, "name": "CodedInputStream(unsigned char const*, int)"}, {"value": 153, "name": "CodedInputStream(google::protobuf::io::ZeroCopyInputStream*)"}, {"value": 466, "name": "~CodedInputStream()"}, {"value": 28, "name": "BufferSize() const"}, {"value": 79, "name": "BytesUntilLimit() const"}, {"value": 51, "name": "CurrentPosition() const"}, {"value": 80, "name": "BytesUntilTotalBytesLimit() const"}], "name": "CodedInputStream::"}, {"children": [{"value": 156, "name": "Next(void**, int*)"}, {"value": 749, "name": "BackUp(int)"}, {"value": 282, "name": "ArrayOutputStream(void*, int, int)"}, {"value": 131, "name": "~ArrayOutputStream()"}, {"value": 18, "name": "ByteCount() const"}], "name": "ArrayOutputStream::"}, {"children": [{"value": 72, "name": "WriteString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 59, "name": "VarintSize32(unsigned int)"}, {"value": 50, "name": "VarintSize64(unsigned long)"}, {"value": 112, "name": "WriteVarint32(unsigned int)"}, {"value": 115, "name": "WriteVarint64(unsigned long)"}, {"value": 83, "name": "EnableAliasing(bool)"}, {"value": 155, "name": "WriteAliasedRaw(void const*, int)"}, {"value": 56, "name": "WriteRawToArray(void const*, int, unsigned char*)"}, {"value": 61, "name": "WriteStringToArray(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned char*)"}, {"value": 152, "name": "WriteLittleEndian32(unsigned int)"}, {"value": 153, "name": "WriteLittleEndian64(unsigned long)"}, {"value": 243, "name": "VarintSize32Fallback(unsigned int)"}, {"value": 80, "name": "WriteRawMaybeAliased(void const*, int)"}, {"value": 90, "name": "WriteVarint32ToArray(unsigned int, unsigned char*)"}, {"value": 95, "name": "WriteVarint64ToArray(unsigned long, unsigned char*)"}, {"value": 90, "name": "WriteVarint32SlowPath(unsigned int)"}, {"value": 90, "name": "WriteVarint64SlowPath(unsigned long)"}, {"value": 106, "name": "GetDirectBufferPointer(void**, int*)"}, {"value": 56, "name": "VarintSize32SignExtended(int)"}, {"value": 34, "name": "WriteVarint32SignExtended(int)"}, {"value": 33, "name": "WriteLittleEndian32ToArray(unsigned int, unsigned char*)"}, {"value": 36, "name": "WriteLittleEndian64ToArray(unsigned long, unsigned char*)"}, {"value": 282, "name": "WriteStringWithSizeToArray(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned char*)"}, {"value": 34, "name": "SetSerializationDeterministic(bool)"}, {"value": 89, "name": "GetDirectBufferForNBytesAndAdvance(int)"}, {"children": [{"value": 1, "name": "deterministic_"}], "name": "default_serialization_"}, {"value": 138, "name": "Skip(int)"}, {"value": 91, "name": "Trim()"}, {"value": 45, "name": "Advance(int)"}, {"value": 130, "name": "Refresh()"}, {"value": 162, "name": "WriteRaw(void const*, int)"}, {"value": 33, "name": "WriteTag(unsigned int)"}, {"value": 180, "name": "CodedOutputStream(google::protobuf::io::ZeroCopyOutputStream*)"}, {"value": 216, "name": "CodedOutputStream(google::protobuf::io::ZeroCopyOutputStream*, bool)"}, {"value": 54, "name": "~CodedOutputStream()"}, {"value": 61, "name": "IsSerializationDeterministic() const"}, {"value": 22, "name": "HadError() const"}, {"value": 20, "name": "ByteCount() const"}], "name": "CodedOutputStream::"}, {"children": [{"value": 254, "name": "Skip(int)"}, {"value": 97, "name": "~CopyingInputStream()"}], "name": "CopyingInputStream::"}, {"children": [{"value": 735, "name": "Next(void**, int*)"}, {"value": 776, "name": "BackUp(int)"}, {"value": 26, "name": "SetString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 134, "name": "StringOutputStream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 131, "name": "~StringOutputStream()"}, {"value": 249, "name": "ByteCount() const"}], "name": "StringOutputStream::"}, {"children": [{"value": 97, "name": "~CopyingOutputStream()"}], "name": "CopyingOutputStream::"}, {"children": [{"value": 31, "name": "ZeroCopyInputStream()"}, {"value": 97, "name": "~ZeroCopyInputStream()"}], "name": "ZeroCopyInputStream::"}, {"children": [{"value": 27, "name": "data(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}], "name": "mutable_string_"}, {"children": [{"value": 176, "name": "WriteAliasedRaw(void const*, int)"}, {"value": 31, "name": "ZeroCopyOutputStream()"}, {"value": 97, "name": "~ZeroCopyOutputStream()"}, {"value": 20, "name": "AllowsAliasing() const"}], "name": "ZeroCopyOutputStream::"}, {"children": [{"value": 122, "name": "Next(void**, int*)"}, {"value": 396, "name": "LazyStringOutputStream(google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>*)"}, {"value": 293, "name": "~LazyStringOutputStream()"}, {"value": 74, "name": "ByteCount() const"}], "name": "LazyStringOutputStream::"}, {"children": [{"value": 261, "name": "FreeBuffer()"}, {"value": 106, "name": "AllocateBufferIfNeeded()"}, {"value": 317, "name": "Next(void const**, int*)"}, {"value": 406, "name": "Skip(int)"}, {"value": 828, "name": "BackUp(int)"}, {"value": 456, "name": "CopyingInputStreamAdaptor(google::protobuf::io::CopyingInputStream*, int)"}, {"value": 535, "name": "~CopyingInputStreamAdaptor()"}, {"value": 25, "name": "ByteCount() const"}], "name": "CopyingInputStreamAdaptor::"}, {"children": [{"value": 42, "name": "FreeBuffer()"}, {"value": 196, "name": "WriteBuffer()"}, {"value": 113, "name": "AllocateBufferIfNeeded()"}, {"value": 147, "name": "Next(void**, int*)"}, {"value": 32, "name": "Flush()"}, {"value": 782, "name": "BackUp(int)"}, {"value": 442, "name": "CopyingOutputStreamAdaptor(google::protobuf::io::CopyingOutputStream*, int)"}, {"value": 547, "name": "~CopyingOutputStreamAdaptor()"}, {"value": 25, "name": "ByteCount() const"}], "name": "CopyingOutputStreamAdaptor::"}], "name": "io::"}, {"children": [{"value": 23, "name": "Log2FloorNonZero(unsigned int)"}, {"value": 29, "name": "Log2FloorNonZero64(unsigned long)"}], "name": "Bits::"}, {"children": [{"children": [{"value": 1698, "name": "CodeEnumToString[abi:cxx11](google::protobuf::util::error::Code)"}], "name": "error::"}, {"children": [{"value": 40, "name": "OK"}, {"value": 40, "name": "UNKNOWN"}, {"value": 40, "name": "CANCELLED"}, {"value": 462, "name": "Status(google::protobuf::util::error::Code, google::protobuf::StringPiece)"}, {"value": 124, "name": "Status(google::protobuf::util::Status const&)"}, {"value": 74, "name": "Status()"}, {"value": 31, "name": "~Status()"}, {"value": 72, "name": "operator=(google::protobuf::util::Status const&)"}, {"value": 379, "name": "ToString[abi:cxx11]() const"}, {"value": 89, "name": "operator==(google::protobuf::util::Status const&) const"}], "name": "Status::"}, {"value": 131, "name": "operator<<(std::basic_ostream<char, std::char_traits<char> >&, google::protobuf::util::Status const&)"}], "name": "util::"}, {"children": [{"value": 303, "name": "FreeBlocks()"}, {"value": 132, "name": "AddListNode(void*, void (*)(void*))"}, {"value": 102, "name": "CleanupList()"}, {"children": [{"value": 22, "name": "cache()"}, {"value": 16, "name": "cache_"}], "name": "thread_"}, {"value": 84, "name": "ResetInternal()"}, {"value": 53, "name": "AllocFromBlock(google::protobuf::Arena::Block*, unsigned long)"}, {"value": 355, "name": "AllocateAligned(std::type_info const*, unsigned long)"}, {"value": 140, "name": "AddBlockInternal(google::protobuf::Arena::Block*)"}, {"value": 114, "name": "cockroach::roachpb::ReplicaIdent* CreateMaybeMessage<cockroach::roachpb::ReplicaIdent>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::roachpb::ObservedTimestamp* CreateMaybeMessage<cockroach::roachpb::ObservedTimestamp>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::roachpb::ReplicaDescriptor* CreateMaybeMessage<cockroach::roachpb::ReplicaDescriptor>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::roachpb::InternalTimeSeriesSample* CreateMaybeMessage<cockroach::roachpb::InternalTimeSeriesSample>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::roachpb::Span* CreateMaybeMessage<cockroach::roachpb::Span>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::roachpb::Tier* CreateMaybeMessage<cockroach::roachpb::Tier>(google::protobuf::Arena*, ...)"}, {"value": 114, "name": "cockroach::storage::engine::enginepb::SSTUserProperties* CreateMaybeMessage<cockroach::storage::engine::enginepb::SSTUserProperties>(google::protobuf::Arena*, ...)"}, {"value": 74, "name": "SetThreadCacheBlock(google::protobuf::Arena::Block*)"}, {"children": [{"value": 8, "name": "generator_"}], "name": "lifecycle_id_"}, {"value": 18, "name": "void Own<cockroach::util::UnresolvedAddr>(cockroach::util::UnresolvedAddr*)"}, {"value": 18, "name": "void Own<cockroach::util::hlc::Timestamp>(cockroach::util::hlc::Timestamp*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Attributes>(cockroach::roachpb::Attributes*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::StoreIdent>(cockroach::roachpb::StoreIdent*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Transaction>(cockroach::roachpb::Transaction*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::MergeTrigger>(cockroach::roachpb::MergeTrigger*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ReplicaIdent>(cockroach::roachpb::ReplicaIdent*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::SplitTrigger>(cockroach::roachpb::SplitTrigger*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::StoreCapacity>(cockroach::roachpb::StoreCapacity*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::NodeDescriptor>(cockroach::roachpb::NodeDescriptor*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::AbortCacheEntry>(cockroach::roachpb::AbortCacheEntry*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::RangeDescriptor>(cockroach::roachpb::RangeDescriptor*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::StoreDescriptor>(cockroach::roachpb::StoreDescriptor*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ObservedTimestamp>(cockroach::roachpb::ObservedTimestamp*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ReplicaDescriptor>(cockroach::roachpb::ReplicaDescriptor*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ReplicationTarget>(cockroach::roachpb::ReplicationTarget*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::StoreDeadReplicas>(cockroach::roachpb::StoreDeadReplicas*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ModifiedSpanTrigger>(cockroach::roachpb::ModifiedSpanTrigger*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::ChangeReplicasTrigger>(cockroach::roachpb::ChangeReplicasTrigger*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::InternalCommitTrigger>(cockroach::roachpb::InternalCommitTrigger*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::InternalTimeSeriesData>(cockroach::roachpb::InternalTimeSeriesData*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::InternalTimeSeriesSample>(cockroach::roachpb::InternalTimeSeriesSample*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Span>(cockroach::roachpb::Span*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Tier>(cockroach::roachpb::Tier*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Lease>(cockroach::roachpb::Lease*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Value>(cockroach::roachpb::Value*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Intent>(cockroach::roachpb::Intent*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::KeyValue>(cockroach::roachpb::KeyValue*)"}, {"value": 18, "name": "void Own<cockroach::roachpb::Locality>(cockroach::roachpb::Locality*)"}, {"value": 18, "name": "void Own<cockroach::storage::engine::enginepb::MVCCMetadata>(cockroach::storage::engine::enginepb::MVCCMetadata*)"}, {"value": 18, "name": "void Own<cockroach::storage::engine::enginepb::SSTUserProperties>(cockroach::storage::engine::enginepb::SSTUserProperties*)"}, {"value": 18, "name": "void Own<cockroach::storage::engine::enginepb::SSTUserPropertiesCollection>(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection*)"}, {"value": 18, "name": "void Own<cockroach::storage::engine::enginepb::TxnMeta>(cockroach::storage::engine::enginepb::TxnMeta*)"}, {"value": 18, "name": "void Own<cockroach::storage::engine::enginepb::MVCCStats>(cockroach::storage::engine::enginepb::MVCCStats*)"}, {"value": 83, "name": "void Own<google::protobuf::MessageLite>(google::protobuf::MessageLite*)"}, {"value": 511, "name": "Init()"}, {"value": 56, "name": "Reset()"}, {"value": 137, "name": "AddBlock(google::protobuf::Arena::Block*)"}, {"value": 484, "name": "NewBlock(void*, google::protobuf::Arena::Block*, unsigned long, unsigned long, unsigned long)"}, {"value": 114, "name": "FindBlock(void*)"}, {"value": 238, "name": "SlowAlloc(unsigned long)"}, {"value": 344, "name": "~Arena()"}, {"value": 73, "name": "SpaceAllocated() const"}, {"value": 64, "name": "SpaceAllocatedAndUsed() const"}, {"value": 95, "name": "SpaceUsed() const"}], "name": "Arena::"}, {"value": 75, "name": "ghtonl(unsigned int)"}, {"children": [{"value": 31, "name": "Closure()"}, {"value": 97, "name": "~Closure()"}], "name": "Closure::"}, {"children": [{"value": 1016, "name": "DivModImpl(google::protobuf::uint128, google::protobuf::uint128, google::protobuf::uint128*, google::protobuf::uint128*)"}, {"value": 45, "name": "uint128(int)"}, {"value": 33, "name": "uint128(unsigned long)"}, {"value": 29, "name": "uint128()"}, {"value": 146, "name": "operator/=(google::protobuf::uint128 const&)"}, {"value": 193, "name": "operator<<=(int)"}, {"value": 96, "name": "operator-=(google::protobuf::uint128 const&)"}, {"value": 50, "name": "operator|=(google::protobuf::uint128 const&)"}, {"value": 146, "name": "operator%=(google::protobuf::uint128 const&)"}, {"value": 195, "name": "operator>>=(int)"}], "name": "uint128::"}, {"children": [{"children": [{"value": 250, "name": "Finish()"}, {"value": 126, "name": "LogMessage(google::protobuf::LogLevel, char const*, int)"}, {"value": 62, "name": "~LogMessage()"}, {"value": 60, "name": "operator<<(char const*)"}, {"value": 147, "name": "operator<<(void*)"}, {"value": 142, "name": "operator<<(google::protobuf::StringPiece const&)"}, {"value": 142, "name": "operator<<(google::protobuf::util::Status const&)"}, {"value": 309, "name": "operator<<(google::protobuf::uint128 const&)"}, {"value": 60, "name": "operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 134, "name": "operator<<(char)"}, {"value": 132, "name": "operator<<(double)"}, {"value": 133, "name": "operator<<(int)"}, {"value": 133, "name": "operator<<(unsigned int)"}, {"value": 147, "name": "operator<<(long)"}, {"value": 147, "name": "operator<<(unsigned long)"}, {"value": 147, "name": "operator<<(long long)"}, {"value": 147, "name": "operator<<(unsigned long long)"}], "name": "LogMessage::"}, {"value": 119, "name": "OnShutdown(void (*)())"}, {"children": [{"children": [{"value": 25, "name": "ptr(google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>*)"}], "name": "scoped_"}, {"value": 52, "name": "~scoped_ptr()"}, {"value": 88, "name": "operator->() const"}], "name": "scoped_ptr<google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::"}, {"children": [{"value": 31, "name": "operator=(google::protobuf::internal::LogMessage&)"}], "name": "LogFinisher::"}, {"children": [{"value": 25, "name": "Load(long const volatile*)"}, {"value": 68, "name": "CompareAndSwap(long volatile*, long, long)"}], "name": "Acquire_"}, {"value": 192, "name": "google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>* CheckNotNull<google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >(char const*, int, char const*, google::protobuf::ResultCallback<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>*)"}, {"children": [{"value": 36, "name": "SkipMessage(google::protobuf::io::CodedInputStream*)"}, {"value": 16, "name": "SkipUnknownEnum(int, int)"}, {"value": 42, "name": "SkipField(google::protobuf::io::CodedInputStream*, unsigned int)"}, {"value": 87, "name": "~FieldSkipper()"}], "name": "FieldSkipper::"}, {"children": [{"children": [{"value": 18, "name": "InitDetector()"}], "name": "InitDetector::"}, {"children": [{"value": 1, "name": "detector"}], "name": "init_"}, {"children": [{"value": 1, "name": "initialized_"}], "name": "module_"}, {"children": [{"value": 23, "name": "AtomicOpsx86Initializer()"}], "name": "AtomicOpsx86Initializer::"}, {"children": [{"value": 257, "name": "Internalx86CPUFeaturesInit()"}], "name": "AtomicOps_"}, {"children": [{"value": 1, "name": "initer"}], "name": "g_"}], "name": "(anonymous namespace)::"}, {"children": [{"value": 84, "name": "reset(unsigned char*)"}, {"children": [{"value": 25, "name": "array(unsigned char*)"}], "name": "scoped_"}, {"value": 48, "name": "~scoped_array()"}, {"value": 17, "name": "get() const"}, {"value": 33, "name": "operator==(unsigned char*) const"}], "name": "scoped_array<unsigned char>::"}, {"children": [{"value": 61, "name": "operator()(int*, int const*, int)"}], "name": "ElementCopier<int, true>::"}, {"children": [{"value": 25, "name": "Store(long volatile*, long)"}], "name": "Release_"}, {"value": 1008, "name": "VerifyVersion(int, int, char const*)"}, {"value": 388, "name": "VersionString[abi:cxx11](int)"}, {"children": [{"value": 19, "name": "int cast<int, unsigned long>(unsigned long const&)"}], "name": "implicit_"}, {"children": [{"value": 85, "name": "SetNoArena(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 112, "name": "AssignWithDefault(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, google::protobuf::internal::ArenaStringPtr)"}, {"value": 290, "name": "CreateInstanceNoArena(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)"}, {"value": 14, "name": "UnsafeRawStringPointer[abi:cxx11]()"}, {"value": 17, "name": "GetNoArena[abi:cxx11]() const"}], "name": "ArenaStringPtr::"}, {"value": 36, "name": "GetEmptyString[abi:cxx11]()"}, {"children": [{"value": 17, "name": "Load(long const volatile*)"}, {"value": 25, "name": "Store(long volatile*, long)"}, {"value": 33, "name": "AtomicExchange(long volatile*, long)"}, {"value": 46, "name": "CompareAndSwap(long volatile*, long, long)"}, {"value": 50, "name": "AtomicIncrement(long volatile*, long)"}], "name": "NoBarrier_"}, {"value": 20, "name": "NullLogHandler(google::protobuf::LogLevel, char const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 38, "name": "GetNext()"}, {"value": 21, "name": "SequenceNumber()"}], "name": "SequenceNumber::"}, {"children": [{"value": 102, "name": "SInt32Size(google::protobuf::RepeatedField<int> const&)"}, {"value": 32, "name": "SInt32Size(int)"}, {"value": 102, "name": "UInt32Size(google::protobuf::RepeatedField<unsigned int> const&)"}, {"value": 25, "name": "UInt32Size(unsigned int)"}, {"value": 316, "name": "WriteBytes(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 59, "name": "WriteFloat(int, float, google::protobuf::io::CodedOutputStream*)"}, {"value": 81, "name": "WriteGroup(int, google::protobuf::MessageLite const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 52, "name": "WriteInt32(int, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 54, "name": "WriteInt64(int, long, google::protobuf::io::CodedOutputStream*)"}, {"value": 24, "name": "EncodeFloat(float)"}, {"value": 266, "name": "SkipMessage(google::protobuf::io::CodedInputStream*)"}, {"value": 286, "name": "SkipMessage(google::protobuf::io::CodedInputStream*, google::protobuf::io::CodedOutputStream*)"}, {"value": 59, "name": "WriteDouble(int, double, google::protobuf::io::CodedOutputStream*)"}, {"value": 52, "name": "WriteSInt32(int, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 54, "name": "WriteSInt64(int, long, google::protobuf::io::CodedOutputStream*)"}, {"value": 316, "name": "WriteString(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 52, "name": "WriteUInt32(int, unsigned int, google::protobuf::io::CodedOutputStream*)"}, {"value": 54, "name": "WriteUInt64(int, unsigned long, google::protobuf::io::CodedOutputStream*)"}, {"value": 25, "name": "EncodeDouble(double)"}, {"value": 55, "name": "WriteFixed32(int, unsigned int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "WriteFixed64(int, unsigned long, google::protobuf::io::CodedOutputStream*)"}, {"value": 92, "name": "WriteMessage(int, google::protobuf::MessageLite const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 76, "name": "bool ReadPrimitive<int, (google::protobuf::internal::WireFormatLite::FieldType)14>(google::protobuf::io::CodedInputStream*, int*)"}, {"value": 55, "name": "WriteSFixed32(int, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "WriteSFixed64(int, long, google::protobuf::io::CodedOutputStream*)"}, {"value": 17, "name": "GetTagWireType(unsigned int)"}, {"value": 41, "name": "WriteBoolArray(bool const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 59, "name": "WriteBoolNoTag(bool, google::protobuf::io::CodedOutputStream*)"}, {"value": 33, "name": "WriteEnumNoTag(int, google::protobuf::io::CodedOutputStream*)"}, {"value": 25, "name": "ZigZagEncode32(int)"}, {"value": 32, "name": "ZigZagEncode64(long)"}, {"value": 41, "name": "WriteFloatArray(float const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 52, "name": "WriteFloatNoTag(float, google::protobuf::io::CodedOutputStream*)"}, {"value": 33, "name": "WriteInt32NoTag(int, google::protobuf::io::CodedOutputStream*)"}, {"value": 35, "name": "WriteInt64NoTag(long, google::protobuf::io::CodedOutputStream*)"}, {"value": 772, "name": "VerifyUtf8String(char const*, int, google::protobuf::internal::WireFormatLite::Operation, char const*)"}, {"value": 41, "name": "WriteDoubleArray(double const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 53, "name": "WriteDoubleNoTag(double, google::protobuf::io::CodedOutputStream*)"}, {"value": 50, "name": "WriteSInt32NoTag(int, google::protobuf::io::CodedOutputStream*)"}, {"value": 54, "name": "WriteSInt64NoTag(long, google::protobuf::io::CodedOutputStream*)"}, {"value": 33, "name": "WriteUInt32NoTag(unsigned int, google::protobuf::io::CodedOutputStream*)"}, {"value": 35, "name": "WriteUInt64NoTag(unsigned long, google::protobuf::io::CodedOutputStream*)"}, {"value": 17, "name": "GetTagFieldNumber(unsigned int)"}, {"value": 41, "name": "WriteFixed32Array(unsigned int const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 33, "name": "WriteFixed32NoTag(unsigned int, google::protobuf::io::CodedOutputStream*)"}, {"value": 41, "name": "WriteFixed64Array(unsigned long const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 35, "name": "WriteFixed64NoTag(unsigned long, google::protobuf::io::CodedOutputStream*)"}, {"value": 41, "name": "WriteSFixed32Array(int const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 33, "name": "WriteSFixed32NoTag(int, google::protobuf::io::CodedOutputStream*)"}, {"value": 41, "name": "WriteSFixed64Array(long const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 35, "name": "WriteSFixed64NoTag(long, google::protobuf::io::CodedOutputStream*)"}, {"value": 4, "name": "kMessageSetTypeIdTag"}, {"value": 4, "name": "kMessageSetItemEndTag"}, {"value": 4, "name": "kMessageSetMessageTag"}, {"value": 76, "name": "kWireTypeForFieldType"}, {"value": 197, "name": "ReadPackedEnumNoInline(google::protobuf::io::CodedInputStream*, bool (*)(int), google::protobuf::RepeatedField<int>*)"}, {"value": 365, "name": "WriteBytesMaybeAliased(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 433, "name": "WriteGroupMaybeToArray(int, google::protobuf::MessageLite const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 76, "name": "kFieldTypeToCppTypeMap"}, {"value": 365, "name": "WriteStringMaybeAliased(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 4, "name": "kMessageSetItemStartTag"}, {"value": 8, "name": "kMessageSetItemTagsSize"}, {"value": 428, "name": "WriteMessageMaybeToArray(int, google::protobuf::MessageLite const&, google::protobuf::io::CodedOutputStream*)"}, {"value": 246, "name": "ReadPackedEnumPreserveUnknowns(google::protobuf::io::CodedInputStream*, int, bool (*)(int), google::protobuf::io::CodedOutputStream*, google::protobuf::RepeatedField<int>*)"}, {"value": 23, "name": "MakeTag(int, google::protobuf::internal::WireFormatLite::WireType)"}, {"value": 102, "name": "EnumSize(google::protobuf::RepeatedField<int> const&)"}, {"value": 25, "name": "EnumSize(int)"}, {"value": 58, "name": "WriteTag(int, google::protobuf::internal::WireFormatLite::WireType, google::protobuf::io::CodedOutputStream*)"}, {"value": 102, "name": "Int32Size(google::protobuf::RepeatedField<int> const&)"}, {"value": 25, "name": "Int32Size(int)"}, {"value": 546, "name": "ReadBytes(google::protobuf::io::CodedInputStream*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 721, "name": "ReadBytes(google::protobuf::io::CodedInputStream*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >**)"}, {"value": 396, "name": "SkipField(google::protobuf::io::CodedInputStream*, unsigned int)"}, {"value": 666, "name": "SkipField(google::protobuf::io::CodedInputStream*, unsigned int, google::protobuf::io::CodedOutputStream*)"}, {"value": 60, "name": "WriteBool(int, bool, google::protobuf::io::CodedOutputStream*)"}, {"value": 52, "name": "WriteEnum(int, int, google::protobuf::io::CodedOutputStream*)"}], "name": "WireFormatLite::"}, {"value": 36, "name": "InitEmptyString()"}, {"value": 1073, "name": "UTF8GenericScan(google::protobuf::internal::UTF8StateMachineObj const*, char const*, int, int*)"}, {"children": [{"value": 79, "name": "Run()"}, {"value": 82, "name": "FunctionClosure0(void (*)(), bool)"}, {"value": 131, "name": "~FunctionClosure0()"}], "name": "FunctionClosure0::"}, {"value": 155, "name": "DefaultLogHandler(google::protobuf::LogLevel, char const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 21, "name": "DeleteEmptyString()"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::ReplicaIdent const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::ReplicaIdent const&, cockroach::roachpb::ReplicaIdent*)"}], "name": "GenericTypeHandler<cockroach::roachpb::ReplicaIdent>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::ObservedTimestamp const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::ObservedTimestamp const&, cockroach::roachpb::ObservedTimestamp*)"}], "name": "GenericTypeHandler<cockroach::roachpb::ObservedTimestamp>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::ReplicaDescriptor const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::ReplicaDescriptor const&, cockroach::roachpb::ReplicaDescriptor*)"}], "name": "GenericTypeHandler<cockroach::roachpb::ReplicaDescriptor>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::InternalTimeSeriesSample const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::InternalTimeSeriesSample const&, cockroach::roachpb::InternalTimeSeriesSample*)"}], "name": "GenericTypeHandler<cockroach::roachpb::InternalTimeSeriesSample>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::Span const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::Span const&, cockroach::roachpb::Span*)"}], "name": "GenericTypeHandler<cockroach::roachpb::Span>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::roachpb::Tier const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::roachpb::Tier const&, cockroach::roachpb::Tier*)"}], "name": "GenericTypeHandler<cockroach::roachpb::Tier>::"}, {"children": [{"value": 15, "name": "NewFromPrototype(cockroach::storage::engine::enginepb::SSTUserProperties const*, google::protobuf::Arena*)"}, {"value": 14, "name": "Merge(cockroach::storage::engine::enginepb::SSTUserProperties const&, cockroach::storage::engine::enginepb::SSTUserProperties*)"}], "name": "GenericTypeHandler<cockroach::storage::engine::enginepb::SSTUserProperties>::"}, {"children": [{"value": 53, "name": "NewFromPrototype(google::protobuf::MessageLite const*, google::protobuf::Arena*)"}, {"value": 53, "name": "Merge(google::protobuf::MessageLite const&, google::protobuf::MessageLite*)"}], "name": "GenericTypeHandler<google::protobuf::MessageLite>::"}, {"children": [{"value": 39, "name": "Merge(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}], "name": "GenericTypeHandler<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::"}, {"children": [{"value": 8, "name": "functions"}, {"children": [{"value": 8, "name": "init"}, {"value": 8, "name": "mutex"}], "name": "functions_"}], "name": "shutdown_"}, {"children": [{"children": [{"value": 12, "name": "void object<cockroach::util::UnresolvedAddr>(void*)"}, {"value": 12, "name": "void object<cockroach::util::hlc::Timestamp>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Attributes>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::StoreIdent>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Transaction>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::MergeTrigger>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ReplicaIdent>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::SplitTrigger>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::StoreCapacity>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::NodeDescriptor>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::AbortCacheEntry>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::RangeDescriptor>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::StoreDescriptor>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ObservedTimestamp>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ReplicaDescriptor>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ReplicationTarget>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::StoreDeadReplicas>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ModifiedSpanTrigger>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::ChangeReplicasTrigger>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::InternalCommitTrigger>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::InternalTimeSeriesData>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::InternalTimeSeriesSample>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Span>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Tier>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Lease>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Value>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Intent>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::KeyValue>(void*)"}, {"value": 12, "name": "void object<cockroach::roachpb::Locality>(void*)"}, {"value": 12, "name": "void object<cockroach::storage::engine::enginepb::MVCCMetadata>(void*)"}, {"value": 12, "name": "void object<cockroach::storage::engine::enginepb::SSTUserProperties>(void*)"}, {"value": 12, "name": "void object<cockroach::storage::engine::enginepb::SSTUserPropertiesCollection>(void*)"}, {"value": 12, "name": "void object<cockroach::storage::engine::enginepb::TxnMeta>(void*)"}, {"value": 12, "name": "void object<cockroach::storage::engine::enginepb::MVCCStats>(void*)"}, {"value": 49, "name": "void object<google::protobuf::MessageLite>(void*)"}], "name": "delete_"}, {"children": [{"value": 5, "name": "void object<cockroach::roachpb::ReplicaIdent>(void*)"}, {"value": 5, "name": "void object<cockroach::roachpb::ObservedTimestamp>(void*)"}, {"value": 5, "name": "void object<cockroach::roachpb::ReplicaDescriptor>(void*)"}, {"value": 5, "name": "void object<cockroach::roachpb::InternalTimeSeriesSample>(void*)"}, {"value": 5, "name": "void object<cockroach::roachpb::Span>(void*)"}, {"value": 5, "name": "void object<cockroach::roachpb::Tier>(void*)"}, {"value": 5, "name": "void object<cockroach::storage::engine::enginepb::SSTUserProperties>(void*)"}, {"value": 21, "name": "void object<google::protobuf::internal::InternalMetadataWithArenaBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::internal::InternalMetadataWithArenaLite>::Container>(void*)"}, {"value": 21, "name": "void object<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(void*)"}], "name": "destruct_"}], "name": "arena_"}, {"value": 107, "name": "InitLogSilencerCount()"}, {"value": 23, "name": "InitProtobufDefaults()"}, {"children": [{"value": 1545, "name": "InternalExtend(int)"}, {"value": 226, "name": "google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler::Type* Add<google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler>(google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler::Type*)"}, {"value": 153, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaIdent>::TypeHandler>()"}, {"value": 153, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>::TypeHandler>()"}, {"value": 153, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>::TypeHandler>()"}, {"value": 192, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>::TypeHandler>()"}, {"value": 153, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::Span>::TypeHandler>()"}, {"value": 153, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::roachpb::Tier>::TypeHandler>()"}, {"value": 238, "name": "void Clear<google::protobuf::RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>::TypeHandler>()"}, {"value": 277, "name": "void Clear<google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler>()"}, {"value": 65, "name": "Reserve(int)"}, {"value": 145, "name": "CloseGap(int, int)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaIdent>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::Span>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::roachpb::Tier>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 364, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 447, "name": "void MergeFrom<google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)"}, {"value": 17, "name": "GetArenaNoVirtual() const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaIdent>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaIdent>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::ObservedTimestamp>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::ReplicaDescriptor>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::InternalTimeSeriesSample>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::Span>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::Span>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::roachpb::Tier>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::roachpb::Tier>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<cockroach::storage::engine::enginepb::SSTUserProperties>::TypeHandler>(int) const"}, {"value": 213, "name": "google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler::Type const& Get<google::protobuf::RepeatedPtrField<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::TypeHandler>(int) const"}], "name": "RepeatedPtrFieldBase::"}, {"children": [{"children": [{"value": 17, "name": "mutable()"}], "name": "get_"}, {"value": 45, "name": "DefaultConstruct()"}, {"value": 60, "name": "Shutdown()"}, {"value": 17, "name": "get() const"}], "name": "ExplicitlyConstructed<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::"}, {"value": 165, "name": "InitShutdownFunctions()"}, {"value": 104, "name": "DeleteLogSilencerCount()"}, {"value": 106, "name": "IsStructurallyValidUTF8(char const*, int)"}, {"children": [{"value": 8, "name": "init_"}], "name": "empty_string_once_"}, {"value": 31, "name": "InitLogSilencerCountOnce()"}, {"value": 511, "name": "UTF8GenericScanFastAscii(google::protobuf::internal::UTF8StateMachineObj const*, char const*, int, int*)"}, {"value": 117, "name": "UTF8SpnStructurallyValid(google::protobuf::StringPiece const&)"}, {"children": [{"children": [{"value": 8, "name": "init_"}, {"value": 8, "name": "mutex_"}], "name": "silencer_count_"}, {"value": 8, "name": "handler_[abi:cxx11]"}], "name": "log_"}, {"value": 31, "name": "InitShutdownFunctionsOnce()"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::util::UnresolvedAddr*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::util::hlc::Timestamp*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Attributes*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::StoreIdent*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Transaction*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::MergeTrigger*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ReplicaIdent*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::SplitTrigger*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::StoreCapacity*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::NodeDescriptor*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::AbortCacheEntry*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::RangeDescriptor*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::StoreDescriptor*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ObservedTimestamp*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ReplicaDescriptor*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ReplicationTarget*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::StoreDeadReplicas*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ModifiedSpanTrigger*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::ChangeReplicasTrigger*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::InternalCommitTrigger*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::InternalTimeSeriesData*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::InternalTimeSeriesSample*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Span*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Tier*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Lease*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Value*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Intent*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::KeyValue*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::roachpb::Locality*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::storage::engine::enginepb::MVCCMetadata*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::storage::engine::enginepb::TxnMeta*>::"}, {"children": [{"value": 48, "name": "Run()"}, {"value": 5, "name": "~FunctionResultCallback_1_0()"}], "name": "FunctionResultCallback_1_0<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, cockroach::storage::engine::enginepb::MVCCStats*>::"}, {"children": [{"value": 40, "name": "string[abi:cxx11]"}], "name": "fixed_address_empty_"}, {"value": 21, "name": "GetEmptyStringAlreadyInited[abi:cxx11]()"}, {"value": 119, "name": "StringSpaceUsedExcludingSelf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"children": [{"value": 44, "name": "SkipMessage(google::protobuf::io::CodedInputStream*)"}, {"value": 64, "name": "SkipUnknownEnum(int, int)"}, {"value": 60, "name": "SkipField(google::protobuf::io::CodedInputStream*, unsigned int)"}, {"value": 104, "name": "~CodedOutputStreamFieldSkipper()"}], "name": "CodedOutputStreamFieldSkipper::"}, {"children": [{"value": 193, "name": "slow()"}], "name": "InternalMetadataWithArenaBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_"}, {"value": 334, "name": "UTF8CoerceToStructurallyValid(google::protobuf::StringPiece const&, char*, char)"}, {"children": [{"value": 2, "name": "Internalx86CPUFeatures"}], "name": "AtomicOps_"}, {"value": 11, "name": "NaN()"}, {"children": [{"value": 10, "name": "AssertHeld()"}, {"value": 220, "name": "Lock()"}, {"value": 220, "name": "Unlock()"}, {"value": 126, "name": "Mutex()"}, {"value": 146, "name": "~Mutex()"}], "name": "Mutex::"}, {"value": 11, "name": "Infinity()"}, {"children": [{"value": 41, "name": "MutexLock(google::protobuf::internal::Mutex*)"}, {"value": 30, "name": "~MutexLock()"}], "name": "MutexLock::"}, {"value": 50, "name": "void WriteArray<bool>(bool const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<double>(double const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<float>(float const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<int>(int const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<unsigned int>(unsigned int const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<long>(long const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 57, "name": "void WriteArray<unsigned long>(unsigned long const*, int, google::protobuf::io::CodedOutputStream*)"}, {"value": 63, "name": "InStateZero(google::protobuf::internal::UTF8StateMachineObj const*, unsigned char const*)"}, {"value": 2304, "name": "utf8acceptnonsurrogates"}, {"value": 64, "name": "utf8acceptnonsurrogates_obj"}, {"value": 256, "name": "utf8acceptnonsurrogates_fast"}, {"value": 8, "name": "kMinRepeatedFieldAllocationSize"}, {"value": 4, "name": "utf8acceptnonsurrogates_remap_base"}, {"value": 1, "name": "utf8acceptnonsurrogates_remap_string"}, {"children": [{"value": 32, "name": "names"}], "name": "DefaultLogHandler(google::protobuf::LogLevel, char const*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::level_"}], "name": "internal::"}, {"value": 6, "name": "DoNothing()"}, {"value": 116, "name": "BuildLookupTable(google::protobuf::StringPiece, bool*)"}, {"value": 465, "name": "Fls64(unsigned long)"}, {"value": 92, "name": "Fls128(google::protobuf::uint128)"}, {"value": 107, "name": "operator==(google::protobuf::uint128 const&, google::protobuf::uint128 const&)"}, {"value": 140, "name": "operator>=(google::protobuf::uint128 const&, google::protobuf::uint128 const&)"}, {"value": 140, "name": "operator>(google::protobuf::uint128 const&, google::protobuf::uint128 const&)"}, {"value": 86, "name": "operator<<(std::basic_ostream<char, std::char_traits<char> >&, google::protobuf::StringPiece)"}, {"value": 1809, "name": "operator<<(std::basic_ostream<char, std::char_traits<char> >&, google::protobuf::uint128 const&)"}, {"children": [{"value": 505, "name": "Get(int) const"}, {"value": 16, "name": "size() const"}], "name": "RepeatedField<unsigned int>::"}, {"children": [{"value": 4, "name": "kSpaceLength"}], "name": "StringAppendV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, __va_list_tag*)::"}], "name": "google::protobuf::"}, {"children": [{"value": 281, "name": "Uncompress(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 724, "name": "Uncompress(snappy::Source*, snappy::Sink*)"}, {"value": 140, "name": "RawCompress(char const*, unsigned long, char*, unsigned long*)"}, {"value": 86, "name": "RawUncompress(char const*, unsigned long, char*)"}, {"value": 287, "name": "RawUncompress(snappy::Source*, char*)"}, {"children": [{"value": 12, "name": "Peek(unsigned long*)"}, {"value": 9, "name": "Skip(unsigned long)"}, {"value": 7, "name": "~ByteArraySource()"}, {"value": 5, "name": "Available() const"}], "name": "ByteArraySource::"}, {"value": 25, "name": "IsValidCompressed(snappy::Source*)"}, {"children": [{"value": 850, "name": "AppendFromSelf(unsigned long, unsigned long)"}], "name": "SnappyArrayWriter::"}, {"children": [{"value": 1184, "name": "AppendFromSelf(unsigned long, unsigned long)"}], "name": "SnappyIOVecWriter::"}, {"children": [{"value": 576, "name": "void DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*)"}, {"value": 1005, "name": "void DecompressAllTags<snappy::SnappyIOVecWriter>(snappy::SnappyIOVecWriter*)"}, {"value": 1080, "name": "void DecompressAllTags<snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator> >(snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>*)"}, {"value": 433, "name": "void DecompressAllTags<snappy::SnappyDecompressionValidator>(snappy::SnappyDecompressionValidator*)"}, {"value": 483, "name": "RefillTag()"}], "name": "SnappyDecompressor::"}, {"value": 26, "name": "MaxCompressedLength(unsigned long)"}, {"children": [{"value": 14, "name": "Deleter(void*, char const*, unsigned long)"}], "name": "SnappySinkAllocator::"}, {"value": 89, "name": "RawUncompressToIOVec(char const*, unsigned long, snappy::iovec const*, unsigned long)"}, {"value": 279, "name": "RawUncompressToIOVec(snappy::Source*, snappy::iovec const*, unsigned long)"}, {"value": 144, "name": "GetUncompressedLength(char const*, unsigned long, unsigned long*)"}, {"value": 178, "name": "GetUncompressedLength(snappy::Source*, unsigned int*)"}, {"children": [{"value": 399, "name": "SlowAppend(char const*, unsigned long)"}], "name": "SnappyScatteredWriter<snappy::SnappySinkAllocator>::"}, {"children": [{"value": 5, "name": "GetAppendBuffer(unsigned long, char*)"}, {"value": 77, "name": "AppendAndTakeOwnership(char*, unsigned long, void (*)(void*, char const*, unsigned long), void*)"}, {"value": 8, "name": "GetAppendBufferVariable(unsigned long, unsigned long, char*, unsigned long, unsigned long*)"}, {"value": 46, "name": "Append(char const*, unsigned long)"}, {"value": 7, "name": "~UncheckedByteArraySink()"}], "name": "UncheckedByteArraySink::"}, {"value": 94, "name": "IsValidCompressedBuffer(char const*, unsigned long)"}, {"value": 586, "name": "UncompressAsMuchAsPossible(snappy::Source*, snappy::Sink*)"}, {"children": [{"value": 1, "name": "table"}], "name": "FLAGS_snappy_dump_decompression_"}, {"children": [{"value": 4, "name": "GetAppendBuffer(unsigned long, char*)"}, {"value": 51, "name": "AppendAndTakeOwnership(char*, unsigned long, void (*)(void*, char const*, unsigned long), void*)"}, {"value": 7, "name": "GetAppendBufferVariable(unsigned long, unsigned long, char*, unsigned long, unsigned long*)"}, {"value": 7, "name": "~Sink()"}], "name": "Sink::"}, {"children": [{"value": 7, "name": "~Source()"}], "name": "Source::"}, {"value": 115, "name": "Compress(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 1040, "name": "Compress(snappy::Source*, snappy::Sink*)"}, {"children": [{"children": [{"value": 128, "name": "GetHashTable(unsigned long, int*)"}], "name": "WorkingMemory::"}, {"value": 1581, "name": "CompressFragment(char const*, unsigned long, char*, unsigned short*, int)"}], "name": "internal::"}, {"children": [{"value": 512, "name": "table"}], "name": "char_"}, {"value": 262, "name": "bool InternalUncompress<snappy::SnappyDecompressionValidator>(snappy::Source*, snappy::SnappyDecompressionValidator*)"}, {"value": 20, "name": "wordmask"}], "name": "snappy::"}, {"children": [{"value": 234, "name": "CommitBatch(bool)"}, {"value": 14, "name": "DeleteRange(DBKey, DBKey)"}, {"value": 526, "name": "ApplyBatchRepr(DBSlice, bool)"}, {"value": 492, "name": "Get(DBKey, DBString*)"}, {"value": 163, "name": "Put(DBKey, DBSlice)"}, {"value": 163, "name": "Merge(DBKey, DBSlice)"}, {"value": 128, "name": "Delete(DBKey)"}, {"value": 308, "name": "NewIter(bool)"}, {"value": 14, "name": "GetStats(DBStatsResult*)"}, {"value": 22, "name": "BatchRepr()"}, {"value": 218, "name": "DBBatch(DBEngine*)"}, {"value": 59, "name": "~DBBatch()"}], "name": "DBBatch::"}, {"children": [{"value": 750, "name": "GetSSTables(int*)"}, {"value": 2102, "name": "GetUserProperties()"}], "name": "DBEngine::"}, {"children": [{"value": 257, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)"}, {"children": [{"value": 473, "name": "void construct<rocksdb::ThreadStatus, unsigned long&, rocksdb::ThreadStatus::ThreadType&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ThreadStatus::OperationType&, unsigned long&, rocksdb::ThreadStatus::OperationStage&, unsigned long (&) [6], rocksdb::ThreadStatus::StateType&>(rocksdb::ThreadStatus*, unsigned long&, rocksdb::ThreadStatus::ThreadType&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&, rocksdb::ThreadStatus::OperationType&, unsigned long&, rocksdb::ThreadStatus::OperationStage&, unsigned long (&) [6], rocksdb::ThreadStatus::StateType&)"}], "name": "new_allocator<rocksdb::ThreadStatus>::"}, {"children": [{"value": 120, "name": "void destroy<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem>(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem*)"}], "name": "new_allocator<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem>::"}, {"children": [{"value": 117, "name": "void destroy<rocksdb::LiveFileMetaData>(rocksdb::LiveFileMetaData*)"}], "name": "new_allocator<rocksdb::LiveFileMetaData>::"}, {"children": [{"value": 204, "name": "void construct<rocksdb::ColumnFamilyDescriptor, rocksdb::ColumnFamilyDescriptor const&>(rocksdb::ColumnFamilyDescriptor*, rocksdb::ColumnFamilyDescriptor const&)"}], "name": "new_allocator<rocksdb::ColumnFamilyDescriptor>::"}, {"children": [{"value": 336, "name": "void construct<rocksdb::DbPath, char const (&) [6], int>(rocksdb::DbPath*, char const (&) [6], int&&)"}], "name": "new_allocator<rocksdb::DbPath>::"}, {"children": [{"value": 38, "name": "deallocate(void (**)(), unsigned long)"}, {"value": 14, "name": "destroy(void (**)())"}, {"value": 77, "name": "allocate(unsigned long, void const*)"}, {"value": 32, "name": "construct(void (**)(), void (* const&)())"}, {"children": [{"value": 10, "name": "allocator()"}], "name": "new_"}, {"value": 10, "name": "~new_allocator()"}, {"children": [{"value": 20, "name": "size() const"}], "name": "max_"}], "name": "new_allocator<void (*)()>::"}, {"children": [{"value": 54, "name": "deallocate(std::allocator<void (*)()>&, void (**)(), unsigned long)"}, {"value": 46, "name": "destroy(std::allocator<void (*)()>&, void (**)())"}, {"value": 50, "name": "allocate(std::allocator<void (*)()>&, unsigned long)"}, {"children": [{"value": 27, "name": "size(std::allocator<void (*)()> const&)"}], "name": "max_"}, {"value": 54, "name": "void construct<void (*)()>(std::allocator<void (*)()>&, void (**)(), void (* const&)())"}], "name": "__alloc_traits<std::allocator<void (*)()> >::"}, {"children": [{"value": 28, "name": "__normal_iterator(void (** const&)())"}, {"value": 14, "name": "base() const"}, {"value": 17, "name": "operator*() const"}], "name": "__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::"}, {"children": [{"value": 38, "name": "__gnu_cxx::__ops::_Iter_equals_iter<char const*> __iter_comp_iter<char const*>(__gnu_cxx::__ops::_Iter_equal_to_iter, char const*)"}, {"value": 51, "name": "__gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> > __iter_comp_iter<std::reverse_iterator<char const*> >(__gnu_cxx::__ops::_Iter_equal_to_iter, std::reverse_iterator<char const*>)"}, {"children": [{"value": 25, "name": "_Iter_equals_iter(char const*)"}, {"value": 42, "name": "bool operator()<char const*>(char const*)"}], "name": "_Iter_equals_iter<char const*>::"}, {"children": [{"value": 41, "name": "_Iter_equals_iter(std::reverse_iterator<char const*>)"}, {"value": 61, "name": "bool operator()<std::reverse_iterator<char const*> >(std::reverse_iterator<char const*>)"}], "name": "_Iter_equals_iter<std::reverse_iterator<char const*> >::"}, {"value": 6, "name": "__iter_equal_to_iter()"}, {"children": [{"value": 46, "name": "bool operator()<char const*, char const*>(char const*, char const*) const"}, {"value": 67, "name": "bool operator()<std::reverse_iterator<char const*>, std::reverse_iterator<char const*> >(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>) const"}], "name": "_Iter_equal_to_iter::"}], "name": "__ops::"}, {"value": 64, "name": "__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::difference_type operator-<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > const&, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > const&)"}, {"children": [{"value": 17, "name": "operator*() const"}], "name": "__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::"}], "name": "__gnu_cxx::"}, {"children": [{"children": [{"children": [{"value": 26, "name": "SharedCtor()"}, {"value": 108, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::util::UnresolvedAddr*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kAddressFieldFieldNumber"}, {"value": 4, "name": "kNetworkFieldFieldNumber"}, {"value": 488, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::util::UnresolvedAddr*)"}, {"value": 311, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::util::UnresolvedAddr const&)"}, {"value": 259, "name": "MergeFrom(cockroach::util::UnresolvedAddr const&)"}, {"value": 494, "name": "UnresolvedAddr(cockroach::util::UnresolvedAddr const&)"}, {"value": 474, "name": "UnresolvedAddr()"}, {"value": 362, "name": "~UnresolvedAddr()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 145, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "UnresolvedAddr::"}, {"value": 48, "name": "_UnresolvedAddr_default_instance_"}, {"children": [{"value": 48, "name": "_Timestamp_default_instance_"}, {"children": [{"children": [{"value": 66, "name": "InitDefaultsImpl()"}, {"value": 23, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 117, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2futil_2fhlc_2ftimestamp_2eproto::"}, {"children": [{"value": 8, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 164, "name": "InternalSwap(cockroach::util::hlc::Timestamp*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kLogicalFieldNumber"}, {"value": 4, "name": "kWallTimeFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 468, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::util::hlc::Timestamp*)"}, {"value": 55, "name": "Clear()"}, {"value": 65, "name": "CopyFrom(cockroach::util::hlc::Timestamp const&)"}, {"value": 232, "name": "MergeFrom(cockroach::util::hlc::Timestamp const&)"}, {"value": 372, "name": "Timestamp(cockroach::util::hlc::Timestamp const&)"}, {"value": 438, "name": "Timestamp()"}, {"value": 257, "name": "~Timestamp()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 115, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 99, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Timestamp::"}, {"value": 22, "name": "MutableUnknownFieldsForTimestamp[abi:cxx11](cockroach::util::hlc::Timestamp*)"}], "name": "hlc::"}, {"children": [{"children": [{"value": 80, "name": "InitDefaultsImpl()"}, {"value": 23, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 117, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2futil_2funresolved_5faddr_2eproto::"}, {"value": 22, "name": "MutableUnknownFieldsForUnresolvedAddr[abi:cxx11](cockroach::util::UnresolvedAddr*)"}], "name": "util::"}, {"children": [{"children": [{"value": 8, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 147, "name": "InternalSwap(cockroach::roachpb::Attributes*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kAttrsFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 332, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Attributes*)"}, {"value": 48, "name": "Clear()"}, {"value": 83, "name": "CopyFrom(cockroach::roachpb::Attributes const&)"}, {"value": 198, "name": "MergeFrom(cockroach::roachpb::Attributes const&)"}, {"value": 614, "name": "Attributes(cockroach::roachpb::Attributes const&)"}, {"value": 674, "name": "Attributes()"}, {"value": 404, "name": "~Attributes()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 136, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 110, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Attributes::"}, {"children": [{"value": 27, "name": "SharedCtor()"}, {"value": 47, "name": "SharedDtor()"}, {"value": 178, "name": "InternalSwap(cockroach::roachpb::StoreIdent*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kNodeIdFieldNumber"}, {"value": 4, "name": "kStoreIdFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kClusterIdFieldNumber"}, {"value": 530, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::StoreIdent*)"}, {"value": 193, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::StoreIdent const&)"}, {"value": 268, "name": "MergeFrom(cockroach::roachpb::StoreIdent const&)"}, {"value": 434, "name": "StoreIdent(cockroach::roachpb::StoreIdent const&)"}, {"value": 476, "name": "StoreIdent()"}, {"value": 276, "name": "~StoreIdent()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 194, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 122, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "StoreIdent::"}, {"children": [{"value": 38, "name": "SharedCtor()"}, {"value": 134, "name": "SharedDtor()"}, {"value": 296, "name": "InternalSwap(cockroach::roachpb::Transaction*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kMetaFieldNumber"}, {"value": 4, "name": "kNameFieldNumber"}, {"value": 4, "name": "kStatusFieldNumber"}, {"value": 4, "name": "kIntentsFieldNumber"}, {"value": 4, "name": "kWritingFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kRetryOnPushFieldNumber"}, {"value": 4, "name": "kWriteTooOldFieldNumber"}, {"value": 4, "name": "kMaxTimestampFieldNumber"}, {"value": 4, "name": "kLastHeartbeatFieldNumber"}, {"value": 4, "name": "kOrigTimestampFieldNumber"}, {"value": 2054, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kObservedTimestampsFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::Transaction*)"}, {"value": 685, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Transaction const&)"}, {"value": 716, "name": "MergeFrom(cockroach::roachpb::Transaction const&)"}, {"value": 1370, "name": "Transaction(cockroach::roachpb::Transaction const&)"}, {"value": 824, "name": "Transaction()"}, {"value": 514, "name": "~Transaction()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 716, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 401, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Transaction::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 46, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::MergeTrigger*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kLeftDescFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kRightDescFieldNumber"}, {"value": 651, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::MergeTrigger*)"}, {"value": 285, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::MergeTrigger const&)"}, {"value": 359, "name": "MergeFrom(cockroach::roachpb::MergeTrigger const&)"}, {"value": 558, "name": "MergeTrigger(cockroach::roachpb::MergeTrigger const&)"}, {"value": 452, "name": "MergeTrigger()"}, {"value": 374, "name": "~MergeTrigger()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 150, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "MergeTrigger::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 25, "name": "SharedDtor()"}, {"value": 152, "name": "InternalSwap(cockroach::roachpb::ReplicaIdent*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kRangeIdFieldNumber"}, {"value": 4, "name": "kReplicaFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 579, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::ReplicaIdent*)"}, {"value": 225, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::ReplicaIdent const&)"}, {"value": 300, "name": "MergeFrom(cockroach::roachpb::ReplicaIdent const&)"}, {"value": 474, "name": "ReplicaIdent(cockroach::roachpb::ReplicaIdent const&)"}, {"value": 452, "name": "ReplicaIdent()"}, {"value": 329, "name": "~ReplicaIdent()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 122, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ReplicaIdent::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 46, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::SplitTrigger*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kLeftDescFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kRightDescFieldNumber"}, {"value": 651, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::SplitTrigger*)"}, {"value": 285, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::SplitTrigger const&)"}, {"value": 359, "name": "MergeFrom(cockroach::roachpb::SplitTrigger const&)"}, {"value": 558, "name": "SplitTrigger(cockroach::roachpb::SplitTrigger const&)"}, {"value": 452, "name": "SplitTrigger()"}, {"value": 374, "name": "~SplitTrigger()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 150, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "SplitTrigger::"}, {"children": [{"value": 12, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 194, "name": "InternalSwap(cockroach::roachpb::StoreCapacity*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kCapacityFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kAvailableFieldNumber"}, {"value": 4, "name": "kLeaseCountFieldNumber"}, {"value": 4, "name": "kRangeCountFieldNumber"}, {"value": 628, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::StoreCapacity*)"}, {"value": 55, "name": "Clear()"}, {"value": 65, "name": "CopyFrom(cockroach::roachpb::StoreCapacity const&)"}, {"value": 287, "name": "MergeFrom(cockroach::roachpb::StoreCapacity const&)"}, {"value": 376, "name": "StoreCapacity(cockroach::roachpb::StoreCapacity const&)"}, {"value": 446, "name": "StoreCapacity()"}, {"value": 257, "name": "~StoreCapacity()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 188, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 146, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "StoreCapacity::"}, {"children": [{"value": 12, "name": "SharedCtor()"}, {"value": 61, "name": "SharedDtor()"}, {"value": 196, "name": "InternalSwap(cockroach::roachpb::NodeDescriptor*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kAttrsFieldNumber"}, {"value": 4, "name": "kNodeIdFieldNumber"}, {"value": 4, "name": "kAddressFieldNumber"}, {"value": 4, "name": "kLocalityFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 911, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::NodeDescriptor*)"}, {"value": 483, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::NodeDescriptor const&)"}, {"value": 456, "name": "MergeFrom(cockroach::roachpb::NodeDescriptor const&)"}, {"value": 672, "name": "NodeDescriptor(cockroach::roachpb::NodeDescriptor const&)"}, {"value": 446, "name": "NodeDescriptor()"}, {"value": 298, "name": "~NodeDescriptor()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 364, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 147, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "NodeDescriptor::"}, {"children": [{"value": 34, "name": "SharedCtor()"}, {"value": 89, "name": "SharedDtor()"}, {"value": 180, "name": "InternalSwap(cockroach::roachpb::AbortCacheEntry*)"}, {"value": 4, "name": "kKeyFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kPriorityFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kTimestampFieldNumber"}, {"value": 658, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::AbortCacheEntry*)"}, {"value": 305, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::AbortCacheEntry const&)"}, {"value": 347, "name": "MergeFrom(cockroach::roachpb::AbortCacheEntry const&)"}, {"value": 558, "name": "AbortCacheEntry(cockroach::roachpb::AbortCacheEntry const&)"}, {"value": 490, "name": "AbortCacheEntry()"}, {"value": 324, "name": "~AbortCacheEntry()"}, {"value": 93, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 199, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 123, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "AbortCacheEntry::"}, {"children": [{"value": 41, "name": "SharedCtor()"}, {"value": 108, "name": "SharedDtor()"}, {"value": 195, "name": "InternalSwap(cockroach::roachpb::RangeDescriptor*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kEndKeyFieldNumber"}, {"value": 4, "name": "kRangeIdFieldNumber"}, {"value": 4, "name": "kReplicasFieldNumber"}, {"value": 4, "name": "kStartKeyFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kNextReplicaIdFieldNumber"}, {"value": 930, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::RangeDescriptor*)"}, {"value": 342, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::RangeDescriptor const&)"}, {"value": 325, "name": "MergeFrom(cockroach::roachpb::RangeDescriptor const&)"}, {"value": 764, "name": "RangeDescriptor(cockroach::roachpb::RangeDescriptor const&)"}, {"value": 696, "name": "RangeDescriptor()"}, {"value": 514, "name": "~RangeDescriptor()"}, {"value": 93, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 316, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 212, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "RangeDescriptor::"}, {"children": [{"value": 12, "name": "SharedCtor()"}, {"value": 61, "name": "SharedDtor()"}, {"value": 196, "name": "InternalSwap(cockroach::roachpb::StoreDescriptor*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kNodeFieldNumber"}, {"value": 4, "name": "kAttrsFieldNumber"}, {"value": 4, "name": "kStoreIdFieldNumber"}, {"value": 4, "name": "kCapacityFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 911, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::StoreDescriptor*)"}, {"value": 504, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::StoreDescriptor const&)"}, {"value": 456, "name": "MergeFrom(cockroach::roachpb::StoreDescriptor const&)"}, {"value": 672, "name": "StoreDescriptor(cockroach::roachpb::StoreDescriptor const&)"}, {"value": 446, "name": "StoreDescriptor()"}, {"value": 298, "name": "~StoreDescriptor()"}, {"value": 93, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 363, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 147, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "StoreDescriptor::"}, {"children": [{"value": 8, "name": "SharedCtor()"}, {"value": 25, "name": "SharedDtor()"}, {"value": 164, "name": "InternalSwap(cockroach::roachpb::ObservedTimestamp*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kNodeIdFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kTimestampFieldNumber"}, {"value": 579, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::ObservedTimestamp*)"}, {"value": 171, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::ObservedTimestamp const&)"}, {"value": 300, "name": "MergeFrom(cockroach::roachpb::ObservedTimestamp const&)"}, {"value": 474, "name": "ObservedTimestamp(cockroach::roachpb::ObservedTimestamp const&)"}, {"value": 438, "name": "ObservedTimestamp()"}, {"value": 329, "name": "~ObservedTimestamp()"}, {"value": 99, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 145, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 99, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ObservedTimestamp::"}, {"children": [{"value": 8, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 176, "name": "InternalSwap(cockroach::roachpb::ReplicaDescriptor*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kNodeIdFieldNumber"}, {"value": 4, "name": "kStoreIdFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kReplicaIdFieldNumber"}, {"value": 553, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::ReplicaDescriptor*)"}, {"value": 55, "name": "Clear()"}, {"value": 65, "name": "CopyFrom(cockroach::roachpb::ReplicaDescriptor const&)"}, {"value": 256, "name": "MergeFrom(cockroach::roachpb::ReplicaDescriptor const&)"}, {"value": 372, "name": "ReplicaDescriptor(cockroach::roachpb::ReplicaDescriptor const&)"}, {"value": 438, "name": "ReplicaDescriptor()"}, {"value": 257, "name": "~ReplicaDescriptor()"}, {"value": 99, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 188, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 121, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ReplicaDescriptor::"}, {"children": [{"value": 16, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 162, "name": "InternalSwap(cockroach::roachpb::ReplicationTarget*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kNodeIdFieldNumber"}, {"value": 4, "name": "kStoreIdFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 468, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::ReplicationTarget*)"}, {"value": 48, "name": "Clear()"}, {"value": 58, "name": "CopyFrom(cockroach::roachpb::ReplicationTarget const&)"}, {"value": 232, "name": "MergeFrom(cockroach::roachpb::ReplicationTarget const&)"}, {"value": 358, "name": "ReplicationTarget(cockroach::roachpb::ReplicationTarget const&)"}, {"value": 454, "name": "ReplicationTarget()"}, {"value": 257, "name": "~ReplicationTarget()"}, {"value": 99, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 140, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 98, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ReplicationTarget::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 161, "name": "InternalSwap(cockroach::roachpb::StoreDeadReplicas*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kStoreIdFieldNumber"}, {"value": 4, "name": "kReplicasFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 695, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::StoreDeadReplicas*)"}, {"value": 55, "name": "Clear()"}, {"value": 90, "name": "CopyFrom(cockroach::roachpb::StoreDeadReplicas const&)"}, {"value": 215, "name": "MergeFrom(cockroach::roachpb::StoreDeadReplicas const&)"}, {"value": 606, "name": "StoreDeadReplicas(cockroach::roachpb::StoreDeadReplicas const&)"}, {"value": 632, "name": "StoreDeadReplicas()"}, {"value": 322, "name": "~StoreDeadReplicas()"}, {"value": 99, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 192, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 140, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "StoreDeadReplicas::"}, {"children": [{"value": 17, "name": "IsValid(int)"}], "name": "ValueType_"}, {"children": [{"value": 17, "name": "SharedCtor()"}, {"value": 25, "name": "SharedDtor()"}, {"value": 164, "name": "InternalSwap(cockroach::roachpb::ModifiedSpanTrigger*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 582, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kNodeLivenessSpanFieldNumber"}, {"value": 4, "name": "kSystemConfigSpanFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::ModifiedSpanTrigger*)"}, {"value": 168, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::ModifiedSpanTrigger const&)"}, {"value": 300, "name": "MergeFrom(cockroach::roachpb::ModifiedSpanTrigger const&)"}, {"value": 474, "name": "ModifiedSpanTrigger(cockroach::roachpb::ModifiedSpanTrigger const&)"}, {"value": 456, "name": "ModifiedSpanTrigger()"}, {"value": 329, "name": "~ModifiedSpanTrigger()"}, {"value": 103, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 250, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ModifiedSpanTrigger::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 25, "name": "SharedDtor()"}, {"value": 191, "name": "InternalSwap(cockroach::roachpb::ChangeReplicasTrigger*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kReplicaFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kChangeTypeFieldNumber"}, {"value": 4, "name": "kNextReplicaIdFieldNumber"}, {"value": 1135, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kUpdatedReplicasFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::ChangeReplicasTrigger*)"}, {"value": 189, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::ChangeReplicasTrigger const&)"}, {"value": 377, "name": "MergeFrom(cockroach::roachpb::ChangeReplicasTrigger const&)"}, {"value": 722, "name": "ChangeReplicasTrigger(cockroach::roachpb::ChangeReplicasTrigger const&)"}, {"value": 632, "name": "ChangeReplicasTrigger()"}, {"value": 386, "name": "~ChangeReplicasTrigger()"}, {"value": 103, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 298, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 180, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "ChangeReplicasTrigger::"}, {"children": [{"value": 19, "name": "SharedCtor()"}, {"value": 76, "name": "SharedDtor()"}, {"value": 198, "name": "InternalSwap(cockroach::roachpb::InternalCommitTrigger*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kMergeTriggerFieldNumber"}, {"value": 4, "name": "kSplitTriggerFieldNumber"}, {"value": 991, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kModifiedSpanTriggerFieldNumber"}, {"value": 4, "name": "kChangeReplicasTriggerFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::InternalCommitTrigger*)"}, {"value": 515, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::InternalCommitTrigger const&)"}, {"value": 491, "name": "MergeFrom(cockroach::roachpb::InternalCommitTrigger const&)"}, {"value": 754, "name": "InternalCommitTrigger(cockroach::roachpb::InternalCommitTrigger const&)"}, {"value": 460, "name": "InternalCommitTrigger()"}, {"value": 328, "name": "~InternalCommitTrigger()"}, {"value": 103, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 254, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 148, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "InternalCommitTrigger::"}, {"children": [{"value": 15, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 179, "name": "InternalSwap(cockroach::roachpb::InternalTimeSeriesData*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kSamplesFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 757, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kSampleDurationNanosFieldNumber"}, {"value": 4, "name": "kStartTimestampNanosFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::InternalTimeSeriesData*)"}, {"value": 61, "name": "Clear()"}, {"value": 96, "name": "CopyFrom(cockroach::roachpb::InternalTimeSeriesData const&)"}, {"value": 246, "name": "MergeFrom(cockroach::roachpb::InternalTimeSeriesData const&)"}, {"value": 606, "name": "InternalTimeSeriesData(cockroach::roachpb::InternalTimeSeriesData const&)"}, {"value": 632, "name": "InternalTimeSeriesData()"}, {"value": 322, "name": "~InternalTimeSeriesData()"}, {"value": 103, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 196, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 156, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "InternalTimeSeriesData::"}, {"value": 48, "name": "_Span_default_instance_"}, {"value": 48, "name": "_Tier_default_instance_"}, {"children": [{"value": 19, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 210, "name": "InternalSwap(cockroach::roachpb::InternalTimeSeriesSample*)"}, {"value": 4, "name": "kMaxFieldNumber"}, {"value": 4, "name": "kMinFieldNumber"}, {"value": 4, "name": "kSumFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kCountFieldNumber"}, {"value": 4, "name": "kOffsetFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 774, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::InternalTimeSeriesSample*)"}, {"value": 51, "name": "Clear()"}, {"value": 61, "name": "CopyFrom(cockroach::roachpb::InternalTimeSeriesSample const&)"}, {"value": 311, "name": "MergeFrom(cockroach::roachpb::InternalTimeSeriesSample const&)"}, {"value": 378, "name": "InternalTimeSeriesSample(cockroach::roachpb::InternalTimeSeriesSample const&)"}, {"value": 460, "name": "InternalTimeSeriesSample()"}, {"value": 257, "name": "~InternalTimeSeriesSample()"}, {"value": 100, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 169, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 173, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "InternalTimeSeriesSample::"}, {"value": 80, "name": "_Lease_default_instance_"}, {"value": 48, "name": "_Value_default_instance_"}, {"children": [{"value": 7, "name": "IsValid(int)"}], "name": "ReplicaChangeType_"}, {"children": [{"value": 7, "name": "IsValid(int)"}], "name": "TransactionStatus_"}, {"value": 56, "name": "_Intent_default_instance_"}, {"value": 48, "name": "_KeyValue_default_instance_"}, {"value": 56, "name": "_Locality_default_instance_"}, {"value": 56, "name": "_Attributes_default_instance_"}, {"value": 48, "name": "_StoreIdent_default_instance_"}, {"value": 128, "name": "_Transaction_default_instance_"}, {"value": 48, "name": "_MergeTrigger_default_instance_"}, {"value": 48, "name": "_ReplicaIdent_default_instance_"}, {"value": 48, "name": "_SplitTrigger_default_instance_"}, {"value": 56, "name": "_StoreCapacity_default_instance_"}, {"value": 64, "name": "_NodeDescriptor_default_instance_"}, {"value": 56, "name": "_AbortCacheEntry_default_instance_"}, {"value": 88, "name": "_RangeDescriptor_default_instance_"}, {"value": 64, "name": "_StoreDescriptor_default_instance_"}, {"value": 48, "name": "_ObservedTimestamp_default_instance_"}, {"value": 48, "name": "_ReplicaDescriptor_default_instance_"}, {"value": 40, "name": "_ReplicationTarget_default_instance_"}, {"value": 64, "name": "_StoreDeadReplicas_default_instance_"}, {"value": 48, "name": "_ModifiedSpanTrigger_default_instance_"}, {"value": 72, "name": "_ChangeReplicasTrigger_default_instance_"}, {"value": 64, "name": "_InternalCommitTrigger_default_instance_"}, {"value": 72, "name": "_InternalTimeSeriesData_default_instance_"}, {"value": 64, "name": "_InternalTimeSeriesSample_default_instance_"}, {"children": [{"children": [{"value": 800, "name": "InitDefaultsImpl()"}, {"value": 312, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 132, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2froachpb_2fdata_2eproto::"}, {"children": [{"value": 26, "name": "SharedCtor()"}, {"value": 108, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::Span*)"}, {"value": 4, "name": "kKeyFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kEndKeyFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 488, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Span*)"}, {"value": 311, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Span const&)"}, {"value": 259, "name": "MergeFrom(cockroach::roachpb::Span const&)"}, {"value": 494, "name": "Span(cockroach::roachpb::Span const&)"}, {"value": 474, "name": "Span()"}, {"value": 362, "name": "~Span()"}, {"value": 92, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 145, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Span::"}, {"children": [{"value": 26, "name": "SharedCtor()"}, {"value": 108, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::Tier*)"}, {"value": 4, "name": "kKeyFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kValueFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 488, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Tier*)"}, {"value": 311, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Tier const&)"}, {"value": 259, "name": "MergeFrom(cockroach::roachpb::Tier const&)"}, {"value": 494, "name": "Tier(cockroach::roachpb::Tier const&)"}, {"value": 474, "name": "Tier()"}, {"value": 362, "name": "~Tier()"}, {"value": 92, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 145, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Tier::"}, {"children": [{"children": [{"value": 115, "name": "InitDefaultsImpl()"}, {"value": 50, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 117, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2froachpb_2finternal_2eproto::"}, {"children": [{"children": [{"value": 530, "name": "InitDefaultsImpl()"}, {"value": 246, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 122, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2froachpb_2fmetadata_2eproto::"}, {"children": [{"value": 23, "name": "SharedCtor()"}, {"value": 91, "name": "SharedDtor()"}, {"value": 216, "name": "InternalSwap(cockroach::roachpb::Lease*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kEpochFieldNumber"}, {"value": 4, "name": "kStartFieldNumber"}, {"value": 4, "name": "kReplicaFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kExpirationFieldNumber"}, {"value": 4, "name": "kProposedTsFieldNumber"}, {"value": 1244, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kDeprecatedStartStasisFieldNumber"}, {"value": 11, "name": "Swap(cockroach::roachpb::Lease*)"}, {"value": 638, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Lease const&)"}, {"value": 584, "name": "MergeFrom(cockroach::roachpb::Lease const&)"}, {"value": 868, "name": "Lease(cockroach::roachpb::Lease const&)"}, {"value": 468, "name": "Lease()"}, {"value": 358, "name": "~Lease()"}, {"value": 92, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 326, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 196, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Lease::"}, {"children": [{"value": 27, "name": "SharedCtor()"}, {"value": 89, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::Value*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kRawBytesFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kTimestampFieldNumber"}, {"value": 580, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Value*)"}, {"value": 298, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Value const&)"}, {"value": 319, "name": "MergeFrom(cockroach::roachpb::Value const&)"}, {"value": 542, "name": "Value(cockroach::roachpb::Value const&)"}, {"value": 476, "name": "Value()"}, {"value": 324, "name": "~Value()"}, {"value": 92, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 149, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Value::"}, {"children": [{"value": 16, "name": "SharedCtor()"}, {"value": 46, "name": "SharedDtor()"}, {"value": 180, "name": "InternalSwap(cockroach::roachpb::Intent*)"}, {"value": 4, "name": "kTxnFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kSpanFieldNumber"}, {"value": 4, "name": "kStatusFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 944, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Intent*)"}, {"value": 292, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::Intent const&)"}, {"value": 418, "name": "MergeFrom(cockroach::roachpb::Intent const&)"}, {"value": 574, "name": "Intent(cockroach::roachpb::Intent const&)"}, {"value": 454, "name": "Intent()"}, {"value": 374, "name": "~Intent()"}, {"value": 92, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 331, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 123, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Intent::"}, {"children": [{"value": 27, "name": "SharedCtor()"}, {"value": 89, "name": "SharedDtor()"}, {"value": 166, "name": "InternalSwap(cockroach::roachpb::KeyValue*)"}, {"value": 4, "name": "kKeyFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kValueFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 580, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::KeyValue*)"}, {"value": 298, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::roachpb::KeyValue const&)"}, {"value": 319, "name": "MergeFrom(cockroach::roachpb::KeyValue const&)"}, {"value": 542, "name": "KeyValue(cockroach::roachpb::KeyValue const&)"}, {"value": 476, "name": "KeyValue()"}, {"value": 324, "name": "~KeyValue()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 149, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 100, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "KeyValue::"}, {"children": [{"value": 8, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 147, "name": "InternalSwap(cockroach::roachpb::Locality*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kTiersFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 539, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::roachpb::Locality*)"}, {"value": 48, "name": "Clear()"}, {"value": 83, "name": "CopyFrom(cockroach::roachpb::Locality const&)"}, {"value": 198, "name": "MergeFrom(cockroach::roachpb::Locality const&)"}, {"value": 574, "name": "Locality(cockroach::roachpb::Locality const&)"}, {"value": 632, "name": "Locality()"}, {"value": 322, "name": "~Locality()"}, {"value": 89, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 305, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 108, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "Locality::"}, {"value": 22, "name": "MutableUnknownFieldsForSpan[abi:cxx11](cockroach::roachpb::Span*)"}, {"value": 22, "name": "MutableUnknownFieldsForTier[abi:cxx11](cockroach::roachpb::Tier*)"}, {"value": 22, "name": "MutableUnknownFieldsForLease[abi:cxx11](cockroach::roachpb::Lease*)"}, {"value": 22, "name": "MutableUnknownFieldsForValue[abi:cxx11](cockroach::roachpb::Value*)"}, {"value": 22, "name": "MutableUnknownFieldsForIntent[abi:cxx11](cockroach::roachpb::Intent*)"}, {"value": 22, "name": "MutableUnknownFieldsForKeyValue[abi:cxx11](cockroach::roachpb::KeyValue*)"}, {"value": 22, "name": "MutableUnknownFieldsForLocality[abi:cxx11](cockroach::roachpb::Locality*)"}, {"value": 22, "name": "MutableUnknownFieldsForAttributes[abi:cxx11](cockroach::roachpb::Attributes*)"}, {"value": 22, "name": "MutableUnknownFieldsForStoreIdent[abi:cxx11](cockroach::roachpb::StoreIdent*)"}, {"value": 22, "name": "MutableUnknownFieldsForTransaction[abi:cxx11](cockroach::roachpb::Transaction*)"}, {"value": 22, "name": "MutableUnknownFieldsForMergeTrigger[abi:cxx11](cockroach::roachpb::MergeTrigger*)"}, {"value": 22, "name": "MutableUnknownFieldsForReplicaIdent[abi:cxx11](cockroach::roachpb::ReplicaIdent*)"}, {"value": 22, "name": "MutableUnknownFieldsForSplitTrigger[abi:cxx11](cockroach::roachpb::SplitTrigger*)"}, {"value": 22, "name": "MutableUnknownFieldsForStoreCapacity[abi:cxx11](cockroach::roachpb::StoreCapacity*)"}, {"value": 22, "name": "MutableUnknownFieldsForNodeDescriptor[abi:cxx11](cockroach::roachpb::NodeDescriptor*)"}, {"value": 22, "name": "MutableUnknownFieldsForAbortCacheEntry[abi:cxx11](cockroach::roachpb::AbortCacheEntry*)"}, {"value": 22, "name": "MutableUnknownFieldsForRangeDescriptor[abi:cxx11](cockroach::roachpb::RangeDescriptor*)"}, {"value": 22, "name": "MutableUnknownFieldsForStoreDescriptor[abi:cxx11](cockroach::roachpb::StoreDescriptor*)"}, {"value": 22, "name": "MutableUnknownFieldsForObservedTimestamp[abi:cxx11](cockroach::roachpb::ObservedTimestamp*)"}, {"value": 22, "name": "MutableUnknownFieldsForReplicaDescriptor[abi:cxx11](cockroach::roachpb::ReplicaDescriptor*)"}, {"value": 22, "name": "MutableUnknownFieldsForReplicationTarget[abi:cxx11](cockroach::roachpb::ReplicationTarget*)"}, {"value": 22, "name": "MutableUnknownFieldsForStoreDeadReplicas[abi:cxx11](cockroach::roachpb::StoreDeadReplicas*)"}, {"value": 22, "name": "MutableUnknownFieldsForModifiedSpanTrigger[abi:cxx11](cockroach::roachpb::ModifiedSpanTrigger*)"}, {"value": 22, "name": "MutableUnknownFieldsForChangeReplicasTrigger[abi:cxx11](cockroach::roachpb::ChangeReplicasTrigger*)"}, {"value": 22, "name": "MutableUnknownFieldsForInternalCommitTrigger[abi:cxx11](cockroach::roachpb::InternalCommitTrigger*)"}, {"value": 22, "name": "MutableUnknownFieldsForInternalTimeSeriesData[abi:cxx11](cockroach::roachpb::InternalTimeSeriesData*)"}, {"value": 22, "name": "MutableUnknownFieldsForInternalTimeSeriesSample[abi:cxx11](cockroach::roachpb::InternalTimeSeriesSample*)"}], "name": "roachpb::"}, {"children": [{"children": [{"value": 34, "name": "SharedCtor()"}, {"value": 119, "name": "SharedDtor()"}, {"value": 230, "name": "InternalSwap(cockroach::storage::engine::enginepb::MVCCMetadata*)"}, {"value": 4, "name": "kTxnFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kDeletedFieldNumber"}, {"value": 4, "name": "kKeyBytesFieldNumber"}, {"value": 4, "name": "kRawBytesFieldNumber"}, {"value": 4, "name": "kValBytesFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kTimestampFieldNumber"}, {"value": 4, "name": "kMergeTimestampFieldNumber"}, {"value": 1165, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::storage::engine::enginepb::MVCCMetadata*)"}, {"value": 546, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::storage::engine::enginepb::MVCCMetadata const&)"}, {"value": 545, "name": "MergeFrom(cockroach::storage::engine::enginepb::MVCCMetadata const&)"}, {"value": 778, "name": "MVCCMetadata(cockroach::storage::engine::enginepb::MVCCMetadata const&)"}, {"value": 490, "name": "MVCCMetadata()"}, {"value": 384, "name": "~MVCCMetadata()"}, {"value": 100, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 316, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 220, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "MVCCMetadata::"}, {"children": [{"value": 26, "name": "SharedCtor()"}, {"value": 104, "name": "SharedDtor()"}, {"value": 61, "name": "InternalSwap(cockroach::storage::engine::enginepb::SSTUserProperties*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kPathFieldNumber"}, {"value": 4, "name": "kTsMaxFieldNumber"}, {"value": 4, "name": "kTsMinFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 616, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 66, "name": "Swap(cockroach::storage::engine::enginepb::SSTUserProperties*)"}, {"value": 79, "name": "Clear()"}, {"value": 114, "name": "CopyFrom(cockroach::storage::engine::enginepb::SSTUserProperties const&)"}, {"value": 384, "name": "MergeFrom(cockroach::storage::engine::enginepb::SSTUserProperties const&)"}, {"value": 690, "name": "SSTUserProperties(cockroach::storage::engine::enginepb::SSTUserProperties const&)"}, {"value": 460, "name": "SSTUserProperties()"}, {"value": 354, "name": "~SSTUserProperties()"}, {"value": 110, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 160, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 128, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "SSTUserProperties::"}, {"children": [{"value": 7, "name": "IsValid(int)"}], "name": "IsolationType_"}, {"value": 80, "name": "_TxnMeta_default_instance_"}, {"children": [{"value": 19, "name": "SharedCtor()"}, {"value": 47, "name": "SharedDtor()"}, {"value": 61, "name": "InternalSwap(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection*)"}, {"value": 4, "name": "kSstFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kErrorFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 605, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 66, "name": "Swap(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection*)"}, {"value": 42, "name": "Clear()"}, {"value": 77, "name": "CopyFrom(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection const&)"}, {"value": 223, "name": "MergeFrom(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection const&)"}, {"value": 636, "name": "SSTUserPropertiesCollection(cockroach::storage::engine::enginepb::SSTUserPropertiesCollection const&)"}, {"value": 630, "name": "SSTUserPropertiesCollection()"}, {"value": 418, "name": "~SSTUserPropertiesCollection()"}, {"value": 111, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 157, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 132, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "SSTUserPropertiesCollection::"}, {"value": 144, "name": "_MVCCStats_default_instance_"}, {"value": 88, "name": "_MVCCMetadata_default_instance_"}, {"value": 56, "name": "_SSTUserProperties_default_instance_"}, {"value": 64, "name": "_SSTUserPropertiesCollection_default_instance_"}, {"children": [{"children": [{"value": 235, "name": "InitDefaultsImpl()"}, {"value": 76, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 122, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2fstorage_2fengine_2fenginepb_2fmvcc_2eproto::"}, {"children": [{"children": [{"value": 158, "name": "InitDefaultsImpl()"}, {"value": 50, "name": "Shutdown()"}], "name": "TableStruct::"}, {"value": 105, "name": "InitDefaults()"}, {"value": 105, "name": "AddDescriptors()"}, {"value": 122, "name": "AddDescriptorsImpl()"}, {"children": [{"value": 8, "name": "once"}], "name": "InitDefaults()::"}, {"children": [{"value": 8, "name": "once"}], "name": "AddDescriptors()::"}], "name": "protobuf_cockroach_2fpkg_2fstorage_2fengine_2fenginepb_2frocksdb_2eproto::"}, {"children": [{"value": 40, "name": "SharedCtor()"}, {"value": 132, "name": "SharedDtor()"}, {"value": 252, "name": "InternalSwap(cockroach::storage::engine::enginepb::TxnMeta*)"}, {"value": 4, "name": "kIdFieldNumber"}, {"value": 4, "name": "kKeyFieldNumber"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kEpochFieldNumber"}, {"value": 4, "name": "kPriorityFieldNumber"}, {"value": 4, "name": "kSequenceFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kIsolationFieldNumber"}, {"value": 4, "name": "kTimestampFieldNumber"}, {"value": 4, "name": "kBatchIndexFieldNumber"}, {"value": 1248, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 11, "name": "Swap(cockroach::storage::engine::enginepb::TxnMeta*)"}, {"value": 447, "name": "Clear()"}, {"value": 49, "name": "CopyFrom(cockroach::storage::engine::enginepb::TxnMeta const&)"}, {"value": 521, "name": "MergeFrom(cockroach::storage::engine::enginepb::TxnMeta const&)"}, {"value": 644, "name": "TxnMeta(cockroach::storage::engine::enginepb::TxnMeta const&)"}, {"value": 502, "name": "TxnMeta()"}, {"value": 272, "name": "~TxnMeta()"}, {"value": 100, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 420, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 239, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "TxnMeta::"}, {"children": [{"value": 32, "name": "SharedCtor()"}, {"value": 1, "name": "SharedDtor()"}, {"value": 368, "name": "InternalSwap(cockroach::storage::engine::enginepb::MVCCStats*)"}, {"children": [{"value": 112, "name": "instance()"}], "name": "default_"}, {"value": 4, "name": "kKeyBytesFieldNumber"}, {"value": 4, "name": "kKeyCountFieldNumber"}, {"value": 4, "name": "kSysBytesFieldNumber"}, {"value": 4, "name": "kSysCountFieldNumber"}, {"value": 4, "name": "kValBytesFieldNumber"}, {"value": 4, "name": "kValCountFieldNumber"}, {"value": 88, "name": "CheckTypeAndMergeFrom(google::protobuf::MessageLite const&)"}, {"value": 4, "name": "kIntentAgeFieldNumber"}, {"value": 4, "name": "kLiveBytesFieldNumber"}, {"value": 4, "name": "kLiveCountFieldNumber"}, {"value": 4, "name": "kGcBytesAgeFieldNumber"}, {"value": 4, "name": "kIntentBytesFieldNumber"}, {"value": 4, "name": "kIntentCountFieldNumber"}, {"value": 1645, "name": "MergePartialFromCodedStream(google::protobuf::io::CodedInputStream*)"}, {"value": 4, "name": "kLastUpdateNanosFieldNumber"}, {"value": 4, "name": "kContainsEstimatesFieldNumber"}, {"value": 11, "name": "Swap(cockroach::storage::engine::enginepb::MVCCStats*)"}, {"value": 80, "name": "Clear()"}, {"value": 90, "name": "CopyFrom(cockroach::storage::engine::enginepb::MVCCStats const&)"}, {"value": 565, "name": "MergeFrom(cockroach::storage::engine::enginepb::MVCCStats const&)"}, {"value": 468, "name": "MVCCStats(cockroach::storage::engine::enginepb::MVCCStats const&)"}, {"value": 486, "name": "MVCCStats()"}, {"value": 257, "name": "~MVCCStats()"}, {"value": 100, "name": "GetTypeName[abi:cxx11]() const"}, {"value": 194, "name": "ByteSizeLong() const"}, {"value": 4, "name": "GetCachedSize() const"}, {"value": 3, "name": "IsInitialized() const"}, {"value": 4, "name": "SetCachedSize(int) const"}, {"value": 397, "name": "SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream*) const"}, {"value": 74, "name": "New(google::protobuf::Arena*) const"}, {"value": 55, "name": "New() const"}], "name": "MVCCStats::"}, {"value": 22, "name": "MutableUnknownFieldsForTxnMeta[abi:cxx11](cockroach::storage::engine::enginepb::TxnMeta*)"}, {"value": 22, "name": "MutableUnknownFieldsForMVCCStats[abi:cxx11](cockroach::storage::engine::enginepb::MVCCStats*)"}, {"value": 22, "name": "MutableUnknownFieldsForMVCCMetadata[abi:cxx11](cockroach::storage::engine::enginepb::MVCCMetadata*)"}], "name": "storage::engine::enginepb::"}], "name": "cockroach::"}, {"children": [{"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 292, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>*)"}, {"value": 435, "name": "void _M_assign<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> const*)#1}>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&, std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> const*)#1} const&)"}, {"value": 435, "name": "void _M_assign<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::operator=(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> const*)#2}>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&, std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::operator=(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> const*)#2} const&)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 501, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 146, "name": "~_Hashtable()"}, {"value": 560, "name": "operator=(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 255, "name": "count(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 371, "name": "_M_move_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&&, std::integral_constant<bool, true>)"}, {"value": 375, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true>*)"}, {"value": 234, "name": "clear()"}, {"value": 329, "name": "void _M_assign<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true> const*)#1}>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&, std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true> const*)#1} const&)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true>*)"}, {"value": 272, "name": "_M_erase(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 172, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 17, "name": "_M_get_Tp_allocator() const"}, {"value": 83, "name": "_M_allocate(unsigned long)"}, {"children": [{"value": 64, "name": "_Vector_impl()"}, {"value": 27, "name": "~_Vector_impl()"}], "name": "_Vector_impl::"}, {"value": 65, "name": "_M_deallocate(void (**)(), unsigned long)"}, {"value": 17, "name": "_M_get_Tp_allocator()"}, {"value": 27, "name": "_Vector_base()"}, {"value": 88, "name": "~_Vector_base()"}], "name": "_Vector_base<void (*)(), std::allocator<void (*)()> >::"}, {"children": [{"children": [{"value": 3, "name": "_M_is_deferred_future() const"}, {"value": 187, "name": "_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>)"}, {"value": 1, "name": "_M_complete_async()"}, {"value": 86, "name": "_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)"}, {"value": 111, "name": "~_State_baseV2()"}], "name": "_State_baseV2::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 108, "name": "~_Result()"}], "name": "_Result<rocksdb::BackupEngineImpl::CopyOrCreateResult>::"}], "name": "__future_base::"}, {"children": [{"value": 229, "name": "_M_get_result() const"}, {"value": 208, "name": "__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&)"}], "name": "__basic_future<rocksdb::BackupEngineImpl::CopyOrCreateResult>::"}, {"children": [{"value": 17, "name": "base() const"}, {"value": 36, "name": "operator*() const"}, {"children": [{"value": 28, "name": "iterator(std::reverse_iterator<char const*> const&)"}, {"value": 25, "name": "iterator(char const*)"}, {"value": 21, "name": "iterator()"}], "name": "reverse_"}, {"value": 27, "name": "operator++()"}], "name": "reverse_iterator<char const*>::"}, {"children": [{"value": 289, "name": "at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::"}, {"children": [{"value": 28, "name": "size() const"}, {"value": 35, "name": "operator[](unsigned long) const"}, {"value": 401, "name": "void _M_assign_aux<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::forward_iterator_tag)"}, {"value": 1171, "name": "void _M_range_insert<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::forward_iterator_tag)"}, {"value": 801, "name": "_M_default_append(unsigned long)"}, {"value": 590, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 459, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)"}, {"value": 130, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* _M_allocate_and_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(unsigned long, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)"}, {"value": 318, "name": "reserve(unsigned long)"}, {"children": [{"value": 182, "name": "back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "push_"}, {"value": 153, "name": "vector(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}], "name": "vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 221, "name": "_M_check_len(unsigned long, char const*) const"}, {"value": 100, "name": "_M_range_check(unsigned long) const"}, {"value": 28, "name": "size() const"}, {"children": [{"value": 35, "name": "size() const"}], "name": "max_"}, {"value": 952, "name": "_M_insert_aux(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())"}, {"value": 66, "name": "at(unsigned long)"}, {"value": 50, "name": "end()"}, {"value": 46, "name": "begin()"}, {"children": [{"value": 119, "name": "back(void (* const&)())"}], "name": "push_"}, {"value": 27, "name": "vector()"}, {"value": 138, "name": "~vector()"}, {"value": 35, "name": "operator[](unsigned long)"}], "name": "vector<void (*)(), std::allocator<void (*)()> >::"}, {"children": [{"value": 281, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 196, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > _M_insert_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)"}, {"value": 90, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* _M_create_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 210, "name": "std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, bool> _M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 405, "name": "void _M_construct_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 231, "name": "void _M_construct_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"children": [{"value": 259, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* operator()<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}], "name": "_Reuse_or_alloc_node::"}, {"value": 325, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)"}, {"value": 275, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 298, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 627, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 274, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 293, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* _M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)"}, {"value": 264, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* _M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Reuse_or_alloc_node&)"}, {"value": 90, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}, {"value": 233, "name": "operator=(std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"children": [{"value": 166, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>* operator()<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) const"}], "name": "_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > >::"}, {"children": [{"value": 223, "name": "at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const"}, {"value": 289, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 169, "name": "insert(rocksdb::ThreadStatusData* const&)"}], "name": "_Insert_base<rocksdb::ThreadStatusData*, rocksdb::ThreadStatusData*, std::allocator<rocksdb::ThreadStatusData*>, std::__detail::_Identity, std::equal_to<rocksdb::ThreadStatusData*>, std::hash<rocksdb::ThreadStatusData*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 155, "name": "insert(std::pair<int const, rocksdb::VersionEdit> const&)"}], "name": "_Insert_base<int, std::pair<int const, rocksdb::VersionEdit>, std::allocator<std::pair<int const, rocksdb::VersionEdit> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 155, "name": "insert(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}], "name": "_Insert_base<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 177, "name": "insert(unsigned long const&)"}], "name": "_Insert_base<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 233, "name": "std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>* _M_allocate_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel>, true> > >::"}, {"children": [{"value": 286, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo>, true> > >::"}, {"children": [{"value": 266, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode>, true> > >::"}, {"children": [{"value": 284, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> const&)"}, {"value": 272, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true>* _M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel>, true> > >::"}, {"children": [{"value": 256, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint>, true> > >::"}, {"children": [{"value": 246, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, true>* _M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, true> > >::"}, {"children": [{"value": 95, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 261, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>* _M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > >::"}, {"children": [{"value": 95, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > const&)"}, {"value": 246, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true>* _M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, true> > >::"}, {"children": [{"value": 95, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, true> > >::"}, {"children": [{"value": 254, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true>* _M_allocate_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&)"}, {"value": 246, "name": "std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true>* _M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> > >::"}, {"children": [{"value": 105, "name": "std::__detail::_Hash_node<std::pair<int const, rocksdb::VersionEdit>, false>* _M_allocate_node<std::pair<int const, rocksdb::VersionEdit> const&>(std::pair<int const, rocksdb::VersionEdit> const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, rocksdb::VersionEdit>, false> > >::"}, {"children": [{"value": 240, "name": "std::__detail::_Hash_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>* _M_allocate_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false> > >::"}, {"children": [{"value": 240, "name": "std::__detail::_Hash_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>* _M_allocate_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}], "name": "_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false> > >::"}, {"children": [{"value": 275, "name": "operator[](rocksdb::Slice const&)"}], "name": "_Map_base<rocksdb::Slice, std::pair<rocksdb::Slice const, void*>, std::allocator<std::pair<rocksdb::Slice const, void*> >, std::__detail::_Select1st, std::equal_to<rocksdb::Slice>, rocksdb::SliceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 292, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 289, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 289, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 289, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::"}, {"children": [{"value": 218, "name": "operator[](void const* const&)"}], "name": "_Map_base<void const*, std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > >, std::allocator<std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > > >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::"}], "name": "__detail::"}, {"children": [{"value": 17, "name": "flags() const"}, {"value": 119, "name": "setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"}, {"value": 38, "name": "width(long)"}, {"value": 58, "name": "unsetf(std::_Ios_Fmtflags)"}], "name": "ios_base::"}, {"children": [{"value": 27, "name": "allocator()"}, {"value": 27, "name": "~allocator()"}], "name": "allocator<void (*)()>::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 256, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<rocksdb::Slice const, void*>, true>*)"}], "name": "_Hashtable<rocksdb::Slice, std::pair<rocksdb::Slice const, void*>, std::allocator<std::pair<rocksdb::Slice const, void*> >, std::__detail::_Select1st, std::equal_to<rocksdb::Slice>, rocksdb::SliceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 216, "name": "rehash(unsigned long)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool> _M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 292, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true>*)"}, {"value": 232, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 275, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyOptions> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Slice> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 172, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, true>*)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBImpl::RecoveredTransaction*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, true> > > const&, std::integral_constant<bool, true>)"}, {"value": 593, "name": "_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> > const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 375, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 225, "name": "clear()"}, {"value": 272, "name": "_M_erase(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 276, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true>*)"}, {"value": 272, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, false, true>, bool> _M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, true> > > const&, std::integral_constant<bool, true>)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 379, "name": "std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, false, true>, bool> _M_emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long const&>(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, unsigned long const&)"}, {"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 274, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true>*)"}, {"value": 213, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 172, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true>*)"}, {"value": 417, "name": "void _M_assign<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> const*)#1}>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&, std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> const*)#1} const&)"}], "name": "_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<void const*, false>*)"}], "name": "_Hashtable<void const*, void const*, std::allocator<void const*>, std::__detail::_Identity, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 305, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<void const* const, std::unique_ptr<rocksdb::ConstantColumnFamilyInfo, std::default_delete<rocksdb::ConstantColumnFamilyInfo> > >, false>*)"}, {"value": 145, "name": "clear()"}, {"value": 211, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<void const* const, std::unique_ptr<rocksdb::ConstantColumnFamilyInfo, std::default_delete<rocksdb::ConstantColumnFamilyInfo> > >, false>*)"}], "name": "_Hashtable<void const*, std::pair<void const* const, std::unique_ptr<rocksdb::ConstantColumnFamilyInfo, std::default_delete<rocksdb::ConstantColumnFamilyInfo> > >, std::allocator<std::pair<void const* const, std::unique_ptr<rocksdb::ConstantColumnFamilyInfo, std::default_delete<rocksdb::ConstantColumnFamilyInfo> > > >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 325, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > >, false>*)"}, {"value": 251, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > >, false>*)"}, {"value": 211, "name": "~_Hashtable()"}], "name": "_Hashtable<void const*, std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > >, std::allocator<std::pair<void const* const, std::unordered_set<void const*, std::hash<void const*>, std::equal_to<void const*>, std::allocator<void const*> > > >, std::__detail::_Select1st, std::equal_to<void const*>, std::hash<void const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<rocksdb::Compaction*, false>*)"}], "name": "_Hashtable<rocksdb::Compaction*, rocksdb::Compaction*, std::allocator<rocksdb::Compaction*>, std::__detail::_Identity, std::equal_to<rocksdb::Compaction*>, std::hash<rocksdb::Compaction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<rocksdb::ThreadStatusData*, false>*)"}], "name": "_Hashtable<rocksdb::ThreadStatusData*, rocksdb::ThreadStatusData*, std::allocator<rocksdb::ThreadStatusData*>, std::__detail::_Identity, std::equal_to<rocksdb::ThreadStatusData*>, std::hash<rocksdb::ThreadStatusData*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 261, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, rocksdb::VersionEdit>, false>*)"}], "name": "_Hashtable<int, std::pair<int const, rocksdb::VersionEdit>, std::allocator<std::pair<int const, rocksdb::VersionEdit> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 270, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>*)"}, {"value": 172, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>*)"}], "name": "_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 269, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>*)"}, {"value": 171, "name": "_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>*)"}], "name": "_Hashtable<unsigned int, std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 251, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, void (*)(void*)>, false>*)"}], "name": "_Hashtable<unsigned int, std::pair<unsigned int const, void (*)(void*)>, std::allocator<std::pair<unsigned int const, void (*)(void*)> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 251, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, rocksdb::ColumnFamilyData*>, false>*)"}, {"value": 173, "name": "erase(std::__detail::_Node_const_iterator<std::pair<unsigned int const, rocksdb::ColumnFamilyData*>, false, false>)"}], "name": "_Hashtable<unsigned int, std::pair<unsigned int const, rocksdb::ColumnFamilyData*>, std::allocator<std::pair<unsigned int const, rocksdb::ColumnFamilyData*> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, rocksdb::FileDescriptor const*>, false>*)"}], "name": "_Hashtable<unsigned long, std::pair<unsigned long const, rocksdb::FileDescriptor const*>, std::allocator<std::pair<unsigned long const, rocksdb::FileDescriptor const*> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, rocksdb::FileMetaData*>, false>*)"}], "name": "_Hashtable<unsigned long, std::pair<unsigned long const, rocksdb::FileMetaData*>, std::allocator<std::pair<unsigned long const, rocksdb::FileMetaData*> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*)"}], "name": "_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::"}, {"children": [{"value": 243, "name": "_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"}, {"value": 252, "name": "_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long, false>*)"}, {"value": 174, "name": "erase(std::__detail::_Node_const_iterator<unsigned long, true, false>)"}, {"value": 540, "name": "_Hashtable<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > > >(__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, std::hash<unsigned long> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<unsigned long> const&, std::__detail::_Identity const&, std::allocator<unsigned long> const&)"}], "name": "_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::"}, {"children": [{"value": 14, "name": "_S_base(void (**)())"}], "name": "_Iter_base<void (**)(), false>::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::ThreadPoolImpl::BGItem**, rocksdb::ThreadPoolImpl::BGItem**)"}, {"value": 270, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::ThreadPoolImpl::BGItem, std::allocator<rocksdb::ThreadPoolImpl::BGItem> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::BackupEngineImpl::CopyOrCreateWorkItem**, rocksdb::BackupEngineImpl::CopyOrCreateWorkItem**)"}, {"value": 276, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::Slice**, rocksdb::Slice**)"}, {"value": 270, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::Slice, std::allocator<rocksdb::Slice> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::DBImpl::PurgeFileInfo**, rocksdb::DBImpl::PurgeFileInfo**)"}, {"value": 288, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::DBImpl::PurgeFileInfo, std::allocator<rocksdb::DBImpl::PurgeFileInfo> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::DBImpl::LogWriterNumber**, rocksdb::DBImpl::LogWriterNumber**)"}, {"value": 331, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::DBImpl::LogWriterNumber, std::allocator<rocksdb::DBImpl::LogWriterNumber> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::DBImpl::LogFileNumberSize**, rocksdb::DBImpl::LogFileNumberSize**)"}, {"value": 331, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::DBImpl::LogFileNumberSize, std::allocator<rocksdb::DBImpl::LogFileNumberSize> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::SavePoint**, rocksdb::SavePoint**)"}, {"value": 270, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::SavePoint, std::allocator<rocksdb::SavePoint> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >**)"}, {"value": 270, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::VersionSet::ManifestWriter***, rocksdb::VersionSet::ManifestWriter***)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::VersionSet::ManifestWriter*, std::allocator<rocksdb::VersionSet::ManifestWriter*> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::ColumnFamilyData***, rocksdb::ColumnFamilyData***)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::ColumnFamilyData*, std::allocator<rocksdb::ColumnFamilyData*> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::GenericRateLimiter::Req***, rocksdb::GenericRateLimiter::Req***)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::GenericRateLimiter::Req*, std::allocator<rocksdb::GenericRateLimiter::Req*> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::log::Writer***, rocksdb::log::Writer***)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(rocksdb::DBImpl::ManualCompaction***, rocksdb::DBImpl::ManualCompaction***)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<rocksdb::DBImpl::ManualCompaction*, std::allocator<rocksdb::DBImpl::ManualCompaction*> >::"}, {"children": [{"value": 126, "name": "_M_create_nodes(unsigned long**, unsigned long**)"}, {"value": 256, "name": "_M_initialize_map(unsigned long)"}], "name": "_Deque_base<unsigned long, std::allocator<unsigned long> >::"}, {"children": [{"value": 72, "name": "compare(char const*, char const*, unsigned long)"}], "name": "char_traits<char>::"}, {"children": [{"value": 14, "name": "void __destroy<void (**)()>(void (**)(), void (**)())"}], "name": "_Destroy_aux<true>::"}, {"children": [{"value": 254, "name": "error(std::error_code)"}], "name": "future_error::future_"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::ChecksumType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ChecksumType> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::EncodingType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::EncodingType> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::InfoLogLevel, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::InfoLogLevel> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::DBPropertyInfo, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBPropertyInfo> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::OptionTypeInfo, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionTypeInfo> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::CompactionStyle, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompactionStyle> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::CompressionType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::CompressionType> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::WALRecoveryMode, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::WALRecoveryMode> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::BlockBasedTableOptions::IndexType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::BlockBasedTableOptions::IndexType> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::OptionsSanityCheckLevel, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::OptionsSanityCheckLevel> > >::"}, {"children": [{"value": 128, "name": "~unordered_map()"}], "name": "unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::DBOptions::AccessHint, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::DBOptions::AccessHint> > >::"}, {"children": [{"value": 169, "name": "erase(std::__detail::_Node_iterator<std::pair<unsigned int const, rocksdb::(anonymous namespace)::BaseReferencedVersionBuilder*>, false, false>)"}, {"value": 616, "name": "insert(std::pair<unsigned int const, rocksdb::(anonymous namespace)::BaseReferencedVersionBuilder*> const&)"}], "name": "unordered_map<unsigned int, rocksdb::(anonymous namespace)::BaseReferencedVersionBuilder*, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::(anonymous namespace)::BaseReferencedVersionBuilder*> > >::"}, {"children": [{"value": 236, "name": "erase(unsigned long const&)"}], "name": "unordered_map<unsigned long, unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::"}, {"children": [{"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<std::__future_base::_State_baseV2::_Setter<rocksdb::BackupEngineImpl::CopyOrCreateResult, rocksdb::BackupEngineImpl::CopyOrCreateResult&&> >::"}, {"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::LDBCommand* (*)(rocksdb::LDBCommand::ParsedParams const&)>::"}, {"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_0>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_1>::"}, {"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_2>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_3>::"}, {"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_4>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_5>::"}, {"children": [{"value": 39, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_6>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_7>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<rocksdb::BackupEngine::CreateNewBackup(rocksdb::DB*, bool, std::function<void ()>)::{default arg#1}::{lambda()#1}> const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::BackupEngine::CreateNewBackup(rocksdb::DB*, bool, std::function<void ()>)::{default arg#1}::{lambda()#1}>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::StatisticsImpl::setTickerCount(unsigned int, unsigned long)::$_2>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::StatisticsImpl::getAndResetTickerCount(unsigned int)::$_3>::"}, {"children": [{"value": 104, "name": "_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool)::{lambda()#1}> const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool)::{lambda()#1}>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem::CopyOrCreateWorkItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Env*, rocksdb::Env*, bool, rocksdb::RateLimiter*, unsigned long, std::function<void ()>)::{default arg#1}::{lambda()#1}> const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem::CopyOrCreateWorkItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Env*, rocksdb::Env*, bool, rocksdb::RateLimiter*, unsigned long, std::function<void ()>)::{default arg#1}::{lambda()#1}>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<rocksdb::BackupEngineImpl::AddBackupFileWorkItem(std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem> >&, unsigned int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RateLimiter*, unsigned long, unsigned long, bool, std::function<void ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{default arg#2}::{lambda()#1}> const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::BackupEngineImpl::AddBackupFileWorkItem(std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem> >&, unsigned int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RateLimiter*, unsigned long, unsigned long, bool, std::function<void ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{default arg#2}::{lambda()#1}>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::StatisticsImpl::HistogramInfo::getMergedHistogram() const::$_1>::"}, {"children": [{"value": 25, "name": "_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)"}], "name": "_Base_manager<rocksdb::StatisticsImpl::getTickerCount(unsigned int) const::$_0>::"}], "name": "_Function_base::"}, {"children": [{"value": 300, "name": "__shared_count<rocksdb::BackupEngineImpl::FileInfo, std::allocator<rocksdb::BackupEngineImpl::FileInfo>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, unsigned int&>(std::_Sp_make_shared_tag, rocksdb::BackupEngineImpl::FileInfo*, std::allocator<rocksdb::BackupEngineImpl::FileInfo> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, unsigned int&)"}, {"value": 269, "name": "__shared_count<rocksdb::BlockBasedTableFactory, std::allocator<rocksdb::BlockBasedTableFactory>>(std::_Sp_make_shared_tag, rocksdb::BlockBasedTableFactory*, std::allocator<rocksdb::BlockBasedTableFactory> const&)"}, {"value": 121, "name": "__shared_count<DBEventListener*>(DBEventListener*)"}, {"value": 121, "name": "__shared_count<TimeBoundTblPropCollectorFactory*>(TimeBoundTblPropCollectorFactory*)"}, {"value": 121, "name": "__shared_count<rocksdb::FilterPolicy const*>(rocksdb::FilterPolicy const*)"}, {"value": 114, "name": "__shared_count<rocksdb::SliceTransform const*>(rocksdb::SliceTransform const*)"}, {"value": 114, "name": "__shared_count<rocksdb::MemTableRep*>(rocksdb::MemTableRep*)"}, {"value": 114, "name": "__shared_count<rocksdb::PosixLogger*>(rocksdb::PosixLogger*)"}, {"value": 114, "name": "__shared_count<rocksdb::RateLimiter*>(rocksdb::RateLimiter*)"}, {"value": 114, "name": "__shared_count<rocksdb::StderrLogger*>(rocksdb::StderrLogger*)"}, {"value": 121, "name": "__shared_count<rocksdb::TableFactory*>(rocksdb::TableFactory*)"}, {"value": 114, "name": "__shared_count<rocksdb::AutoRollLogger*>(rocksdb::AutoRollLogger*)"}, {"value": 114, "name": "__shared_count<rocksdb::SkipListFactory*>(rocksdb::SkipListFactory*)"}, {"value": 121, "name": "__shared_count<rocksdb::TableProperties*>(rocksdb::TableProperties*)"}, {"value": 131, "name": "__shared_count<rocksdb::BackupEngineImpl::FileInfo*>(rocksdb::BackupEngineImpl::FileInfo*)"}, {"value": 114, "name": "__shared_count<rocksdb::TtlMergeOperator*>(rocksdb::TtlMergeOperator*)"}, {"value": 114, "name": "__shared_count<rocksdb::PlainTableFactory*>(rocksdb::PlainTableFactory*)"}, {"value": 114, "name": "__shared_count<rocksdb::MemTableRepFactory*>(rocksdb::MemTableRepFactory*)"}, {"value": 113, "name": "__shared_count<rocksdb::WriteBufferManager*>(rocksdb::WriteBufferManager*)"}, {"value": 114, "name": "__shared_count<rocksdb::BlockBasedTableFactory*>(rocksdb::BlockBasedTableFactory*)"}, {"value": 114, "name": "__shared_count<rocksdb::TtlCompactionFilterFactory*>(rocksdb::TtlCompactionFilterFactory*)"}, {"value": 114, "name": "__shared_count<rocksdb::FlushBlockBySizePolicyFactory*>(rocksdb::FlushBlockBySizePolicyFactory*)"}, {"value": 126, "name": "__shared_count<std::vector<char const*, std::allocator<char const*> >*>(std::vector<char const*, std::allocator<char const*> >*)"}], "name": "__shared_count<(__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 15, "name": "infinity()"}, {"children": [{"value": 15, "name": "NaN()"}], "name": "quiet_"}], "name": "numeric_limits<double>::"}, {"children": [{"value": 11, "name": "max()"}], "name": "numeric_limits<int>::"}, {"children": [{"value": 16, "name": "max()"}], "name": "numeric_limits<long>::"}, {"children": [{"value": 13, "name": "max()"}], "name": "numeric_limits<unsigned long>::"}, {"children": [{"value": 513, "name": "push(rocksdb::(anonymous namespace)::InputFileInfo&&)"}], "name": "priority_queue<rocksdb::(anonymous namespace)::InputFileInfo, std::vector<rocksdb::(anonymous namespace)::InputFileInfo, std::allocator<rocksdb::(anonymous namespace)::InputFileInfo> >, rocksdb::(anonymous namespace)::UserKeyComparator>::"}, {"children": [{"value": 250, "name": "push(rocksdb::InternalIterator*&&)"}, {"value": 250, "name": "push(rocksdb::InternalIterator* const&)"}], "name": "priority_queue<rocksdb::InternalIterator*, std::vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> >, rocksdb::MinIterComparator>::"}, {"children": [{"value": 252, "name": "pop()"}], "name": "priority_queue<unsigned long, std::vector<unsigned long, std::allocator<unsigned long> >, std::greater<unsigned long> >::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<DBEventListener*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<TimeBoundTblPropCollectorFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::FilterPolicy const*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::SliceTransform const*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<(anonymous namespace)::DBMergeOperator*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<(anonymous namespace)::DBPrefixExtractor*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<(anonymous namespace)::CockroachKeyFormatter*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<(anonymous namespace)::DBLogger*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::MemTableRep*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::PosixLogger*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::RateLimiter*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::StderrLogger*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::TableFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::AutoRollLogger*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::SkipListFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 44, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::TableProperties*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 54, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::BackupEngineImpl::FileInfo*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::TtlMergeOperator*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::PlainTableFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::MemTableRepFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 15, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::WriteBufferManager*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::BlockBasedTableFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::TtlCompactionFilterFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 16, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<rocksdb::FlushBlockBySizePolicyFactory*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 12, "name": "_M_destroy()"}, {"value": 49, "name": "_M_dispose()"}, {"value": 3, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 5, "name": "~_Sp_counted_ptr()"}], "name": "_Sp_counted_ptr<std::vector<char const*, std::allocator<char const*> >*, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 1, "name": "~_Sp_counted_base()"}], "name": "_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 225, "name": "void construct<rocksdb::JobContext::CandidateFileInfo, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int>(std::allocator<rocksdb::JobContext::CandidateFileInfo>&, rocksdb::JobContext::CandidateFileInfo*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&&)"}, {"value": 225, "name": "void construct<rocksdb::JobContext::CandidateFileInfo, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int>(std::allocator<rocksdb::JobContext::CandidateFileInfo>&, rocksdb::JobContext::CandidateFileInfo*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int&&)"}], "name": "allocator_traits<std::allocator<rocksdb::JobContext::CandidateFileInfo> >::"}, {"children": [{"value": 277, "name": "void construct<rocksdb::(anonymous namespace)::Repairer::TableInfo, rocksdb::(anonymous namespace)::Repairer::TableInfo const&>(std::allocator<rocksdb::(anonymous namespace)::Repairer::TableInfo>&, rocksdb::(anonymous namespace)::Repairer::TableInfo*, rocksdb::(anonymous namespace)::Repairer::TableInfo const&)"}], "name": "allocator_traits<std::allocator<rocksdb::(anonymous namespace)::Repairer::TableInfo> >::"}, {"children": [{"value": 324, "name": "void construct<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}], "name": "allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::"}, {"children": [{"value": 325, "name": "void construct<std::thread, rocksdb::BackupEngineImpl::Initialize()::$_0>(std::allocator<std::thread>&, std::thread*, rocksdb::BackupEngineImpl::Initialize()::$_0&&)"}], "name": "allocator_traits<std::allocator<std::thread> >::"}, {"children": [{"value": 8, "name": "_M_invoke(std::_Any_data const&, rocksdb::LDBCommand::ParsedParams const&)"}], "name": "_Function_handler<rocksdb::LDBCommand* (rocksdb::LDBCommand::ParsedParams const&), rocksdb::LDBCommand* (*)(rocksdb::LDBCommand::ParsedParams const&)>::"}, {"children": [{"value": 136, "name": "_M_invoke(std::_Any_data const&)"}], "name": "_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_State_baseV2::_Setter<rocksdb::BackupEngineImpl::CopyOrCreateResult, rocksdb::BackupEngineImpl::CopyOrCreateResult&&> >::"}, {"children": [{"value": 85, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileMetaData const*&&, rocksdb::FileMetaData const*&&)"}], "name": "_Function_handler<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_0>::"}, {"children": [{"value": 85, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileMetaData const*&&, rocksdb::FileMetaData const*&&)"}], "name": "_Function_handler<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_2>::"}, {"children": [{"value": 85, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileMetaData const*&&, rocksdb::FileMetaData const*&&)"}], "name": "_Function_handler<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_4>::"}, {"children": [{"value": 85, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileMetaData const*&&, rocksdb::FileMetaData const*&&)"}], "name": "_Function_handler<int (rocksdb::FileMetaData const*, rocksdb::FileMetaData const*), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_6>::"}, {"children": [{"value": 8, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileIndexer::IndexUnit*&&, int&&)"}], "name": "_Function_handler<void (rocksdb::FileIndexer::IndexUnit*, int), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_1>::"}, {"children": [{"value": 9, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileIndexer::IndexUnit*&&, int&&)"}], "name": "_Function_handler<void (rocksdb::FileIndexer::IndexUnit*, int), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_3>::"}, {"children": [{"value": 9, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileIndexer::IndexUnit*&&, int&&)"}], "name": "_Function_handler<void (rocksdb::FileIndexer::IndexUnit*, int), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_5>::"}, {"children": [{"value": 9, "name": "_M_invoke(std::_Any_data const&, rocksdb::FileIndexer::IndexUnit*&&, int&&)"}], "name": "_Function_handler<void (rocksdb::FileIndexer::IndexUnit*, int), rocksdb::FileIndexer::UpdateIndex(rocksdb::Arena*, unsigned long, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >*)::$_7>::"}, {"children": [{"value": 11, "name": "_M_invoke(std::_Any_data const&, void*&&, void*&&)"}], "name": "_Function_handler<void (void*, void*), rocksdb::StatisticsImpl::setTickerCount(unsigned int, unsigned long)::$_2>::"}, {"children": [{"value": 15, "name": "_M_invoke(std::_Any_data const&, void*&&, void*&&)"}], "name": "_Function_handler<void (void*, void*), rocksdb::StatisticsImpl::getAndResetTickerCount(unsigned int)::$_3>::"}, {"children": [{"value": 11, "name": "_M_invoke(std::_Any_data const&, void*&&, void*&&)"}], "name": "_Function_handler<void (void*, void*), rocksdb::StatisticsImpl::HistogramInfo::getMergedHistogram() const::$_1>::"}, {"children": [{"value": 13, "name": "_M_invoke(std::_Any_data const&, void*&&, void*&&)"}], "name": "_Function_handler<void (void*, void*), rocksdb::StatisticsImpl::getTickerCount(unsigned int) const::$_0>::"}, {"children": [{"value": 1, "name": "_M_invoke(std::_Any_data const&)"}], "name": "_Function_handler<void (), rocksdb::BackupEngine::CreateNewBackup(rocksdb::DB*, bool, std::function<void ()>)::{default arg#1}::{lambda()#1}>::"}, {"children": [{"value": 8, "name": "_M_invoke(std::_Any_data const&)"}], "name": "_Function_handler<void (), rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool)::{lambda()#1}>::"}, {"children": [{"value": 1, "name": "_M_invoke(std::_Any_data const&)"}], "name": "_Function_handler<void (), rocksdb::BackupEngineImpl::CopyOrCreateWorkItem::CopyOrCreateWorkItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Env*, rocksdb::Env*, bool, rocksdb::RateLimiter*, unsigned long, std::function<void ()>)::{default arg#1}::{lambda()#1}>::"}, {"children": [{"value": 1, "name": "_M_invoke(std::_Any_data const&)"}], "name": "_Function_handler<void (), rocksdb::BackupEngineImpl::AddBackupFileWorkItem(std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem> >&, unsigned int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::RateLimiter*, unsigned long, unsigned long, bool, std::function<void ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{default arg#2}::{lambda()#1}>::"}, {"children": [{"value": 359, "name": "rocksdb::JobContext::CandidateFileInfo* __uninit_copy<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo const*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, rocksdb::JobContext::CandidateFileInfo*>(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo const*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo const*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, rocksdb::JobContext::CandidateFileInfo*)"}, {"value": 230, "name": "rocksdb::SstFileMetaData* __uninit_copy<__gnu_cxx::__normal_iterator<rocksdb::SstFileMetaData const*, std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> > >, rocksdb::SstFileMetaData*>(__gnu_cxx::__normal_iterator<rocksdb::SstFileMetaData const*, std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> > >, __gnu_cxx::__normal_iterator<rocksdb::SstFileMetaData const*, std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> > >, rocksdb::SstFileMetaData*)"}, {"value": 310, "name": "rocksdb::CompactionInputFiles* __uninit_copy<__gnu_cxx::__normal_iterator<rocksdb::CompactionInputFiles const*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > >, rocksdb::CompactionInputFiles*>(__gnu_cxx::__normal_iterator<rocksdb::CompactionInputFiles const*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > >, __gnu_cxx::__normal_iterator<rocksdb::CompactionInputFiles const*, std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > >, rocksdb::CompactionInputFiles*)"}, {"value": 421, "name": "rocksdb::ColumnFamilyDescriptor* __uninit_copy<__gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > >, rocksdb::ColumnFamilyDescriptor*>(__gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > >, __gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > >, rocksdb::ColumnFamilyDescriptor*)"}, {"value": 359, "name": "rocksdb::DbPath* __uninit_copy<__gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > >, rocksdb::DbPath*>(__gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > >, __gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > >, rocksdb::DbPath*)"}, {"value": 343, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* __uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 207, "name": "std::pair<int, rocksdb::FileMetaData>* __uninit_copy<__gnu_cxx::__normal_iterator<std::pair<int, rocksdb::FileMetaData> const*, std::vector<std::pair<int, rocksdb::FileMetaData>, std::allocator<std::pair<int, rocksdb::FileMetaData> > > >, std::pair<int, rocksdb::FileMetaData>*>(__gnu_cxx::__normal_iterator<std::pair<int, rocksdb::FileMetaData> const*, std::vector<std::pair<int, rocksdb::FileMetaData>, std::allocator<std::pair<int, rocksdb::FileMetaData> > > >, __gnu_cxx::__normal_iterator<std::pair<int, rocksdb::FileMetaData> const*, std::vector<std::pair<int, rocksdb::FileMetaData>, std::allocator<std::pair<int, rocksdb::FileMetaData> > > >, std::pair<int, rocksdb::FileMetaData>*)"}, {"value": 343, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* __uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 310, "name": "rocksdb::CompactionInputFiles* __uninit_copy<rocksdb::CompactionInputFiles const*, rocksdb::CompactionInputFiles*>(rocksdb::CompactionInputFiles const*, rocksdb::CompactionInputFiles const*, rocksdb::CompactionInputFiles*)"}, {"value": 421, "name": "rocksdb::ColumnFamilyDescriptor* __uninit_copy<rocksdb::ColumnFamilyDescriptor const*, rocksdb::ColumnFamilyDescriptor*>(rocksdb::ColumnFamilyDescriptor const*, rocksdb::ColumnFamilyDescriptor const*, rocksdb::ColumnFamilyDescriptor*)"}, {"value": 359, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* __uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)"}, {"value": 378, "name": "std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >* __uninit_copy<std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*>(std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)"}, {"value": 378, "name": "std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >* __uninit_copy<std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*>(std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const*, std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)"}, {"value": 207, "name": "rocksdb::ThreadStatus* __uninit_copy<rocksdb::ThreadStatus*, rocksdb::ThreadStatus*>(rocksdb::ThreadStatus*, rocksdb::ThreadStatus*, rocksdb::ThreadStatus*)"}, {"value": 175, "name": "rocksdb::LevelMetaData* __uninit_copy<rocksdb::LevelMetaData*, rocksdb::LevelMetaData*>(rocksdb::LevelMetaData*, rocksdb::LevelMetaData*, rocksdb::LevelMetaData*)"}, {"value": 200, "name": "rocksdb::EnvRegistryEntry* __uninit_copy<rocksdb::EnvRegistryEntry*, rocksdb::EnvRegistryEntry*>(rocksdb::EnvRegistryEntry*, rocksdb::EnvRegistryEntry*, rocksdb::EnvRegistryEntry*)"}, {"value": 421, "name": "rocksdb::ColumnFamilyDescriptor* __uninit_copy<rocksdb::ColumnFamilyDescriptor*, rocksdb::ColumnFamilyDescriptor*>(rocksdb::ColumnFamilyDescriptor*, rocksdb::ColumnFamilyDescriptor*, rocksdb::ColumnFamilyDescriptor*)"}, {"value": 359, "name": "rocksdb::DbPath* __uninit_copy<rocksdb::DbPath*, rocksdb::DbPath*>(rocksdb::DbPath*, rocksdb::DbPath*, rocksdb::DbPath*)"}, {"value": 161, "name": "rocksdb::CompactionJob::SubcompactionState* __uninit_copy<std::move_iterator<rocksdb::CompactionJob::SubcompactionState*>, rocksdb::CompactionJob::SubcompactionState*>(std::move_iterator<rocksdb::CompactionJob::SubcompactionState*>, std::move_iterator<rocksdb::CompactionJob::SubcompactionState*>, rocksdb::CompactionJob::SubcompactionState*)"}], "name": "__uninitialized_copy<false>::"}, {"children": [{"value": 166, "name": "rocksdb::Status* __uninit_fill_n<rocksdb::Status*, unsigned long, rocksdb::Status>(rocksdb::Status*, unsigned long, rocksdb::Status const&)"}], "name": "__uninitialized_fill_n<false>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::StatisticsImpl, std::allocator<rocksdb::StatisticsImpl>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::SkipListFactory, std::allocator<rocksdb::SkipListFactory>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 9, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::TableProperties, std::allocator<rocksdb::TableProperties>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 22, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::BackupEngineImpl::FileInfo, std::allocator<rocksdb::BackupEngineImpl::FileInfo>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::BlockBasedTableFactory, std::allocator<rocksdb::BlockBasedTableFactory>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<rocksdb::LRUCache, std::allocator<rocksdb::LRUCache>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<std::__future_base::_State_baseV2, std::allocator<std::__future_base::_State_baseV2>, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::CompactionJob::*)(rocksdb::CompactionJob::SubcompactionState*)> (rocksdb::CompactionJob*, rocksdb::CompactionJob::SubcompactionState*)> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::CompactionJob::*)(rocksdb::CompactionJob::SubcompactionState*)> (rocksdb::CompactionJob*, rocksdb::CompactionJob::SubcompactionState*)> > >, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::DeleteScheduler::*)()> (rocksdb::DeleteScheduler*)> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::DeleteScheduler::*)()> (rocksdb::DeleteScheduler*)> > >, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 11, "name": "_M_destroy()"}, {"value": 10, "name": "_M_dispose()"}, {"value": 65, "name": "_M_get_deleter(std::type_info const&)"}, {"value": 6, "name": "~_Sp_counted_ptr_inplace()"}], "name": "_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<rocksdb::BackupEngineImpl::Initialize()::$_0 ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<rocksdb::BackupEngineImpl::Initialize()::$_0 ()> > >, (__gnu_cxx::_Lock_policy)2>::"}, {"children": [{"value": 251, "name": "_M_gen_rand()"}], "name": "mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::"}, {"children": [{"value": 338, "name": "unsigned long operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<unsigned long>::param_type const&)"}], "name": "uniform_int_distribution<unsigned long>::"}, {"children": [{"value": 193, "name": "rocksdb::HistogramImpl* __uninit_default_n<rocksdb::HistogramImpl*, unsigned long>(rocksdb::HistogramImpl*, unsigned long)"}, {"value": 145, "name": "rocksdb::ThreadPoolImpl* __uninit_default_n<rocksdb::ThreadPoolImpl*, unsigned long>(rocksdb::ThreadPoolImpl*, unsigned long)"}, {"value": 126, "name": "rocksdb::port::RWMutex* __uninit_default_n<rocksdb::port::RWMutex*, unsigned long>(rocksdb::port::RWMutex*, unsigned long)"}], "name": "__uninitialized_default_n_1<false>::"}, {"children": [{"value": 902, "name": "google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*> __rotate<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, std::random_access_iterator_tag)"}], "name": "_V2::"}, {"children": [{"value": 9, "name": "~map()"}], "name": "map<rocksdb::LevelStatType, rocksdb::LevelStat, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> > >::"}, {"children": [{"value": 220, "name": "operator[](rocksdb::LevelStatType&&)"}], "name": "map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >::"}, {"children": [{"value": 312, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::Status, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > >::"}, {"children": [{"value": 281, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 649, "name": "erase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 1212, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::(anonymous namespace)::FileState*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::(anonymous namespace)::FileState*> > >::"}, {"children": [{"value": 312, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rocksdb::ColumnFamilyHandle*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> > >::"}, {"children": [{"value": 278, "name": "map(std::initializer_list<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)"}, {"value": 312, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)"}, {"value": 312, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 312, "name": "operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::"}, {"children": [{"value": 245, "name": "operator[](rocksdb::MemTable* const&)"}], "name": "map<rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less<rocksdb::MemTable*>, std::allocator<std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo> > >::"}, {"children": [{"value": 237, "name": "operator[](unsigned long const&)"}], "name": "map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::"}, {"children": [{"value": 9, "name": "~set()"}], "name": "set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 324, "name": "pair(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 323, "name": "pair(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 318, "name": "pair<char const (&) [12], std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, void>(char const (&) [12], std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}, {"value": 290, "name": "pair<char const (&) [25], char const (&) [6], void>(char const (&) [25], char const (&) [6])"}, {"value": 323, "name": "pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, void>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)"}], "name": "pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::"}, {"children": [{"value": 196, "name": "pair(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> > const&)"}], "name": "pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::TableProperties const> >::"}, {"children": [{"value": 196, "name": "pair(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > const&)"}, {"value": 195, "name": "pair<std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo>&, void>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo>&)"}], "name": "pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> >::"}, {"children": [{"value": 43, "name": "pair(char* const&, bool const&)"}], "name": "pair<char*, bool>::"}, {"children": [{"value": 43, "name": "pair(bool const&, unsigned char const* const&)"}], "name": "pair<bool, unsigned char const*>::"}, {"children": [{"value": 42, "name": "pair(int const&, bool const&)"}], "name": "pair<int, bool>::"}, {"children": [{"value": 39, "name": "pair(int const&, int const&)"}], "name": "pair<int, int>::"}, {"children": [{"value": 43, "name": "pair(unsigned long const&, bool const&)"}, {"value": 40, "name": "pair<int, bool>(std::pair<int, bool> const&)"}], "name": "pair<unsigned long, bool>::"}, {"children": [{"value": 43, "name": "pair(unsigned long const&, unsigned long const&)"}], "name": "pair<unsigned long, unsigned long>::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 1211, "name": "_M_erase(std::_Deque_iterator<rocksdb::ThreadPoolImpl::BGItem, rocksdb::ThreadPoolImpl::BGItem&, rocksdb::ThreadPoolImpl::BGItem*>)"}], "name": "deque<rocksdb::ThreadPoolImpl::BGItem, std::allocator<rocksdb::ThreadPoolImpl::BGItem> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 707, "name": "_M_destroy_data_aux(std::_Deque_iterator<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem, rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&, rocksdb::BackupEngineImpl::CopyOrCreateWorkItem*>, std::_Deque_iterator<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem, rocksdb::BackupEngineImpl::CopyOrCreateWorkItem&, rocksdb::BackupEngineImpl::CopyOrCreateWorkItem*>)"}, {"value": 143, "name": "~deque()"}], "name": "deque<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::CopyOrCreateWorkItem> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 646, "name": "void _M_range_initialize<__gnu_cxx::__normal_iterator<rocksdb::Slice const*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > > >(__gnu_cxx::__normal_iterator<rocksdb::Slice const*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, __gnu_cxx::__normal_iterator<rocksdb::Slice const*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, std::forward_iterator_tag)"}], "name": "deque<rocksdb::Slice, std::allocator<rocksdb::Slice> >::"}, {"children": [{"children": [{"value": 292, "name": "void back<rocksdb::DBImpl::PurgeFileInfo>(rocksdb::DBImpl::PurgeFileInfo&&)"}], "name": "emplace_"}, {"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 421, "name": "_M_destroy_data_aux(std::_Deque_iterator<rocksdb::DBImpl::PurgeFileInfo, rocksdb::DBImpl::PurgeFileInfo&, rocksdb::DBImpl::PurgeFileInfo*>, std::_Deque_iterator<rocksdb::DBImpl::PurgeFileInfo, rocksdb::DBImpl::PurgeFileInfo&, rocksdb::DBImpl::PurgeFileInfo*>)"}, {"value": 143, "name": "~deque()"}], "name": "deque<rocksdb::DBImpl::PurgeFileInfo, std::allocator<rocksdb::DBImpl::PurgeFileInfo> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 944, "name": "_M_erase(std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber&, rocksdb::DBImpl::LogWriterNumber*>)"}], "name": "deque<rocksdb::DBImpl::LogWriterNumber, std::allocator<rocksdb::DBImpl::LogWriterNumber> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::DBImpl::LogFileNumberSize, std::allocator<rocksdb::DBImpl::LogFileNumberSize> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::SavePoint, std::allocator<rocksdb::SavePoint> >::"}, {"children": [{"children": [{"value": 272, "name": "void front<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)"}], "name": "emplace_"}, {"value": 308, "name": "void _M_push_back_aux<char const*, unsigned long>(char const*&&, unsigned long&&)"}, {"value": 307, "name": "void _M_push_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 581, "name": "_M_destroy_data_aux(std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>)"}, {"value": 1543, "name": "_M_erase(std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>)"}, {"value": 143, "name": "~deque()"}], "name": "deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::VersionSet::ManifestWriter*, std::allocator<rocksdb::VersionSet::ManifestWriter*> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::ColumnFamilyData*, std::allocator<rocksdb::ColumnFamilyData*> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::GenericRateLimiter::Req*, std::allocator<rocksdb::GenericRateLimiter::Req*> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}, {"value": 1180, "name": "_M_erase(std::_Deque_iterator<rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction*&, rocksdb::DBImpl::ManualCompaction**>)"}], "name": "deque<rocksdb::DBImpl::ManualCompaction*, std::allocator<rocksdb::DBImpl::ManualCompaction*> >::"}, {"children": [{"value": 358, "name": "_M_reallocate_map(unsigned long, bool)"}], "name": "deque<unsigned long, std::allocator<unsigned long> >::"}, {"children": [{"value": 344, "name": "get()"}], "name": "future<rocksdb::BackupEngineImpl::CopyOrCreateResult>::"}, {"children": [{"children": [{"value": 257, "name": "~_Impl_base()"}], "name": "_Impl_base::"}, {"children": [{"value": 34, "name": "_M_run()"}, {"value": 130, "name": "~_Impl()"}], "name": "_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::CompactionJob::*)(rocksdb::CompactionJob::SubcompactionState*)> (rocksdb::CompactionJob*, rocksdb::CompactionJob::SubcompactionState*)> >::"}, {"children": [{"value": 30, "name": "_M_run()"}, {"value": 130, "name": "~_Impl()"}], "name": "_Impl<std::_Bind_simple<std::_Mem_fn<void (rocksdb::DeleteScheduler::*)()> (rocksdb::DeleteScheduler*)> >::"}, {"children": [{"value": 26, "name": "_M_run()"}, {"value": 336, "name": "~_Impl()"}], "name": "_Impl<std::_Bind_simple<std::function<void ()> ()> >::"}, {"children": [{"value": 795, "name": "_M_run()"}, {"value": 130, "name": "~_Impl()"}], "name": "_Impl<std::_Bind_simple<rocksdb::BackupEngineImpl::Initialize()::$_0 ()> >::"}, {"value": 351, "name": "thread<void (rocksdb::CompactionJob::*)(rocksdb::CompactionJob::SubcompactionState*), rocksdb::CompactionJob*, rocksdb::CompactionJob::SubcompactionState*>(void (rocksdb::CompactionJob::*&&)(rocksdb::CompactionJob::SubcompactionState*), rocksdb::CompactionJob*&&, rocksdb::CompactionJob::SubcompactionState*&&)"}, {"value": 340, "name": "thread<void (rocksdb::DeleteScheduler::*)(), rocksdb::DeleteScheduler*>(void (rocksdb::DeleteScheduler::*&&)(), rocksdb::DeleteScheduler*&&)"}, {"value": 521, "name": "thread<std::function<void ()>&>(std::function<void ()>&)"}], "name": "thread::"}, {"children": [{"value": 647, "name": "_M_insert_aux(__gnu_cxx::__normal_iterator<snappy::SnappySinkAllocator::Datablock*, std::vector<snappy::SnappySinkAllocator::Datablock, std::allocator<snappy::SnappySinkAllocator::Datablock> > >, snappy::SnappySinkAllocator::Datablock const&)"}], "name": "vector<snappy::SnappySinkAllocator::Datablock, std::allocator<snappy::SnappySinkAllocator::Datablock> >::"}, {"children": [{"value": 491, "name": "void _M_emplace_back_aux<rocksdb::BackupInfo>(rocksdb::BackupInfo&&)"}, {"value": 329, "name": "reserve(unsigned long)"}], "name": "vector<rocksdb::BackupInfo, std::allocator<rocksdb::BackupInfo> >::"}, {"children": [{"value": 557, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, int&&)"}, {"value": 557, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, unsigned int&&)"}, {"value": 464, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&&)"}, {"value": 464, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int&&)"}, {"value": 362, "name": "reserve(unsigned long)"}, {"value": 179, "name": "vector(std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > const&)"}], "name": "vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> >::"}, {"children": [{"value": 440, "name": "_M_default_append(unsigned long)"}], "name": "vector<rocksdb::FileIndexer::IndexLevel, std::allocator<rocksdb::FileIndexer::IndexLevel> >::"}, {"children": [{"value": 609, "name": "void _M_emplace_back_aux<unsigned long&, rocksdb::ThreadStatus::ThreadType&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ThreadStatus::OperationType&, unsigned long&, rocksdb::ThreadStatus::OperationStage&, unsigned long (&) [6], rocksdb::ThreadStatus::StateType&>(unsigned long&, rocksdb::ThreadStatus::ThreadType&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&&, rocksdb::ThreadStatus::OperationType&, unsigned long&, rocksdb::ThreadStatus::OperationStage&, unsigned long (&) [6], rocksdb::ThreadStatus::StateType&)"}], "name": "vector<rocksdb::ThreadStatus, std::allocator<rocksdb::ThreadStatus> >::"}, {"children": [{"value": 908, "name": "void _M_emplace_back_aux<rocksdb::CompactionJob::SubcompactionState::Output const&>(rocksdb::CompactionJob::SubcompactionState::Output const&)"}, {"value": 241, "name": "~vector()"}], "name": "vector<rocksdb::CompactionJob::SubcompactionState::Output, std::allocator<rocksdb::CompactionJob::SubcompactionState::Output> >::"}, {"children": [{"value": 406, "name": "void _M_emplace_back_aux<rocksdb::Compaction*&, decltype(nullptr), decltype(nullptr)>(rocksdb::Compaction*&, decltype(nullptr)&&, decltype(nullptr)&&)"}, {"value": 422, "name": "void _M_emplace_back_aux<rocksdb::Compaction*&, rocksdb::Slice*&, rocksdb::Slice*&, unsigned long&>(rocksdb::Compaction*&, rocksdb::Slice*&, rocksdb::Slice*&, unsigned long&)"}], "name": "vector<rocksdb::CompactionJob::SubcompactionState, std::allocator<rocksdb::CompactionJob::SubcompactionState> >::"}, {"children": [{"value": 417, "name": "void _M_emplace_back_aux<int&, unsigned long&, std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> > >(int&, unsigned long&, std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> >&&)"}], "name": "vector<rocksdb::LevelMetaData, std::allocator<rocksdb::LevelMetaData> >::"}, {"children": [{"value": 283, "name": "void _M_emplace_back_aux<rocksdb::Slice const&, rocksdb::Slice const&, unsigned long&>(rocksdb::Slice const&, rocksdb::Slice const&, unsigned long&)"}], "name": "vector<rocksdb::RangeWithSize, std::allocator<rocksdb::RangeWithSize> >::"}, {"children": [{"value": 260, "name": "void _M_emplace_back_aux<rocksdb::FileDescriptor const&>(rocksdb::FileDescriptor const&)"}, {"value": 356, "name": "void _M_emplace_back_aux<unsigned long&, unsigned int, int>(unsigned long&, unsigned int&&, int&&)"}, {"value": 248, "name": "reserve(unsigned long)"}], "name": "vector<rocksdb::FileDescriptor, std::allocator<rocksdb::FileDescriptor> >::"}, {"children": [{"value": 445, "name": "_M_default_append(unsigned long)"}], "name": "vector<rocksdb::ThreadLocalPtr::Entry, std::allocator<rocksdb::ThreadLocalPtr::Entry> >::"}, {"children": [{"value": 230, "name": "_M_default_append(unsigned long)"}, {"value": 181, "name": "void _M_emplace_back_aux<rocksdb::CompressionType const&>(rocksdb::CompressionType const&)"}, {"value": 181, "name": "void _M_emplace_back_aux<rocksdb::CompressionType&>(rocksdb::CompressionType&)"}, {"value": 269, "name": "operator=(std::vector<rocksdb::CompressionType, std::allocator<rocksdb::CompressionType> > const&)"}], "name": "vector<rocksdb::CompressionType, std::allocator<rocksdb::CompressionType> >::"}, {"children": [{"value": 957, "name": "_M_default_append(unsigned long)"}, {"value": 500, "name": "void _M_emplace_back_aux<rocksdb::IteratorWrapper const&>(rocksdb::IteratorWrapper const&)"}], "name": "vector<rocksdb::IteratorWrapper, std::allocator<rocksdb::IteratorWrapper> >::"}, {"children": [{"value": 440, "name": "_M_default_append(unsigned long)"}], "name": "vector<rocksdb::LevelFilesBrief, std::allocator<rocksdb::LevelFilesBrief> >::"}, {"children": [{"value": 851, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, unsigned long&, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&&, unsigned long&, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, bool&)"}, {"value": 182, "name": "vector(std::vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> > const&)"}, {"value": 156, "name": "~vector()"}], "name": "vector<rocksdb::SstFileMetaData, std::allocator<rocksdb::SstFileMetaData> >::"}, {"children": [{"value": 682, "name": "void _M_emplace_back_aux<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem>(rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem&&)"}], "name": "vector<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::BackupAfterCopyOrCreateWorkItem> >::"}, {"children": [{"value": 733, "name": "void _M_emplace_back_aux<rocksdb::BackupEngineImpl::RestoreAfterCopyOrCreateWorkItem>(rocksdb::BackupEngineImpl::RestoreAfterCopyOrCreateWorkItem&&)"}], "name": "vector<rocksdb::BackupEngineImpl::RestoreAfterCopyOrCreateWorkItem, std::allocator<rocksdb::BackupEngineImpl::RestoreAfterCopyOrCreateWorkItem> >::"}, {"children": [{"value": 542, "name": "void _M_emplace_back_aux<rocksdb::EnvRegistryEntry>(rocksdb::EnvRegistryEntry&&)"}], "name": "vector<rocksdb::EnvRegistryEntry, std::allocator<rocksdb::EnvRegistryEntry> >::"}, {"children": [{"value": 944, "name": "void _M_emplace_back_aux<rocksdb::IngestedFileInfo const&>(rocksdb::IngestedFileInfo const&)"}], "name": "vector<rocksdb::IngestedFileInfo, std::allocator<rocksdb::IngestedFileInfo> >::"}, {"children": [{"value": 493, "name": "void _M_emplace_back_aux<rocksdb::LiveFileMetaData const&>(rocksdb::LiveFileMetaData const&)"}], "name": "vector<rocksdb::LiveFileMetaData, std::allocator<rocksdb::LiveFileMetaData> >::"}, {"children": [{"value": 1227, "name": "void _M_emplace_back_aux<>()"}, {"value": 1866, "name": "void _M_emplace_back_aux<rocksdb::ColumnFamilyOptions>(rocksdb::ColumnFamilyOptions&&)"}], "name": "vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> >::"}, {"children": [{"value": 476, "name": "_M_default_append(unsigned long)"}, {"value": 347, "name": "void _M_emplace_back_aux<>()"}, {"value": 586, "name": "void _M_emplace_back_aux<rocksdb::CompactionInputFiles const&>(rocksdb::CompactionInputFiles const&)"}, {"value": 404, "name": "void _M_emplace_back_aux<rocksdb::CompactionInputFiles>(rocksdb::CompactionInputFiles&&)"}, {"children": [{"value": 198, "name": "back(rocksdb::CompactionInputFiles const&)"}], "name": "push_"}, {"value": 153, "name": "vector(std::vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> > const&)"}], "name": "vector<rocksdb::CompactionInputFiles, std::allocator<rocksdb::CompactionInputFiles> >::"}, {"children": [{"value": 1331, "name": "void _M_emplace_back_aux<rocksdb::ColumnFamilyDescriptor const&>(rocksdb::ColumnFamilyDescriptor const&)"}, {"value": 1345, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, rocksdb::Options&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, rocksdb::Options&)"}, {"value": 2095, "name": "void _M_emplace_back_aux<rocksdb::ColumnFamilyDescriptor>(rocksdb::ColumnFamilyDescriptor&&)"}, {"value": 136, "name": "rocksdb::ColumnFamilyDescriptor* _M_allocate_and_copy<__gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > > >(unsigned long, __gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > >, __gnu_cxx::__normal_iterator<rocksdb::ColumnFamilyDescriptor const*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > >)"}, {"value": 181, "name": "vector(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&)"}, {"value": 542, "name": "operator=(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&)"}], "name": "vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> >::"}, {"children": [{"value": 300, "name": "void _M_emplace_back_aux<int&, decltype(nullptr), unsigned long&, unsigned long&, bool&>(int&, decltype(nullptr)&&, unsigned long&, unsigned long&, bool&)"}, {"value": 300, "name": "void _M_emplace_back_aux<int, rocksdb::FileMetaData*&, unsigned long, unsigned long&, bool&>(int&&, rocksdb::FileMetaData*&, unsigned long&&, unsigned long&, bool&)"}], "name": "vector<rocksdb::UniversalCompactionPicker::SortedRun, std::allocator<rocksdb::UniversalCompactionPicker::SortedRun> >::"}, {"children": [{"value": 1038, "name": "_M_default_append(unsigned long)"}], "name": "vector<rocksdb::Env::FileAttributes, std::allocator<rocksdb::Env::FileAttributes> >::"}, {"children": [{"value": 363, "name": "void _M_emplace_back_aux<rocksdb::Arena::MmapInfo>(rocksdb::Arena::MmapInfo&&)"}, {"value": 308, "name": "reserve(unsigned long)"}], "name": "vector<rocksdb::Arena::MmapInfo, std::allocator<rocksdb::Arena::MmapInfo> >::"}, {"children": [{"value": 881, "name": "_M_default_append(unsigned long)"}, {"value": 363, "name": "void _M_emplace_back_aux<rocksdb::Slice const&>(rocksdb::Slice const&)"}, {"value": 363, "name": "void _M_emplace_back_aux<rocksdb::Slice&>(rocksdb::Slice&)"}, {"value": 363, "name": "void _M_emplace_back_aux<rocksdb::Slice>(rocksdb::Slice&&)"}, {"value": 14, "name": "~vector()"}], "name": "vector<rocksdb::Slice, std::allocator<rocksdb::Slice> >::"}, {"children": [{"value": 464, "name": "void _M_emplace_back_aux<char const (&) [6], int>(char const (&) [6], int&&)"}, {"value": 639, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long&&)"}, {"value": 639, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&&)"}, {"value": 137, "name": "rocksdb::DbPath* _M_allocate_and_copy<__gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > > >(unsigned long, __gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > >, __gnu_cxx::__normal_iterator<rocksdb::DbPath const*, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > >)"}, {"value": 169, "name": "vector(std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)"}, {"value": 501, "name": "operator=(std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)"}], "name": "vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> >::"}, {"children": [{"value": 318, "name": "void _M_emplace_back_aux<unsigned int&, decltype(nullptr), unsigned long&, unsigned long, rocksdb::Slice>(unsigned int&, decltype(nullptr)&&, unsigned long&, unsigned long&&, rocksdb::Slice&&)"}, {"value": 319, "name": "void _M_emplace_back_aux<unsigned int&, char const*, int, unsigned long, rocksdb::Slice>(unsigned int&, char const*&&, int&&, unsigned long&&, rocksdb::Slice&&)"}], "name": "vector<rocksdb::BlockIter::CachedPrevEntry, std::allocator<rocksdb::BlockIter::CachedPrevEntry> >::"}, {"children": [{"value": 1035, "name": "_M_fill_insert(__gnu_cxx::__normal_iterator<rocksdb::Comparator const**, std::vector<rocksdb::Comparator const*, std::allocator<rocksdb::Comparator const*> > >, unsigned long, rocksdb::Comparator const* const&)"}], "name": "vector<rocksdb::Comparator const*, std::allocator<rocksdb::Comparator const*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<char const*>(char const*&&)"}], "name": "vector<char const*, std::allocator<char const*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::TableReader* const&>(rocksdb::TableReader* const&)"}], "name": "vector<rocksdb::TableReader*, std::allocator<rocksdb::TableReader*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::VersionEdit* const&>(rocksdb::VersionEdit* const&)"}], "name": "vector<rocksdb::VersionEdit*, std::allocator<rocksdb::VersionEdit*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::WriteThread::Writer* const&>(rocksdb::WriteThread::Writer* const&)"}], "name": "vector<rocksdb::WriteThread::Writer*, std::allocator<rocksdb::WriteThread::Writer*> >::"}, {"children": [{"value": 303, "name": "_M_default_append(unsigned long)"}, {"value": 202, "name": "void _M_emplace_back_aux<rocksdb::FileMetaData* const&>(rocksdb::FileMetaData* const&)"}, {"value": 293, "name": "operator=(std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&)"}], "name": "vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::SuperVersion* const&>(rocksdb::SuperVersion* const&)"}], "name": "vector<rocksdb::SuperVersion*, std::allocator<rocksdb::SuperVersion*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::LevelIterator*>(rocksdb::LevelIterator*&&)"}], "name": "vector<rocksdb::LevelIterator*, std::allocator<rocksdb::LevelIterator*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::IteratorWrapper* const&>(rocksdb::IteratorWrapper* const&)"}], "name": "vector<rocksdb::IteratorWrapper*, std::allocator<rocksdb::IteratorWrapper*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::InternalIterator* const&>(rocksdb::InternalIterator* const&)"}, {"value": 202, "name": "void _M_emplace_back_aux<rocksdb::InternalIterator*>(rocksdb::InternalIterator*&&)"}, {"value": 293, "name": "operator=(std::vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> > const&)"}], "name": "vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::ColumnFamilyHandle* const&>(rocksdb::ColumnFamilyHandle* const&)"}, {"value": 202, "name": "void _M_emplace_back_aux<rocksdb::ColumnFamilyHandle*>(rocksdb::ColumnFamilyHandle*&&)"}], "name": "vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::PlainTableIndexBuilder::IndexRecord* const&>(rocksdb::PlainTableIndexBuilder::IndexRecord* const&)"}], "name": "vector<rocksdb::PlainTableIndexBuilder::IndexRecord*, std::allocator<rocksdb::PlainTableIndexBuilder::IndexRecord*> >::"}, {"children": [{"value": 289, "name": "void _M_assign_aux<__gnu_cxx::__normal_iterator<rocksdb::log::Writer* const*, std::vector<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> > > >(__gnu_cxx::__normal_iterator<rocksdb::log::Writer* const*, std::vector<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> > >, __gnu_cxx::__normal_iterator<rocksdb::log::Writer* const*, std::vector<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> > >, std::forward_iterator_tag)"}, {"value": 202, "name": "void _M_emplace_back_aux<rocksdb::log::Writer* const&>(rocksdb::log::Writer* const&)"}], "name": "vector<rocksdb::log::Writer*, std::allocator<rocksdb::log::Writer*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::Iterator*>(rocksdb::Iterator*&&)"}], "name": "vector<rocksdb::Iterator*, std::allocator<rocksdb::Iterator*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::MemTable* const&>(rocksdb::MemTable* const&)"}], "name": "vector<rocksdb::MemTable*, std::allocator<rocksdb::MemTable*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::LRUHandle* const&>(rocksdb::LRUHandle* const&)"}], "name": "vector<rocksdb::LRUHandle*, std::allocator<rocksdb::LRUHandle*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<rocksdb::LogBuffer::BufferedLog* const&>(rocksdb::LogBuffer::BufferedLog* const&)"}], "name": "vector<rocksdb::LogBuffer::BufferedLog*, std::allocator<rocksdb::LogBuffer::BufferedLog*> >::"}, {"children": [{"value": 321, "name": "_M_insert_aux(__gnu_cxx::__normal_iterator<char**, std::vector<char*, std::allocator<char*> > >, char* const&)"}, {"value": 202, "name": "void _M_emplace_back_aux<char* const&>(char* const&)"}, {"value": 202, "name": "void _M_emplace_back_aux<char*>(char*&&)"}], "name": "vector<char*, std::allocator<char*> >::"}, {"children": [{"value": 202, "name": "void _M_emplace_back_aux<void* const&>(void* const&)"}], "name": "vector<void*, std::allocator<void*> >::"}, {"children": [{"value": 504, "name": "void _M_emplace_back_aux<std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)"}], "name": "vector<std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::allocator<std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >::"}, {"children": [{"value": 243, "name": "_M_move_assign(std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > >&&, std::integral_constant<bool, true>)"}, {"value": 667, "name": "void _M_emplace_back_aux<std::shared_ptr<DBEventListener>&>(std::shared_ptr<DBEventListener>&)"}, {"value": 311, "name": "vector(std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&)"}, {"value": 1481, "name": "operator=(std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&)"}], "name": "vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > >::"}, {"children": [{"value": 672, "name": "void _M_emplace_back_aux<rocksdb::BackupEngineImpl::FileInfo*>(rocksdb::BackupEngineImpl::FileInfo*&&)"}, {"value": 681, "name": "void _M_emplace_back_aux<std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> const&>(std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> const&)"}, {"value": 533, "name": "reserve(unsigned long)"}], "name": "vector<std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo>, std::allocator<std::shared_ptr<rocksdb::BackupEngineImpl::FileInfo> > >::"}, {"children": [{"value": 243, "name": "_M_move_assign(std::vector<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory>, std::allocator<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> > >&&, std::integral_constant<bool, true>)"}, {"value": 667, "name": "void _M_emplace_back_aux<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> const&>(std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> const&)"}, {"value": 311, "name": "vector(std::vector<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory>, std::allocator<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> > > const&)"}, {"value": 1481, "name": "operator=(std::vector<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory>, std::allocator<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> > > const&)"}], "name": "vector<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory>, std::allocator<std::shared_ptr<rocksdb::TablePropertiesCollectorFactory> > >::"}, {"children": [{"value": 513, "name": "void _M_emplace_back_aux<rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector*>(rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector*&&)"}, {"value": 513, "name": "void _M_emplace_back_aux<rocksdb::IntTblPropCollector*>(rocksdb::IntTblPropCollector*&&)"}], "name": "vector<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollector, std::default_delete<rocksdb::IntTblPropCollector> > > >::"}, {"children": [{"value": 513, "name": "void _M_emplace_back_aux<rocksdb::InternalKeyPropertiesCollectorFactory*>(rocksdb::InternalKeyPropertiesCollectorFactory*&&)"}, {"value": 513, "name": "void _M_emplace_back_aux<rocksdb::UserKeyTablePropertiesCollectorFactory*>(rocksdb::UserKeyTablePropertiesCollectorFactory*&&)"}, {"value": 513, "name": "void _M_emplace_back_aux<rocksdb::SstFileWriterPropertiesCollectorFactory*>(rocksdb::SstFileWriterPropertiesCollectorFactory*&&)"}], "name": "vector<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> >, std::allocator<std::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::default_delete<rocksdb::IntTblPropCollectorFactory> > > >::"}, {"children": [{"value": 519, "name": "void _M_emplace_back_aux<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > >(std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >&&)"}, {"value": 454, "name": "reserve(unsigned long)"}], "name": "vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > >::"}, {"children": [{"value": 487, "name": "void _M_emplace_back_aux<decltype(nullptr)>(decltype(nullptr)&&)"}, {"value": 513, "name": "void _M_emplace_back_aux<rocksdb::Directory*>(rocksdb::Directory*&&)"}], "name": "vector<std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >, std::allocator<std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> > > >::"}, {"children": [{"value": 538, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)"}], "name": "vector<std::unique_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::unique_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::"}, {"children": [{"value": 561, "name": "void _M_emplace_back_aux<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&>(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)"}], "name": "vector<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::allocator<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >::"}, {"children": [{"value": 86, "name": "~vector()"}], "name": "vector<std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<rocksdb::Histograms, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 86, "name": "~vector()"}], "name": "vector<std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<rocksdb::Tickers, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 509, "name": "void _M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*&&)"}], "name": "vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<rocksdb::Directory, std::default_delete<rocksdb::Directory> >*> > >::"}, {"children": [{"value": 621, "name": "void _M_emplace_back_aux<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)"}], "name": "vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 363, "name": "void _M_emplace_back_aux<rocksdb::FileMetaData*&, int&>(rocksdb::FileMetaData*&, int&)"}], "name": "vector<std::pair<rocksdb::FileMetaData*, int>, std::allocator<std::pair<rocksdb::FileMetaData*, int> > >::"}, {"children": [{"value": 363, "name": "void _M_emplace_back_aux<void*&, void (*&)(void*)>(void*&, void (*&)(void*))"}], "name": "vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > >::"}, {"children": [{"value": 624, "name": "void _M_emplace_back_aux<int&, rocksdb::FileMetaData const&>(int&, rocksdb::FileMetaData const&)"}, {"value": 813, "name": "void _M_emplace_back_aux<int&, rocksdb::FileMetaData>(int&, rocksdb::FileMetaData&&)"}, {"value": 797, "name": "void _M_emplace_back_aux<std::pair<int, rocksdb::FileMetaData> >(std::pair<int, rocksdb::FileMetaData>&&)"}, {"value": 181, "name": "vector(std::vector<std::pair<int, rocksdb::FileMetaData>, std::allocator<std::pair<int, rocksdb::FileMetaData> > > const&)"}], "name": "vector<std::pair<int, rocksdb::FileMetaData>, std::allocator<std::pair<int, rocksdb::FileMetaData> > >::"}, {"children": [{"value": 363, "name": "void _M_emplace_back_aux<std::pair<int, rocksdb::FileMetaData*> const&>(std::pair<int, rocksdb::FileMetaData*> const&)"}], "name": "vector<std::pair<int, rocksdb::FileMetaData*>, std::allocator<std::pair<int, rocksdb::FileMetaData*> > >::"}, {"children": [{"value": 526, "name": "void _M_emplace_back_aux<void (rocksdb::CompactionJob::*)(rocksdb::CompactionJob::SubcompactionState*), rocksdb::CompactionJob*, rocksdb::CompactionJob::SubcompactionState*>(void (rocksdb::CompactionJob::*&&)(rocksdb::CompactionJob::SubcompactionState*), rocksdb::CompactionJob*&&, rocksdb::CompactionJob::SubcompactionState*&&)"}, {"value": 510, "name": "void _M_emplace_back_aux<std::function<void ()>&>(std::function<void ()>&)"}, {"value": 431, "name": "reserve(unsigned long)"}], "name": "vector<std::thread, std::allocator<std::thread> >::"}, {"children": [{"value": 1773, "name": "_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)"}, {"value": 201, "name": "void _M_emplace_back_aux<int&>(int&)"}, {"value": 201, "name": "void _M_emplace_back_aux<int>(int&&)"}, {"value": 293, "name": "operator=(std::vector<int, std::allocator<int> > const&)"}], "name": "vector<int, std::allocator<int> >::"}, {"children": [{"value": 201, "name": "void _M_emplace_back_aux<unsigned int const&>(unsigned int const&)"}, {"value": 201, "name": "void _M_emplace_back_aux<unsigned int>(unsigned int&&)"}], "name": "vector<unsigned int, std::allocator<unsigned int> >::"}, {"children": [{"value": 727, "name": "void _M_assign_aux<std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*> >(std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*>, std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*>, std::forward_iterator_tag)"}, {"value": 303, "name": "_M_default_append(unsigned long)"}, {"value": 202, "name": "void _M_emplace_back_aux<unsigned long const&>(unsigned long const&)"}, {"value": 202, "name": "void _M_emplace_back_aux<unsigned long&>(unsigned long&)"}, {"value": 202, "name": "void _M_emplace_back_aux<unsigned long>(unsigned long&&)"}, {"value": 293, "name": "operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)"}], "name": "vector<unsigned long, std::allocator<unsigned long> >::"}, {"children": [{"children": [{"value": 232, "name": "std::_List_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >* _M_create_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 248, "name": "std::_List_iterator<rocksdb::MemTable*> insert<std::_List_const_iterator<rocksdb::MemTable*>, void>(std::_List_const_iterator<rocksdb::MemTable*>, std::_List_const_iterator<rocksdb::MemTable*>, std::_List_const_iterator<rocksdb::MemTable*>)"}, {"value": 176, "name": "remove(rocksdb::MemTable* const&)"}, {"value": 141, "name": "operator=(std::__cxx11::list<rocksdb::MemTable*, std::allocator<rocksdb::MemTable*> > const&)"}], "name": "list<rocksdb::MemTable*, std::allocator<rocksdb::MemTable*> >::"}], "name": "__cxx11::"}, {"children": [{"children": [{"value": 268, "name": "value(rocksdb::BackupEngineImpl::CopyOrCreateResult&&)"}], "name": "set_"}, {"value": 255, "name": "promise()"}, {"value": 426, "name": "~promise()"}], "name": "promise<rocksdb::BackupEngineImpl::CopyOrCreateResult>::"}, {"children": [{"value": 171, "name": "void _M_insert_unique<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> const*>(std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> const*, std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> const*)"}, {"value": 79, "name": "void _M_construct_node<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> const&>(std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> >*, std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> const&)"}, {"value": 529, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> >, rocksdb::LevelStatType const&)"}, {"value": 111, "name": "_M_erase(std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> >*)"}], "name": "_Rb_tree<rocksdb::LevelStatType, std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat>, std::_Select1st<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> >, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, rocksdb::LevelStat> > >::"}, {"children": [{"value": 529, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<rocksdb::LevelStatType const, double> >, rocksdb::LevelStatType const&)"}, {"value": 518, "name": "std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, double> >* _M_copy<std::_Rb_tree<rocksdb::LevelStatType, std::pair<rocksdb::LevelStatType const, double>, std::_Select1st<std::pair<rocksdb::LevelStatType const, double> >, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, double> > const*, std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, double> >*, std::_Rb_tree<rocksdb::LevelStatType, std::pair<rocksdb::LevelStatType const, double>, std::_Select1st<std::pair<rocksdb::LevelStatType const, double> >, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >::_Reuse_or_alloc_node&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<rocksdb::LevelStatType const, double> >*)"}, {"value": 233, "name": "operator=(std::_Rb_tree<rocksdb::LevelStatType, std::pair<rocksdb::LevelStatType const, double>, std::_Select1st<std::pair<rocksdb::LevelStatType const, double> >, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > const&)"}], "name": "_Rb_tree<rocksdb::LevelStatType, std::pair<rocksdb::LevelStatType const, double>, std::_Select1st<std::pair<rocksdb::LevelStatType const, double> >, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > >::"}, {"children": [{"value": 258, "name": "std::_Rb_tree_iterator<std::pair<rocksdb::Slice const, rocksdb::RangeTombstone> > _M_emplace_equal<rocksdb::Slice&, rocksdb::RangeTombstone>(rocksdb::Slice&, rocksdb::RangeTombstone&&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<rocksdb::Slice const, rocksdb::RangeTombstone> >*)"}], "name": "_Rb_tree<rocksdb::Slice, std::pair<rocksdb::Slice const, rocksdb::RangeTombstone>, std::_Select1st<std::pair<rocksdb::Slice const, rocksdb::RangeTombstone> >, rocksdb::stl_wrappers::LessOfComparator, std::allocator<std::pair<rocksdb::Slice const, rocksdb::RangeTombstone> > >::"}, {"children": [{"value": 224, "name": "std::_Rb_tree_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > _M_insert_<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Alloc_node&)"}, {"children": [{"value": 519, "name": "range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "equal_"}, {"value": 175, "name": "_M_erase_aux(std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)"}, {"value": 210, "name": "void _M_construct_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::"}, {"children": [{"value": 280, "name": "void _M_construct_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> const&>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> const&)"}, {"value": 225, "name": "void _M_construct_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >*, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 271, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 627, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 311, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >* _M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > >::_Alloc_node&)"}, {"value": 107, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::Status> > >::"}, {"children": [{"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::(anonymous namespace)::FileState*> >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::(anonymous namespace)::FileState*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::(anonymous namespace)::FileState*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::(anonymous namespace)::FileState*> > >::"}, {"children": [{"value": 225, "name": "void _M_construct_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> >*, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 257, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 627, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 281, "name": "find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rocksdb::ColumnFamilyHandle*> > >::"}, {"children": [{"value": 105, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* _M_create_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 173, "name": "std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, bool> _M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 211, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 111, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, rocksdb::stl_wrappers::LessOfComparator, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 225, "name": "void _M_construct_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >*, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 257, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 627, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::"}, {"children": [{"value": 255, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > _M_insert_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>&&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_Alloc_node&)"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >*)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::"}, {"children": [{"value": 224, "name": "std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > _M_insert_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Alloc_node&)"}, {"value": 226, "name": "void _M_construct_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&)"}, {"children": [{"value": 190, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >* operator()<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> const&)"}], "name": "_Reuse_or_alloc_node::"}, {"value": 295, "name": "_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 311, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >* _M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Alloc_node&)"}, {"value": 264, "name": "std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >* _M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::_Reuse_or_alloc_node&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >*)"}, {"value": 233, "name": "operator=(std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > > const&)"}], "name": "_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> > >::"}, {"children": [{"value": 221, "name": "std::pair<std::_Rb_tree_iterator<rocksdb::Compaction*>, bool> _M_insert_unique<rocksdb::Compaction* const&>(rocksdb::Compaction* const&)"}, {"value": 360, "name": "erase(rocksdb::Compaction* const&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<rocksdb::Compaction*>*)"}], "name": "_Rb_tree<rocksdb::Compaction*, rocksdb::Compaction*, std::_Identity<rocksdb::Compaction*>, std::less<rocksdb::Compaction*>, std::allocator<rocksdb::Compaction*> >::"}, {"children": [{"value": 229, "name": "_M_get_insert_unique_pos(rocksdb::InternalKey* const&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<rocksdb::InternalKey* const, rocksdb::FileMetaData*> >*)"}], "name": "_Rb_tree<rocksdb::InternalKey*, std::pair<rocksdb::InternalKey* const, rocksdb::FileMetaData*>, std::_Select1st<std::pair<rocksdb::InternalKey* const, rocksdb::FileMetaData*> >, rocksdb::VersionStorageInfo::EstimateLiveDataSize() const::$_3, std::allocator<std::pair<rocksdb::InternalKey* const, rocksdb::FileMetaData*> > >::"}, {"children": [{"value": 530, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo> >, rocksdb::MemTable* const&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo> >*)"}], "name": "_Rb_tree<rocksdb::MemTable*, std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo>, std::_Select1st<std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo> >, std::less<rocksdb::MemTable*>, std::allocator<std::pair<rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo> > >::"}, {"children": [{"value": 316, "name": "std::pair<std::_Rb_tree_iterator<std::pair<int, unsigned long> >, bool> _M_insert_unique<std::pair<int, unsigned long> >(std::pair<int, unsigned long>&&)"}, {"value": 268, "name": "std::_Rb_tree_node<std::pair<int, unsigned long> >* _M_copy<std::_Rb_tree<std::pair<int, unsigned long>, std::pair<int, unsigned long>, std::_Identity<std::pair<int, unsigned long> >, std::less<std::pair<int, unsigned long> >, std::allocator<std::pair<int, unsigned long> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<int, unsigned long> > const*, std::_Rb_tree_node<std::pair<int, unsigned long> >*, std::_Rb_tree<std::pair<int, unsigned long>, std::pair<int, unsigned long>, std::_Identity<std::pair<int, unsigned long> >, std::less<std::pair<int, unsigned long> >, std::allocator<std::pair<int, unsigned long> > >::_Alloc_node&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<int, unsigned long> >*)"}], "name": "_Rb_tree<std::pair<int, unsigned long>, std::pair<int, unsigned long>, std::_Identity<std::pair<int, unsigned long> >, std::less<std::pair<int, unsigned long> >, std::allocator<std::pair<int, unsigned long> > >::"}, {"children": [{"value": 183, "name": "std::_Rb_tree_iterator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&)"}, {"value": 183, "name": "std::_Rb_tree_iterator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > > _M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)"}, {"value": 529, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > >, int const&)"}, {"value": 88, "name": "_M_erase(std::_Rb_tree_node<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > >*)"}], "name": "_Rb_tree<int, std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > >, std::_Select1st<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > >, std::less<int>, std::allocator<std::pair<int const, std::map<rocksdb::LevelStatType, double, std::less<rocksdb::LevelStatType>, std::allocator<std::pair<rocksdb::LevelStatType const, double> > > > > >::"}, {"children": [{"value": 175, "name": "_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::_Rb_tree_const_iterator<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)"}, {"value": 224, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, bool> _M_insert_unique<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 218, "name": "void _M_construct_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_Rb_tree_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}], "name": "_Rb_tree<unsigned int, std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 315, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >, bool> _M_insert_unique<std::pair<unsigned int, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >(std::pair<unsigned int, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >&&)"}, {"value": 117, "name": "erase[abi:cxx11](std::_Rb_tree_iterator<std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >)"}, {"value": 120, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >*)"}], "name": "_Rb_tree<unsigned int, std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >, std::_Select1st<std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::pair<rocksdb::Status, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > > >::"}, {"children": [{"value": 233, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >, bool> _M_insert_unique<std::pair<unsigned int, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >(std::pair<unsigned int, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > >&&)"}, {"value": 98, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >*)"}], "name": "_Rb_tree<unsigned int, std::pair<unsigned int const, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > >, std::_Select1st<std::pair<unsigned int const, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::unique_ptr<rocksdb::BackupEngineImpl::BackupMeta, std::default_delete<rocksdb::BackupEngineImpl::BackupMeta> > > > >::"}, {"children": [{"value": 225, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, unsigned long> >, bool> _M_insert_unique<std::pair<unsigned int, unsigned long> >(std::pair<unsigned int, unsigned long>&&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, unsigned long> >*)"}], "name": "_Rb_tree<unsigned int, std::pair<unsigned int const, unsigned long>, std::_Select1st<std::pair<unsigned int const, unsigned long> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned long> > >::"}, {"children": [{"value": 366, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap> >, bool> _M_emplace_unique<unsigned long const&, rocksdb::RangeDelAggregator::PositionalTombstoneMap>(unsigned long const&, rocksdb::RangeDelAggregator::PositionalTombstoneMap&&)"}, {"value": 366, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap> >, bool> _M_emplace_unique<unsigned long&, rocksdb::RangeDelAggregator::PositionalTombstoneMap>(unsigned long&, rocksdb::RangeDelAggregator::PositionalTombstoneMap&&)"}, {"value": 88, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap> >*)"}], "name": "_Rb_tree<unsigned long, std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap>, std::_Select1st<std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, rocksdb::RangeDelAggregator::PositionalTombstoneMap> > >::"}, {"children": [{"value": 228, "name": "std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, bool> _M_insert_unique<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 219, "name": "void _M_construct_node<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&>(std::_Rb_tree_node<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)"}, {"value": 93, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)"}], "name": "_Rb_tree<unsigned long, std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::"}, {"children": [{"value": 530, "name": "_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, unsigned long> >, unsigned long const&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, unsigned long> >*)"}], "name": "_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned long>, std::_Select1st<std::pair<unsigned long const, unsigned long> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::"}, {"children": [{"value": 221, "name": "std::pair<std::_Rb_tree_iterator<unsigned long>, bool> _M_insert_unique<unsigned long>(unsigned long&&)"}, {"value": 75, "name": "_M_erase(std::_Rb_tree_node<unsigned long>*)"}], "name": "_Rb_tree<unsigned long, unsigned long, std::_Identity<unsigned long>, std::less<unsigned long>, std::allocator<unsigned long> >::"}, {"children": [{"value": 31, "name": "exception()"}], "name": "exception::"}, {"value": 28, "name": "std::iterator_traits<char const*>::difference_type __distance<char const*>(char const*, char const*, std::random_access_iterator_tag)"}, {"value": 244, "name": "char const* __find_end<char const*, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter>(char const*, char const*, char const*, char const*, std::bidirectional_iterator_tag, std::bidirectional_iterator_tag, __gnu_cxx::__ops::_Iter_equal_to_iter)"}, {"value": 307, "name": "void __pop_heap<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 36, "name": "noshowbase(std::ios_base&)"}, {"value": 381, "name": "void __make_heap<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 301, "name": "void __make_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 246, "name": "void __make_heap<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::greater<unsigned long> > >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::greater<unsigned long> >)"}, {"value": 246, "name": "void __make_heap<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 236, "name": "void __push_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_val)"}, {"value": 280, "name": "void __sort_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 27, "name": "std::_Miter_base<void (**)()>::iterator_type __miter_base<void (**)()>(void (**)())"}, {"value": 27, "name": "std::_Niter_base<void (**)()>::iterator_type __niter_base<void (**)()>(void (**)())"}, {"value": 693, "name": "void __adjust_heap<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, long, rocksdb::IngestedFileInfo const*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0> >(rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, long, long, rocksdb::IngestedFileInfo const*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0>)"}, {"value": 515, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, long, rocksdb::JobContext::CandidateFileInfo, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, long, long, rocksdb::JobContext::CandidateFileInfo, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 378, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, rocksdb::(anonymous namespace)::Fsize, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4> >(__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, long, rocksdb::(anonymous namespace)::Fsize, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4>)"}, {"value": 542, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, long, rocksdb::FdWithKeyRange, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2> >(__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, long, long, rocksdb::FdWithKeyRange, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2>)"}, {"value": 469, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, long, rocksdb::Slice, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0> >(__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, long, long, rocksdb::Slice, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0>)"}, {"value": 406, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 293, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, long, char const*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare> >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, long, long, char const*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare>)"}, {"value": 639, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, long, rocksdb::FileMetaData*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, long, long, rocksdb::FileMetaData*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 403, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<rocksdb::InternalIterator**, std::vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> > >, long, rocksdb::InternalIterator*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::MinIterComparator> >(__gnu_cxx::__normal_iterator<rocksdb::InternalIterator**, std::vector<rocksdb::InternalIterator*, std::allocator<rocksdb::InternalIterator*> > >, long, long, rocksdb::InternalIterator*, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::MinIterComparator>)"}, {"value": 629, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, long, std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer> >(__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, long, long, std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer>)"}, {"value": 343, "name": "void __adjust_heap<__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, long, std::pair<void*, void (*)(void*)>, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, long, long, std::pair<void*, void (*)(void*)>, __gnu_cxx::__ops::_Iter_less_iter)"}, {"children": [{"value": 660, "name": "std::_Deque_iterator<rocksdb::ThreadPoolImpl::BGItem, rocksdb::ThreadPoolImpl::BGItem&, rocksdb::ThreadPoolImpl::BGItem*> backward<rocksdb::ThreadPoolImpl::BGItem>(std::_Deque_iterator<rocksdb::ThreadPoolImpl::BGItem, rocksdb::ThreadPoolImpl::BGItem const&, rocksdb::ThreadPoolImpl::BGItem const*>, std::_Deque_iterator<rocksdb::ThreadPoolImpl::BGItem, rocksdb::ThreadPoolImpl::BGItem const&, rocksdb::ThreadPoolImpl::BGItem const*>, std::_Deque_iterator<rocksdb::ThreadPoolImpl::BGItem, rocksdb::ThreadPoolImpl::BGItem&, rocksdb::ThreadPoolImpl::BGItem*>)"}, {"value": 767, "name": "std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber&, rocksdb::DBImpl::LogWriterNumber*> backward<rocksdb::DBImpl::LogWriterNumber>(std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber const&, rocksdb::DBImpl::LogWriterNumber const*>, std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber const&, rocksdb::DBImpl::LogWriterNumber const*>, std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber&, rocksdb::DBImpl::LogWriterNumber*>)"}, {"value": 754, "name": "std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> backward<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>)"}, {"value": 641, "name": "std::_Deque_iterator<rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction*&, rocksdb::DBImpl::ManualCompaction**> backward<rocksdb::DBImpl::ManualCompaction*>(std::_Deque_iterator<rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction* const&, rocksdb::DBImpl::ManualCompaction* const*>, std::_Deque_iterator<rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction* const&, rocksdb::DBImpl::ManualCompaction* const*>, std::_Deque_iterator<rocksdb::DBImpl::ManualCompaction*, rocksdb::DBImpl::ManualCompaction*&, rocksdb::DBImpl::ManualCompaction**>)"}], "name": "move_"}, {"value": 481, "name": "void __insertion_sort<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0> >(rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0>)"}, {"value": 338, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 287, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4> >(__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4>)"}, {"value": 498, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2> >(__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, __gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2>)"}, {"value": 427, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0> >(__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, __gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0>)"}, {"value": 351, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 332, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 329, "name": "void __insertion_sort<__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer> >(__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer>)"}, {"value": 2444, "name": "void __introsort_loop<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0> >(rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0>)"}, {"value": 289, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 1129, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::UpdateFilesByCompactionPri(rocksdb::CompactionPri)::$_0> >(__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::UpdateFilesByCompactionPri(rocksdb::CompactionPri)::$_0>)"}, {"value": 1129, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::UpdateFilesByCompactionPri(rocksdb::CompactionPri)::$_1> >(__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::UpdateFilesByCompactionPri(rocksdb::CompactionPri)::$_1>)"}, {"value": 706, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4> >(__gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, __gnu_cxx::__normal_iterator<rocksdb::(anonymous namespace)::Fsize*, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::SortFileByOverlappingRatio(rocksdb::InternalKeyComparator const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > const&, std::vector<rocksdb::(anonymous namespace)::Fsize, std::allocator<rocksdb::(anonymous namespace)::Fsize> >*)::$_4>)"}, {"value": 1490, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2> >(__gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, __gnu_cxx::__normal_iterator<rocksdb::FdWithKeyRange*, std::vector<rocksdb::FdWithKeyRange, std::allocator<rocksdb::FdWithKeyRange> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionStorageInfo::GenerateLevel0NonOverlapping()::$_2>)"}, {"value": 1239, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0> >(__gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, __gnu_cxx::__normal_iterator<rocksdb::Slice*, std::vector<rocksdb::Slice, std::allocator<rocksdb::Slice> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::CompactionJob::GenSubcompactionBoundaries()::$_0>)"}, {"value": 202, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 430, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare> >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare>)"}, {"value": 418, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 1364, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer> >(__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, long, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer>)"}, {"value": 470, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, long, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 640, "name": "void __introsort_loop<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, long, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 1638, "name": "void __merge_adaptive<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, cockroach::roachpb::InternalTimeSeriesSample**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, long, cockroach::roachpb::InternalTimeSeriesSample**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 44, "name": "void __once_call_impl<std::_Bind_simple<std::_Mem_fn<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> (std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> >()"}, {"value": 567, "name": "void __merge_sort_loop<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, cockroach::roachpb::InternalTimeSeriesSample**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, cockroach::roachpb::InternalTimeSeriesSample**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 551, "name": "void __merge_sort_loop<cockroach::roachpb::InternalTimeSeriesSample**, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(cockroach::roachpb::InternalTimeSeriesSample**, cockroach::roachpb::InternalTimeSeriesSample**, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 411, "name": "google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*> __rotate_adaptive<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, cockroach::roachpb::InternalTimeSeriesSample**, long>(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, long, cockroach::roachpb::InternalTimeSeriesSample**, long)"}, {"children": [{"children": [{"value": 117, "name": "std::__exception_ptr::exception_ptr ptr<std::future_error>(std::future_error)"}], "name": "exception_"}, {"value": 50, "name": "std::pair<char*, bool> pair<char*, bool>(char*, bool)"}, {"value": 50, "name": "std::pair<bool, unsigned char const*> pair<bool, unsigned char const*>(bool, unsigned char const*)"}, {"value": 49, "name": "std::pair<int, bool> pair<int, bool>(int, bool)"}, {"value": 47, "name": "std::pair<int, int> pair<int, int>(int, int)"}, {"value": 50, "name": "std::pair<unsigned long, bool> pair<unsigned long, bool>(unsigned long, bool)"}, {"value": 47, "name": "std::pair<unsigned long, unsigned long> pair<unsigned long, unsigned long>(unsigned long, unsigned long)"}], "name": "make_"}, {"value": 10, "name": "std::iterator_traits<char const*>::iterator_category __iterator_category<char const*>(char const* const&)"}, {"value": 10, "name": "std::iterator_traits<std::reverse_iterator<char const*> >::iterator_category __iterator_category<std::reverse_iterator<char const*> >(std::reverse_iterator<char const*> const&)"}, {"value": 357, "name": "void __inplace_stable_sort<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 260, "name": "__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > > __unguarded_partition<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 263, "name": "__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > __unguarded_partition<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 536, "name": "__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > > __unguarded_partition<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 542, "name": "void __chunk_insertion_sort<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 539, "name": "void __final_insertion_sort<__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare> >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare>)"}, {"value": 667, "name": "void __final_insertion_sort<__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 591, "name": "void __final_insertion_sort<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 478, "name": "void __merge_without_buffer<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, long, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 505, "name": "void __move_median_to_first<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 482, "name": "void __move_median_to_first<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 213, "name": "void __move_median_to_first<__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare> >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::stl_wrappers::Compare>)"}, {"value": 959, "name": "void __move_median_to_first<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Iter_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 235, "name": "void __move_median_to_first<__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__normal_iterator<std::pair<void*, void (*)(void*)>*, std::vector<std::pair<void*, void (*)(void*)>, std::allocator<std::pair<void*, void (*)(void*)> > > >, __gnu_cxx::__ops::_Iter_less_iter)"}, {"value": 457, "name": "void __stable_sort_adaptive<google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, cockroach::roachpb::InternalTimeSeriesSample**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)> >(google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, google::protobuf::internal::RepeatedPtrOverPtrsIterator<cockroach::roachpb::InternalTimeSeriesSample, void*>, cockroach::roachpb::InternalTimeSeriesSample**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(cockroach::roachpb::InternalTimeSeriesSample const*, cockroach::roachpb::InternalTimeSeriesSample const*)>)"}, {"value": 337, "name": "void __unguarded_linear_insert<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0> >(rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>::iterator_impl<rocksdb::autovector<rocksdb::IngestedFileInfo const*, 8ul>, rocksdb::IngestedFileInfo const*>, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::ExternalSstFileIngestionJob::Prepare(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)::$_0>)"}, {"value": 230, "name": "void __unguarded_linear_insert<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)> >(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(rocksdb::JobContext::CandidateFileInfo const&, rocksdb::JobContext::CandidateFileInfo const&)>)"}, {"value": 238, "name": "void __unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Val_less_iter)"}, {"value": 234, "name": "void __unguarded_linear_insert<__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator> >(__gnu_cxx::__normal_iterator<rocksdb::FileMetaData**, std::vector<rocksdb::FileMetaData*, std::allocator<rocksdb::FileMetaData*> > >, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::VersionBuilder::Rep::FileComparator>)"}, {"value": 261, "name": "void __unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer> >(__gnu_cxx::__normal_iterator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >*, std::vector<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> >, std::allocator<std::unique_ptr<rocksdb::LogFile, std::default_delete<rocksdb::LogFile> > > > >, __gnu_cxx::__ops::_Val_comp_iter<rocksdb::(anonymous namespace)::CompareLogByPointer>)"}, {"value": 57, "name": "int const& max<int>(int const&, int const&)"}, {"value": 59, "name": "unsigned long const& max<unsigned long>(unsigned long const&, unsigned long const&)"}, {"value": 57, "name": "int const& min<int>(int const&, int const&)"}, {"value": 59, "name": "long const& min<long>(long const&, long const&)"}, {"value": 59, "name": "unsigned long const& min<unsigned long>(unsigned long const&, unsigned long const&)"}, {"value": 635, "name": "std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber&, rocksdb::DBImpl::LogWriterNumber*> move<rocksdb::DBImpl::LogWriterNumber>(std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber const&, rocksdb::DBImpl::LogWriterNumber const*>, std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber const&, rocksdb::DBImpl::LogWriterNumber const*>, std::_Deque_iterator<rocksdb::DBImpl::LogWriterNumber, rocksdb::DBImpl::LogWriterNumber&, rocksdb::DBImpl::LogWriterNumber*>)"}, {"value": 641, "name": "std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> move<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>, std::_Deque_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>)"}, {"value": 18, "name": "setw(int)"}, {"value": 88, "name": "char const* search<char const*, char const*>(char const*, char const*, char const*, char const*)"}, {"value": 71, "name": "void advance<char const*, long>(char const*&, long)"}, {"value": 21, "name": "std::_Setfill<char> setfill<char>(char)"}, {"value": 35, "name": "void _Destroy<void (**)()>(void (**)(), void (**)())"}, {"value": 39, "name": "void _Destroy<void (**)(), void (*)()>(void (**)(), void (**)(), std::allocator<void (*)()>&)"}, {"value": 441, "name": "char const* __search<char const*, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter>(char const*, char const*, char const*, char const*, __gnu_cxx::__ops::_Iter_equal_to_iter)"}, {"value": 764, "name": "std::reverse_iterator<char const*> __search<std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equal_to_iter>(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equal_to_iter)"}, {"value": 259, "name": "__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > > __unique<__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(__gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__normal_iterator<rocksdb::JobContext::CandidateFileInfo*, std::vector<rocksdb::JobContext::CandidateFileInfo, std::allocator<rocksdb::JobContext::CandidateFileInfo> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)"}, {"value": 63, "name": "std::iterator_traits<char const*>::difference_type distance<char const*>(char const*, char const*)"}, {"children": [{"value": 115, "name": "char const* end<char const*, char const*>(char const*, char const*, char const*, char const*)"}], "name": "find_"}, {"value": 28, "name": "void __advance<char const*, long>(char const*&, long, std::random_access_iterator_tag)"}, {"value": 445, "name": "__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > __find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const> >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const>, std::random_access_iterator_tag)"}, {"value": 79, "name": "char const* __find_if<char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*> >(char const*, char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*>)"}, {"value": 493, "name": "char const* __find_if<char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*> >(char const*, char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*>, std::random_access_iterator_tag)"}, {"value": 104, "name": "std::reverse_iterator<char const*> __find_if<std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> > >(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> >)"}, {"value": 671, "name": "std::reverse_iterator<char const*> __find_if<std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> > >(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> >, std::random_access_iterator_tag)"}, {"children": [{"value": 12, "name": "construct"}], "name": "piecewise_"}, {"value": 2, "name": "__ioinit"}, {"value": 44, "name": "operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"}, {"value": 20, "name": "operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"}, {"value": 17, "name": "operator~(std::_Ios_Fmtflags)"}, {"value": 60, "name": "bool operator==<char const*>(std::reverse_iterator<char const*> const&, std::reverse_iterator<char const*> const&)"}, {"value": 54, "name": "std::reverse_iterator<char const*>::difference_type operator-<char const*>(std::reverse_iterator<char const*> const&, std::reverse_iterator<char const*> const&)"}, {"value": 44, "name": "operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)"}, {"value": 20, "name": "operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)"}, {"value": 170, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}, {"value": 150, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)"}, {"value": 150, "name": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)"}], "name": "std::"}, {"value": 135, "name": "_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_"}, {"value": 11, "name": "__clang_call_terminate"}, {"value": 964, "name": "__cxx_global_array_dtor"}, {"value": 133, "name": "__cxx_global_var_init"}, {"value": 8, "name": "__free_hook"}, {"value": 7017, "name": "__libc_calloc"}, {"value": 2, "name": "__libc_csu_fini"}, {"value": 101, "name": "__libc_csu_init"}, {"value": 207, "name": "__libc_free"}, {"value": 7151, "name": "__libc_malloc"}, {"value": 63, "name": "__libc_memalign"}, {"value": 9335, "name": "__libc_realloc"}, {"value": 62, "name": "__libc_valloc"}, {"value": 8, "name": "__malloc_hook"}, {"value": 8, "name": "__memalign_hook"}, {"value": 7, "name": "__posix_memalign"}, {"value": 31, "name": "__pthread_atfork"}, {"value": 8, "name": "__realloc_hook"}, {"value": 80, "name": "_cgo_03f7492b85ec_C2func_bsd_strptime"}, {"value": 52, "name": "_cgo_03f7492b85ec_Cfunc__Cmalloc"}, {"value": 50, "name": "_cgo_03f7492b85ec_Cfunc_bsd_strptime"}, {"value": 8, "name": "_cgo_03f7492b85ec_Cfunc_free"}, {"value": 52, "name": "_cgo_1fe0e3cfaf20_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_1fe0e3cfaf20_Cfunc_cgoSymbolizerInit"}, {"value": 52, "name": "_cgo_3296a34e096e_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_3296a34e096e_Cfunc_free"}, {"value": 57, "name": "_cgo_3296a34e096e_Cfunc_mygetgrgid_r"}, {"value": 58, "name": "_cgo_3296a34e096e_Cfunc_mygetgrnam_r"}, {"value": 53, "name": "_cgo_3296a34e096e_Cfunc_mygetgrouplist"}, {"value": 58, "name": "_cgo_3296a34e096e_Cfunc_mygetpwnam_r"}, {"value": 57, "name": "_cgo_3296a34e096e_Cfunc_mygetpwuid_r"}, {"value": 50, "name": "_cgo_3296a34e096e_Cfunc_realloc"}, {"value": 45, "name": "_cgo_3296a34e096e_Cfunc_sysconf"}, {"value": 52, "name": "_cgo_4f1fa8077389_Cfunc__Cmalloc"}, {"value": 77, "name": "_cgo_4f1fa8077389_Cfunc_dump_heap_profile"}, {"value": 8, "name": "_cgo_4f1fa8077389_Cfunc_free"}, {"value": 135, "name": "_cgo_4f1fa8077389_Cfunc_is_profiling_enabled"}, {"value": 154, "name": "_cgo_764d4ea2d8e7_Cfunc_DBBatchReprVerify"}, {"value": 8, "name": "_cgo_764d4ea2d8e7_Cfunc_free"}, {"value": 70, "name": "_cgo_8b17200c223a_C2func_jemalloc_get_stats"}, {"value": 52, "name": "_cgo_8b17200c223a_Cfunc__Cmalloc"}, {"value": 19, "name": "_cgo_8b17200c223a_Cfunc_je_malloc_stats_print"}, {"value": 42, "name": "_cgo_8b17200c223a_Cfunc_jemalloc_get_stats"}, {"value": 1, "name": "_cgo_9013a5f030ac_Cfunc_annotateTrace"}, {"value": 42, "name": "_cgo_97337b0b91ab_Cfunc_compilerVersion"}, {"value": 70, "name": "_cgo_c2c02754d5b2_Cfunc_DBApplyBatchRepr"}, {"value": 59, "name": "_cgo_c2c02754d5b2_Cfunc_DBBatchRepr"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBClose"}, {"value": 63, "name": "_cgo_c2c02754d5b2_Cfunc_DBCommitAndCloseBatch"}, {"value": 59, "name": "_cgo_c2c02754d5b2_Cfunc_DBCompact"}, {"value": 99, "name": "_cgo_c2c02754d5b2_Cfunc_DBDelete"}, {"value": 147, "name": "_cgo_c2c02754d5b2_Cfunc_DBDeleteIterRange"}, {"value": 143, "name": "_cgo_c2c02754d5b2_Cfunc_DBDeleteRange"}, {"value": 62, "name": "_cgo_c2c02754d5b2_Cfunc_DBDestroy"}, {"value": 66, "name": "_cgo_c2c02754d5b2_Cfunc_DBEngineAddFile"}, {"value": 59, "name": "_cgo_c2c02754d5b2_Cfunc_DBFlush"}, {"value": 103, "name": "_cgo_c2c02754d5b2_Cfunc_DBGet"}, {"value": 50, "name": "_cgo_c2c02754d5b2_Cfunc_DBGetSSTables"}, {"value": 63, "name": "_cgo_c2c02754d5b2_Cfunc_DBGetStats"}, {"value": 59, "name": "_cgo_c2c02754d5b2_Cfunc_DBGetUserProperties"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterDestroy"}, {"value": 169, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterNext"}, {"value": 169, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterPrev"}, {"value": 226, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeek"}, {"value": 165, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeekToFirst"}, {"value": 165, "name": "_cgo_c2c02754d5b2_Cfunc_DBIterSeekToLast"}, {"value": 106, "name": "_cgo_c2c02754d5b2_Cfunc_DBMerge"}, {"value": 73, "name": "_cgo_c2c02754d5b2_Cfunc_DBMergeOne"}, {"value": 50, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewBatch"}, {"value": 46, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewCache"}, {"value": 50, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewIter"}, {"value": 46, "name": "_cgo_c2c02754d5b2_Cfunc_DBNewSnapshot"}, {"value": 125, "name": "_cgo_c2c02754d5b2_Cfunc_DBOpen"}, {"value": 106, "name": "_cgo_c2c02754d5b2_Cfunc_DBPut"}, {"value": 46, "name": "_cgo_c2c02754d5b2_Cfunc_DBRefCache"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_DBReleaseCache"}, {"value": 13, "name": "_cgo_c2c02754d5b2_Cfunc_DBRunLDB"}, {"value": 106, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterAdd"}, {"value": 59, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterClose"}, {"value": 44, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterNew"}, {"value": 66, "name": "_cgo_c2c02754d5b2_Cfunc_DBSstFileWriterOpen"}, {"value": 391, "name": "_cgo_c2c02754d5b2_Cfunc_MVCCComputeStats"}, {"value": 52, "name": "_cgo_c2c02754d5b2_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_c2c02754d5b2_Cfunc_free"}, {"value": 8, "name": "_cgo_callers"}, {"value": 84, "name": "_cgo_cb4050e05860_C2func_getaddrinfo"}, {"value": 96, "name": "_cgo_cb4050e05860_C2func_getnameinfo"}, {"value": 52, "name": "_cgo_cb4050e05860_Cfunc__Cmalloc"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc_free"}, {"value": 8, "name": "_cgo_cb4050e05860_Cfunc_freeaddrinfo"}, {"value": 45, "name": "_cgo_cb4050e05860_Cfunc_gai_strerror"}, {"value": 54, "name": "_cgo_cb4050e05860_Cfunc_getaddrinfo"}, {"value": 74, "name": "_cgo_cb4050e05860_Cfunc_getnameinfo"}, {"value": 45, "name": "_cgo_get_context_function"}, {"value": 8, "name": "_cgo_init"}, {"value": 8, "name": "_cgo_mmap"}, {"value": 8, "name": "_cgo_notify_runtime_init_done"}, {"value": 71, "name": "_cgo_panic"}, {"value": 41, "name": "_cgo_release_context"}, {"value": 8, "name": "_cgo_set_context_function"}, {"value": 8, "name": "_cgo_sigaction"}, {"value": 176, "name": "_cgo_sys_thread_start"}, {"value": 8, "name": "_cgo_thread_start"}, {"value": 25, "name": "_cgo_topofstack"}, {"value": 132, "name": "_cgo_try_pthread_create"}, {"value": 126, "name": "_cgo_wait_runtime_init_done"}, {"value": 86, "name": "_cgoexp_c2c02754d5b2_prettyPrintKey"}, {"value": 86, "name": "_cgoexp_c2c02754d5b2_rocksDBLog"}, {"value": 33, "name": "_expand_key_128"}, {"value": 72, "name": "_expand_key_192a"}, {"value": 54, "name": "_expand_key_192b"}, {"value": 5, "name": "_expand_key_256a"}, {"value": 33, "name": "_expand_key_256b"}, {"value": 18, "name": "_rt0_amd64_linux"}, {"value": 42, "name": "_start"}, {"value": 5372, "name": "_strptime"}, {"value": 8, "name": "a0"}, {"value": 560, "name": "a0ialloc"}, {"value": 280, "name": "a0idalloc"}, {"children": [{"value": 21, "name": "compare"}], "name": "abbrev_"}, {"children": [{"children": [{"value": 1712, "name": "ranges"}], "name": "function_"}, {"children": [{"value": 1568, "name": "ranges"}], "name": "unit_"}], "name": "add_"}, {"children": [{"value": 69, "name": "alloc"}], "name": "aligned_"}, {"value": 240, "name": "andMask"}, {"children": [{"children": [{"value": 316, "name": "remove"}], "name": "avail_"}, {"children": [{"children": [{"value": 2446, "name": "hard"}], "name": "malloc_"}, {"children": [{"value": 1359, "name": "tryget"}], "name": "nonfull_run_"}], "name": "bin_"}, {"children": [{"value": 1435, "name": "alloc"}, {"value": 319, "name": "discard"}], "name": "chunk_"}, {"children": [{"children": [{"value": 886, "name": "impl"}], "name": "bin_locked_"}, {"children": [{"value": 337, "name": "impl"}], "name": "large_locked_"}], "name": "dalloc_"}, {"children": [{"value": 251, "name": "init"}], "name": "decay_deadline_"}, {"children": [{"value": 353, "name": "update"}], "name": "huge_ralloc_stats_"}, {"children": [{"children": [{"value": 457, "name": "ctl"}], "name": "chunk_hooks_"}, {"children": [{"value": 47, "name": "ctl"}, {"children": [{"value": 199, "name": "ctl"}], "name": "time_"}], "name": "decay_"}, {"children": [{"value": 368, "name": "ctl"}], "name": "dss_"}, {"value": 58, "name": "index"}, {"children": [{"value": 199, "name": "ctl"}], "name": "lg_dirty_mult_"}, {"value": 280, "name": "node"}, {"value": 301, "name": "purge"}, {"children": [{"value": 48, "name": "ctl"}], "name": "purge_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "reset_"}], "name": "i_"}, {"children": [{"value": 535, "name": "decay"}], "name": "maybe_purge_"}, {"value": 16, "name": "node"}, {"children": [{"value": 2045, "name": "limit"}], "name": "purge_to_"}, {"children": [{"value": 1922, "name": "dalloc"}, {"children": [{"value": 1104, "name": "fit"}], "name": "first_best_"}, {"children": [{"value": 2067, "name": "remove"}], "name": "heap_"}, {"children": [{"children": [{"value": 661, "name": "helper"}], "name": "large_"}, {"value": 796, "name": "remove"}], "name": "split_"}], "name": "run_"}], "name": "arena_"}, {"children": [{"children": [{"children": [{"value": 16, "name": "index"}, {"value": 120, "name": "node"}, {"children": [{"value": 93, "name": "ctl"}], "name": "nregs_"}, {"children": [{"value": 94, "name": "ctl"}], "name": "run_size_"}, {"children": [{"value": 94, "name": "ctl"}], "name": "size_"}], "name": "i_"}, {"value": 16, "name": "node"}], "name": "bin_"}, {"children": [{"value": 128, "name": "ctl"}], "name": "decay_time_"}, {"children": [{"value": 490, "name": "ctl"}], "name": "extend_"}, {"children": [{"children": [{"value": 21, "name": "index"}, {"value": 40, "name": "node"}, {"children": [{"value": 100, "name": "ctl"}], "name": "size_"}], "name": "i_"}, {"value": 16, "name": "node"}], "name": "hchunk_"}, {"children": [{"value": 246, "name": "ctl"}], "name": "initialized_"}, {"children": [{"value": 128, "name": "ctl"}], "name": "lg_dirty_mult_"}, {"value": 80, "name": "lock"}, {"children": [{"children": [{"value": 21, "name": "index"}, {"value": 40, "name": "node"}, {"children": [{"value": 93, "name": "ctl"}], "name": "size_"}], "name": "i_"}, {"value": 16, "name": "node"}], "name": "lrun_"}, {"children": [{"value": 89, "name": "ctl"}], "name": "narenas_"}, {"children": [{"value": 87, "name": "ctl"}], "name": "nbins_"}, {"children": [{"value": 85, "name": "ctl"}], "name": "nhbins_"}, {"children": [{"value": 85, "name": "ctl"}], "name": "nhchunks_"}, {"children": [{"value": 85, "name": "ctl"}], "name": "nlruns_"}, {"value": 600, "name": "node"}, {"children": [{"value": 87, "name": "ctl"}], "name": "page_"}, {"children": [{"value": 87, "name": "ctl"}], "name": "quantum_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "tcache_max_"}], "name": "arenas_"}, {"value": 41, "name": "atexit"}, {"children": [{"value": 436, "name": "alloc"}, {"value": 56, "name": "close"}, {"children": [{"value": 118, "name": "state"}], "name": "create_"}, {"children": [{"value": 7318, "name": "add"}], "name": "dwarf_"}, {"value": 117, "name": "free"}, {"children": [{"value": 172, "name": "view"}], "name": "get_"}, {"value": 312, "name": "initialize"}, {"value": 128, "name": "open"}, {"value": 87, "name": "pcinfo"}, {"value": 1899, "name": "qsort"}, {"children": [{"value": 64, "name": "view"}], "name": "release_"}, {"value": 82, "name": "syminfo"}, {"children": [{"value": 22, "name": "finish"}, {"value": 367, "name": "grow"}, {"value": 164, "name": "release"}], "name": "vector_"}], "name": "backtrace_"}, {"children": [{"value": 8, "name": "allocated"}, {"children": [{"value": 8, "name": "szsnad"}], "name": "avail_"}, {"children": [{"value": 8, "name": "next"}], "name": "extent_sn_"}, {"value": 8, "name": "mapped"}, {"value": 80, "name": "mtx"}, {"value": 8, "name": "nodes"}, {"value": 8, "name": "resident"}], "name": "base_"}, {"children": [{"value": 30, "name": "strptime"}], "name": "bsd_"}, {"value": 16, "name": "bswapMask"}, {"value": 48, "name": "bt2gctx"}, {"value": 80, "name": "bt2gctx_mtx"}, {"value": 48, "name": "callRet"}, {"value": 150, "name": "callback"}, {"value": 7017, "name": "calloc"}, {"value": 8, "name": "cgoBacktraceState"}, {"value": 161, "name": "cgoSymbolizer"}, {"value": 29, "name": "cgoSymbolizerInit"}, {"value": 111, "name": "cgoTraceback"}, {"children": [{"value": 8, "name": "function"}], "name": "cgo_context_"}, {"children": [{"children": [{"value": 418, "name": "default"}], "name": "alloc_"}, {"children": [{"value": 11, "name": "default"}], "name": "commit_"}, {"children": [{"value": 42, "name": "default"}], "name": "dalloc_"}, {"children": [{"value": 11, "name": "default"}], "name": "decommit_"}, {"children": [{"value": 13, "name": "default"}], "name": "merge_"}, {"children": [{"value": 11, "name": "default"}], "name": "purge_"}, {"value": 1052, "name": "record"}, {"value": 1455, "name": "recycle"}, {"children": [{"value": 3, "name": "default"}], "name": "split_"}], "name": "chunk_"}, {"children": [{"value": 15, "name": "alloc"}], "name": "chunks_rtree_node_"}, {"children": [{"value": 750, "name": "insert"}], "name": "ckh_try_"}, {"value": 16, "name": "cleanups"}, {"value": 8, "name": "compilerVersion"}, {"children": [{"children": [{"value": 84, "name": "ctl"}], "name": "cache_oblivious_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "debug_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "fill_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "lazy_lock_"}, {"children": [{"value": 87, "name": "ctl"}], "name": "malloc_conf_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "munmap_"}, {"value": 640, "name": "node"}, {"children": [{"value": 84, "name": "ctl"}, {"children": [{"value": 84, "name": "ctl"}], "name": "libgcc_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "libunwind_"}], "name": "prof_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "stats_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "tcache_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "thp_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "tls_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "utrace_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "valgrind_"}, {"children": [{"value": 84, "name": "ctl"}], "name": "xmalloc_"}], "name": "config_"}, {"value": 1, "name": "createStateErrorCallback"}, {"value": 85, "name": "crosscall2"}, {"children": [{"value": 8, "name": "epoch"}, {"value": 406, "name": "init"}, {"value": 1, "name": "initialized"}, {"value": 697, "name": "lookup"}, {"value": 80, "name": "mtx"}, {"value": 1775, "name": "refresh"}], "name": "ctl_"}, {"children": [{"value": 4, "name": "gctxs"}], "name": "cum_"}, {"value": 8, "name": "curchunks"}, {"value": 335, "name": "dallocx"}, {"children": [{"value": 8, "name": "default"}], "name": "decay_time_"}, {"children": [{"value": 8, "name": "base"}, {"value": 4, "name": "exhausted"}, {"value": 8, "name": "max"}, {"children": [{"value": 4, "name": "default"}], "name": "prec_"}], "name": "dss_"}, {"children": [{"value": 33, "name": "profile"}], "name": "dump_heap_"}, {"children": [{"value": 194, "name": "fileline"}, {"children": [{"value": 1755, "name": "pc"}], "name": "lookup_"}], "name": "dwarf_"}, {"children": [{"value": 3057, "name": "add"}, {"value": 22, "name": "nodebug"}, {"value": 17, "name": "nosyms"}, {"children": [{"value": 23, "name": "compare"}], "name": "symbol_"}, {"value": 268, "name": "syminfo"}], "name": "elf_"}, {"children": [{"value": 138, "name": "ctl"}], "name": "epoch_"}, {"value": 1, "name": "errorCallback"}, {"children": [{"value": 329, "name": "comp"}], "name": "extent_szsnad_"}, {"value": 210, "name": "fatalf"}, {"children": [{"value": 395, "name": "initialize"}], "name": "fileline_"}, {"children": [{"value": 1841, "name": "ranges"}], "name": "find_address_"}, {"children": [{"value": 32, "name": "mask"}], "name": "flip_"}, {"value": 207, "name": "free"}, {"children": [{"value": 57, "name": "compare"}], "name": "function_addrs_"}, {"value": 16, "name": "gcmPoly"}, {"children": [{"value": 8, "name": "locks"}, {"children": [{"value": 99, "name": "recurse"}], "name": "tree_iter_"}], "name": "gctx_"}, {"value": 53, "name": "gosave"}, {"value": 8, "name": "highchunks"}, {"children": [{"children": [{"value": 278, "name": "get"}], "name": "node_"}, {"children": [{"value": 399, "name": "expand"}], "name": "ralloc_no_move_"}], "name": "huge_"}, {"value": 1439, "name": "ifree"}, {"value": 2512, "name": "imemalign"}, {"children": [{"value": 80, "name": "lock"}], "name": "init_"}, {"children": [{"value": 106, "name": "enabled"}], "name": "is_profiling_"}, {"value": 1057, "name": "isfree"}, {"children": [{"value": 7, "name": "a0dalloc"}, {"value": 8, "name": "a0get"}, {"value": 9, "name": "a0malloc"}, {"children": [{"children": [{"value": 70, "name": "small"}], "name": "alloc_junk_"}, {"children": [{"value": 159, "name": "merge"}], "name": "basic_stats_"}, {"children": [{"value": 2304, "name": "info"}], "name": "bin_"}, {"value": 7417, "name": "boot"}, {"children": [{"value": 1311, "name": "hard"}], "name": "choose_"}, {"children": [{"children": [{"value": 886, "name": "huge"}], "name": "alloc_"}, {"children": [{"value": 97, "name": "insert"}, {"value": 79, "name": "remove"}], "name": "cache_maybe_"}, {"children": [{"value": 406, "name": "huge"}], "name": "dalloc_"}, {"children": [{"value": 1142, "name": "expand"}, {"value": 388, "name": "shrink"}, {"value": 235, "name": "similar"}], "name": "ralloc_huge_"}], "name": "chunk_"}, {"value": 58, "name": "cleanup"}, {"children": [{"value": 142, "name": "bin"}, {"children": [{"value": 8, "name": "locked"}], "name": "bin_junked_"}, {"children": [{"value": 26, "name": "large"}, {"value": 283, "name": "small"}], "name": "junk_"}, {"value": 268, "name": "large"}, {"children": [{"value": 8, "name": "locked"}], "name": "large_junked_"}, {"value": 344, "name": "small"}], "name": "dalloc_"}, {"children": [{"children": [{"value": 12, "name": "get"}, {"value": 48, "name": "set"}], "name": "default_"}, {"value": 45, "name": "get"}, {"value": 346, "name": "set"}], "name": "decay_time_"}, {"children": [{"value": 43, "name": "get"}, {"value": 44, "name": "set"}], "name": "dss_prec_"}, {"children": [{"value": 15, "name": "next"}], "name": "extent_sn_"}, {"value": 142, "name": "init"}, {"children": [{"children": [{"value": 12, "name": "get"}, {"value": 32, "name": "set"}], "name": "default_"}, {"value": 45, "name": "get"}, {"value": 184, "name": "set"}], "name": "lg_dirty_mult_"}, {"children": [{"value": 834, "name": "hard"}, {"value": 814, "name": "large"}], "name": "malloc_"}, {"value": 8, "name": "maxrun"}, {"children": [{"value": 138, "name": "purge"}], "name": "maybe_"}, {"value": 92, "name": "migrate"}, {"value": 866, "name": "new"}, {"children": [{"value": 161, "name": "alloc"}, {"value": 90, "name": "dalloc"}], "name": "node_"}, {"children": [{"value": 16, "name": "dec"}, {"value": 13, "name": "get"}, {"value": 16, "name": "inc"}], "name": "nthreads_"}, {"value": 3524, "name": "palloc"}, {"children": [{"value": 132, "name": "child"}, {"value": 132, "name": "parent"}], "name": "postfork_"}, {"value": 9, "name": "prefork0"}, {"value": 12, "name": "prefork1"}, {"value": 12, "name": "prefork2"}, {"value": 89, "name": "prefork3"}, {"children": [{"value": 176, "name": "promoted"}], "name": "prof_"}, {"value": 180, "name": "purge"}, {"children": [{"value": 406, "name": "small"}], "name": "quarantine_junk_"}, {"value": 2619, "name": "ralloc"}, {"children": [{"value": 2847, "name": "move"}], "name": "ralloc_no_"}, {"value": 1659, "name": "reset"}, {"children": [{"value": 849, "name": "merge"}], "name": "stats_"}, {"children": [{"value": 986, "name": "small"}], "name": "tcache_fill_"}, {"children": [{"value": 411, "name": "hard"}], "name": "tdata_get_"}], "name": "arena_"}, {"value": 8, "name": "arenas"}, {"children": [{"children": [{"value": 1, "name": "cleanup"}], "name": "bypass_"}, {"value": 35, "name": "cleanup"}], "name": "arenas_tdata_"}, {"children": [{"value": 576, "name": "alloc"}, {"value": 65, "name": "boot"}, {"children": [{"value": 10, "name": "child"}, {"value": 10, "name": "parent"}], "name": "postfork_"}, {"value": 10, "name": "prefork"}, {"children": [{"value": 69, "name": "get"}], "name": "stats_"}], "name": "base_"}, {"children": [{"children": [{"value": 16, "name": "init"}], "name": "info_"}, {"value": 55, "name": "init"}, {"value": 9, "name": "size"}], "name": "bitmap_"}, {"children": [{"value": 28, "name": "calloc"}, {"value": 87, "name": "free"}, {"value": 21, "name": "malloc"}], "name": "bootstrap_"}, {"children": [{"value": 11, "name": "init"}], "name": "bt_"}, {"value": 50, "name": "buferror"}, {"children": [{"children": [{"value": 46, "name": "base"}, {"value": 89, "name": "cache"}, {"value": 915, "name": "dss"}, {"value": 183, "name": "mmap"}, {"value": 564, "name": "wrapper"}], "name": "alloc_"}, {"value": 100, "name": "boot"}, {"children": [{"value": 96, "name": "cache"}, {"value": 3, "name": "mmap"}, {"value": 373, "name": "wrapper"}], "name": "dalloc_"}, {"value": 60, "name": "deregister"}, {"children": [{"value": 40, "name": "boot"}, {"value": 53, "name": "mergeable"}, {"children": [{"value": 11, "name": "get"}, {"value": 9, "name": "set"}], "name": "prec_"}], "name": "dss_"}, {"children": [{"value": 56, "name": "default"}, {"value": 89, "name": "get"}, {"value": 177, "name": "set"}], "name": "hooks_"}, {"children": [{"value": 29, "name": "dss"}], "name": "in_"}, {"value": 8, "name": "npages"}, {"children": [{"value": 211, "name": "wrapper"}], "name": "purge_"}, {"value": 153, "name": "register"}], "name": "chunk_"}, {"children": [{"value": 104, "name": "rtree"}], "name": "chunks_"}, {"value": 8, "name": "chunksize"}, {"children": [{"value": 8, "name": "mask"}], "name": "chunksize_"}, {"children": [{"value": 5, "name": "count"}, {"value": 271, "name": "delete"}, {"value": 1536, "name": "insert"}, {"value": 110, "name": "iter"}, {"value": 760, "name": "new"}, {"children": [{"value": 183, "name": "hash"}, {"value": 7, "name": "keycomp"}], "name": "pointer_"}, {"value": 1957, "name": "remove"}, {"value": 491, "name": "search"}, {"children": [{"value": 38, "name": "hash"}, {"value": 13, "name": "keycomp"}], "name": "string_"}], "name": "ckh_"}, {"children": [{"value": 40, "name": "boot"}, {"value": 281, "name": "bymib"}, {"value": 173, "name": "byname"}, {"value": 89, "name": "nametomib"}, {"children": [{"value": 10, "name": "child"}, {"value": 10, "name": "parent"}], "name": "postfork_"}, {"value": 10, "name": "prefork"}], "name": "ctl_"}, {"children": [{"value": 32, "name": "names"}], "name": "dss_prec_"}, {"children": [{"children": [{"value": 251, "name": "ceil"}], "name": "size_quantize_"}, {"children": [{"children": [{"value": 33, "name": "destroy"}, {"children": [{"value": 114, "name": "recurse"}], "name": "destroy_"}, {"value": 8, "name": "empty"}, {"value": 29, "name": "first"}, {"value": 372, "name": "insert"}, {"value": 36, "name": "iter"}, {"children": [{"value": 99, "name": "recurse"}, {"value": 150, "name": "start"}], "name": "iter_"}, {"value": 46, "name": "last"}, {"value": 8, "name": "new"}, {"value": 96, "name": "next"}, {"value": 84, "name": "nsearch"}, {"value": 124, "name": "prev"}, {"value": 81, "name": "psearch"}, {"value": 1289, "name": "remove"}, {"children": [{"value": 36, "name": "iter"}, {"children": [{"value": 102, "name": "recurse"}, {"value": 146, "name": "start"}], "name": "iter_"}], "name": "reverse_"}, {"value": 50, "name": "search"}], "name": "ad_"}, {"children": [{"value": 33, "name": "destroy"}, {"children": [{"value": 114, "name": "recurse"}], "name": "destroy_"}, {"value": 8, "name": "empty"}, {"value": 29, "name": "first"}, {"value": 396, "name": "insert"}, {"value": 36, "name": "iter"}, {"children": [{"value": 99, "name": "recurse"}, {"value": 145, "name": "start"}], "name": "iter_"}, {"value": 46, "name": "last"}, {"value": 8, "name": "new"}, {"value": 116, "name": "next"}, {"value": 93, "name": "nsearch"}, {"value": 134, "name": "prev"}, {"value": 90, "name": "psearch"}, {"value": 1220, "name": "remove"}, {"children": [{"value": 36, "name": "iter"}, {"children": [{"value": 102, "name": "recurse"}, {"value": 141, "name": "start"}], "name": "iter_"}], "name": "reverse_"}, {"value": 87, "name": "search"}], "name": "szsnad_"}], "name": "tree_"}], "name": "extent_"}, {"value": 643, "name": "hash"}, {"children": [{"value": 11, "name": "aalloc"}, {"value": 578, "name": "dalloc"}, {"value": 16, "name": "malloc"}, {"value": 1619, "name": "palloc"}, {"children": [{"value": 56, "name": "get"}, {"value": 56, "name": "reset"}, {"value": 54, "name": "set"}], "name": "prof_tctx_"}, {"value": 863, "name": "ralloc"}, {"children": [{"value": 1446, "name": "move"}], "name": "ralloc_no_"}, {"value": 56, "name": "salloc"}], "name": "huge_"}, {"children": [{"value": 61, "name": "cleanup"}], "name": "iarena_"}, {"children": [{"value": 1, "name": "valgrind"}], "name": "in_"}, {"value": 1856, "name": "index2size_tab"}, {"children": [{"children": [{"value": 344, "name": "child"}, {"value": 344, "name": "parent"}], "name": "postfork_"}, {"value": 667, "name": "prefork"}], "name": "jemalloc_"}, {"children": [{"value": 8, "name": "maxclass"}], "name": "large_"}, {"children": [{"value": 8, "name": "sample"}], "name": "lg_prof_"}, {"children": [{"value": 213, "name": "cprintf"}, {"children": [{"value": 3, "name": "boot"}, {"value": 75, "name": "init"}, {"children": [{"value": 96, "name": "child"}, {"value": 8, "name": "parent"}], "name": "postfork_"}, {"value": 8, "name": "prefork"}], "name": "mutex_"}, {"value": 210, "name": "printf"}, {"value": 146, "name": "snprintf"}, {"value": 475, "name": "strtoumax"}, {"children": [{"value": 227, "name": "boot0"}, {"value": 167, "name": "boot1"}, {"children": [{"value": 24, "name": "register"}], "name": "cleanup_"}, {"value": 5, "name": "dalloc"}, {"value": 13, "name": "malloc"}], "name": "tsd_"}, {"value": 83, "name": "vcprintf"}, {"value": 5436, "name": "vsnprintf"}, {"value": 56, "name": "write"}], "name": "malloc_"}, {"children": [{"value": 8, "name": "bias"}, {"children": [{"value": 8, "name": "offset"}], "name": "misc_"}], "name": "map_"}, {"children": [{"value": 4, "name": "auto"}, {"children": [{"value": 1, "name": "cleanup"}], "name": "tdata_"}, {"children": [{"value": 11, "name": "get"}], "name": "total_"}], "name": "narenas_"}, {"value": 4, "name": "ncpus"}, {"value": 4, "name": "nhbins"}, {"value": 4, "name": "nhclasses"}, {"value": 4, "name": "nlclasses"}, {"children": [{"value": 7, "name": "add"}, {"value": 16, "name": "compare"}, {"value": 7, "name": "copy"}, {"value": 9, "name": "divide"}, {"value": 12, "name": "idivide"}, {"value": 8, "name": "imultiply"}, {"value": 4, "name": "init"}, {"value": 14, "name": "init2"}, {"value": 3, "name": "monotonic"}, {"value": 4, "name": "ns"}, {"value": 41, "name": "nsec"}, {"value": 28, "name": "sec"}, {"value": 7, "name": "subtract"}, {"value": 67, "name": "update"}], "name": "nstime_"}, {"children": [{"value": 1, "name": "abort"}, {"children": [{"value": 8, "name": "time"}], "name": "decay_"}, {"value": 8, "name": "dss"}, {"value": 8, "name": "junk"}, {"children": [{"value": 1, "name": "alloc"}, {"value": 1, "name": "free"}], "name": "junk_"}, {"children": [{"value": 8, "name": "chunk"}, {"children": [{"value": 8, "name": "mult"}], "name": "dirty_"}, {"children": [{"value": 8, "name": "interval"}, {"value": 8, "name": "sample"}], "name": "prof_"}, {"children": [{"value": 8, "name": "max"}], "name": "tcache_"}], "name": "lg_"}, {"value": 4, "name": "narenas"}, {"value": 1, "name": "prof"}, {"children": [{"value": 1, "name": "accum"}, {"value": 1, "name": "active"}, {"value": 1, "name": "final"}, {"value": 1, "name": "gdump"}, {"value": 1, "name": "leak"}, {"value": 4097, "name": "prefix"}, {"children": [{"value": 1, "name": "init"}], "name": "thread_active_"}], "name": "prof_"}, {"value": 4, "name": "purge"}, {"value": 8, "name": "quarantine"}, {"value": 1, "name": "redzone"}, {"children": [{"value": 1, "name": "print"}], "name": "stats_"}, {"value": 1, "name": "tcache"}, {"value": 1, "name": "thp"}, {"value": 1, "name": "utrace"}, {"value": 1, "name": "xmalloc"}, {"value": 1, "name": "zero"}], "name": "opt_"}, {"children": [{"value": 132, "name": "boot"}, {"value": 155, "name": "commit"}, {"value": 152, "name": "decommit"}, {"value": 18, "name": "huge"}, {"value": 189, "name": "map"}, {"value": 18, "name": "nohuge"}, {"value": 18, "name": "purge"}, {"value": 197, "name": "trim"}, {"value": 74, "name": "unmap"}], "name": "pages_"}, {"value": 1592, "name": "pind2sz_tab"}, {"children": [{"value": 1, "name": "active"}, {"children": [{"value": 31, "name": "get"}, {"value": 47, "name": "set"}], "name": "active_"}, {"children": [{"value": 563, "name": "rollback"}], "name": "alloc_"}, {"value": 37, "name": "backtrace"}, {"value": 27, "name": "boot0"}, {"value": 66, "name": "boot1"}, {"value": 667, "name": "boot2"}, {"children": [{"value": 92, "name": "object"}], "name": "free_sampled_"}, {"value": 238, "name": "gdump"}, {"children": [{"value": 31, "name": "get"}, {"value": 47, "name": "set"}, {"value": 1, "name": "val"}], "name": "gdump_"}, {"value": 238, "name": "idump"}, {"value": 8, "name": "interval"}, {"value": 2417, "name": "lookup"}, {"children": [{"value": 197, "name": "object"}], "name": "malloc_sample_"}, {"value": 231, "name": "mdump"}, {"children": [{"value": 209, "name": "child"}, {"value": 209, "name": "parent"}], "name": "postfork_"}, {"value": 133, "name": "prefork0"}, {"value": 81, "name": "prefork1"}, {"value": 291, "name": "reset"}, {"children": [{"value": 241, "name": "update"}], "name": "sample_threshold_"}, {"children": [{"value": 15, "name": "cleanup"}, {"value": 91, "name": "init"}, {"value": 103, "name": "reinit"}], "name": "tdata_"}, {"children": [{"children": [{"value": 243, "name": "get"}, {"children": [{"value": 31, "name": "get"}, {"value": 47, "name": "set"}], "name": "init_"}, {"value": 242, "name": "set"}], "name": "active_"}, {"children": [{"value": 246, "name": "get"}, {"value": 663, "name": "set"}], "name": "name_"}], "name": "thread_"}], "name": "prof_"}, {"children": [{"value": 24, "name": "names"}], "name": "purge_mode_"}, {"value": 1020, "name": "quarantine"}, {"children": [{"children": [{"value": 318, "name": "work"}], "name": "alloc_hook_"}, {"value": 322, "name": "cleanup"}], "name": "quarantine_"}, {"children": [{"children": [{"value": 154, "name": "hard"}], "name": "child_read_"}, {"value": 58, "name": "delete"}, {"value": 318, "name": "new"}, {"value": 320, "name": "set"}, {"children": [{"value": 154, "name": "hard"}], "name": "subtree_read_"}], "name": "rtree_"}, {"value": 512, "name": "size2index_tab"}, {"children": [{"value": 8, "name": "cactive"}, {"value": 7878, "name": "print"}], "name": "stats_"}, {"children": [{"children": [{"value": 107, "name": "hard"}], "name": "alloc_small_"}, {"children": [{"value": 453, "name": "reassociate"}], "name": "arena_"}, {"children": [{"children": [{"value": 706, "name": "large"}, {"value": 792, "name": "small"}], "name": "flush_"}, {"value": 8, "name": "info"}], "name": "bin_"}, {"value": 434, "name": "boot"}, {"value": 31, "name": "cleanup"}, {"value": 841, "name": "create"}, {"children": [{"value": 1, "name": "cleanup"}], "name": "enabled_"}, {"children": [{"value": 192, "name": "hard"}], "name": "event_"}, {"children": [{"value": 454, "name": "hard"}], "name": "get_"}, {"value": 8, "name": "maxclass"}, {"children": [{"value": 1, "name": "child"}, {"value": 1, "name": "parent"}], "name": "postfork_"}, {"value": 1, "name": "prefork"}, {"value": 94, "name": "salloc"}, {"children": [{"value": 282, "name": "merge"}], "name": "stats_"}], "name": "tcache_"}, {"value": 8, "name": "tcaches"}, {"children": [{"value": 278, "name": "create"}, {"value": 90, "name": "destroy"}, {"value": 67, "name": "flush"}], "name": "tcaches_"}, {"children": [{"children": [{"value": 1, "name": "cleanup"}], "name": "allocated_"}, {"children": [{"value": 1, "name": "cleanup"}], "name": "deallocated_"}], "name": "thread_"}, {"children": [{"value": 1, "name": "booted"}, {"value": 440, "name": "cleanup"}, {"value": 104, "name": "tls"}, {"value": 4, "name": "tsd"}], "name": "tsd_"}, {"children": [{"children": [{"value": 123, "name": "error"}], "name": "depth_"}, {"children": [{"value": 1, "name": "cleanup"}], "name": "fork_"}, {"value": 11, "name": "init"}, {"children": [{"value": 98, "name": "error"}], "name": "lock_"}, {"children": [{"value": 24, "name": "error"}], "name": "not_owner_"}, {"children": [{"value": 24, "name": "error"}], "name": "owner_"}, {"children": [{"value": 13, "name": "child"}, {"value": 5, "name": "parent"}], "name": "postfork_"}, {"value": 5, "name": "prefork"}], "name": "witness_"}, {"children": [{"value": 1, "name": "cleanup"}], "name": "witnesses_"}], "name": "je_"}, {"children": [{"value": 939, "name": "constructor"}, {"children": [{"value": 308, "name": "stats"}], "name": "get_"}], "name": "jemalloc_"}, {"children": [{"children": [{"value": 8, "name": "default"}], "name": "dirty_mult_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "prof_sample_"}], "name": "lg_"}, {"children": [{"value": 40, "name": "compare"}], "name": "line_"}, {"value": 9, "name": "main"}, {"value": 1179, "name": "mallctl"}, {"value": 1252, "name": "mallctlbymib"}, {"value": 1181, "name": "mallctlnametomib"}, {"value": 7151, "name": "malloc"}, {"children": [{"value": 8, "name": "conf"}, {"children": [{"children": [{"value": 4791, "name": "a0_locked"}], "name": "hard_"}, {"value": 4, "name": "state"}], "name": "init_"}, {"value": 8, "name": "initializer"}, {"value": 8, "name": "message"}, {"value": 1, "name": "slow"}, {"children": [{"value": 1, "name": "flags"}], "name": "slow_"}, {"children": [{"value": 171, "name": "print"}], "name": "stats_"}, {"children": [{"value": 527, "name": "size"}], "name": "usable_"}], "name": "malloc_"}, {"value": 19801, "name": "mallocx"}, {"value": 256, "name": "masks"}, {"value": 63, "name": "memalign"}, {"children": [{"value": 4, "name": "flags"}], "name": "mmap_"}, {"children": [{"value": 96, "name": "lengths"}], "name": "mon_"}, {"children": [{"value": 763, "name": "r"}], "name": "mygmtime_"}, {"value": 1664, "name": "nallocx"}, {"children": [{"value": 4, "name": "total"}], "name": "narenas_"}, {"value": 4, "name": "ncleanups"}, {"children": [{"value": 8, "name": "uid"}, {"children": [{"value": 80, "name": "mtx"}], "name": "uid_"}], "name": "next_thr_"}, {"children": [{"children": [{"value": 91, "name": "ctl"}], "name": "abort_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "decay_time_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "dss_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "junk_"}, {"children": [{"children": [{"value": 86, "name": "ctl"}], "name": "chunk_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "dirty_mult_"}, {"children": [{"children": [{"value": 86, "name": "ctl"}], "name": "interval_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "sample_"}], "name": "prof_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "tcache_max_"}], "name": "lg_"}, {"children": [{"value": 85, "name": "ctl"}], "name": "narenas_"}, {"value": 1080, "name": "node"}, {"children": [{"children": [{"value": 91, "name": "ctl"}], "name": "accum_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "active_"}, {"value": 91, "name": "ctl"}, {"children": [{"value": 91, "name": "ctl"}], "name": "final_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "gdump_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "leak_"}, {"children": [{"value": 87, "name": "ctl"}], "name": "prefix_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "thread_active_init_"}], "name": "prof_"}, {"children": [{"value": 93, "name": "ctl"}], "name": "purge_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "quarantine_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "redzone_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "stats_print_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "tcache_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "thp_"}, {"children": [{"value": 6, "name": "ctl"}], "name": "utrace_"}, {"children": [{"value": 6, "name": "ctl"}], "name": "xmalloc_"}, {"children": [{"value": 91, "name": "ctl"}], "name": "zero_"}], "name": "opt_"}, {"children": [{"value": 1, "name": "overcommits"}], "name": "os_"}, {"value": 541, "name": "p256MulInternal"}, {"value": 415, "name": "p256SqrInternal"}, {"value": 74, "name": "p256SubInternal"}, {"value": 8, "name": "p256const0"}, {"value": 8, "name": "p256const1"}, {"value": 32, "name": "p256one"}, {"value": 32, "name": "p256ord"}, {"value": 8, "name": "p256ordK0"}, {"children": [{"value": 196, "name": "callback"}], "name": "phdr_"}, {"value": 521, "name": "polyHashADInternal"}, {"children": [{"value": 7, "name": "memalign"}], "name": "posix_"}, {"value": 77, "name": "prettyPrintKey"}, {"children": [{"children": [{"value": 114, "name": "ctl"}, {"value": 80, "name": "mtx"}], "name": "active_"}, {"value": 1, "name": "booted"}, {"children": [{"value": 522, "name": "hash"}, {"value": 37, "name": "keycomp"}], "name": "bt_"}, {"value": 2345, "name": "dump"}, {"children": [{"value": 65536, "name": "buf"}, {"children": [{"value": 8, "name": "end"}], "name": "buf_"}, {"value": 63, "name": "ctl"}, {"value": 4, "name": "fd"}, {"value": 78, "name": "flush"}, {"value": 8, "name": "iseq"}, {"value": 8, "name": "mseq"}, {"value": 80, "name": "mtx"}, {"value": 196, "name": "printf"}, {"value": 8, "name": "seq"}, {"children": [{"value": 80, "name": "mtx"}], "name": "seq_"}, {"value": 8, "name": "useq"}, {"value": 259, "name": "write"}], "name": "dump_"}, {"value": 303, "name": "fdump"}, {"children": [{"children": [{"value": 252, "name": "iter"}], "name": "dump_"}, {"value": 1997, "name": "finish"}, {"children": [{"value": 68, "name": "iter"}], "name": "merge_"}, {"children": [{"value": 570, "name": "destroy"}], "name": "try_"}], "name": "gctx_"}, {"children": [{"value": 114, "name": "ctl"}, {"value": 80, "name": "mtx"}], "name": "gdump_"}, {"children": [{"value": 86, "name": "ctl"}], "name": "interval_"}, {"value": 280, "name": "node"}, {"children": [{"value": 192, "name": "maps"}], "name": "open_"}, {"children": [{"value": 67, "name": "ctl"}], "name": "reset_"}, {"children": [{"value": 549, "name": "destroy"}, {"children": [{"value": 72, "name": "iter"}], "name": "dump_"}, {"children": [{"value": 26, "name": "iter"}], "name": "finish_"}, {"children": [{"value": 60, "name": "iter"}], "name": "merge_"}], "name": "tctx_"}, {"children": [{"children": [{"value": 1813, "name": "locked"}], "name": "destroy_"}, {"value": 109, "name": "detach"}, {"children": [{"value": 132, "name": "iter"}], "name": "dump_"}, {"children": [{"value": 1384, "name": "impl"}], "name": "init_"}, {"children": [{"value": 374, "name": "iter"}], "name": "merge_"}, {"children": [{"value": 80, "name": "iter"}], "name": "reset_"}], "name": "tdata_"}, {"children": [{"children": [{"value": 1, "name": "init"}, {"children": [{"value": 114, "name": "ctl"}, {"value": 80, "name": "mtx"}], "name": "init_"}], "name": "active_"}, {"children": [{"value": 442, "name": "alloc"}], "name": "name_"}], "name": "thread_"}, {"children": [{"value": 60, "name": "callback"}, {"children": [{"value": 3, "name": "callback"}], "name": "init_"}], "name": "unwind_"}], "name": "prof_"}, {"children": [{"value": 31, "name": "atfork"}], "name": "pthread_"}, {"children": [{"children": [{"value": 138, "name": "one"}], "name": "drain_"}, {"value": 427, "name": "init"}], "name": "quarantine_"}, {"value": 16, "name": "r2r1"}, {"value": 16, "name": "r4r3"}, {"value": 8, "name": "r5"}, {"value": 8920, "name": "rallocx"}, {"children": [{"value": 3771, "name": "attribute"}, {"children": [{"value": 2437, "name": "entry"}], "name": "function_"}, {"children": [{"value": 9869, "name": "info"}], "name": "line_"}, {"children": [{"value": 895, "name": "name"}], "name": "referenced_"}, {"value": 295, "name": "uint64"}], "name": "read_"}, {"value": 9335, "name": "realloc"}, {"children": [{"value": 310, "name": "functions"}], "name": "report_inlined_"}, {"value": 74, "name": "rocksDBLog"}, {"children": [{"children": [{"value": 8, "name": "date"}], "name": "compile_"}, {"children": [{"value": 8, "name": "date"}, {"value": 8, "name": "sha"}], "name": "git_"}], "name": "rocksdb_build_"}, {"children": [{"value": 400, "name": "node"}], "name": "root_"}, {"children": [{"value": 93, "name": "subtree"}], "name": "rtree_delete_"}, {"children": [{"value": 48, "name": "cond"}, {"value": 1, "name": "done"}, {"value": 40, "name": "mu"}], "name": "runtime_init_"}, {"value": 16, "name": "rupoly"}, {"value": 527, "name": "sallocx"}, {"value": 912, "name": "sdallocx"}, {"children": [{"value": 18, "name": "gcc"}], "name": "setg_"}, {"value": 256, "name": "shifts"}, {"children": [{"value": 32, "name": "00BA"}, {"value": 32, "name": "DC00"}], "name": "shuff_"}, {"children": [{"value": 4, "name": "nelms"}], "name": "stack_"}, {"children": [{"children": [{"value": 135, "name": "ctl"}], "name": "active_"}, {"children": [{"value": 135, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 10113, "name": "print"}], "name": "arena_"}, {"children": [{"children": [{"children": [{"children": [{"children": [{"value": 159, "name": "ctl"}], "name": "curregs_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "curruns_"}, {"value": 16, "name": "index"}, {"children": [{"value": 159, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nfills_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nflushes_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nmalloc_"}, {"value": 360, "name": "node"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nrequests_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nreruns_"}, {"children": [{"value": 159, "name": "ctl"}], "name": "nruns_"}], "name": "j_"}, {"value": 16, "name": "node"}], "name": "bins_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "decay_time_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "dss_"}, {"children": [{"children": [{"children": [{"value": 164, "name": "ctl"}], "name": "curhchunks_"}, {"value": 21, "name": "index"}, {"children": [{"value": 164, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 163, "name": "ctl"}], "name": "nmalloc_"}, {"value": 160, "name": "node"}, {"children": [{"value": 163, "name": "ctl"}], "name": "nrequests_"}], "name": "j_"}, {"value": 16, "name": "node"}], "name": "hchunks_"}, {"children": [{"children": [{"value": 154, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 154, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 154, "name": "ctl"}], "name": "nmalloc_"}, {"value": 160, "name": "node"}, {"children": [{"value": 154, "name": "ctl"}], "name": "nrequests_"}], "name": "huge_"}, {"value": 81, "name": "index"}, {"children": [{"children": [{"value": 151, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "nmalloc_"}, {"value": 160, "name": "node"}, {"children": [{"value": 154, "name": "ctl"}], "name": "nrequests_"}], "name": "large_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "lg_dirty_mult_"}, {"children": [{"children": [{"children": [{"value": 164, "name": "ctl"}], "name": "curruns_"}, {"value": 21, "name": "index"}, {"children": [{"value": 164, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 163, "name": "ctl"}], "name": "nmalloc_"}, {"value": 160, "name": "node"}, {"children": [{"value": 164, "name": "ctl"}], "name": "nrequests_"}], "name": "j_"}, {"value": 16, "name": "node"}], "name": "lruns_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "mapped_"}, {"children": [{"children": [{"value": 151, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "mapped_"}, {"value": 80, "name": "node"}], "name": "metadata_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "nmadvise_"}, {"value": 720, "name": "node"}, {"children": [{"value": 151, "name": "ctl"}], "name": "npurge_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "nthreads_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "pactive_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "pdirty_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "purged_"}, {"children": [{"value": 151, "name": "ctl"}], "name": "retained_"}, {"children": [{"children": [{"value": 154, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 154, "name": "ctl"}], "name": "ndalloc_"}, {"children": [{"value": 154, "name": "ctl"}], "name": "nmalloc_"}, {"value": 160, "name": "node"}, {"children": [{"value": 154, "name": "ctl"}], "name": "nrequests_"}], "name": "small_"}], "name": "i_"}, {"value": 16, "name": "node"}], "name": "arenas_"}, {"children": [{"value": 136, "name": "ctl"}], "name": "cactive_"}, {"children": [{"value": 135, "name": "ctl"}], "name": "mapped_"}, {"children": [{"value": 135, "name": "ctl"}], "name": "metadata_"}, {"value": 320, "name": "node"}, {"children": [{"value": 396, "name": "atexit"}, {"value": 1833, "name": "helper"}], "name": "print_"}, {"children": [{"value": 135, "name": "ctl"}], "name": "resident_"}, {"children": [{"value": 135, "name": "ctl"}], "name": "retained_"}], "name": "stats_"}, {"children": [{"children": [{"value": 40, "name": "node"}], "name": "arena_i_"}, {"children": [{"children": [{"value": 40, "name": "node"}], "name": "bin_i_"}, {"children": [{"value": 40, "name": "node"}], "name": "hchunk_i_"}, {"children": [{"value": 40, "name": "node"}], "name": "lrun_i_"}], "name": "arenas_"}, {"children": [{"value": 40, "name": "node"}], "name": "root_"}, {"children": [{"children": [{"value": 40, "name": "node"}], "name": "bins_j_"}, {"children": [{"value": 40, "name": "node"}], "name": "hchunks_j_"}, {"children": [{"value": 40, "name": "node"}], "name": "lruns_j_"}, {"value": 40, "name": "node"}], "name": "stats_arenas_i_"}], "name": "super_"}, {"value": 5, "name": "syminfoCallback"}, {"children": [{"children": [{"value": 116, "name": "ctl"}], "name": "create_"}, {"value": 1001, "name": "destroy"}, {"children": [{"value": 61, "name": "ctl"}], "name": "destroy_"}, {"children": [{"value": 61, "name": "ctl"}], "name": "flush_"}, {"value": 120, "name": "node"}], "name": "tcache_"}, {"children": [{"value": 8, "name": "avail"}, {"value": 80, "name": "mtx"}, {"value": 4, "name": "past"}], "name": "tcaches_"}, {"children": [{"children": [{"value": 99, "name": "recurse"}, {"value": 193, "name": "start"}], "name": "iter_"}, {"value": 1353, "name": "remove"}], "name": "tctx_tree_"}, {"children": [{"value": 8, "name": "locks"}, {"children": [{"value": 92, "name": "recurse"}, {"value": 152, "name": "start"}], "name": "tree_iter_"}], "name": "tdata_"}, {"value": 8, "name": "tdatas"}, {"children": [{"value": 80, "name": "mtx"}], "name": "tdatas_"}, {"children": [{"value": 1, "name": "huge"}], "name": "thp_initially_"}, {"children": [{"children": [{"value": 83, "name": "ctl"}], "name": "allocated_"}, {"children": [{"value": 83, "name": "ctl"}], "name": "allocatedp_"}, {"children": [{"value": 332, "name": "ctl"}], "name": "arena_"}, {"children": [{"value": 83, "name": "ctl"}], "name": "deallocated_"}, {"children": [{"value": 83, "name": "ctl"}], "name": "deallocatedp_"}, {"value": 280, "name": "node"}, {"children": [{"children": [{"value": 146, "name": "ctl"}], "name": "active_"}, {"children": [{"value": 154, "name": "ctl"}], "name": "name_"}, {"value": 80, "name": "node"}], "name": "prof_"}, {"children": [{"children": [{"value": 500, "name": "ctl"}], "name": "enabled_"}, {"children": [{"value": 189, "name": "ctl"}], "name": "flush_"}, {"value": 80, "name": "node"}], "name": "tcache_"}], "name": "thread_"}, {"value": 60, "name": "threadentry"}, {"children": [{"value": 69, "name": "compare"}], "name": "unit_addrs_"}, {"value": 135, "name": "unwind"}, {"value": 62, "name": "valloc"}, {"children": [{"value": 87, "name": "ctl"}], "name": "version_"}, {"value": 36, "name": "wrtmessage"}, {"children": [{"value": 82, "name": "callers"}, {"value": 140, "name": "init"}, {"value": 8, "name": "inittls"}, {"value": 25, "name": "mmap"}, {"children": [{"value": 44, "name": "done"}], "name": "notify_runtime_init_"}, {"children": [{"value": 44, "name": "function"}], "name": "set_context_"}, {"value": 20, "name": "setenv"}, {"value": 420, "name": "sigaction"}, {"children": [{"value": 178, "name": "create"}], "name": "sys_thread_"}, {"children": [{"value": 79, "name": "start"}], "name": "thread_"}, {"value": 8, "name": "threadentry"}, {"value": 5, "name": "unsetenv"}], "name": "x_cgo_"}, {"value": 2927, "name": "xallocx"}, {"children": [{"value": 8, "name": "lengths"}], "name": "year_"}, {"value": 33336, "name": "VTABLES"}, {"value": 29982, "name": "TYPEDATA"}, {"value": 0, "name": "INITIALIZERS"}], "name": "c/c++ \u00b7 "}, {"value": 1806, "name": "UNKNOWN"}]}