# syntax = docker/dockerfile:experimental

FROM alpine:3.16 as bottlecap-builder
ARG PLATFORM
RUN apk add --no-cache curl gcc musl-dev make unzip bash autoconf automake libtool g++

SHELL ["/bin/bash", "-c"]

# Install Protocol Buffers, from package instead of manually
RUN apk add --no-cache protoc

# Install Rust Toolchain
RUN curl https://sh.rustup.rs -sSf | \
    sh -s -- --profile minimal --default-toolchain stable-$PLATFORM-unknown-linux-musl -y
ENV PATH=/root/.cargo/bin:$PATH
RUN rustup component add rust-src --toolchain stable-$PLATFORM-unknown-linux-musl

# Build Bottlecap
RUN mkdir -p /tmp/dd
COPY ./bottlecap/src /tmp/dd/bottlecap/src
COPY ./bottlecap/Cargo.toml /tmp/dd/bottlecap/Cargo.toml
COPY ./bottlecap/Cargo.lock /tmp/dd/bottlecap/Cargo.lock
# Added `-C link-arg=-lgcc` for alpine.
ENV RUSTFLAGS="-C panic=abort -C link-arg=-lgcc"
WORKDIR /tmp/dd/bottlecap
RUN --mount=type=cache,target=/root/.cargo/registry cargo +stable build --release --target $PLATFORM-unknown-linux-musl
RUN cp /tmp/dd/bottlecap/target/$PLATFORM-unknown-linux-musl/release/bottlecap /tmp/dd/bottlecap/bottlecap

# Zip Extension
FROM ubuntu:22.04 as compresser
ARG DATADOG_WRAPPER=datadog_wrapper
ARG GO_AGENT_PATH

RUN apt-get update
RUN apt-get install -y zip binutils curl=7.81.0-1ubuntu1.20 xz-utils=5.2.5-2ubuntu1

COPY .layers/$GO_AGENT_PATH/extensions/datadog-agent /datadog-agent-go
RUN strip /datadog-agent-go
RUN curl -LO https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-amd64_linux.tar.xz && tar xvf upx-4.2.4-amd64_linux.tar.xz
RUN upx-4.2.4-amd64_linux/upx -1 /datadog-agent-go


RUN mkdir /extensions
WORKDIR /extensions

COPY --from=bottlecap-builder /tmp/dd/bottlecap/bottlecap /extensions/datadog-agent

COPY ./scripts/$DATADOG_WRAPPER /$DATADOG_WRAPPER
RUN chmod +x /$DATADOG_WRAPPER
RUN  zip -r datadog_extension.zip /extensions /$DATADOG_WRAPPER /datadog-agent-go

# keep the smallest possible docker image
FROM scratch
COPY --from=compresser /extensions/datadog_extension.zip /
ENTRYPOINT ["/datadog_extension.zip"]
