variables:
  GIT_DEPTH: 0

image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:20.10-py3

stages:
  - build_tools_if_needed

build:
  stage: build_tools_if_needed
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
    TARGET: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-lambda-extension/serverless-build-tools
  # rules:
  # - changes:
  #   - build-tools/**/*
  # cache:
  #   - key:
  #       files:
  #         - build-tools/Cargo.lock
  #     paths:
  #       - build-tools/target
  #       - ~/.cargo
  tags: ["arch:amd64"]
  script:
    - cred=$(aws sts assume-role 
      --role-arn "arn:aws:iam::486234852809:role/ci-datadog-lambda-extension" 
      --role-session-name "publishSession"
      --query '[Credentials.AccessKeyId,Credentials.SecretAccessKey,Credentials.SessionToken]'
      --output text)
    - ACCESS_KEY_ID=$(echo "$cred" | awk '{ print $1 }')
    - export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
    - SECRET_ACCESS_KEY=$(echo "$cred" | awk '{ print $2 }')
    - export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
    - SESSION_TOKEN=$(echo "$cred" | awk '{ print $3 }')
    - export AWS_SESSION_TOKEN=$SESSION_TOKEN
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 486234852809.dkr.ecr.us-east-1.amazonaws.com
    - cd build-tools && docker buildx build --tag ${TARGET} --push .
  retry: 2



  