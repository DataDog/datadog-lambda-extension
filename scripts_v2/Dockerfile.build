# syntax = docker/dockerfile:experimental

FROM public.ecr.aws/lambda/provided:al2 as builder
ARG EXTENSION_VERSION
ARG AGENT_VERSION
ARG CMD_PATH
ARG BUILD_TAGS

RUN yum install -y wget tar gzip gcc
RUN arch="$(uname -m)"; \
    if [ "${arch}" = 'aarch64' ]; then \
    arch='arm64'; \
    fi; \
    if [ "${arch}" = 'x86_64' ]; then \
    arch='amd64'; \
    fi; \
    wget -O go1.23.2.linux-${arch}.tar.gz https://go.dev/dl/go1.23.2.linux-${arch}.tar.gz; \
    tar -C /usr/local -xzf go1.23.2.linux-${arch}.tar.gz

RUN mkdir -p /tmp/dd

COPY ./datadog-agent /tmp/dd/datadog-agent

# build the extension
WORKDIR /tmp/dd/datadog-agent/"${CMD_PATH}"
# add the current version number to the tags package before compilation

RUN --mount=type=cache,target=/root/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    if [ -z "$AGENT_VERSION" ]; then \
    /usr/local/go/bin/go build -ldflags="-w \
    -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION" \
    -tags "${BUILD_TAGS}" -o datadog-agent; \
    else \
    /usr/local/go/bin/go build -ldflags="-w \
    -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION \
    -X github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault=$AGENT_VERSION" \
    -tags "${BUILD_TAGS}" -o datadog-agent; \
    fi

RUN /usr/local/go/bin/go tool nm datadog-agent | grep -w 'github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault' || \
    (echo "agentVersionDefault variable doesn't exist" && exit 1)

# zip the extension
FROM ubuntu:24.04 as compresser
ARG CMD_PATH
ARG DATADOG_WRAPPER=datadog_wrapper

RUN apt-get update
RUN apt-get install -y zip binutils
RUN mkdir /extensions
WORKDIR /extensions
COPY --from=builder /tmp/dd/datadog-agent/"${CMD_PATH}"/datadog-agent /extensions/datadog-agent
RUN strip /extensions/datadog-agent

COPY ./scripts/$DATADOG_WRAPPER /$DATADOG_WRAPPER
RUN chmod +x /$DATADOG_WRAPPER
RUN  zip -r datadog_extension.zip /extensions /$DATADOG_WRAPPER

# keep the smallest possible docker image
FROM scratch
COPY --from=compresser /extensions/datadog_extension.zip /
ENTRYPOINT ["/datadog_extension.zip"]
